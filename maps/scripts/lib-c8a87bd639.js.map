{"version":3,"sources":["scripts/lib-c8a87bd639.js"],"names":["angular","module","AngularJsonAPISourceRestWrapper","AngularJsonAPIModelSourceError","AngularJsonAPISourcePrototype","AngularJsonAPIModelLinkerService","toKebabCase","$q","$http","AngularJsonAPISourceRestFactory","name","url","AngularJsonAPISourceRest","all","config","method","headers","params","encodeParams","then","resolveHttp","rejectHttp","bind","get","object","data","id","remove","unlink","deferred","defer","schema","relationships","key","removed","reject","create","_this","undefined","target","type","resolve","promise","link","errors","status","statusText","toLinkData","update","form","toJson","add","response","action","rejectServerOffline","rejectNoConnection","this","Accept","Content-Type","apply","arguments","synchronization","encodeValue","argument","isArray","join","encodedParams","forEach","paramValue","paramKey","isObject","paramInnerValue","paramInnerKey","decodeParams","decodedParams","value","objectKeyStart","indexOf","split","length","objectKey","substr","objectElementKey","prototype","Object","constructor","factory","$inject","provide","$provide","decorator","$delegate","$jsonapi","sourceRest","AngularJsonAPISourceLocalWrapper","$window","AngularJsonAPISourceLocalFactory","prefix","AngularJsonAPISourceLocal","init","synchronizer","resource","localStorage","getItem","clear","size","list","max","objectMaxKey","fraction","limit","removeItem","updateStorage","cache","json","setItem","keys","reduce","m","k","__updateStorage","begin","finish","sourceLocal","constant","pluralize","validate","$log","oneWay","error","polymorphic","model","__addHasMany","__processAddHasMany","__addHasOne","__processAddHasOne","__removeHasMany","__processRemove","reflectionSchema","reflectionKey","reflection","__swapResults","__wrapResults","oldReflectionSchema","oldReflection","result","__removeHasOne","push","debug","reset","linkData","index","splice","newValue","array","item","i","service","AngularJsonAPIModelFormWrapper","AngularJsonAPIModelValidationError","validateJS","AngularJsonAPIModelFormFactory","parent","AngularJsonAPIModelForm","attributes","copy","save","auto","slice","validator","validation","errorsMap","attribute","attributesWrapper","constraintsWrapper","async","AngularJsonAPIAbstractModelWrapper","AngularJsonAPIModelErrorsManager","$rootScope","$injector","AngularJsonAPIAbstractModel","updatedAt","stable","pristine","loading","saving","Date","now","loadingCount","savingCount","__setData","synchronize","notify","$emit","indexIds","concat","meta","__decrementSavingCounter","__incrementSavingCounter","refresh","synchronizeIncluded","__incrementLoadingCounter","__decrementLoadingCounter","resolveIncluded","includedResponse","operation","success","results","included","__proccesResults","allSettled","map","unlinkAll","clearRemoved","revertRemove","removeLink","linksObj","removeReflectionLink","resolveReflection","targets","validatedData","initialization","hasErrors","answer","setAttributes","validators","setRelationships","relationshipData","links","linkOne","unlinkOne","getResource","AngularJsonAPIResourceCacheWrapper","uuid4","AngularJsonAPIResourceCacheFactory","AngularJsonAPIResourceCache","addOrUpdate","modelFactory","fromJson","collection","new","synchronized","objectData","filter","filterParams","valid","constraint","setIndexIds","element","isString","AngularJsonAPIModelValidationErrorWrapper","ValidationErrorFactory","message","ValidationError","Error","captureStackTrace","context","AngularJsonAPIModelSourceErrorWrapper","SourceErrorFactory","source","code","SourceError","AngularJsonAPIModelErrorsManagerWrapper","ErrorsManagerFactory","description","ErrorConstructor","defaultFilter","ErrorsManager","obj","AngularJsonAPISynchronizerSimpleWrapper","AngularJsonAPISynchronizerPrototype","AngularJsonAPISynchronizerSimpleFactory","sources","AngularJsonAPISynchronizerSimple","state","call","resolvedCallback","step","rejectedCallback","reason","resolved","afterHooks","hook","finishHooks","rejected","noop","promises","beginHooks","beforeHooks","synchronizationHooks","AngularJsonAPISynchronizerPrototypeWrapper","namedFunction","fn","Function","propertyName","callback","done","defineProperty","enumerable","configurable","str","replace","toLowerCase","wrap","isFunction","wrapped","hasOwnProperty","AngularJsonAPISchemaWrapper","AngularJsonAPISchemaLink","AngularJsonAPISchemaFactory","AngularJsonAPISchema","include","generate","isNumber","identity","linkSchema","linkName","linkSchemaObj","extend","AngularJsonAPILinkSchrapperLink","AngularJsonAPISchemaLinkFactory","plural","singular","AngularJsonAPISourcePrototypeWrapper","allHooks","options","hookName","beforeSynchro","afterSynchro","before","after","AngularJsonAPIModel","createModelFactory","schemaObj","isNew","Model","constructorName","functions","metaFunction","metaFunctionName","AngularJsonAPIResourceWrapper","AngularJsonAPICollection","AngularJsonAPIResourceFactory","AngularJsonAPIResource","initialized","fetch","initialize","relationshipSchema","relationshipName","clearCache","AngularJsonAPICollectionWrapper","AngularJsonAPICollectionFactory","event","clearWatchers","onObjectRemove","onFactoryClear","onObjectAdd","$on","jsonapiProvider","jsonapiFactory","addResource","memory","names","allResources","listResources","addValidator","warn","objects","synchronizerSimple","$get","provider","$logProvider","debugEnabled","run","Promise"],"mappings":"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","file":"scripts/lib-c8a87bd639.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest')\n  .factory('AngularJsonAPISourceRest', AngularJsonAPISourceRestWrapper);\n\n  function AngularJsonAPISourceRestWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPISourcePrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISourceRest.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceRest.prototype.constructor = AngularJsonAPISourceRest;\n\n    return {\n      create: AngularJsonAPISourceRestFactory,\n      encodeParams: encodeParams,\n      decodeParams: decodeParams\n    };\n\n    function AngularJsonAPISourceRestFactory(name, url) {\n      return new AngularJsonAPISourceRest(name, url);\n    }\n\n    function AngularJsonAPISourceRest(name, url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: encodeParams(config.params)\n        }).then(resolveHttp, rejectHttp.bind(null, 'all'));\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: encodeParams(config.params)\n        }).then(resolveHttp, rejectHttp.bind(null, 'get'));\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp.bind(null, 'remove'));\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Object has been removed', _this, 0, 'unlink'));\n        } else if (config.target !== undefined && config.target.data.id === undefined) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Can\\'t unlink object without id through rest call', _this, 0, 'unlink'));\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'get')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          if (config.target === undefined) {\n            $http({\n              method: 'PUT',\n              headers: headers,\n              data: {data: []},\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          } else {\n            $http({\n              method: 'DELETE',\n              headers: headers,\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key + '/' + config.target.data.id\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          }\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target === undefined || config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'PUT',\n            headers: headers,\n            data: {data: AngularJsonAPIModelLinkerService.toLinkData(config.target)},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          $http({\n            method: 'POST',\n            headers: headers,\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        return $http({\n          method: 'PUT',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'update'));\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'add'));\n      }\n\n      function resolveHttp(response) {\n        return $q.resolve(response.data);\n      }\n\n      function rejectHttp(action, response) {\n        var deferred = $q.defer();\n\n        if (response.status === 0) {\n          $http({\n            method: 'GET',\n            url: 'https://status.cloud.google.com/incidents.schema.json'\n          }).then(rejectServerOffline, rejectNoConnection);\n        } else {\n          deferred.reject(AngularJsonAPIModelSourceError.create(response.statusText, _this, response.status, action));\n        }\n\n        return deferred.promise;\n\n        function rejectServerOffline(response) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Server is offline', _this, response.status, action));\n        }\n\n        function rejectNoConnection() {\n          deferred.reject(AngularJsonAPIModelSourceError.create('No internet connection', _this, response.status, action));\n        }\n      }\n    }\n\n    function encodeParams(params) {\n      var encodedParams = {};\n\n      if (params === undefined) {\n        return {};\n      }\n\n      angular.forEach(params, function(paramValue, paramKey) {\n        if (angular.isArray(paramValue)) {\n          encodedParams[paramKey] = encodeValue(paramValue);\n        } else if (angular.isObject(paramValue)) {\n          angular.forEach(paramValue, function(paramInnerValue, paramInnerKey) {\n            encodedParams[paramKey + '[' + paramInnerKey + ']'] = encodeValue(paramInnerValue);\n          });\n        } else {\n          encodedParams[paramKey] = paramValue;\n        }\n      });\n\n      return encodedParams;\n\n      function encodeValue(argument) {\n        if (angular.isArray(argument)) {\n          return argument.join(',');\n        } else {\n          return argument;\n        }\n      }\n    }\n\n    function decodeParams(params) {\n      var decodedParams = {};\n\n      angular.forEach(params, function(value, key) {\n        var objectKeyStart = key.indexOf('[');\n        value = value.split(',');\n        value = value.length === 1 ? value[0] : value;\n\n        if (objectKeyStart > -1) {\n          var objectKey = key.substr(0, objectKeyStart);\n          var objectElementKey = key.substr(objectKeyStart + 1, key.indexOf(']') - objectKeyStart - 1);\n\n          decodedParams[objectKey] = {};\n          decodedParams[objectKey][objectElementKey] = value;\n        } else {\n          decodedParams[key] = value;\n        }\n      });\n\n      return decodedParams;\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$jsonapi', decorator);\n  }\n\n  function decorator($delegate, AngularJsonAPISourceRest) {\n    var $jsonapi = $delegate;\n\n    $jsonapi.sourceRest = AngularJsonAPISourceRest;\n\n    return $jsonapi;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local')\n  .factory('AngularJsonAPISourceLocal', AngularJsonAPISourceLocalWrapper);\n\n  function AngularJsonAPISourceLocalWrapper(\n    AngularJsonAPISourcePrototype,\n    $window,\n    $q\n  ) {\n    var size = {\n      max: 0,\n      all: 0,\n      limit: 5200000,\n      list: {}\n    };\n\n    AngularJsonAPISourceLocal.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceLocal.prototype.constructor = AngularJsonAPISourceLocal;\n\n    return {\n      create: AngularJsonAPISourceLocalFactory,\n      size: size\n    };\n\n    function AngularJsonAPISourceLocalFactory(name, prefix) {\n      return new AngularJsonAPISourceLocal(name, prefix);\n    }\n\n    function AngularJsonAPISourceLocal(name, prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('init', init);\n\n      _this.begin('clearCache', clear);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clearCache', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('refresh', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n      _this.finish('include', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.resource.schema.type;\n        return $q.resolve($window.localStorage.getItem(prefix + '.' + type));\n      }\n\n      function clear() {\n        var type = _this.synchronizer.resource.schema.type;\n        var key = prefix + '.' + type;\n\n        size.all -= size.list[key];\n        delete size.list[key];\n        size.max = objectMaxKey(size.list);\n        size.fraction = size.list[size.max] / size.limit * 100;\n\n        $window.localStorage.removeItem(key);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.resource.schema.type;\n        var cache = _this.synchronizer.resource.cache;\n        var json = cache.toJson();\n        var key = prefix + '.' + type;\n\n        size.list[key] = size.list[key] === undefined ? 0 : size.list[key];\n        size.all += json.length - size.list[key];\n        size.list[key] = json.length;\n        size.max = objectMaxKey(size.list);\n        size.fraction = size.list[size.max] / size.limit * 100;\n\n        $window.localStorage.setItem(key, json);\n      }\n\n      function objectMaxKey(object) {\n        return Object.keys(object).reduce(function(m, k) {\n          return object[k] > object[m] ? k : m;\n        }, Object.keys(object)[0]);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$jsonapi', decorator);\n  }\n\n  function decorator($delegate, AngularJsonAPISourceLocal) {\n    var $jsonapi = $delegate;\n\n    $jsonapi.sourceLocal = AngularJsonAPISourceLocal;\n\n    return $jsonapi;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false, validate: false */\n  .constant('pluralize', pluralize)\n  .constant('validateJS', validate);\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, oneWay, form) {\n      var schema;\n      form = form === undefined ? false : form;\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema.type === 'hasMany') {\n        if (oneWay === true) {\n          __addHasMany(object, key, target, form);\n          return [];\n        } else {\n          return __processAddHasMany(object, key, target, form);\n        }\n      } else if (schema.type === 'hasOne') {\n        if (oneWay === true) {\n          __addHasOne(object, key, target, form);\n          return [];\n        } else {\n          return __processAddHasOne(object, key, target, form);\n        }\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, oneWay, form) {\n      var schema;\n      form = form === undefined ? false : form;\n\n      if (object === undefined) {\n        $log.error('Can\\'t remove link from non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (oneWay === true) {\n        __removeHasMany(object, key, target, form);\n        return [];\n      } else {\n        return __processRemove(object, key, target, form);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __processAddHasMany(object, key, target, form) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var reflectionSchema;\n\n      if (reflectionKey === false) {\n        __addHasMany(object, key, target, form);\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        return __swapResults(\n          __wrapResults(object, key, target),\n          __wrapResults(target, reflectionKey, object),\n          __processAddHasOne(target, reflectionKey, object, form)\n        );\n      } else if (reflectionSchema.type === 'hasMany') {\n        __addHasMany(object, key, target, form);\n        __addHasMany(target, reflectionKey, object, form);\n        return [__wrapResults(target, reflectionKey, object)];\n      }\n    }\n\n    function __processAddHasOne(object, key, target, form) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var oldReflection = object.relationships[key];\n      var reflectionSchema;\n      var oldReflectionSchema;\n      var result = [];\n\n      __addHasOne(object, key, target, form);\n\n      if (oldReflection !== undefined && oldReflection !== null) {\n        oldReflectionSchema = oldReflection.schema.relationships[reflectionKey];\n\n        if (oldReflectionSchema.type === 'hasOne') {\n          __removeHasOne(oldReflection, reflectionKey, object, form);\n        } else if (oldReflectionSchema.type === 'hasMany') {\n          __removeHasMany(oldReflection, reflectionKey, object, form);\n        }\n\n        result.push(__wrapResults(oldReflection, reflectionKey, object));\n      }\n\n      if (target !== undefined && target !== null && reflectionKey !== false) {\n        reflectionSchema = target.schema.relationships[reflectionKey];\n\n        if (reflectionSchema.type === 'hasOne') {\n          __addHasOne(target, reflectionKey, object, form);\n        } else if (reflectionSchema.type === 'hasMany') {\n          __addHasMany(target, reflectionKey, object, form);\n        }\n\n        result.push(__wrapResults(target, reflectionKey, object));\n      }\n\n      return result;\n    }\n\n    function __processRemove(object, key, target, form) {\n      var schema = object.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema;\n\n      if (schema.type === 'hasMany') {\n        __removeHasMany(object, key, target, form);\n      } else if (schema.type === 'hasOne') {\n        __removeHasOne(object, key, target, form);\n      }\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        __removeHasOne(target, reflectionKey, object, form);\n      } else if (reflectionSchema.type === 'hasMany') {\n        __removeHasMany(target, reflectionKey, object, form);\n      }\n\n      return [__wrapResults(target, reflectionKey, object)];\n    }\n\n    function __addHasOne(object, key, target, form) {\n      $log.debug('addHasOne', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      object.relationships[key] = target;\n      object.data.relationships[key].data = toLinkData(target);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, form) {\n      $log.debug('addHasMany', object, key, target);\n\n      var linkData = toLinkData(target);\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (angular.isArray(object.relationships[key]) && object.relationships[key].indexOf(target) > -1) {\n        return false;\n      }\n\n      object.relationships[key] = object.relationships[key] || [];\n      object.data.relationships[key].data = object.data.relationships[key].data || [];\n\n      object.relationships[key].push(target);\n      object.data.relationships[key].data.push(linkData);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, form) {\n      $log.debug('removeHasOne', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        return false;\n      }\n\n      object.relationships[key] = null;\n      object.data.relationships[key].data = undefined;\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, form) {\n      $log.debug('removeHasMany', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (object.relationships[key] === undefined) {\n        return;\n      }\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n        if (form === false) {\n          object.reset(true);\n        }\n\n        return true;\n      }\n\n      var index = object.relationships[key].indexOf(target);\n\n      if (index === -1) {\n        return false;\n      }\n\n      object.relationships[key].splice(index, 1);\n      object.data.relationships[key].data.splice(index, 1);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __wrapResults(object, key, target) {\n      return {\n        object: object,\n        key: key,\n        target: target\n      };\n    }\n\n    function __swapResults(value, newValue, array) {\n      var index = -1;\n      angular.forEach(array, function(item, i) {\n        if (item.object === value.object && item.key === value.key && item.target === value.target) {\n          index = i;\n        }\n      });\n\n      if (index > -1) {\n        array[index] = newValue;\n      } else {\n        array.push(newValue);\n      }\n\n      return array;\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelLinkerService,\n    validateJS,\n    $q\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return {\n      create: AngularJsonAPIModelFormFactory\n    };\n\n    function AngularJsonAPIModelFormFactory(parent) {\n      return new AngularJsonAPIModelForm(parent);\n    }\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        id: parent.data.id,\n        type: parent.data.type,\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset(auto) {\n      var _this = this;\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = angular.copy(_this.parent.data.relationships[key]) || {};\n        if (angular.isArray(_this.relationships[key])) {\n          _this.relationships[key] = _this.parent.relationships[key].slice();\n        } else {\n          _this.relationships[key] = _this.parent.relationships[key];\n        }\n      });\n\n      if (auto === true && _this.parent.synchronized === true) {\n        return;\n      }\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        _this.data.attributes[key] = angular.copy(_this.parent.data.attributes[key]);\n      });\n\n      _this.parent.errors.validation.clear();\n    }\n\n    /**\n     * Validates form\n     * @return {promise} Promise rejected to errors object indexed by keys. If the\n     * key param i stated it only validates an attribute, else all attributes.\n     */\n    function validate(key) {\n      var _this = this;\n      var attributesWrapper;\n      var constraintsWrapper;\n      var deferred = $q.defer();\n\n      if (key === undefined) {\n        attributesWrapper = _this.data.attributes;\n        constraintsWrapper = _this.schema.attributes;\n      } else {\n        attributesWrapper = {};\n        constraintsWrapper = {};\n\n        attributesWrapper[key] = _this.data.attributes[key];\n        constraintsWrapper[key] = _this.schema.attributes[key];\n      }\n\n      validateJS.async(\n        attributesWrapper,\n        constraintsWrapper\n      ).then(resolve, reject);\n\n      function resolve() {\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        deferred.resolve();\n      }\n\n      function reject(errorsMap) {\n        _this.parent.error = true;\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        angular.forEach(errorsMap, function(errors, attribute) {\n          angular.forEach(errors, function(error) {\n            _this.parent.errors.validation.add(attribute, AngularJsonAPIModelValidationError.create(error, attribute));\n          });\n        });\n\n        deferred.reject(_this.parent.errors.validation);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target, oneWay) {\n      var _this = this;\n      oneWay = oneWay === undefined ? false : true;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.link(_this.parent, key, target, oneWay, true));\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target, oneWay) {\n      var _this = this;\n      oneWay = oneWay === undefined ? false : true;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.unlink(_this.parent, key, target, oneWay, true));\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelErrorsManager,\n    AngularJsonAPIModelLinkerService,\n    AngularJsonAPIModelForm,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    AngularJsonAPIAbstractModel.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {object} config   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, config, updatedAt) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      /**\n       * Is not a new record\n       * @type {Boolean}\n       */\n      _this.new = config.new === undefined ? false : config.new;\n\n      /**\n       * Is present on the server\n       * @type {Boolean}\n       */\n      _this.stable = config.stable === undefined ? true : config.stable;\n\n      /**\n       * Has been synchronized with the server\n       * @type {Boolean}\n       */\n      _this.synchronized = config.synchronized === undefined ? true : config.synchronized;\n\n      /**\n       * Has just been created by request and may not exist on the server\n       * @type {Boolean}\n       */\n      _this.pristine = config.pristine === undefined ? true : config.pristine;\n\n      _this.removed = false;\n      _this.loading = false;\n      _this.saving = false;\n      _this.updatedAt = _this.synchronized === true ? Date.now() : updatedAt;\n\n      _this.loadingCount = 0;\n      _this.savingCount = 0;\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(schema, key) {\n        _this.relationships[key] = undefined;\n      });\n\n      _this.errors = {\n        validation: AngularJsonAPIModelErrorsManager.create(\n          'Validation',\n          'Errors of attributes validation',\n          AngularJsonAPIModelValidationError\n        ),\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Source',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSourceError\n        )\n      };\n\n      _this.promise = $q.resolve(_this);\n\n      __setData(_this, data);\n\n      _this.form = AngularJsonAPIModelForm.create(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: _this.new === true ? 'add' : 'update',\n        object: _this\n      };\n\n      _this.form.validate().then(\n        synchronize,\n        deferred.reject\n      ).finally(__decrementSavingCounter.bind(_this, undefined));\n\n      __incrementSavingCounter(_this);\n\n      return deferred.promise;\n\n      function synchronize() {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:' + config.action, 'resolved', _this, response);\n        _this.update(response.data.data);\n\n        if (_this.new === true) {\n          _this.resource.cache.indexIds = _this.resource.cache.indexIds || [];\n          _this.resource.cache.indexIds.push(_this.data.id);\n        }\n\n        _this.synchronized = true;\n        _this.new = false;\n        _this.pristine = false;\n        _this.stable = true;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.resolve(response.data.meta);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      if (_this.form !== undefined) {\n        _this.form.reset();\n      }\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh(params) {\n      var $jsonapi = $injector.get('$jsonapi');\n      var deferred = $q.defer();\n      var _this = this;\n      params = params === undefined ? _this.schema.params.get : params;\n\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: params\n      };\n\n      if (_this.new === true) {\n        var error = AngularJsonAPIModelSourceError.create('Can\\'t refresh new object', null, 0, 'refresh');\n        _this.errors.synchronization.add('refresh', error);\n        deferred.reject(error);\n      } else {\n        __incrementLoadingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        _this.synchronized = true;\n        _this.stable = true;\n        _this.pristine = false;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = _this.data;\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      var config = {\n        action: 'remove',\n        object: _this\n      };\n\n      _this.resource.cache.remove(_this.data.id);\n\n      if (_this.new === true) {\n        deferred.resolve();\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'resolved', _this, response);\n        _this.removed = true;\n        _this.unlinkAll();\n        _this.resource.cache.clearRemoved(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        deferred.resolve();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'rejected', _this, response);\n        _this.resource.cache.revertRemove(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlink all reflection relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      __incrementLoadingCounter(_this);\n\n      if (key === undefined) {\n        angular.forEach(_this.relationships, removeLink);\n      } else {\n        removeLink(_this.relationships[key], key);\n      }\n\n      __decrementLoadingCounter(_this);\n\n      return deferred.promise;\n\n      function removeLink(linksObj, key) {\n        var schema = _this.schema.relationships[key];\n        var reflectionKey = schema.reflection;\n\n        if (angular.isArray(linksObj)) {\n          angular.forEach(linksObj, removeReflectionLink.bind(undefined, reflectionKey));\n        } else if (angular.isObject(linksObj)) {\n          removeReflectionLink(reflectionKey, linksObj);\n        }\n\n        if (schema.type === 'hasOne') {\n          _this.relationships[key] = null;\n        } else if (schema.type === 'hasMany') {\n          _this.relationships[key] = [];\n        }\n      }\n\n      function removeReflectionLink(reflectionKey, target) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n        var config = {\n          action: 'unlinkReflection',\n          object: target,\n          target: _this,\n          key: reflectionKey\n        };\n\n        __incrementLoadingCounter(target);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        target.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(target, undefined));\n\n        function resolve(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'resolve', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.resolve();\n        }\n\n        function reject(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'rejected', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.reject(_this);\n        }\n\n        function notify(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'link',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t link undefined', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t link new object', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'linkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].object.data.type + ':object:linkReflection', 'resolved', targets[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked if undefined unlinks all\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'unlink',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t unlink undefined', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t unlink new object', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'unlinkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:unlinkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve();\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData, auto, initialization) {\n      var _this = this;\n\n      __incrementLoadingCounter(_this);\n\n      __setData(_this, validatedData);\n      _this.reset(auto);\n      _this.synchronized = initialization === true ? false : true;\n      _this.stable = initialization === true ? false : true;\n      _this.updatedAt = Date.now();\n\n      __decrementLoadingCounter(_this);\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData) {\n\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.resource.schema.type !== validatedData.type) {\n        $log.error('Different type then resource', object.resource.schema.type, validatedData);\n        return false;\n      }\n\n      if (!object.schema.id.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      object.data.links = validatedData.links;\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        var relationshipData = validatedData.relationships[key];\n\n        if (relationshipData === undefined) {\n          if (object.data.relationships[key] === undefined) {\n            object.data.relationships[key] = {data: undefined};\n          }\n\n          return;\n        }\n\n        object.data.relationships[key] = object.data.relationships[key] || {};\n        object.data.relationships[key].links = relationshipData.links;\n\n        if (schema.type === 'hasOne') {\n          linkOne(object, key, relationshipData.data);\n        } else if (schema.type === 'hasMany') {\n          if (angular.isArray(relationshipData.data)) {\n            if (relationshipData.data.length === 0) {\n              object.data.relationships[key].data = [];\n              object.unlinkAll(key);\n            } else {\n              angular.forEach(\n                object.relationships[key],\n                unlinkOne.bind(undefined, object, key, relationshipData.data)\n              );\n              angular.forEach(\n                relationshipData.data,\n                linkOne.bind(undefined, object, key)\n              );\n            }\n          }\n        }\n      }\n\n      function linkOne(object, key, data) {\n        var resource;\n\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        resource = $jsonapi.getResource(data.type);\n\n        if (resource === undefined) {\n          $log.error('Factory not found', data.type, data);\n          return;\n        }\n\n        var target = resource.cache.get(data.id);\n\n        AngularJsonAPIModelLinkerService.link(object, key, target);\n      }\n\n      function unlinkOne(object, key, relationshipData, target) {\n        if (relationshipData.indexOf(target.data.id) > -1) {\n          return;\n        }\n\n        AngularJsonAPIModelLinkerService.unlink(object, key, target);\n      }\n    }\n  }\n\n  /////////////\n  // Private //\n  /////////////\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n\n  function __incrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount += 1;\n    object.saving = true;\n  }\n\n  function __decrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount -= 1;\n    object.saving = object.savingCount > 0;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResourceCache', AngularJsonAPIResourceCacheWrapper);\n\n  function AngularJsonAPIResourceCacheWrapper(\n    uuid4,\n    $log\n  ) {\n\n    AngularJsonAPIResourceCache.prototype.get = get;\n    AngularJsonAPIResourceCache.prototype.index = index;\n    AngularJsonAPIResourceCache.prototype.setIndexIds = setIndexIds;\n    AngularJsonAPIResourceCache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPIResourceCache.prototype.fromJson = fromJson;\n    AngularJsonAPIResourceCache.prototype.toJson = toJson;\n    AngularJsonAPIResourceCache.prototype.clear = clear;\n\n    AngularJsonAPIResourceCache.prototype.remove = remove;\n    AngularJsonAPIResourceCache.prototype.revertRemove = revertRemove;\n    AngularJsonAPIResourceCache.prototype.clearRemoved = clearRemoved;\n\n    return {\n      create: AngularJsonAPIResourceCacheFactory\n    };\n\n    function AngularJsonAPIResourceCacheFactory(resource) {\n      return new AngularJsonAPIResourceCache(resource);\n    }\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPIResourceCache(resource) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n\n      _this.indexIds = undefined;\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData, config, updatedAt) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(validatedData, config, updatedAt);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData, !config.new, config.initialization);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: true\n      };\n\n      if (angular.isObject(collection) && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n        _this.indexIds = collection.indexIds;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, config, objectData.updatedAt);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: [],\n        updatedAt: _this.updatedAt,\n        indexIds: _this.indexIds\n      };\n\n      angular.forEach(_this.data, function(object) {\n        if (object.hasErrors() === false) {\n          json.data.push(object.toJson());\n        }\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.indexIds = undefined;\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      var data = {\n        id: id,\n        type: _this.resource.schema.type\n      };\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: true\n      };\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(data, config);\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization, used for index requests\n     * @param  {objec} params\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function index(params) {\n      var _this = this;\n      params = params || {};\n\n      if (_this.indexIds === undefined) {\n        return _this.indexIds;\n      }\n\n      return _this.indexIds.map(_this.get.bind(_this)).filter(filter);\n\n      function filter(argument) {\n        var filterParams  = params.filter;\n        var valid = true;\n\n        angular.forEach(filterParams, function(constraint) {\n          valid = valid && argument.data.attributes[constraint.key] === constraint.value;\n        });\n\n        return valid;\n      }\n    }\n\n    /**\n     * Cache ids of objects returned by index request\n     * @param {ids array or AngularJsonAPIModel array} array Objects or ids to be cached\n     */\n    function setIndexIds(array) {\n      var _this = this;\n\n      _this.indexIds = [];\n\n      angular.forEach(array, function(element) {\n        if (angular.isString(element) && _this.resource.schema.id.validate(element)) {\n          _this.indexIds.push(element);\n        } else if (angular.isObject(element) && _this.resource.schema.id.validate(element.data.id)) {\n          _this.indexIds.push(element.data.id);\n        }\n      });\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelValidationError', AngularJsonAPIModelValidationErrorWrapper);\n\n  function AngularJsonAPIModelValidationErrorWrapper() {\n    ValidationError.prototype = Object.create(Error.prototype);\n    ValidationError.prototype.constructor = ValidationError;\n    ValidationError.prototype.name = 'ValidationError';\n\n    return {\n      create: ValidationErrorFactory\n    };\n\n    function ValidationErrorFactory(message, attribute) {\n      return new ValidationError(message, attribute);\n    }\n\n    function ValidationError(message, attribute) {\n      var _this = this;\n      Error.captureStackTrace(_this, _this.constructor);\n\n      _this.message = message;\n      _this.context = {\n        attribute: attribute\n      };\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelSourceError', AngularJsonAPIModelSourceErrorWrapper);\n\n  function AngularJsonAPIModelSourceErrorWrapper() {\n    SourceError.prototype = Object.create(Error.prototype);\n    SourceError.prototype.constructor = SourceError;\n    SourceError.prototype.name = 'SourceError';\n\n    return {\n      create: SourceErrorFactory\n    };\n\n    function SourceErrorFactory(message, source, code, action) {\n      return new SourceError(message, source, code, action);\n    }\n\n    function SourceError(message, source, code, action) {\n      var _this = this;\n      Error.captureStackTrace(_this, _this.constructor);\n\n      _this.message = message;\n      _this.context = {\n        source: source,\n        code: code,\n        action: action\n      };\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelErrorsManager', AngularJsonAPIModelErrorsManagerWrapper);\n\n  function AngularJsonAPIModelErrorsManagerWrapper() {\n    ErrorsManager.prototype.constructor = ErrorsManager;\n    ErrorsManager.prototype.concat = concat;\n    ErrorsManager.prototype.clear = clear;\n    ErrorsManager.prototype.add = add;\n    ErrorsManager.prototype.hasErrors = hasErrors;\n\n    return {\n      create: ErrorsManagerFactory\n    };\n\n    function ErrorsManagerFactory(name, description, ErrorConstructor, defaultFilter) {\n      return new ErrorsManager(name, description, ErrorConstructor, defaultFilter);\n    }\n\n    function ErrorsManager(name, description, ErrorConstructor, defaultFilter) {\n      var _this = this;\n      _this.name = name;\n      _this.description = description;\n\n      _this.ErrorConstructor = ErrorConstructor;\n      _this.errors = {};\n      _this.defaultFilter = defaultFilter || function() { return true; };\n    }\n\n    function clear(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        angular.forEach(_this.errors, function(obj, key) {\n          _this.errors[key] = [];\n        });\n      } else {\n        _this.errors[key] = [];\n      }\n    }\n\n    function add(key, error) {\n      var _this = this;\n\n      _this.errors[key] = _this.errors[key] || [];\n      _this.errors[key].push(error);\n    }\n\n    function concat(errors) {\n      var _this = this;\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key] = [];\n      });\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key].push(error.object);\n      });\n\n    }\n\n    function hasErrors(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        var answer = false;\n\n        angular.forEach(_this.errors, function(error) {\n          answer = answer || error.length > 0;\n        });\n\n        return answer;\n      } else {\n        return _this.errors[key] !== undefined && _this.errors[key].length > 0;\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return {\n      create: AngularJsonAPISynchronizerSimpleFactory\n    };\n\n    function AngularJsonAPISynchronizerSimpleFactory(sources) {\n      return new AngularJsonAPISynchronizerSimple(sources);\n    }\n\n    function AngularJsonAPISynchronizerSimple(sources) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, sources);\n\n      angular.forEach(sources, function(source) {\n        source.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.sources, function(source) {\n          angular.forEach(source.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push({\n              key: action,\n              object: result.reason\n            });\n          }\n        });\n\n        if (errors.length > 0) {\n          deferred.reject({data: data || {}, finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data || {}, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.sources, function(source) {\n          angular.forEach(source.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(sources) {\n      var _this = this;\n\n      _this.sources = sources;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.resource.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('namedFunction', namedFunction);\n\n  function namedFunction(name, fn) {\n    return new Function('fn',\n      'return function ' + name + '(){ return fn.apply(this,arguments)}'\n    )(fn);\n  }\n})();\n\n// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$q', decorator);\n  }\n\n  function decorator($delegate) {\n    var $q = $delegate;\n\n    $q.allSettled = $q.allSettled || allSettled;\n\n    function allSettled(promises, resolvedCallback, rejectedCallback) {\n      // Implementation of allSettled function from Kris Kowal's Q:\n      // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n      // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n      var wrapped = angular.isArray(promises) ? [] : {};\n\n      angular.forEach(promises, function(promise, key) {\n        if (!wrapped.hasOwnProperty(key)) {\n          wrapped[key] = wrap(promise);\n        }\n      });\n\n      return $q.all(wrapped);\n\n      function wrap(promise) {\n        return $q.resolve(promise)\n          .then(function(value) {\n            if (angular.isFunction(resolvedCallback)) {\n              resolvedCallback(value);\n            }\n\n            return { success: true, value: value };\n          },\n\n          function(reason) {\n            if (angular.isFunction(rejectedCallback)) {\n              rejectedCallback(reason);\n            }\n\n            return { success: false, reason: reason };\n          });\n      }\n    }\n\n    return $q;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper(\n    $log,\n    pluralize,\n    uuid4,\n    AngularJsonAPISchemaLink\n  ) {\n\n    return {\n      create: AngularJsonAPISchemaFactory\n    };\n\n    function AngularJsonAPISchemaFactory(schema) {\n      return new AngularJsonAPISchema(schema);\n    }\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      if (schema.id === 'uuid4') {\n        schema.id = uuid4;\n      } else if (schema.id === 'int') {\n        schema.id = {\n          generate: angular.noop,\n          validate: angular.isNumber\n        };\n      } else if (angular.isObject(schema.id)) {\n        if (!angular.isFunction(schema.id.generate)) {\n          schema.id.generate = angular.noop;\n        }\n      } else {\n        schema.id = {\n          generate: angular.noop,\n          validate: angular.identity.bind(null, true)\n        };\n      }\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = AngularJsonAPISchemaLink.create(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get;\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all;\n      }\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchemaLink', AngularJsonAPILinkSchrapperLink);\n\n  function AngularJsonAPILinkSchrapperLink($log, pluralize) {\n\n    return {\n      create: AngularJsonAPISchemaLinkFactory\n    };\n\n    function AngularJsonAPISchemaLinkFactory(linkSchema, linkName, type) {\n      return new AngularJsonAPISchemaLink(linkSchema, linkName, type);\n    }\n\n    function AngularJsonAPISchemaLink(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        if (linkSchema.type !== 'hasMany' && linkSchema.type !== 'hasOne') {\n          $log.error('Schema of link with wrong type: ', linkSchema.type, 'available: hasOne, hasMany');\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n\n        if (linkSchema.reflection === undefined) {\n          _this.reflection = _this.type === 'hasMany' ? pluralize.singular(type) : type;\n        } else {\n          _this.reflection = linkSchema.reflection;\n        }\n\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISourcePrototype', AngularJsonAPISourcePrototypeWrapper);\n\n  function AngularJsonAPISourcePrototypeWrapper() {\n    AngularJsonAPISourcePrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISourcePrototype.prototype.after = afterSynchro;\n    AngularJsonAPISourcePrototype.prototype.begin = begin;\n    AngularJsonAPISourcePrototype.prototype.finish = finish;\n    AngularJsonAPISourcePrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISourcePrototype;\n\n    function AngularJsonAPISourcePrototype(name) {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clearCache',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh',\n        'include'\n      ];\n\n      _this.name = name;\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(\n    AngularJsonAPIAbstractModel,\n    AngularJsonAPISchema,\n    namedFunction,\n    pluralize,\n    $log\n  ) {\n\n    return {\n      modelFactory: createModelFactory\n    };\n\n    function createModelFactory(schemaObj, resource) {\n      var constructorName = pluralize.plural(schemaObj.type, 1);\n\n      var Model = namedFunction(constructorName, function(data, config, updatedAt) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, config, updatedAt);\n\n        _this.form.parent = _this;\n      });\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.resource = resource;\n      Model.prototype.synchronize = resource.synchronizer.synchronize.bind(resource.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return modelFactory;\n\n      function modelFactory(data, updatedAt, isNew) {\n        return new Model(data, updatedAt, isNew);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResource', AngularJsonAPIResourceWrapper);\n\n  function AngularJsonAPIResourceWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPIResourceCache,\n    AngularJsonAPICollection,\n    $rootScope,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIResource.prototype.get = get;\n    AngularJsonAPIResource.prototype.all = all;\n    AngularJsonAPIResource.prototype.remove = remove;\n    AngularJsonAPIResource.prototype.initialize = initialize;\n\n    AngularJsonAPIResource.prototype.clearCache = clearCache;\n\n    return {\n      create: AngularJsonAPIResourceFactory\n    };\n\n    function AngularJsonAPIResourceFactory(schema, synchronizer) {\n      return new AngularJsonAPIResource(schema, synchronizer);\n    }\n\n    /**\n     * AngularJsonAPIResource constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the resource\n     */\n    function AngularJsonAPIResource(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = AngularJsonAPISchema.create(schema);\n      _this.cache = AngularJsonAPIResourceCache.create(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.resource = _this;\n\n      _this.modelFactory = AngularJsonAPIModel.modelFactory(\n        _this.schema,\n        _this\n      );\n\n      _this.initialized = false;\n      _this.type = _this.schema.type;\n\n      synchronizer.resource = _this;\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'resolved', response);\n        _this.cache.fromJson(response.data);\n        _this.initialized = true;\n\n        response.finish();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'rejected', response);\n        response.finish();\n        _this.initialized = true;\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'notify', response);\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id, params) {\n      var _this = this;\n\n      if (!_this.schema.id.validate(id)) {\n        return $q.reject({errors: [{status: 0, statusText: 'Invalid id'}]});\n      }\n\n      var object = _this.cache.get(id);\n\n      object.promise = object.refresh(params);\n\n      return object;\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = angular.extend({}, _this.schema.params.all, params);\n\n      var collection = AngularJsonAPICollection.create(\n        _this,\n        params\n      );\n\n      collection.promise = collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n\n      return object.remove();\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize() {\n      var _this = this;\n      var relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(relationshipSchema, relationshipName) {\n        if (relationshipSchema.type === 'hasOne') {\n          relationships[relationshipName] = {\n            data: null\n          };\n        } else if (relationshipSchema.type === 'hasMany') {\n          relationships[relationshipName] = {\n            data: []\n          };\n        }\n      });\n\n      var data = {\n        type: _this.type,\n        id: _this.schema.id.generate(),\n        attributes: {},\n        relationships: relationships\n      };\n\n      var config = {\n        new: true,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: false\n      };\n\n      var object = _this.modelFactory(data, config);\n\n      $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:initialize', 'resolved', object);\n\n      return object;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clearCache() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: 'clearCache'\n      };\n\n      _this.cache.clear();\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'notify', response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPIModelErrorsManager,\n    $rootScope,\n    $injector,\n    $q\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n    AngularJsonAPICollection.prototype.hasErrors = hasErrors;\n\n    return {\n      create: AngularJsonAPICollectionFactory\n    };\n\n    function AngularJsonAPICollectionFactory(resource, params) {\n      return new AngularJsonAPICollection(resource, params);\n    }\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIResource} resource Factory associated with the collection\n     * @param {object} params  Params associated with this resource (such as filters)\n     */\n    function AngularJsonAPICollection(resource, params) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.type = resource.schema.type;\n      _this.params = params || {};\n\n      _this.errors = {\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Source',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSourceError\n        )\n      };\n\n      _this.data = _this.resource.cache.index(_this.params);\n\n      _this.loading = false;\n      _this.loadingCount = 0;\n      _this.synchronized = false;\n      _this.pristine = _this.data === undefined;\n\n      _this.promise = $q.resolve(_this);\n\n      var onObjectRemove = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:remove', remove);\n      var onFactoryClear = $rootScope.$on('angularJsonAPI:' + _this.type + ':resource:clearCache', clear);\n      var onObjectAdd = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:add', add);\n\n      $rootScope.$on('$destroy', clearWatchers);\n\n      function remove(event, status, object) {\n        var index;\n\n        if (status === 'resolved' && _this.data !== undefined) {\n          index = _this.data.indexOf(object);\n          if (index > -1) {\n            _this.data.splice(index, 1);\n            _this.resource.cache.setIndexIds(_this.data);\n          }\n        }\n      }\n\n      function clear() {\n        _this.data = undefined;\n        _this.pristine = true;\n      }\n\n      function add(event, status, object) {\n        if (status === 'resolved') {\n          _this.data = _this.data || [];\n          _this.data.push(object);\n        }\n      }\n\n      function clearWatchers() {\n        onObjectRemove();\n        onFactoryClear();\n        onObjectAdd();\n      }\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /**\n     * Shortcut to this.resource.get\n     * @param  {string} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id, params) {\n      var _this = this;\n\n      return _this.resource.get(id, params);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var deferred = $q.defer();\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params\n      };\n\n      __incrementLoadingCounter(_this);\n\n      angular.forEach(_this.data, __incrementLoadingCounter);\n\n      _this.resource.synchronizer.synchronize(config)\n        .then(resolve, reject, notify)\n        .finally(__decrementLoadingCounter.bind(_this, undefined));\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n\n        _this.data = results.data;\n        _this.links = response.data.links;\n\n        _this.updatedAt = Date.now();\n        _this.synchronized = true;\n\n        _this.resource.cache.setIndexIds(_this.data);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'rejected', _this, response);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider(validateJS) {\n    var memory = {};\n    var names = [];\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory(\n      $log,\n      AngularJsonAPIResource,\n      AngularJsonAPISynchronizerSimple\n    ) {\n      return {\n        addResource: addResource,\n        getResource: getResource,\n        clearCache: clearCache,\n        allResources: allResources,\n        listResources: listResources,\n        addValidator: addValidator,\n        synchronizerSimple: AngularJsonAPISynchronizerSimple,\n\n        __proccesResults: __proccesResults\n      };\n\n      function addResource(schema, synchronizer) {\n        var resource = AngularJsonAPIResource.create(schema, synchronizer);\n\n        memory[schema.type] = resource;\n        names.push(schema.type);\n      }\n\n      function getResource(type) {\n        return memory[type];\n      }\n\n      function allResources() {\n        return memory;\n      }\n\n      function listResources() {\n        return names;\n      }\n\n      function clearCache() {\n        angular.forEach(memory, function(resource) {\n          resource.clearCache();\n        });\n      }\n\n      function addValidator(name, validator) {\n        if (!angular.isString(name)) {\n          $log.error('Validator name is not a string', name);\n          return;\n        } else if (validateJS.validators[name] === undefined) {\n          $log.warn('Redeclaring validator', name);\n        }\n\n        validateJS.validators[name] = validator;\n      }\n\n      function __proccesResults(results) {\n        var objects = {\n          data: [],\n          included: []\n        };\n\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n          return;\n        }\n\n        var config = {\n          new: false,\n          synchronized: true,\n          stable: true,\n          pristine: false,\n          initialization: false\n        };\n\n        angular.forEach(results.included, function(data) {\n          objects.included.push(getResource(data.type).cache.addOrUpdate(data, config));\n        });\n\n        if (angular.isArray(results.data)) {\n          angular.forEach(results.data, function(data) {\n            objects.data.push(getResource(data.type).cache.addOrUpdate(data, config));\n          });\n        } else if (results.data !== undefined) {\n          objects.data.push(getResource(results.data.type).cache.addOrUpdate(results.data, config));\n        }\n\n        return objects;\n      }\n    }\n  }\n\n})();\n\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(function($logProvider) {\n    $logProvider.debugEnabled(false);\n  })\n  .run(function(validateJS, $q) {\n    validateJS.Promise = $q;\n  });\n})();\n"],"sourceRoot":"/source/"}