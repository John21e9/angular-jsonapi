{"version":3,"sources":["scripts/lib-d5011bdbcd.js"],"names":["angular","module","constant","pluralize","validate","AngularJsonAPIResourceCacheWrapper","uuid4","$log","AngularJsonAPIResourceCacheFactory","resource","AngularJsonAPIResourceCache","_this","this","data","removed","size","indexIds","undefined","addOrUpdate","validatedData","config","updatedAt","id","error","modelFactory","update","initialization","fromJson","json","collection","new","synchronized","stable","pristine","isObject","forEach","objectData","toJson","object","hasErrors","push","clear","get","type","schema","index","params","debug","map","bind","setIndexIds","array","element","isString","remove","revertRemove","clearRemoved","prototype","create","factory","$inject","AngularJsonAPIModelLinkerService","toLinkData","link","key","target","oneWay","form","relationships","polymorphic","model","__addHasMany","__processAddHasMany","__addHasOne","__processAddHasOne","unlink","__removeHasMany","__processRemove","reflectionSchema","reflectionKey","reflection","__swapResults","__wrapResults","oldReflectionSchema","oldReflection","result","__removeHasOne","reset","linkData","isArray","indexOf","splice","value","newValue","item","i","service","AngularJsonAPIModelFormWrapper","AngularJsonAPIModelValidationError","validateJS","$q","AngularJsonAPIModelFormFactory","parent","AngularJsonAPIModelForm","attributes","copy","save","auto","slice","validator","errors","validation","resolve","deferred","reject","errorsMap","attribute","add","attributesWrapper","constraintsWrapper","defer","async","then","promise","AngularJsonAPIAbstractModelWrapper","AngularJsonAPIModelSynchronizationError","AngularJsonAPIModelErrorsManager","$rootScope","$injector","AngularJsonAPIAbstractModel","loading","saving","Date","now","loadingCount","savingCount","synchronization","__setData","synchronize","notify","response","$jsonapi","__proccesResults","$emit","action","cache","finish","concat","__decrementSavingCounter","__incrementSavingCounter","refresh","synchronizeIncluded","__incrementLoadingCounter","__decrementLoadingCounter","resolveIncluded","includedResponse","operation","success","results","included","allSettled","unlinkAll","removeLink","linksObj","removeReflectionLink","resolveReflection","targets","answer","setAttributes","validators","setRelationships","relationshipData","links","linkOne","length","unlinkOne","getResource","AngularJsonAPIModelValidationErrorWrapper","ValidationErrorFactory","message","ValidationError","Error","captureStackTrace","constructor","context","Object","name","AngularJsonAPIModelSynchronizationErrorWrapper","SynchronizationErrorFactory","code","SynchronizationError","AngularJsonAPIModelErrorsManagerWrapper","ErrorsManagerFactory","description","ErrorConstructor","defaultFilter","ErrorsManager","obj","namedFunction","fn","Function","propertyName","callback","done","defineProperty","call","enumerable","configurable","str","replace","toLowerCase","$provide","decorator","$delegate","promises","resolvedCallback","rejectedCallback","wrap","isFunction","reason","wrapped","hasOwnProperty","all","AngularJsonAPISynchronizerSimpleWrapper","AngularJsonAPISynchronizerPrototype","AngularJsonAPISynchronizerSimpleFactory","synchronizations","AngularJsonAPISynchronizerSimple","state","synchronizer","step","resolved","afterHooks","hook","finishHooks","rejected","noop","beginHooks","beforeHooks","synchronizationHooks","AngularJsonAPISynchronizerPrototypeWrapper","AngularJsonAPISynchronizationRestWrapper","AngularJsonAPISynchronizationPrototype","toKebabCase","$http","AngularJsonAPISynchronizationRestFactory","url","AngularJsonAPISynchronizationRest","method","headers","resolveHttp","rejectHttp","status","statusText","rejectServerOffline","rejectNoConnection","Accept","Content-Type","apply","arguments","AngularJsonAPISynchronizationPrototypeWrapper","allHooks","options","hookName","begin","beforeSynchro","afterSynchro","before","after","AngularJsonAPISynchronizationLocalWrapper","$window","AngularJsonAPISynchronizationLocalFactory","prefix","AngularJsonAPISynchronizationLocal","init","localStorage","getItem","removeItem","updateStorage","setItem","__updateStorage","AngularJsonAPISchemaWrapper","AngularJsonAPISchemaLink","AngularJsonAPISchemaFactory","AngularJsonAPISchema","include","linkSchema","linkName","linkSchemaObj","extend","join","AngularJsonAPILinkSchrapperLink","AngularJsonAPISchemaLinkFactory","plural","singular","AngularJsonAPIResourceWrapper","AngularJsonAPIModel","AngularJsonAPICollection","AngularJsonAPIResourceFactory","AngularJsonAPIResource","initialized","fetch","initialize","relationshipSchema","relationshipName","generate","clearCache","createModelFactory","schemaObj","isNew","Model","constructorName","functions","metaFunction","metaFunctionName","AngularJsonAPICollectionWrapper","AngularJsonAPICollectionFactory","event","clearWatchers","onObjectRemove","onFactoryClear","onObjectAdd","$on","jsonapiProvider","jsonapiFactory","addResource","memory","names","allResources","listResources","addValidator","warn","objects","$get","provider","$logProvider","debugEnabled","run","Promise"],"mappings":"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","file":"scripts/lib-d5011bdbcd.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false, validate: false */\n  .constant('pluralize', pluralize)\n  .constant('validateJS', validate);\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResourceCache', AngularJsonAPIResourceCacheWrapper);\n\n  function AngularJsonAPIResourceCacheWrapper(\n    uuid4,\n    $log\n  ) {\n\n    AngularJsonAPIResourceCache.prototype.get = get;\n    AngularJsonAPIResourceCache.prototype.index = index;\n    AngularJsonAPIResourceCache.prototype.setIndexIds = setIndexIds;\n    AngularJsonAPIResourceCache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPIResourceCache.prototype.fromJson = fromJson;\n    AngularJsonAPIResourceCache.prototype.toJson = toJson;\n    AngularJsonAPIResourceCache.prototype.clear = clear;\n\n    AngularJsonAPIResourceCache.prototype.remove = remove;\n    AngularJsonAPIResourceCache.prototype.revertRemove = revertRemove;\n    AngularJsonAPIResourceCache.prototype.clearRemoved = clearRemoved;\n\n    return {\n      create: AngularJsonAPIResourceCacheFactory\n    };\n\n    function AngularJsonAPIResourceCacheFactory(resource) {\n      return new AngularJsonAPIResourceCache(resource);\n    }\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPIResourceCache(resource) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n\n      _this.indexIds = undefined;\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData, config, updatedAt) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(validatedData, config, updatedAt);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData, !config.new, config.initialization);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: true\n      };\n\n      if (angular.isObject(collection) && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n        _this.indexIds = collection.indexIds;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, config, objectData.updatedAt);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: [],\n        updatedAt: _this.updatedAt,\n        indexIds: _this.indexIds\n      };\n\n      angular.forEach(_this.data, function(object) {\n        if (object.hasErrors() === false) {\n          json.data.push(object.toJson());\n        }\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.indexIds = undefined;\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      var data = {\n        id: id,\n        type: _this.resource.schema.type\n      };\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: true\n      };\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(data, config);\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization, used for index requests\n     * @param  {objec} params\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function index(params) {\n      var _this = this;\n\n      $log.debug('Unused params', params);\n\n      if (_this.indexIds === undefined) {\n        return _this.indexIds;\n      }\n\n      return _this.indexIds.map(_this.get.bind(_this));\n    }\n\n    /**\n     * Cache ids of objects returned by index request\n     * @param {ids array or AngularJsonAPIModel array} array Objects or ids to be cached\n     */\n    function setIndexIds(array) {\n      var _this = this;\n\n      _this.indexIds = [];\n\n      angular.forEach(array, function(element) {\n        if (angular.isString(element) && uuid4.validate(element)) {\n          _this.indexIds.push(element);\n        } else if (angular.isObject(element) && uuid4.validate(element.data.id)) {\n          _this.indexIds.push(element.data.id);\n        }\n      });\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, oneWay, form) {\n      var schema;\n      form = form === undefined ? false : form;\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema.type === 'hasMany') {\n        if (oneWay === true) {\n          __addHasMany(object, key, target, form);\n          return [];\n        } else {\n          return __processAddHasMany(object, key, target, form);\n        }\n      } else if (schema.type === 'hasOne') {\n        if (oneWay === true) {\n          __addHasOne(object, key, target, form);\n          return [];\n        } else {\n          return __processAddHasOne(object, key, target, form);\n        }\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, oneWay, form) {\n      var schema;\n      form = form === undefined ? false : form;\n\n      if (object === undefined) {\n        $log.error('Can\\'t remove link from non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (oneWay === true) {\n        __removeHasMany(object, key, target, form);\n        return [];\n      } else {\n        return __processRemove(object, key, target, form);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __processAddHasMany(object, key, target, form) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var reflectionSchema;\n\n      if (reflectionKey === false) {\n        __addHasMany(object, key, target, form);\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        return __swapResults(\n          __wrapResults(object, key, target),\n          __wrapResults(target, reflectionKey, object),\n          __processAddHasOne(target, reflectionKey, object, form)\n        );\n      } else if (reflectionSchema.type === 'hasMany') {\n        __addHasMany(object, key, target, form);\n        __addHasMany(target, reflectionKey, object, form);\n        return [__wrapResults(target, reflectionKey, object)];\n      }\n    }\n\n    function __processAddHasOne(object, key, target, form) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var oldReflection = object.relationships[key];\n      var reflectionSchema;\n      var oldReflectionSchema;\n      var result = [];\n\n      __addHasOne(object, key, target, form);\n\n      if (oldReflection !== undefined && oldReflection !== null) {\n        oldReflectionSchema = oldReflection.schema.relationships[reflectionKey];\n\n        if (oldReflectionSchema.type === 'hasOne') {\n          __removeHasOne(oldReflection, reflectionKey, object, form);\n        } else if (oldReflectionSchema.type === 'hasMany') {\n          __removeHasMany(oldReflection, reflectionKey, object, form);\n        }\n\n        result.push(__wrapResults(oldReflection, reflectionKey, object));\n      }\n\n      if (target !== undefined && target !== null && reflectionKey !== false) {\n        reflectionSchema = target.schema.relationships[reflectionKey];\n\n        if (reflectionSchema.type === 'hasOne') {\n          __addHasOne(target, reflectionKey, object, form);\n        } else if (reflectionSchema.type === 'hasMany') {\n          __addHasMany(target, reflectionKey, object, form);\n        }\n\n        result.push(__wrapResults(target, reflectionKey, object));\n      }\n\n      return result;\n    }\n\n    function __processRemove(object, key, target, form) {\n      var schema = object.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema;\n\n      if (schema.type === 'hasMany') {\n        __removeHasMany(object, key, target, form);\n      } else if (schema.type === 'hasOne') {\n        __removeHasOne(object, key, target, form);\n      }\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        __removeHasOne(target, reflectionKey, object, form);\n      } else if (reflectionSchema.type === 'hasMany') {\n        __removeHasMany(target, reflectionKey, object, form);\n      }\n\n      return [__wrapResults(target, reflectionKey, object)];\n    }\n\n    function __addHasOne(object, key, target, form) {\n      $log.debug('addHasOne', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      object.relationships[key] = target;\n      object.data.relationships[key].data = toLinkData(target);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, form) {\n      $log.debug('addHasMany', object, key, target);\n\n      var linkData = toLinkData(target);\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (angular.isArray(object.relationships[key]) && object.relationships[key].indexOf(target) > -1) {\n        return false;\n      }\n\n      object.relationships[key] = object.relationships[key] || [];\n      object.data.relationships[key].data = object.data.relationships[key].data || [];\n\n      object.relationships[key].push(target);\n      object.data.relationships[key].data.push(linkData);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, form) {\n      $log.debug('removeHasOne', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        return false;\n      }\n\n      object.relationships[key] = null;\n      object.data.relationships[key].data = undefined;\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, form) {\n      $log.debug('removeHasMany', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (object.relationships[key] === undefined) {\n        return;\n      }\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n        if (form === false) {\n          object.reset(true);\n        }\n\n        return true;\n      }\n\n      var index = object.relationships[key].indexOf(target);\n\n      if (index === -1) {\n        return false;\n      }\n\n      object.relationships[key].splice(index, 1);\n      object.data.relationships[key].data.splice(index, 1);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __wrapResults(object, key, target) {\n      return {\n        object: object,\n        key: key,\n        target: target\n      };\n    }\n\n    function __swapResults(value, newValue, array) {\n      var index = -1;\n      angular.forEach(array, function(item, i) {\n        if (item.object === value.object && item.key === value.key && item.target === value.target) {\n          index = i;\n        }\n      });\n\n      if (index > -1) {\n        array[index] = newValue;\n      } else {\n        array.push(newValue);\n      }\n\n      return array;\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelLinkerService,\n    validateJS,\n    $q\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return {\n      create: AngularJsonAPIModelFormFactory\n    };\n\n    function AngularJsonAPIModelFormFactory(parent) {\n      return new AngularJsonAPIModelForm(parent);\n    }\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        id: parent.data.id,\n        type: parent.data.type,\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset(auto) {\n      var _this = this;\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = angular.copy(_this.parent.data.relationships[key]) || {};\n        if (angular.isArray(_this.relationships[key])) {\n          _this.relationships[key] = _this.parent.relationships[key].slice();\n        } else {\n          _this.relationships[key] = _this.parent.relationships[key];\n        }\n      });\n\n      if (auto === true && _this.parent.synchronized === true) {\n        return;\n      }\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        _this.data.attributes[key] = angular.copy(_this.parent.data.attributes[key]);\n      });\n\n      _this.parent.errors.validation.clear();\n    }\n\n    /**\n     * Validates form\n     * @return {promise} Promise rejected to errors object indexed by keys. If the\n     * key param i stated it only validates an attribute, else all attributes.\n     */\n    function validate(key) {\n      var _this = this;\n      var attributesWrapper;\n      var constraintsWrapper;\n      var deferred = $q.defer();\n\n      if (key === undefined) {\n        attributesWrapper = _this.data.attributes;\n        constraintsWrapper = _this.schema.attributes;\n      } else {\n        attributesWrapper = {};\n        constraintsWrapper = {};\n\n        attributesWrapper[key] = _this.data.attributes[key];\n        constraintsWrapper[key] = _this.schema.attributes[key];\n      }\n\n      validateJS.async(\n        attributesWrapper,\n        constraintsWrapper\n      ).then(resolve, reject);\n\n      function resolve() {\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        deferred.resolve();\n      }\n\n      function reject(errorsMap) {\n        _this.parent.error = true;\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        angular.forEach(errorsMap, function(errors, attribute) {\n          angular.forEach(errors, function(error) {\n            _this.parent.errors.validation.add(attribute, AngularJsonAPIModelValidationError.create(error, attribute));\n          });\n        });\n\n        deferred.reject(_this.parent.errors.validation);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target, oneWay) {\n      var _this = this;\n      oneWay = oneWay === undefined ? false : true;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.link(_this.parent, key, target, oneWay, true));\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target, oneWay) {\n      var _this = this;\n      oneWay = oneWay === undefined ? false : true;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.unlink(_this.parent, key, target, oneWay, true));\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelSynchronizationError,\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelErrorsManager,\n    AngularJsonAPIModelLinkerService,\n    AngularJsonAPIModelForm,\n    uuid4,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    AngularJsonAPIAbstractModel.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {object} config   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, config, updatedAt) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      /**\n       * Is not a new record\n       * @type {Boolean}\n       */\n      _this.new = config.new === undefined ? false : config.new;\n\n      /**\n       * Is present on the server\n       * @type {Boolean}\n       */\n      _this.stable = config.stable === undefined ? true : config.stable;\n\n      /**\n       * Has been synchronized with the server\n       * @type {Boolean}\n       */\n      _this.synchronized = config.synchronized === undefined ? true : config.synchronized;\n\n      /**\n       * Has just been created by request and may not exist on the server\n       * @type {Boolean}\n       */\n      _this.pristine = config.pristine === undefined ? true : config.pristine;\n\n      _this.removed = false;\n      _this.loading = false;\n      _this.saving = false;\n      _this.updatedAt = _this.synchronized === true ? Date.now() : updatedAt;\n\n      _this.loadingCount = 0;\n      _this.savingCount = 0;\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(schema, key) {\n        _this.relationships[key] = undefined;\n      });\n\n      _this.errors = {\n        validation: AngularJsonAPIModelErrorsManager.create(\n          'Validation',\n          'Errors of attributes validation',\n          AngularJsonAPIModelValidationError\n        ),\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Synchronization',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSynchronizationError\n        )\n      };\n\n      _this.promise = $q.resolve(_this);\n\n      __setData(_this, data);\n\n      _this.form = AngularJsonAPIModelForm.create(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save() {\n      var _this = this;\n      var deferred = $q.defer();\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: _this.new === true ? 'add' : 'update',\n        object: _this\n      };\n\n      _this.form.validate().then(\n        synchronize,\n        deferred.reject\n      ).finally(__decrementSavingCounter.bind(_this, undefined));\n\n      __incrementSavingCounter(_this);\n\n      return deferred.promise;\n\n      function synchronize() {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      function resolve(response) {\n        $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:' + config.action, 'resolved', _this, response);\n        _this.update(_this.form.data);\n\n        if (_this.new === true) {\n          _this.resource.cache.indexIds = _this.resource.cache.indexIds || [];\n          _this.resource.cache.indexIds.push(_this.data.id);\n        }\n\n        _this.synchronized = true;\n        _this.new = false;\n        _this.pristine = false;\n        _this.stable = true;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      if (_this.form !== undefined) {\n        _this.form.reset();\n      }\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh(params) {\n      var $jsonapi = $injector.get('$jsonapi');\n      var deferred = $q.defer();\n      var _this = this;\n      params = params === undefined ? _this.schema.params.get : params;\n\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: params\n      };\n\n      if (_this.new === true) {\n        var error = AngularJsonAPIModelSynchronizationError.create('Can\\'t refresh new object', null, 0, 'refresh');\n        _this.errors.synchronization.add('refresh', error);\n        deferred.reject(error);\n      } else {\n        __incrementLoadingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        _this.synchronized = true;\n        _this.stable = true;\n        _this.pristine = false;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      var config = {\n        action: 'remove',\n        object: _this\n      };\n\n      _this.resource.cache.remove(_this.data.id);\n\n      if (_this.new === true) {\n        deferred.resolve();\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'resolved', _this, response);\n        _this.removed = true;\n        _this.unlinkAll();\n        _this.resource.cache.clearRemoved(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'rejected', _this, response);\n        _this.resource.cache.revertRemove(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlink all reflection relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      __incrementLoadingCounter(_this);\n\n      if (key === undefined) {\n        angular.forEach(_this.relationships, removeLink);\n      } else {\n        removeLink(_this.relationships[key], key);\n      }\n\n      __decrementLoadingCounter(_this);\n\n      return deferred.promise;\n\n      function removeLink(linksObj, key) {\n        var schema = _this.schema.relationships[key];\n        var reflectionKey = schema.reflection;\n\n        if (angular.isArray(linksObj)) {\n          angular.forEach(linksObj, removeReflectionLink.bind(undefined, reflectionKey));\n        } else if (angular.isObject(linksObj)) {\n          removeReflectionLink(reflectionKey, linksObj);\n        }\n\n        if (schema.type === 'hasOne') {\n          _this.relationships[key] = null;\n        } else if (schema.type === 'hasMany') {\n          _this.relationships[key] = [];\n        }\n      }\n\n      function removeReflectionLink(reflectionKey, target) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n        var config = {\n          action: 'unlinkReflection',\n          object: target,\n          target: _this,\n          key: reflectionKey\n        };\n\n        __incrementLoadingCounter(target);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        target.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(target, undefined));\n\n        function resolve(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'resolve', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.resolve(_this);\n        }\n\n        function reject(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'rejected', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.reject(_this);\n        }\n\n        function notify(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'link',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSynchronizationError.create('Can\\'t link undefined', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSynchronizationError.create('Can\\'t link new object', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'linkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].object.data.type + ':object:linkReflection', 'resolved', targets[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked if undefined unlinks all\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'unlink',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSynchronizationError.create('Can\\'t unlink undefined', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSynchronizationError.create('Can\\'t unlink new object', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'unlinkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:unlinkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData, auto, initialization) {\n      var _this = this;\n\n      __incrementLoadingCounter(_this);\n\n      __setData(_this, validatedData);\n      _this.reset(auto);\n      _this.synchronized = initialization === true ? false : true;\n      _this.stable = initialization === true ? false : true;\n      _this.updatedAt = Date.now();\n\n      __decrementLoadingCounter(_this);\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData) {\n\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.resource.schema.type !== validatedData.type) {\n        $log.error('Different type then resource', object.resource.schema.type, validatedData);\n        return false;\n      }\n\n      if (!uuid4.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        var relationshipData = validatedData.relationships[key];\n\n        if (relationshipData === undefined) {\n          object.data.relationships[key] = {data: undefined};\n          return;\n        }\n\n        object.data.relationships[key] = object.data.relationships[key] || {};\n        object.data.relationships[key].links = relationshipData.links;\n\n        if (schema.type === 'hasOne') {\n          linkOne(object, key, relationshipData.data);\n        } else if (schema.type === 'hasMany') {\n          if (angular.isArray(relationshipData.data)) {\n            if (relationshipData.data.length === 0) {\n              object.data.relationships[key].data = [];\n              object.unlinkAll(key);\n            } else {\n              angular.forEach(\n                object.relationships[key],\n                unlinkOne.bind(undefined, object, key, relationshipData.data)\n              );\n              angular.forEach(\n                relationshipData.data,\n                linkOne.bind(undefined, object, key)\n              );\n            }\n          }\n        }\n      }\n\n      function linkOne(object, key, data) {\n        var resource;\n\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        resource = $jsonapi.getResource(data.type);\n\n        if (resource === undefined) {\n          $log.error('Factory not found', data.type, data);\n          return;\n        }\n\n        var target = resource.cache.get(data.id);\n\n        AngularJsonAPIModelLinkerService.link(object, key, target);\n      }\n\n      function unlinkOne(object, key, relationshipData, target) {\n        if (relationshipData.indexOf(target.data.id) > -1) {\n          return;\n        }\n\n        AngularJsonAPIModelLinkerService.unlink(object, key, target);\n      }\n    }\n  }\n\n  /////////////\n  // Private //\n  /////////////\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n\n  function __incrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount += 1;\n    object.saving = true;\n  }\n\n  function __decrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount -= 1;\n    object.saving = object.savingCount > 0;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelValidationError', AngularJsonAPIModelValidationErrorWrapper);\n\n  function AngularJsonAPIModelValidationErrorWrapper() {\n    ValidationError.prototype = Object.create(Error.prototype);\n    ValidationError.prototype.constructor = ValidationError;\n    ValidationError.prototype.name = 'ValidationError';\n\n    return {\n      create: ValidationErrorFactory\n    };\n\n    function ValidationErrorFactory(message, attribute) {\n      return new ValidationError(message, attribute);\n    }\n\n    function ValidationError(message, attribute) {\n      var _this = this;\n      Error.captureStackTrace(_this, _this.constructor);\n\n      _this.message = message;\n      _this.context = {\n        attribute: attribute\n      };\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelSynchronizationError', AngularJsonAPIModelSynchronizationErrorWrapper);\n\n  function AngularJsonAPIModelSynchronizationErrorWrapper() {\n    SynchronizationError.prototype = Object.create(Error.prototype);\n    SynchronizationError.prototype.constructor = SynchronizationError;\n    SynchronizationError.prototype.name = 'SynchronizationError';\n\n    return {\n      create: SynchronizationErrorFactory\n    };\n\n    function SynchronizationErrorFactory(message, synchronization, code, action) {\n      return new SynchronizationError(message, synchronization, code, action);\n    }\n\n    function SynchronizationError(message, synchronization, code, action) {\n      var _this = this;\n      Error.captureStackTrace(_this, _this.constructor);\n\n      _this.message = message;\n      _this.context = {\n        synchronization: synchronization,\n        code: code,\n        action: action\n      };\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelErrorsManager', AngularJsonAPIModelErrorsManagerWrapper);\n\n  function AngularJsonAPIModelErrorsManagerWrapper() {\n    ErrorsManager.prototype.constructor = ErrorsManager;\n    ErrorsManager.prototype.concat = concat;\n    ErrorsManager.prototype.clear = clear;\n    ErrorsManager.prototype.add = add;\n    ErrorsManager.prototype.hasErrors = hasErrors;\n\n    return {\n      create: ErrorsManagerFactory\n    };\n\n    function ErrorsManagerFactory(name, description, ErrorConstructor, defaultFilter) {\n      return new ErrorsManager(name, description, ErrorConstructor, defaultFilter);\n    }\n\n    function ErrorsManager(name, description, ErrorConstructor, defaultFilter) {\n      var _this = this;\n      _this.name = name;\n      _this.description = description;\n\n      _this.ErrorConstructor = ErrorConstructor;\n      _this.errors = {};\n      _this.defaultFilter = defaultFilter || function() { return true; };\n    }\n\n    function clear(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        angular.forEach(_this.errors, function(obj, key) {\n          _this.errors[key] = [];\n        });\n      } else {\n        _this.errors[key] = [];\n      }\n    }\n\n    function add(key, error) {\n      var _this = this;\n\n      _this.errors[key] = _this.errors[key] || [];\n      _this.errors[key].push(error);\n    }\n\n    function concat(errors) {\n      var _this = this;\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key] = [];\n      });\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key].push(error.object);\n      });\n\n    }\n\n    function hasErrors(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        var answer = false;\n\n        angular.forEach(_this.errors, function(error) {\n          answer = answer || error.length > 0;\n        });\n\n        return answer;\n      } else {\n        return _this.errors[key] !== undefined && _this.errors[key].length > 0;\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('namedFunction', namedFunction);\n\n  function namedFunction(name, fn) {\n    return new Function('fn',\n      'return function ' + name + '(){ return fn.apply(this,arguments)}'\n    )(fn);\n  };\n})();\n\n// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises, resolvedCallback, rejectedCallback) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.resolve(promise)\n            .then(function(value) {\n              if (angular.isFunction(resolvedCallback)) {\n                resolvedCallback(value);\n              }\n\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              if (angular.isFunction(rejectedCallback)) {\n                rejectedCallback(reason);\n              }\n\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return {\n      create: AngularJsonAPISynchronizerSimpleFactory\n    };\n\n    function AngularJsonAPISynchronizerSimpleFactory(synchronizations) {\n      return new AngularJsonAPISynchronizerSimple(synchronizations);\n    }\n\n    function AngularJsonAPISynchronizerSimple(synchronizations) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, synchronizations);\n\n      angular.forEach(synchronizations, function(synchronization) {\n        synchronization.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push({\n              key: action,\n              object: result.reason\n            });\n          }\n        });\n\n        if (errors.length > 0) {\n          deferred.reject({data: data, finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(synchronizations) {\n      var _this = this;\n\n      _this.synchronizations = synchronizations;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.resource.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationRest', AngularJsonAPISynchronizationRestWrapper);\n\n  function AngularJsonAPISynchronizationRestWrapper(\n    AngularJsonAPIModelSynchronizationError,\n    AngularJsonAPISynchronizationPrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISynchronizationRest.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationRest.prototype.constructor = AngularJsonAPISynchronizationRest;\n\n    return {\n      create: AngularJsonAPISynchronizationRestFactory\n    };\n\n    function AngularJsonAPISynchronizationRestFactory(name, url) {\n      return new AngularJsonAPISynchronizationRest(name, url);\n    }\n\n    function AngularJsonAPISynchronizationRest(name, url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISynchronizationPrototype.apply(_this, arguments);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp.bind(null, 'all'));\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp.bind(null, 'get'));\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp.bind(null, 'remove'));\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject(AngularJsonAPIModelSynchronizationError.create('Object has been removed', _this, 0, 'unlink'));\n        } else if (config.target !== undefined && config.target.data.id === undefined) {\n          deferred.reject(AngularJsonAPIModelSynchronizationError.create('Can\\'t unlink object without id through rest call', _this, 0, 'unlink'));\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'get')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          if (config.target === undefined) {\n            $http({\n              method: 'PUT',\n              headers: headers,\n              data: {data: []},\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          } else {\n            $http({\n              method: 'DELETE',\n              headers: headers,\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key + '/' + config.target.data.id\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          }\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target === undefined || config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'PUT',\n            headers: headers,\n            data: {data: AngularJsonAPIModelLinkerService.toLinkData(config.target)},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          $http({\n            method: 'POST',\n            headers: headers,\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        return $http({\n          method: 'PUT',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'update'));\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url + '/',\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'add'));\n      }\n\n      function resolveHttp(response) {\n        return $q.resolve(response.data);\n      }\n\n      function rejectHttp(action, response) {\n        var deferred = $q.defer();\n\n        if (response.status === 0) {\n          $http({\n            method: 'GET',\n            url: 'https://status.cloud.google.com/incidents.schema.json'\n          }).then(rejectServerOffline, rejectNoConnection);\n        } else {\n          deferred.reject(AngularJsonAPIModelSynchronizationError.create(response.statusText, _this, response.status, action));\n        }\n\n        return deferred.promise;\n\n        function rejectServerOffline(response) {\n          deferred.reject(AngularJsonAPIModelSynchronizationError.create('Server is offline', _this, response.status, action));\n        }\n\n        function rejectNoConnection() {\n          deferred.reject(AngularJsonAPIModelSynchronizationError.create('No internet connection', _this, response.status, action));\n        }\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizationPrototype', AngularJsonAPISynchronizationPrototypeWrapper);\n\n  function AngularJsonAPISynchronizationPrototypeWrapper() {\n    AngularJsonAPISynchronizationPrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.after = afterSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.begin = begin;\n    AngularJsonAPISynchronizationPrototype.prototype.finish = finish;\n    AngularJsonAPISynchronizationPrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISynchronizationPrototype;\n\n    function AngularJsonAPISynchronizationPrototype(name) {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clearCache',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh',\n        'include'\n      ];\n\n      _this.name = name;\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationLocal', AngularJsonAPISynchronizationLocalWrapper);\n\n  function AngularJsonAPISynchronizationLocalWrapper(\n    AngularJsonAPISynchronizationPrototype,\n    $window,\n    $q\n  ) {\n\n    AngularJsonAPISynchronizationLocal.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationLocal.prototype.constructor = AngularJsonAPISynchronizationLocal;\n\n    return {\n      create: AngularJsonAPISynchronizationLocalFactory\n    };\n\n    function AngularJsonAPISynchronizationLocalFactory(name, prefix) {\n      return new AngularJsonAPISynchronizationLocal(name, prefix);\n    }\n\n    function AngularJsonAPISynchronizationLocal(name, prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISynchronizationPrototype.apply(_this, arguments);\n\n      _this.synchronization('init', init);\n\n      _this.begin('clearCache', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('refresh', updateStorage);\n      _this.begin('unlink', updateStorage);\n      _this.begin('unlinkReflection', updateStorage);\n      _this.begin('link', updateStorage);\n      _this.begin('linkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.begin('get', updateStorage);\n      _this.begin('all', updateStorage);\n      _this.begin('include', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clearCache', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('refresh', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n      _this.finish('include', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.resource.schema.type;\n        return $q.resolve($window.localStorage.getItem(prefix + '.' + type));\n      }\n\n      function clear() {\n        var type = _this.synchronizer.resource.schema.type;\n        $window.localStorage.removeItem(prefix + '.' + type);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.resource.schema.type;\n        var cache = _this.synchronizer.resource.cache;\n        $window.localStorage.setItem(prefix + '.' + type, cache.toJson());\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper($log, pluralize, AngularJsonAPISchemaLink) {\n\n    return {\n      create: AngularJsonAPISchemaFactory\n    };\n\n    function AngularJsonAPISchemaFactory(schema) {\n      return new AngularJsonAPISchema(schema);\n    }\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = AngularJsonAPISchemaLink.create(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get.join(',');\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all.join(',');\n      }\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchemaLink', AngularJsonAPILinkSchrapperLink);\n\n  function AngularJsonAPILinkSchrapperLink($log, pluralize) {\n\n    return {\n      create: AngularJsonAPISchemaLinkFactory\n    };\n\n    function AngularJsonAPISchemaLinkFactory(linkSchema, linkName, type) {\n      return new AngularJsonAPISchemaLink(linkSchema, linkName, type);\n    }\n\n    function AngularJsonAPISchemaLink(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        if (linkSchema.type !== 'hasMany' && linkSchema.type !== 'hasOne') {\n          $log.error('Schema of link with wrong type: ', linkSchema.type, 'available: hasOne, hasMany');\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n\n        if (linkSchema.reflection === undefined) {\n          _this.reflection = _this.type === 'hasMany' ? pluralize.singular(type) : type;\n        } else {\n          _this.reflection = linkSchema.reflection;\n        }\n\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResource', AngularJsonAPIResourceWrapper);\n\n  function AngularJsonAPIResourceWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPIResourceCache,\n    AngularJsonAPICollection,\n    uuid4,\n    $rootScope,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIResource.prototype.get = get;\n    AngularJsonAPIResource.prototype.all = all;\n    AngularJsonAPIResource.prototype.remove = remove;\n    AngularJsonAPIResource.prototype.initialize = initialize;\n\n    AngularJsonAPIResource.prototype.clearCache = clearCache;\n\n    return {\n      create: AngularJsonAPIResourceFactory\n    };\n\n    function AngularJsonAPIResourceFactory(schema, synchronizer) {\n      return new AngularJsonAPIResource(schema, synchronizer);\n    }\n\n    /**\n     * AngularJsonAPIResource constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the resource\n     */\n    function AngularJsonAPIResource(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = AngularJsonAPISchema.create(schema);\n      _this.cache = AngularJsonAPIResourceCache.create(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.resource = _this;\n\n      _this.modelFactory = AngularJsonAPIModel.modelFactory(\n        _this.schema,\n        _this\n      );\n\n      _this.initialized = false;\n      _this.type = _this.schema.type;\n\n      synchronizer.resource = _this;\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'resolved', response);\n        _this.cache.fromJson(response.data);\n        _this.initialized = true;\n\n        response.finish();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'rejected', response);\n        response.finish();\n        _this.initialized = true;\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'notify', response);\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id, params) {\n      var _this = this;\n\n      if (!uuid4.validate(id)) {\n        return $q.reject({errors: [{status: 0, statusText: 'Invalid id not uuid4'}]});\n      }\n\n      var object = _this.cache.get(id);\n\n      object.promise = object.refresh(params);\n\n      return object;\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = params === undefined ? _this.schema.params.all : params;\n\n      var collection = AngularJsonAPICollection.create(\n        _this,\n        params\n      );\n\n      collection.promise = collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n\n      return object.remove();\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize() {\n      var _this = this;\n      var relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(relationshipSchema, relationshipName) {\n        if (relationshipSchema.type === 'hasOne') {\n          relationships[relationshipName] = {\n            data: null\n          };\n        } else if (relationshipSchema.type === 'hasMany') {\n          relationships[relationshipName] = {\n            data: []\n          };\n        }\n      });\n\n      var data = {\n        type: _this.type,\n        id: uuid4.generate(),\n        attributes: {},\n        relationships: relationships\n      };\n\n      var config = {\n        new: true,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: false\n      };\n\n      var object = _this.cache.addOrUpdate(data, config);\n\n      $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:initialize', 'resolved', object);\n\n      return object;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clearCache() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: 'clearCache'\n      };\n\n      _this.cache.clear();\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'notify', response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(\n    AngularJsonAPIAbstractModel,\n    AngularJsonAPISchema,\n    namedFunction,\n    pluralize,\n    $log\n  ) {\n\n    return {\n      modelFactory: createModelFactory\n    };\n\n    function createModelFactory(schemaObj, resource) {\n      var constructorName = pluralize.plural(schemaObj.type, 1);\n\n      var Model = namedFunction(constructorName, function(data, config, updatedAt) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, config, updatedAt);\n\n        _this.form.parent = _this;\n      });\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.resource = resource;\n      Model.prototype.synchronize = resource.synchronizer.synchronize.bind(resource.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return modelFactory;\n\n      function modelFactory(data, updatedAt, isNew) {\n        return new Model(data, updatedAt, isNew);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    AngularJsonAPIModelSynchronizationError,\n    AngularJsonAPIModelErrorsManager,\n    $rootScope,\n    $injector,\n    $q\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n    AngularJsonAPICollection.prototype.hasErrors = hasErrors;\n\n    return {\n      create: AngularJsonAPICollectionFactory\n    };\n\n    function AngularJsonAPICollectionFactory(resource, params) {\n      return new AngularJsonAPICollection(resource, params);\n    }\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIResource} resource Factory associated with the collection\n     * @param {object} params  Params associated with this resource (such as filters)\n     */\n    function AngularJsonAPICollection(resource, params) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.type = resource.schema.type;\n      _this.params = params;\n\n      _this.errors = {\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Synchronization',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSynchronizationError\n        )\n      };\n\n      _this.data = _this.resource.cache.index(_this.params);\n\n      _this.loading = false;\n      _this.loadingCount = 0;\n      _this.synchronized = false;\n      _this.pristine = _this.data === undefined;\n\n      _this.promise = $q.resolve(_this);\n\n      var onObjectRemove = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:remove', remove);\n      var onFactoryClear = $rootScope.$on('angularJsonAPI:' + _this.type + ':resource:clearCache', clear);\n      var onObjectAdd = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:add', add);\n\n      $rootScope.$on('$destroy', clearWatchers);\n\n      function remove(event, status, object) {\n        var index;\n\n        if (status === 'resolved' && _this.data !== undefined) {\n          index = _this.data.indexOf(object);\n          if (index > -1) {\n            _this.data.splice(index, 1);\n            _this.resource.cache.setIndexIds(_this.data);\n          }\n        }\n      }\n\n      function clear() {\n        _this.data = undefined;\n        _this.pristine = true;\n      }\n\n      function add(event, status, object) {\n        if (status === 'resolved') {\n          _this.data = _this.data || [];\n          _this.data.push(object);\n        }\n      }\n\n      function clearWatchers() {\n        onObjectRemove();\n        onFactoryClear();\n        onObjectAdd();\n      }\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /**\n     * Shortcut to this.resource.get\n     * @param  {uuid4} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id, params) {\n      var _this = this;\n\n      return _this.resource.get(id, params);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var deferred = $q.defer();\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params\n      };\n\n      __incrementLoadingCounter(_this);\n\n      angular.forEach(_this.data, __incrementLoadingCounter);\n\n      _this.resource.synchronizer.synchronize(config)\n        .then(resolve, reject, notify)\n        .finally(__decrementLoadingCounter.bind(_this, undefined));\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n\n        _this.data = results.data;\n\n        _this.updatedAt = Date.now();\n        _this.synchronized = true;\n\n        _this.resource.cache.setIndexIds(_this.data);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'rejected', _this, response);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider(validateJS) {\n    var memory = {};\n    var names = [];\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPIResource) {\n      return {\n        addResource: addResource,\n        getResource: getResource,\n        clearCache: clearCache,\n        allResources: allResources,\n        listResources: listResources,\n        addValidator: addValidator,\n\n        __proccesResults: __proccesResults\n      };\n\n      function addResource(schema, synchronization) {\n        var resource = AngularJsonAPIResource.create(schema, synchronization);\n\n        memory[schema.type] = resource;\n        names.push(schema.type);\n      }\n\n      function getResource(type) {\n        return memory[type];\n      }\n\n      function allResources() {\n        return memory;\n      }\n\n      function listResources() {\n        return names;\n      }\n\n      function clearCache() {\n        angular.forEach(memory, function(resource) {\n          resource.clearCache();\n        });\n      }\n\n      function addValidator(name, validator) {\n        if (!angular.isString(name)) {\n          $log.error('Validator name is not a string', name);\n          return;\n        } else if (validateJS.validators[name] === undefined) {\n          $log.warn('Redeclaring validator', name);\n        }\n\n        validateJS.validators[name] = validator;\n      }\n\n      function __proccesResults(results) {\n        var objects = {\n          data: [],\n          included: []\n        };\n\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n        }\n\n        var config = {\n          new: false,\n          synchronized: true,\n          stable: true,\n          pristine: false,\n          initialization: false\n        };\n\n        angular.forEach(results.included, function(data) {\n          objects.included.push(getResource(data.type).cache.addOrUpdate(data, config));\n        });\n\n        if (angular.isArray(results.data)) {\n          angular.forEach(results.data, function(data) {\n            objects.data.push(getResource(data.type).cache.addOrUpdate(data, config));\n          });\n        } else {\n          objects.data.push(getResource(results.data.type).cache.addOrUpdate(results.data, config));\n        }\n\n        return objects;\n      }\n    }\n  }\n\n})();\n\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(function($logProvider) {\n    $logProvider.debugEnabled(false);\n  })\n  .run(function(validateJS, $q) {\n    validateJS.Promise = $q;\n  });\n})();\n"],"sourceRoot":"/source/"}