{"version":3,"sources":["scripts/lib-e93da5f0ca.js"],"names":["angular","module","constant","pluralize","validate","AngularJsonAPIModelLinkerService","$log","toLinkData","object","type","data","id","link","key","target","oneWay","form","schema","undefined","error","relationships","polymorphic","model","__addHasMany","__processAddHasMany","__addHasOne","__processAddHasOne","unlink","__removeHasMany","__processRemove","reflectionSchema","reflectionKey","reflection","__swapResults","__wrapResults","oldReflectionSchema","oldReflection","result","__removeHasOne","push","debug","reset","linkData","isArray","indexOf","index","splice","value","newValue","array","forEach","item","i","_this","this","service","$inject","AngularJsonAPIModelFormWrapper","AngularJsonAPIModelValidationError","validateJS","$q","AngularJsonAPIModelFormFactory","parent","AngularJsonAPIModelForm","attributes","toJson","copy","save","auto","slice","validator","errors","validation","clear","resolve","deferred","reject","errorsMap","attribute","add","create","attributesWrapper","constraintsWrapper","defer","async","then","promise","prototype","factory","AngularJsonAPIAbstractModelWrapper","AngularJsonAPIModelSourceError","AngularJsonAPIModelErrorsManager","$rootScope","$injector","AngularJsonAPIAbstractModel","config","updatedAt","stable","pristine","removed","loading","saving","Date","now","loadingCount","savingCount","synchronization","__setData","synchronize","notify","response","$emit","action","update","resource","cache","indexIds","finish","concat","meta","__decrementSavingCounter","bind","__incrementSavingCounter","refresh","params","synchronizeIncluded","__incrementLoadingCounter","__decrementLoadingCounter","resolveIncluded","includedResponse","operation","success","results","included","$jsonapi","__proccesResults","allSettled","map","get","remove","unlinkAll","clearRemoved","revertRemove","removeLink","linksObj","removeReflectionLink","isObject","resolveReflection","targets","validatedData","initialization","hasErrors","answer","setAttributes","validators","setRelationships","relationshipData","links","linkOne","length","unlinkOne","getResource","AngularJsonAPISourceRestWrapper","AngularJsonAPISourcePrototype","toKebabCase","$http","AngularJsonAPISourceRestFactory","name","url","AngularJsonAPISourceRest","all","method","headers","encodeParams","resolveHttp","rejectHttp","status","statusText","rejectServerOffline","rejectNoConnection","Accept","Content-Type","apply","arguments","encodeValue","argument","join","encodedParams","paramValue","paramKey","paramInnerValue","paramInnerKey","decodeParams","decodedParams","objectKeyStart","split","objectKey","substr","objectElementKey","Object","constructor","provide","$provide","decorator","$delegate","sourceRest","AngularJsonAPISourceLocalWrapper","$window","AngularJsonAPISourceLocalFactory","prefix","AngularJsonAPISourceLocal","init","synchronizer","localStorage","getItem","size","list","max","objectMaxKey","fraction","limit","removeItem","updateStorage","json","setItem","keys","reduce","m","k","__updateStorage","begin","sourceLocal","AngularJsonAPIModelValidationErrorWrapper","ValidationErrorFactory","message","ValidationError","Error","captureStackTrace","context","AngularJsonAPIModelSourceErrorWrapper","SourceErrorFactory","source","code","SourceError","AngularJsonAPIModelErrorsManagerWrapper","ErrorsManagerFactory","description","ErrorConstructor","defaultFilter","ErrorsManager","obj","AngularJsonAPIResourceCacheWrapper","uuid4","AngularJsonAPIResourceCacheFactory","AngularJsonAPIResourceCache","addOrUpdate","modelFactory","fromJson","collection","new","synchronized","objectData","filter","filterParams","valid","constraint","setIndexIds","element","isString","AngularJsonAPIModel","AngularJsonAPISchema","namedFunction","createModelFactory","schemaObj","isNew","Model","constructorName","plural","call","functions","metaFunction","metaFunctionName","AngularJsonAPISynchronizerSimpleWrapper","AngularJsonAPISynchronizerPrototype","AngularJsonAPISynchronizerSimpleFactory","sources","AngularJsonAPISynchronizerSimple","state","resolvedCallback","step","rejectedCallback","reason","resolved","afterHooks","hook","finishHooks","rejected","noop","promises","beginHooks","beforeHooks","synchronizationHooks","AngularJsonAPISynchronizerPrototypeWrapper","fn","Function","propertyName","callback","done","defineProperty","enumerable","configurable","str","replace","toLowerCase","wrap","isFunction","wrapped","hasOwnProperty","AngularJsonAPISourcePrototypeWrapper","allHooks","options","hookName","beforeSynchro","afterSynchro","before","after","AngularJsonAPISchemaWrapper","AngularJsonAPISchemaLink","AngularJsonAPISchemaFactory","include","generate","isNumber","identity","linkSchema","linkName","linkSchemaObj","extend","AngularJsonAPILinkSchrapperLink","AngularJsonAPISchemaLinkFactory","singular","AngularJsonAPIResourceWrapper","AngularJsonAPICollection","AngularJsonAPIResourceFactory","AngularJsonAPIResource","initialized","fetch","initialize","relationshipSchema","relationshipName","clearCache","AngularJsonAPICollectionWrapper","AngularJsonAPICollectionFactory","event","clearWatchers","onObjectRemove","onFactoryClear","onObjectAdd","$on","jsonapiProvider","jsonapiFactory","addResource","memory","names","allResources","listResources","addValidator","warn","objects","synchronizerSimple","$get","provider","$logProvider","debugEnabled","run","Promise"],"mappings":"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","file":"scripts/lib-e93da5f0ca.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false, validate: false */\n  .constant('pluralize', pluralize)\n  .constant('validateJS', validate);\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, oneWay, form) {\n      var schema;\n      form = form === undefined ? false : form;\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema.type === 'hasMany') {\n        if (oneWay === true) {\n          __addHasMany(object, key, target, form);\n          return [];\n        } else {\n          return __processAddHasMany(object, key, target, form);\n        }\n      } else if (schema.type === 'hasOne') {\n        if (oneWay === true) {\n          __addHasOne(object, key, target, form);\n          return [];\n        } else {\n          return __processAddHasOne(object, key, target, form);\n        }\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, oneWay, form) {\n      var schema;\n      form = form === undefined ? false : form;\n\n      if (object === undefined) {\n        $log.error('Can\\'t remove link from non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (oneWay === true) {\n        __removeHasMany(object, key, target, form);\n        return [];\n      } else {\n        return __processRemove(object, key, target, form);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __processAddHasMany(object, key, target, form) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var reflectionSchema;\n\n      if (reflectionKey === false) {\n        __addHasMany(object, key, target, form);\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        return __swapResults(\n          __wrapResults(object, key, target),\n          __wrapResults(target, reflectionKey, object),\n          __processAddHasOne(target, reflectionKey, object, form)\n        );\n      } else if (reflectionSchema.type === 'hasMany') {\n        __addHasMany(object, key, target, form);\n        __addHasMany(target, reflectionKey, object, form);\n        return [__wrapResults(target, reflectionKey, object)];\n      }\n    }\n\n    function __processAddHasOne(object, key, target, form) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var oldReflection = object.relationships[key];\n      var reflectionSchema;\n      var oldReflectionSchema;\n      var result = [];\n\n      __addHasOne(object, key, target, form);\n\n      if (oldReflection !== undefined && oldReflection !== null) {\n        oldReflectionSchema = oldReflection.schema.relationships[reflectionKey];\n\n        if (oldReflectionSchema.type === 'hasOne') {\n          __removeHasOne(oldReflection, reflectionKey, object, form);\n        } else if (oldReflectionSchema.type === 'hasMany') {\n          __removeHasMany(oldReflection, reflectionKey, object, form);\n        }\n\n        result.push(__wrapResults(oldReflection, reflectionKey, object));\n      }\n\n      if (target !== undefined && target !== null && reflectionKey !== false) {\n        reflectionSchema = target.schema.relationships[reflectionKey];\n\n        if (reflectionSchema.type === 'hasOne') {\n          __addHasOne(target, reflectionKey, object, form);\n        } else if (reflectionSchema.type === 'hasMany') {\n          __addHasMany(target, reflectionKey, object, form);\n        }\n\n        result.push(__wrapResults(target, reflectionKey, object));\n      }\n\n      return result;\n    }\n\n    function __processRemove(object, key, target, form) {\n      var schema = object.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema;\n\n      if (schema.type === 'hasMany') {\n        __removeHasMany(object, key, target, form);\n      } else if (schema.type === 'hasOne') {\n        __removeHasOne(object, key, target, form);\n      }\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        __removeHasOne(target, reflectionKey, object, form);\n      } else if (reflectionSchema.type === 'hasMany') {\n        __removeHasMany(target, reflectionKey, object, form);\n      }\n\n      return [__wrapResults(target, reflectionKey, object)];\n    }\n\n    function __addHasOne(object, key, target, form) {\n      $log.debug('addHasOne', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      object.relationships[key] = target;\n      object.data.relationships[key].data = toLinkData(target);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, form) {\n      $log.debug('addHasMany', object, key, target);\n\n      var linkData = toLinkData(target);\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (angular.isArray(object.relationships[key]) && object.relationships[key].indexOf(target) > -1) {\n        return false;\n      }\n\n      object.relationships[key] = object.relationships[key] || [];\n      object.data.relationships[key].data = object.data.relationships[key].data || [];\n\n      object.relationships[key].push(target);\n      object.data.relationships[key].data.push(linkData);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, form) {\n      $log.debug('removeHasOne', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        return false;\n      }\n\n      object.relationships[key] = null;\n      object.data.relationships[key].data = undefined;\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, form) {\n      $log.debug('removeHasMany', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (object.relationships[key] === undefined) {\n        return;\n      }\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n        if (form === false) {\n          object.reset(true);\n        }\n\n        return true;\n      }\n\n      var index = object.relationships[key].indexOf(target);\n\n      if (index === -1) {\n        return false;\n      }\n\n      object.relationships[key].splice(index, 1);\n      object.data.relationships[key].data.splice(index, 1);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __wrapResults(object, key, target) {\n      return {\n        object: object,\n        key: key,\n        target: target\n      };\n    }\n\n    function __swapResults(value, newValue, array) {\n      var index = -1;\n      angular.forEach(array, function(item, i) {\n        if (item.object === value.object && item.key === value.key && item.target === value.target) {\n          index = i;\n        }\n      });\n\n      if (index > -1) {\n        array[index] = newValue;\n      } else {\n        array.push(newValue);\n      }\n\n      return array;\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelLinkerService,\n    validateJS,\n    $q\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return {\n      create: AngularJsonAPIModelFormFactory\n    };\n\n    function AngularJsonAPIModelFormFactory(parent) {\n      return new AngularJsonAPIModelForm(parent);\n    }\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        id: parent.data.id,\n        type: parent.data.type,\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset(auto) {\n      var _this = this;\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = angular.copy(_this.parent.data.relationships[key]) || {};\n        if (angular.isArray(_this.relationships[key])) {\n          _this.relationships[key] = _this.parent.relationships[key].slice();\n        } else {\n          _this.relationships[key] = _this.parent.relationships[key];\n        }\n      });\n\n      if (auto === true && _this.parent.synchronized === true) {\n        return;\n      }\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        _this.data.attributes[key] = angular.copy(_this.parent.data.attributes[key]);\n      });\n\n      _this.parent.errors.validation.clear();\n    }\n\n    /**\n     * Validates form\n     * @return {promise} Promise rejected to errors object indexed by keys. If the\n     * key param i stated it only validates an attribute, else all attributes.\n     */\n    function validate(key) {\n      var _this = this;\n      var attributesWrapper;\n      var constraintsWrapper;\n      var deferred = $q.defer();\n\n      if (key === undefined) {\n        attributesWrapper = _this.data.attributes;\n        constraintsWrapper = _this.schema.attributes;\n      } else {\n        attributesWrapper = {};\n        constraintsWrapper = {};\n\n        attributesWrapper[key] = _this.data.attributes[key];\n        constraintsWrapper[key] = _this.schema.attributes[key];\n      }\n\n      validateJS.async(\n        attributesWrapper,\n        constraintsWrapper\n      ).then(resolve, reject);\n\n      function resolve() {\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        deferred.resolve();\n      }\n\n      function reject(errorsMap) {\n        _this.parent.error = true;\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        angular.forEach(errorsMap, function(errors, attribute) {\n          angular.forEach(errors, function(error) {\n            _this.parent.errors.validation.add(attribute, AngularJsonAPIModelValidationError.create(error, attribute));\n          });\n        });\n\n        deferred.reject(_this.parent.errors.validation);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target, oneWay) {\n      var _this = this;\n      oneWay = oneWay === undefined ? false : true;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.link(_this.parent, key, target, oneWay, true));\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target, oneWay) {\n      var _this = this;\n      oneWay = oneWay === undefined ? false : true;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.unlink(_this.parent, key, target, oneWay, true));\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelErrorsManager,\n    AngularJsonAPIModelLinkerService,\n    AngularJsonAPIModelForm,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    AngularJsonAPIAbstractModel.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {object} config   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, config, updatedAt) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      /**\n       * Is not a new record\n       * @type {Boolean}\n       */\n      _this.new = config.new === undefined ? false : config.new;\n\n      /**\n       * Is present on the server\n       * @type {Boolean}\n       */\n      _this.stable = config.stable === undefined ? true : config.stable;\n\n      /**\n       * Has been synchronized with the server\n       * @type {Boolean}\n       */\n      _this.synchronized = config.synchronized === undefined ? true : config.synchronized;\n\n      /**\n       * Has just been created by request and may not exist on the server\n       * @type {Boolean}\n       */\n      _this.pristine = config.pristine === undefined ? true : config.pristine;\n\n      _this.removed = false;\n      _this.loading = false;\n      _this.saving = false;\n      _this.updatedAt = _this.synchronized === true ? Date.now() : updatedAt;\n\n      _this.loadingCount = 0;\n      _this.savingCount = 0;\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(schema, key) {\n        _this.relationships[key] = undefined;\n      });\n\n      _this.errors = {\n        validation: AngularJsonAPIModelErrorsManager.create(\n          'Validation',\n          'Errors of attributes validation',\n          AngularJsonAPIModelValidationError\n        ),\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Source',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSourceError\n        )\n      };\n\n      _this.promise = $q.resolve(_this);\n\n      __setData(_this, data);\n\n      _this.form = AngularJsonAPIModelForm.create(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: _this.new === true ? 'add' : 'update',\n        object: _this\n      };\n\n      _this.form.validate().then(\n        synchronize,\n        deferred.reject\n      ).finally(__decrementSavingCounter.bind(_this, undefined));\n\n      __incrementSavingCounter(_this);\n\n      return deferred.promise;\n\n      function synchronize() {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:' + config.action, 'resolved', _this, response);\n        _this.update(response.data.data);\n\n        if (_this.new === true) {\n          _this.resource.cache.indexIds = _this.resource.cache.indexIds || [];\n          _this.resource.cache.indexIds.push(_this.data.id);\n        }\n\n        _this.synchronized = true;\n        _this.new = false;\n        _this.pristine = false;\n        _this.stable = true;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.resolve(response.data.meta);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      if (_this.form !== undefined) {\n        _this.form.reset();\n      }\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh(params) {\n      var $jsonapi = $injector.get('$jsonapi');\n      var deferred = $q.defer();\n      var _this = this;\n      params = params === undefined ? _this.schema.params.get : params;\n\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: params\n      };\n\n      if (_this.new === true) {\n        var error = AngularJsonAPIModelSourceError.create('Can\\'t refresh new object', null, 0, 'refresh');\n        _this.errors.synchronization.add('refresh', error);\n        deferred.reject(error);\n      } else {\n        __incrementLoadingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        _this.synchronized = true;\n        _this.stable = true;\n        _this.pristine = false;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = _this.data;\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      var config = {\n        action: 'remove',\n        object: _this\n      };\n\n      _this.resource.cache.remove(_this.data.id);\n\n      if (_this.new === true) {\n        deferred.resolve();\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'resolved', _this, response);\n        _this.removed = true;\n        _this.unlinkAll();\n        _this.resource.cache.clearRemoved(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        deferred.resolve();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'rejected', _this, response);\n        _this.resource.cache.revertRemove(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlink all reflection relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      __incrementLoadingCounter(_this);\n\n      if (key === undefined) {\n        angular.forEach(_this.relationships, removeLink);\n      } else {\n        removeLink(_this.relationships[key], key);\n      }\n\n      __decrementLoadingCounter(_this);\n\n      return deferred.promise;\n\n      function removeLink(linksObj, key) {\n        var schema = _this.schema.relationships[key];\n        var reflectionKey = schema.reflection;\n\n        if (angular.isArray(linksObj)) {\n          angular.forEach(linksObj, removeReflectionLink.bind(undefined, reflectionKey));\n        } else if (angular.isObject(linksObj)) {\n          removeReflectionLink(reflectionKey, linksObj);\n        }\n\n        if (schema.type === 'hasOne') {\n          _this.relationships[key] = null;\n        } else if (schema.type === 'hasMany') {\n          _this.relationships[key] = [];\n        }\n      }\n\n      function removeReflectionLink(reflectionKey, target) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n        var config = {\n          action: 'unlinkReflection',\n          object: target,\n          target: _this,\n          key: reflectionKey\n        };\n\n        __incrementLoadingCounter(target);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        target.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(target, undefined));\n\n        function resolve(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'resolve', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.resolve();\n        }\n\n        function reject(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'rejected', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.reject(_this);\n        }\n\n        function notify(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'link',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t link undefined', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t link new object', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'linkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].object.data.type + ':object:linkReflection', 'resolved', targets[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked if undefined unlinks all\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'unlink',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t unlink undefined', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t unlink new object', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'unlinkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:unlinkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve();\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData, auto, initialization) {\n      var _this = this;\n\n      __incrementLoadingCounter(_this);\n\n      __setData(_this, validatedData);\n      _this.reset(auto);\n      _this.synchronized = initialization === true ? false : true;\n      _this.stable = initialization === true ? false : true;\n      _this.updatedAt = Date.now();\n\n      __decrementLoadingCounter(_this);\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData) {\n\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.resource.schema.type !== validatedData.type) {\n        $log.error('Different type then resource', object.resource.schema.type, validatedData);\n        return false;\n      }\n\n      if (!object.schema.id.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      object.data.links = validatedData.links;\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        var relationshipData = validatedData.relationships[key];\n\n        if (relationshipData === undefined) {\n          if (object.data.relationships[key] === undefined) {\n            object.data.relationships[key] = {data: undefined};\n          }\n\n          return;\n        }\n\n        object.data.relationships[key] = object.data.relationships[key] || {};\n        object.data.relationships[key].links = relationshipData.links;\n\n        if (schema.type === 'hasOne') {\n          linkOne(object, key, relationshipData.data);\n        } else if (schema.type === 'hasMany') {\n          if (angular.isArray(relationshipData.data)) {\n            if (relationshipData.data.length === 0) {\n              object.data.relationships[key].data = [];\n              object.unlinkAll(key);\n            } else {\n              angular.forEach(\n                object.relationships[key],\n                unlinkOne.bind(undefined, object, key, relationshipData.data)\n              );\n              angular.forEach(\n                relationshipData.data,\n                linkOne.bind(undefined, object, key)\n              );\n            }\n          }\n        }\n      }\n\n      function linkOne(object, key, data) {\n        var resource;\n\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        resource = $jsonapi.getResource(data.type);\n\n        if (resource === undefined) {\n          $log.error('Factory not found', data.type, data);\n          return;\n        }\n\n        var target = resource.cache.get(data.id);\n\n        AngularJsonAPIModelLinkerService.link(object, key, target);\n      }\n\n      function unlinkOne(object, key, relationshipData, target) {\n        if (relationshipData.indexOf(target.data.id) > -1) {\n          return;\n        }\n\n        AngularJsonAPIModelLinkerService.unlink(object, key, target);\n      }\n    }\n  }\n\n  /////////////\n  // Private //\n  /////////////\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n\n  function __incrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount += 1;\n    object.saving = true;\n  }\n\n  function __decrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount -= 1;\n    object.saving = object.savingCount > 0;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest')\n  .factory('AngularJsonAPISourceRest', AngularJsonAPISourceRestWrapper);\n\n  function AngularJsonAPISourceRestWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPISourcePrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISourceRest.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceRest.prototype.constructor = AngularJsonAPISourceRest;\n\n    return {\n      create: AngularJsonAPISourceRestFactory,\n      encodeParams: encodeParams,\n      decodeParams: decodeParams\n    };\n\n    function AngularJsonAPISourceRestFactory(name, url) {\n      return new AngularJsonAPISourceRest(name, url);\n    }\n\n    function AngularJsonAPISourceRest(name, url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: encodeParams(config.params)\n        }).then(resolveHttp, rejectHttp.bind(null, 'all'));\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: encodeParams(config.params)\n        }).then(resolveHttp, rejectHttp.bind(null, 'get'));\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp.bind(null, 'remove'));\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Object has been removed', _this, 0, 'unlink'));\n        } else if (config.target !== undefined && config.target.data.id === undefined) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Can\\'t unlink object without id through rest call', _this, 0, 'unlink'));\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'get')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          if (config.target === undefined) {\n            $http({\n              method: 'PUT',\n              headers: headers,\n              data: {data: []},\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          } else {\n            $http({\n              method: 'DELETE',\n              headers: headers,\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key + '/' + config.target.data.id\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          }\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target === undefined || config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'PUT',\n            headers: headers,\n            data: {data: AngularJsonAPIModelLinkerService.toLinkData(config.target)},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          $http({\n            method: 'POST',\n            headers: headers,\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        return $http({\n          method: 'PUT',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'update'));\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'add'));\n      }\n\n      function resolveHttp(response) {\n        return $q.resolve(response.data);\n      }\n\n      function rejectHttp(action, response) {\n        var deferred = $q.defer();\n\n        if (response.status === 0) {\n          $http({\n            method: 'GET',\n            url: 'https://status.cloud.google.com/incidents.schema.json'\n          }).then(rejectServerOffline, rejectNoConnection);\n        } else {\n          deferred.reject(AngularJsonAPIModelSourceError.create(response.statusText, _this, response.status, action));\n        }\n\n        return deferred.promise;\n\n        function rejectServerOffline(response) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Server is offline', _this, response.status, action));\n        }\n\n        function rejectNoConnection() {\n          deferred.reject(AngularJsonAPIModelSourceError.create('No internet connection', _this, response.status, action));\n        }\n      }\n    }\n\n    function encodeParams(params) {\n      var encodedParams = {};\n\n      if (params === undefined) {\n        return {};\n      }\n\n      angular.forEach(params, function(paramValue, paramKey) {\n        if (angular.isArray(paramValue)) {\n          encodedParams[paramKey] = encodeValue(paramValue);\n        } else if (angular.isObject(paramValue)) {\n          angular.forEach(paramValue, function(paramInnerValue, paramInnerKey) {\n            encodedParams[paramKey + '[' + paramInnerKey + ']'] = encodeValue(paramInnerValue);\n          });\n        } else {\n          encodedParams[paramKey] = paramValue;\n        }\n      });\n\n      return encodedParams;\n\n      function encodeValue(argument) {\n        if (angular.isArray(argument)) {\n          return argument.join(',');\n        } else {\n          return argument;\n        }\n      }\n    }\n\n    function decodeParams(params) {\n      var decodedParams = {};\n\n      angular.forEach(params, function(value, key) {\n        var objectKeyStart = key.indexOf('[');\n        value = value.split(',');\n        value = value.length === 1 ? value[0] : value;\n\n        if (objectKeyStart > -1) {\n          var objectKey = key.substr(0, objectKeyStart);\n          var objectElementKey = key.substr(objectKeyStart + 1, key.indexOf(']') - objectKeyStart - 1);\n\n          decodedParams[objectKey] = {};\n          decodedParams[objectKey][objectElementKey] = value;\n        } else {\n          decodedParams[key] = value;\n        }\n      });\n\n      return decodedParams;\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$jsonapi', decorator);\n  }\n\n  function decorator($delegate, AngularJsonAPISourceRest) {\n    var $jsonapi = $delegate;\n\n    $jsonapi.sourceRest = AngularJsonAPISourceRest;\n\n    return $jsonapi;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local')\n  .factory('AngularJsonAPISourceLocal', AngularJsonAPISourceLocalWrapper);\n\n  function AngularJsonAPISourceLocalWrapper(\n    AngularJsonAPISourcePrototype,\n    $window,\n    $q\n  ) {\n    var size = {\n      max: 0,\n      all: 0,\n      limit: 5200000,\n      list: {}\n    };\n\n    AngularJsonAPISourceLocal.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceLocal.prototype.constructor = AngularJsonAPISourceLocal;\n\n    return {\n      create: AngularJsonAPISourceLocalFactory,\n      size: size\n    };\n\n    function AngularJsonAPISourceLocalFactory(name, prefix) {\n      return new AngularJsonAPISourceLocal(name, prefix);\n    }\n\n    function AngularJsonAPISourceLocal(name, prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('init', init);\n\n      _this.begin('clearCache', clear);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clearCache', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('refresh', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n      _this.finish('include', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.resource.schema.type;\n        return $q.resolve($window.localStorage.getItem(prefix + '.' + type));\n      }\n\n      function clear() {\n        var type = _this.synchronizer.resource.schema.type;\n        var key = prefix + '.' + type;\n\n        size.all -= size.list[key];\n        delete size.list[key];\n        size.max = objectMaxKey(size.list);\n        size.fraction = size.list[size.max] / size.limit * 100;\n\n        $window.localStorage.removeItem(key);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.resource.schema.type;\n        var cache = _this.synchronizer.resource.cache;\n        var json = cache.toJson();\n        var key = prefix + '.' + type;\n\n        size.list[key] = size.list[key] === undefined ? 0 : size.list[key];\n        size.all += json.length - size.list[key];\n        size.list[key] = json.length;\n        size.max = objectMaxKey(size.list);\n        size.fraction = size.list[size.max] / size.limit * 100;\n\n        $window.localStorage.setItem(key, json);\n      }\n\n      function objectMaxKey(object) {\n        return Object.keys(object).reduce(function(m, k) {\n          return object[k] > object[m] ? k : m;\n        }, Object.keys(object)[0]);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$jsonapi', decorator);\n  }\n\n  function decorator($delegate, AngularJsonAPISourceLocal) {\n    var $jsonapi = $delegate;\n\n    $jsonapi.sourceLocal = AngularJsonAPISourceLocal;\n\n    return $jsonapi;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelValidationError', AngularJsonAPIModelValidationErrorWrapper);\n\n  function AngularJsonAPIModelValidationErrorWrapper() {\n    ValidationError.prototype = Object.create(Error.prototype);\n    ValidationError.prototype.constructor = ValidationError;\n    ValidationError.prototype.name = 'ValidationError';\n\n    return {\n      create: ValidationErrorFactory\n    };\n\n    function ValidationErrorFactory(message, attribute) {\n      return new ValidationError(message, attribute);\n    }\n\n    function ValidationError(message, attribute) {\n      var _this = this;\n      Error.captureStackTrace(_this, _this.constructor);\n\n      _this.message = message;\n      _this.context = {\n        attribute: attribute\n      };\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelSourceError', AngularJsonAPIModelSourceErrorWrapper);\n\n  function AngularJsonAPIModelSourceErrorWrapper() {\n    SourceError.prototype = Object.create(Error.prototype);\n    SourceError.prototype.constructor = SourceError;\n    SourceError.prototype.name = 'SourceError';\n\n    return {\n      create: SourceErrorFactory\n    };\n\n    function SourceErrorFactory(message, source, code, action) {\n      return new SourceError(message, source, code, action);\n    }\n\n    function SourceError(message, source, code, action) {\n      var _this = this;\n      Error.captureStackTrace(_this, _this.constructor);\n\n      _this.message = message;\n      _this.context = {\n        source: source,\n        code: code,\n        action: action\n      };\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelErrorsManager', AngularJsonAPIModelErrorsManagerWrapper);\n\n  function AngularJsonAPIModelErrorsManagerWrapper() {\n    ErrorsManager.prototype.constructor = ErrorsManager;\n    ErrorsManager.prototype.concat = concat;\n    ErrorsManager.prototype.clear = clear;\n    ErrorsManager.prototype.add = add;\n    ErrorsManager.prototype.hasErrors = hasErrors;\n\n    return {\n      create: ErrorsManagerFactory\n    };\n\n    function ErrorsManagerFactory(name, description, ErrorConstructor, defaultFilter) {\n      return new ErrorsManager(name, description, ErrorConstructor, defaultFilter);\n    }\n\n    function ErrorsManager(name, description, ErrorConstructor, defaultFilter) {\n      var _this = this;\n      _this.name = name;\n      _this.description = description;\n\n      _this.ErrorConstructor = ErrorConstructor;\n      _this.errors = {};\n      _this.defaultFilter = defaultFilter || function() { return true; };\n    }\n\n    function clear(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        angular.forEach(_this.errors, function(obj, key) {\n          _this.errors[key] = [];\n        });\n      } else {\n        _this.errors[key] = [];\n      }\n    }\n\n    function add(key, error) {\n      var _this = this;\n\n      _this.errors[key] = _this.errors[key] || [];\n      _this.errors[key].push(error);\n    }\n\n    function concat(errors) {\n      var _this = this;\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key] = [];\n      });\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key].push(error.object);\n      });\n\n    }\n\n    function hasErrors(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        var answer = false;\n\n        angular.forEach(_this.errors, function(error) {\n          answer = answer || error.length > 0;\n        });\n\n        return answer;\n      } else {\n        return _this.errors[key] !== undefined && _this.errors[key].length > 0;\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResourceCache', AngularJsonAPIResourceCacheWrapper);\n\n  function AngularJsonAPIResourceCacheWrapper(\n    uuid4,\n    $log\n  ) {\n\n    AngularJsonAPIResourceCache.prototype.get = get;\n    AngularJsonAPIResourceCache.prototype.index = index;\n    AngularJsonAPIResourceCache.prototype.setIndexIds = setIndexIds;\n    AngularJsonAPIResourceCache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPIResourceCache.prototype.fromJson = fromJson;\n    AngularJsonAPIResourceCache.prototype.toJson = toJson;\n    AngularJsonAPIResourceCache.prototype.clear = clear;\n\n    AngularJsonAPIResourceCache.prototype.remove = remove;\n    AngularJsonAPIResourceCache.prototype.revertRemove = revertRemove;\n    AngularJsonAPIResourceCache.prototype.clearRemoved = clearRemoved;\n\n    return {\n      create: AngularJsonAPIResourceCacheFactory\n    };\n\n    function AngularJsonAPIResourceCacheFactory(resource) {\n      return new AngularJsonAPIResourceCache(resource);\n    }\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPIResourceCache(resource) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n\n      _this.indexIds = undefined;\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData, config, updatedAt) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(validatedData, config, updatedAt);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData, !config.new, config.initialization);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: true\n      };\n\n      if (angular.isObject(collection) && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n        _this.indexIds = collection.indexIds;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, config, objectData.updatedAt);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: [],\n        updatedAt: _this.updatedAt,\n        indexIds: _this.indexIds\n      };\n\n      angular.forEach(_this.data, function(object) {\n        if (object.hasErrors() === false) {\n          json.data.push(object.toJson());\n        }\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.indexIds = undefined;\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      var data = {\n        id: id,\n        type: _this.resource.schema.type\n      };\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: true\n      };\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(data, config);\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization, used for index requests\n     * @param  {objec} params\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function index(params) {\n      var _this = this;\n      params = params || {};\n\n      if (_this.indexIds === undefined) {\n        return _this.indexIds;\n      }\n\n      return _this.indexIds.map(_this.get.bind(_this)).filter(filter);\n\n      function filter(argument) {\n        var filterParams  = params.filter;\n        var valid = true;\n\n        angular.forEach(filterParams, function(constraint) {\n          valid = valid && argument.data.attributes[constraint.key] === constraint.value;\n        });\n\n        return valid;\n      }\n    }\n\n    /**\n     * Cache ids of objects returned by index request\n     * @param {ids array or AngularJsonAPIModel array} array Objects or ids to be cached\n     */\n    function setIndexIds(array) {\n      var _this = this;\n\n      _this.indexIds = [];\n\n      angular.forEach(array, function(element) {\n        if (angular.isString(element) && _this.resource.schema.id.validate(element)) {\n          _this.indexIds.push(element);\n        } else if (angular.isObject(element) && _this.resource.schema.id.validate(element.data.id)) {\n          _this.indexIds.push(element.data.id);\n        }\n      });\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(\n    AngularJsonAPIAbstractModel,\n    AngularJsonAPISchema,\n    namedFunction,\n    pluralize,\n    $log\n  ) {\n\n    return {\n      modelFactory: createModelFactory\n    };\n\n    function createModelFactory(schemaObj, resource) {\n      var constructorName = pluralize.plural(schemaObj.type, 1);\n\n      var Model = namedFunction(constructorName, function(data, config, updatedAt) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, config, updatedAt);\n\n        _this.form.parent = _this;\n      });\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.resource = resource;\n      Model.prototype.synchronize = resource.synchronizer.synchronize.bind(resource.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return modelFactory;\n\n      function modelFactory(data, updatedAt, isNew) {\n        return new Model(data, updatedAt, isNew);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return {\n      create: AngularJsonAPISynchronizerSimpleFactory\n    };\n\n    function AngularJsonAPISynchronizerSimpleFactory(sources) {\n      return new AngularJsonAPISynchronizerSimple(sources);\n    }\n\n    function AngularJsonAPISynchronizerSimple(sources) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, sources);\n\n      angular.forEach(sources, function(source) {\n        source.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.sources, function(source) {\n          angular.forEach(source.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push({\n              key: action,\n              object: result.reason\n            });\n          }\n        });\n\n        if (errors.length > 0) {\n          deferred.reject({data: data || {}, finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data || {}, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.sources, function(source) {\n          angular.forEach(source.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(sources) {\n      var _this = this;\n\n      _this.sources = sources;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.resource.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('namedFunction', namedFunction);\n\n  function namedFunction(name, fn) {\n    return new Function('fn',\n      'return function ' + name + '(){ return fn.apply(this,arguments)}'\n    )(fn);\n  }\n})();\n\n// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$q', decorator);\n  }\n\n  function decorator($delegate) {\n    var $q = $delegate;\n\n    $q.allSettled = $q.allSettled || allSettled;\n\n    function allSettled(promises, resolvedCallback, rejectedCallback) {\n      // Implementation of allSettled function from Kris Kowal's Q:\n      // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n      // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n      var wrapped = angular.isArray(promises) ? [] : {};\n\n      angular.forEach(promises, function(promise, key) {\n        if (!wrapped.hasOwnProperty(key)) {\n          wrapped[key] = wrap(promise);\n        }\n      });\n\n      return $q.all(wrapped);\n\n      function wrap(promise) {\n        return $q.resolve(promise)\n          .then(function(value) {\n            if (angular.isFunction(resolvedCallback)) {\n              resolvedCallback(value);\n            }\n\n            return { success: true, value: value };\n          },\n\n          function(reason) {\n            if (angular.isFunction(rejectedCallback)) {\n              rejectedCallback(reason);\n            }\n\n            return { success: false, reason: reason };\n          });\n      }\n    }\n\n    return $q;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISourcePrototype', AngularJsonAPISourcePrototypeWrapper);\n\n  function AngularJsonAPISourcePrototypeWrapper() {\n    AngularJsonAPISourcePrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISourcePrototype.prototype.after = afterSynchro;\n    AngularJsonAPISourcePrototype.prototype.begin = begin;\n    AngularJsonAPISourcePrototype.prototype.finish = finish;\n    AngularJsonAPISourcePrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISourcePrototype;\n\n    function AngularJsonAPISourcePrototype(name) {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clearCache',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh',\n        'include'\n      ];\n\n      _this.name = name;\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper(\n    $log,\n    pluralize,\n    uuid4,\n    AngularJsonAPISchemaLink\n  ) {\n\n    return {\n      create: AngularJsonAPISchemaFactory\n    };\n\n    function AngularJsonAPISchemaFactory(schema) {\n      return new AngularJsonAPISchema(schema);\n    }\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      if (schema.id === 'uuid4') {\n        schema.id = uuid4;\n      } else if (schema.id === 'int') {\n        schema.id = {\n          generate: angular.noop,\n          validate: angular.isNumber\n        };\n      } else if (angular.isObject(schema.id)) {\n        if (!angular.isFunction(schema.id.generate)) {\n          schema.id.generate = angular.noop;\n        }\n      } else {\n        schema.id = {\n          generate: angular.noop,\n          validate: angular.identity.bind(null, true)\n        };\n      }\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = AngularJsonAPISchemaLink.create(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get;\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all;\n      }\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchemaLink', AngularJsonAPILinkSchrapperLink);\n\n  function AngularJsonAPILinkSchrapperLink($log, pluralize) {\n\n    return {\n      create: AngularJsonAPISchemaLinkFactory\n    };\n\n    function AngularJsonAPISchemaLinkFactory(linkSchema, linkName, type) {\n      return new AngularJsonAPISchemaLink(linkSchema, linkName, type);\n    }\n\n    function AngularJsonAPISchemaLink(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        if (linkSchema.type !== 'hasMany' && linkSchema.type !== 'hasOne') {\n          $log.error('Schema of link with wrong type: ', linkSchema.type, 'available: hasOne, hasMany');\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n\n        if (linkSchema.reflection === undefined) {\n          _this.reflection = _this.type === 'hasMany' ? pluralize.singular(type) : type;\n        } else {\n          _this.reflection = linkSchema.reflection;\n        }\n\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResource', AngularJsonAPIResourceWrapper);\n\n  function AngularJsonAPIResourceWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPIResourceCache,\n    AngularJsonAPICollection,\n    $rootScope,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIResource.prototype.get = get;\n    AngularJsonAPIResource.prototype.all = all;\n    AngularJsonAPIResource.prototype.remove = remove;\n    AngularJsonAPIResource.prototype.initialize = initialize;\n\n    AngularJsonAPIResource.prototype.clearCache = clearCache;\n\n    return {\n      create: AngularJsonAPIResourceFactory\n    };\n\n    function AngularJsonAPIResourceFactory(schema, synchronizer) {\n      return new AngularJsonAPIResource(schema, synchronizer);\n    }\n\n    /**\n     * AngularJsonAPIResource constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the resource\n     */\n    function AngularJsonAPIResource(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = AngularJsonAPISchema.create(schema);\n      _this.cache = AngularJsonAPIResourceCache.create(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.resource = _this;\n\n      _this.modelFactory = AngularJsonAPIModel.modelFactory(\n        _this.schema,\n        _this\n      );\n\n      _this.initialized = false;\n      _this.type = _this.schema.type;\n\n      synchronizer.resource = _this;\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'resolved', response);\n        _this.cache.fromJson(response.data);\n        _this.initialized = true;\n\n        response.finish();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'rejected', response);\n        response.finish();\n        _this.initialized = true;\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'notify', response);\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id, params) {\n      var _this = this;\n\n      if (!_this.schema.id.validate(id)) {\n        return $q.reject({errors: [{status: 0, statusText: 'Invalid id'}]});\n      }\n\n      var object = _this.cache.get(id);\n\n      object.promise = object.refresh(params);\n\n      return object;\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = angular.extend({}, _this.schema.params.all, params);\n\n      var collection = AngularJsonAPICollection.create(\n        _this,\n        params\n      );\n\n      collection.promise = collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n\n      return object.remove();\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize() {\n      var _this = this;\n      var relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(relationshipSchema, relationshipName) {\n        if (relationshipSchema.type === 'hasOne') {\n          relationships[relationshipName] = {\n            data: null\n          };\n        } else if (relationshipSchema.type === 'hasMany') {\n          relationships[relationshipName] = {\n            data: []\n          };\n        }\n      });\n\n      var data = {\n        type: _this.type,\n        id: _this.schema.id.generate(),\n        attributes: {},\n        relationships: relationships\n      };\n\n      var config = {\n        new: true,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: false\n      };\n\n      var object = _this.modelFactory(data, config);\n\n      $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:initialize', 'resolved', object);\n\n      return object;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clearCache() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: 'clearCache'\n      };\n\n      _this.cache.clear();\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'notify', response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPIModelErrorsManager,\n    $rootScope,\n    $injector,\n    $q\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n    AngularJsonAPICollection.prototype.hasErrors = hasErrors;\n\n    return {\n      create: AngularJsonAPICollectionFactory\n    };\n\n    function AngularJsonAPICollectionFactory(resource, params) {\n      return new AngularJsonAPICollection(resource, params);\n    }\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIResource} resource Factory associated with the collection\n     * @param {object} params  Params associated with this resource (such as filters)\n     */\n    function AngularJsonAPICollection(resource, params) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.type = resource.schema.type;\n      _this.params = params || {};\n\n      _this.errors = {\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Source',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSourceError\n        )\n      };\n\n      _this.data = _this.resource.cache.index(_this.params);\n\n      _this.loading = false;\n      _this.loadingCount = 0;\n      _this.synchronized = false;\n      _this.pristine = _this.data === undefined;\n\n      _this.promise = $q.resolve(_this);\n\n      var onObjectRemove = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:remove', remove);\n      var onFactoryClear = $rootScope.$on('angularJsonAPI:' + _this.type + ':resource:clearCache', clear);\n      var onObjectAdd = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:add', add);\n\n      $rootScope.$on('$destroy', clearWatchers);\n\n      function remove(event, status, object) {\n        var index;\n\n        if (status === 'resolved' && _this.data !== undefined) {\n          index = _this.data.indexOf(object);\n          if (index > -1) {\n            _this.data.splice(index, 1);\n            _this.resource.cache.setIndexIds(_this.data);\n          }\n        }\n      }\n\n      function clear() {\n        _this.data = undefined;\n        _this.pristine = true;\n      }\n\n      function add(event, status, object) {\n        if (status === 'resolved') {\n          _this.data = _this.data || [];\n          _this.data.push(object);\n        }\n      }\n\n      function clearWatchers() {\n        onObjectRemove();\n        onFactoryClear();\n        onObjectAdd();\n      }\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /**\n     * Shortcut to this.resource.get\n     * @param  {string} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id, params) {\n      var _this = this;\n\n      return _this.resource.get(id, params);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var deferred = $q.defer();\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params\n      };\n\n      __incrementLoadingCounter(_this);\n\n      angular.forEach(_this.data, __incrementLoadingCounter);\n\n      _this.resource.synchronizer.synchronize(config)\n        .then(resolve, reject, notify)\n        .finally(__decrementLoadingCounter.bind(_this, undefined));\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n\n        _this.data = results.data;\n        _this.links = response.data.links;\n\n        _this.updatedAt = Date.now();\n        _this.synchronized = true;\n\n        _this.resource.cache.setIndexIds(_this.data);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'rejected', _this, response);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider(validateJS) {\n    var memory = {};\n    var names = [];\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory(\n      $log,\n      AngularJsonAPIResource,\n      AngularJsonAPISynchronizerSimple\n    ) {\n      return {\n        addResource: addResource,\n        getResource: getResource,\n        clearCache: clearCache,\n        allResources: allResources,\n        listResources: listResources,\n        addValidator: addValidator,\n        synchronizerSimple: AngularJsonAPISynchronizerSimple,\n\n        __proccesResults: __proccesResults\n      };\n\n      function addResource(schema, synchronizer) {\n        var resource = AngularJsonAPIResource.create(schema, synchronizer);\n\n        memory[schema.type] = resource;\n        names.push(schema.type);\n      }\n\n      function getResource(type) {\n        return memory[type];\n      }\n\n      function allResources() {\n        return memory;\n      }\n\n      function listResources() {\n        return names;\n      }\n\n      function clearCache() {\n        angular.forEach(memory, function(resource) {\n          resource.clearCache();\n        });\n      }\n\n      function addValidator(name, validator) {\n        if (!angular.isString(name)) {\n          $log.error('Validator name is not a string', name);\n          return;\n        } else if (validateJS.validators[name] === undefined) {\n          $log.warn('Redeclaring validator', name);\n        }\n\n        validateJS.validators[name] = validator;\n      }\n\n      function __proccesResults(results) {\n        var objects = {\n          data: [],\n          included: []\n        };\n\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n          return;\n        }\n\n        var config = {\n          new: false,\n          synchronized: true,\n          stable: true,\n          pristine: false,\n          initialization: false\n        };\n\n        angular.forEach(results.included, function(data) {\n          objects.included.push(getResource(data.type).cache.addOrUpdate(data, config));\n        });\n\n        if (angular.isArray(results.data)) {\n          angular.forEach(results.data, function(data) {\n            objects.data.push(getResource(data.type).cache.addOrUpdate(data, config));\n          });\n        } else if (results.data !== undefined) {\n          objects.data.push(getResource(results.data.type).cache.addOrUpdate(results.data, config));\n        }\n\n        return objects;\n      }\n    }\n  }\n\n})();\n\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(function($logProvider) {\n    $logProvider.debugEnabled(false);\n  })\n  .run(function(validateJS, $q) {\n    validateJS.Promise = $q;\n  });\n})();\n"],"sourceRoot":"/source/"}