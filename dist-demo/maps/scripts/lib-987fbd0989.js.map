{"version":3,"sources":["scripts/lib-987fbd0989.js"],"names":["angular","module","constant","pluralize","validate","AngularJsonAPIResourceCacheWrapper","uuid4","$log","AngularJsonAPIResourceCacheFactory","resource","AngularJsonAPIResourceCache","_this","this","data","removed","size","indexIds","undefined","addOrUpdate","validatedData","config","updatedAt","id","error","modelFactory","update","initialization","fromJson","json","collection","new","synchronized","stable","pristine","isObject","forEach","objectData","toJson","object","hasErrors","push","clear","get","type","schema","index","params","filter","argument","filterParams","valid","constraint","attributes","key","value","map","bind","setIndexIds","array","element","isString","remove","revertRemove","clearRemoved","prototype","create","factory","$inject","AngularJsonAPIModelLinkerService","toLinkData","link","target","oneWay","form","relationships","polymorphic","model","__addHasMany","__processAddHasMany","__addHasOne","__processAddHasOne","unlink","__removeHasMany","__processRemove","reflectionSchema","reflectionKey","reflection","__swapResults","__wrapResults","oldReflectionSchema","oldReflection","result","__removeHasOne","debug","reset","linkData","isArray","indexOf","splice","newValue","item","i","service","AngularJsonAPIModelFormWrapper","AngularJsonAPIModelValidationError","validateJS","$q","AngularJsonAPIModelFormFactory","parent","AngularJsonAPIModelForm","copy","save","auto","slice","validator","errors","validation","resolve","deferred","reject","errorsMap","attribute","add","attributesWrapper","constraintsWrapper","defer","async","then","promise","AngularJsonAPIAbstractModelWrapper","AngularJsonAPIModelSourceError","AngularJsonAPIModelErrorsManager","$rootScope","$injector","AngularJsonAPIAbstractModel","loading","saving","Date","now","loadingCount","savingCount","synchronization","__setData","synchronize","notify","response","$emit","action","cache","finish","concat","meta","__decrementSavingCounter","__incrementSavingCounter","refresh","synchronizeIncluded","__incrementLoadingCounter","__decrementLoadingCounter","resolveIncluded","includedResponse","operation","success","results","included","$jsonapi","__proccesResults","allSettled","unlinkAll","removeLink","linksObj","removeReflectionLink","resolveReflection","targets","answer","setAttributes","validators","setRelationships","relationshipData","links","linkOne","length","unlinkOne","getResource","AngularJsonAPIModelValidationErrorWrapper","ValidationErrorFactory","message","ValidationError","Error","captureStackTrace","constructor","context","Object","name","AngularJsonAPIModelSourceErrorWrapper","SourceErrorFactory","source","code","SourceError","AngularJsonAPIModelErrorsManagerWrapper","ErrorsManagerFactory","description","ErrorConstructor","defaultFilter","ErrorsManager","obj","namedFunction","fn","Function","propertyName","callback","done","defineProperty","call","enumerable","configurable","str","replace","toLowerCase","$provide","decorator","$delegate","promises","resolvedCallback","rejectedCallback","wrap","isFunction","reason","wrapped","hasOwnProperty","all","AngularJsonAPISynchronizerSimpleWrapper","AngularJsonAPISynchronizerPrototype","AngularJsonAPISynchronizerSimpleFactory","sources","AngularJsonAPISynchronizerSimple","state","synchronizer","step","resolved","afterHooks","hook","finishHooks","rejected","noop","beginHooks","beforeHooks","synchronizationHooks","AngularJsonAPISynchronizerPrototypeWrapper","AngularJsonAPISourceRestWrapper","AngularJsonAPISourcePrototype","toKebabCase","$http","AngularJsonAPISourceRestFactory","url","AngularJsonAPISourceRest","method","headers","encodeParams","resolveHttp","rejectHttp","status","statusText","rejectServerOffline","rejectNoConnection","Accept","Content-Type","apply","arguments","encodeValue","join","encodedParams","paramValue","paramKey","paramInnerValue","paramInnerKey","decodeParams","decodedParams","objectKeyStart","split","objectKey","substr","objectElementKey","AngularJsonAPISourcePrototypeWrapper","allHooks","options","hookName","begin","beforeSynchro","afterSynchro","before","after","AngularJsonAPISourceLocalWrapper","$window","AngularJsonAPISourceLocalFactory","prefix","AngularJsonAPISourceLocal","init","localStorage","getItem","list","max","objectMaxKey","fraction","limit","removeItem","updateStorage","setItem","keys","reduce","m","k","__updateStorage","AngularJsonAPISchemaWrapper","AngularJsonAPISchemaLink","AngularJsonAPISchemaFactory","AngularJsonAPISchema","include","generate","isNumber","identity","linkSchema","linkName","linkSchemaObj","extend","AngularJsonAPILinkSchrapperLink","AngularJsonAPISchemaLinkFactory","plural","singular","AngularJsonAPIResourceWrapper","AngularJsonAPIModel","AngularJsonAPICollection","AngularJsonAPIResourceFactory","AngularJsonAPIResource","initialized","fetch","initialize","relationshipSchema","relationshipName","clearCache","createModelFactory","schemaObj","isNew","Model","constructorName","functions","metaFunction","metaFunctionName","AngularJsonAPICollectionWrapper","AngularJsonAPICollectionFactory","event","clearWatchers","onObjectRemove","onFactoryClear","onObjectAdd","$on","jsonapiProvider","jsonapiFactory","addResource","memory","names","allResources","listResources","addValidator","warn","objects","$get","provider","$logProvider","debugEnabled","run","Promise"],"mappings":"CAAA,WACE,YAEAA,SAAQC,OAAO,mBAAoB,UAElCC,SAAS,YAAaC,WACtBD,SAAS,aAAcE,aAG1B,WACE,YAKA,SAASC,GACPC,EACAC,GAoBA,QAASC,GAAmCC,GAC1C,MAAO,IAAIC,GAA4BD,GAMzC,QAASC,GAA4BD,GACnC,GAAIE,GAAQC,IAEZD,GAAMF,SAAWA,EACjBE,EAAME,QACNF,EAAMG,WACNH,EAAMI,KAAO,EAEbJ,EAAMK,SAAWC,OAQnB,QAASC,GAAYC,EAAeC,EAAQC,GAC1C,GAAIV,GAAQC,KACRU,EAAKH,EAAcG,EAEvB,OAAWL,UAAPK,MACFf,GAAKgB,MAAM,6BAA+BJ,IAIrBF,SAAnBN,EAAME,KAAKS,IACbX,EAAME,KAAKS,GAAMX,EAAMF,SAASe,aAAaL,EAAeC,EAAQC,GACpEV,EAAMI,MAAQ,GAEdJ,EAAME,KAAKS,GAAIG,OAAON,GAAgBC,EAAAA,OAAYA,EAAOM,gBAGpDf,EAAME,KAAKS,IASpB,QAASK,GAASC,GAChB,GAAIjB,GAAQC,KACRiB,EAAa7B,QAAQ2B,SAASC,GAE9BR,GACFU,OAAK,EACLC,gBAAc,EACdC,QAAQ,EACRC,UAAU,EACVP,gBAAgB,EAGd1B,SAAQkC,SAASL,IAAmCZ,SAApBY,EAAWhB,OAC7CF,EAAMU,UAAYQ,EAAWR,UAC7BV,EAAMK,SAAWa,EAAWb,SAE5BhB,QAAQmC,QAAQN,EAAWhB,KAAM,SAASuB,GACxC,GAAIvB,GAAOuB,EAAWvB,IACtBF,GAAMO,YAAYL,EAAMO,EAAQgB,EAAWf,cASjD,QAASgB,KACP,GAAI1B,GAAQC,KACRgB,GACFf,QACAQ,UAAWV,EAAMU,UACjBL,SAAUL,EAAMK,SASlB,OANAhB,SAAQmC,QAAQxB,EAAME,KAAM,SAASyB,GAC/BA,EAAOC,eAAgB,GACzBX,EAAKf,KAAK2B,KAAKF,EAAOD,YAInBrC,QAAQqC,OAAOT,GAOxB,QAASa,KACP,GAAI9B,GAAQC,IAEZD,GAAMK,SAAWC,OACjBN,EAAME,QACNF,EAAMG,WAQR,QAAS4B,GAAIpB,GACX,GAAIX,GAAQC,KAERC,GACFS,GAAIA,EACJqB,KAAMhC,EAAMF,SAASmC,OAAOD,MAG1BvB,GACFU,OAAK,EACLC,gBAAc,EACdC,QAAQ,EACRC,UAAU,EAOZ,OAJuBhB,UAAnBN,EAAME,KAAKS,KACbX,EAAME,KAAKS,GAAMX,EAAMF,SAASe,aAAaX,EAAMO,IAG9CT,EAAME,KAAKS,GAQpB,QAASuB,GAAMC,GAUb,QAASC,GAAOC,GACd,GAAIC,GAAgBH,EAAOC,OACvBG,GAAQ,CAMZ,OAJAlD,SAAQmC,QAAQc,EAAc,SAASE,GACrCD,EAAQA,GAASF,EAASnC,KAAKuC,WAAWD,EAAWE,OAASF,EAAWG,QAGpEJ,EAjBT,GAAIvC,GAAQC,IAGZ,OAFAkC,GAASA,MAEc7B,SAAnBN,EAAMK,SACDL,EAAMK,SAGRL,EAAMK,SAASuC,IAAI5C,EAAM+B,IAAIc,KAAK7C,IAAQoC,OAAOA,GAkB1D,QAASU,GAAYC,GACnB,GAAI/C,GAAQC,IAEZD,GAAMK,YAENhB,QAAQmC,QAAQuB,EAAO,SAASC,GAC1B3D,QAAQ4D,SAASD,IAAYhD,EAAMF,SAASmC,OAAOtB,GAAGlB,SAASuD,GACjEhD,EAAMK,SAASwB,KAAKmB,GACX3D,QAAQkC,SAASyB,IAAYhD,EAAMF,SAASmC,OAAOtB,GAAGlB,SAASuD,EAAQ9C,KAAKS,KACrFX,EAAMK,SAASwB,KAAKmB,EAAQ9C,KAAKS,MAWvC,QAASuC,GAAOvC,GACd,GAAIX,GAAQC,IAQZ,OANuBK,UAAnBN,EAAME,KAAKS,KACbX,EAAMG,QAAQQ,GAAMX,EAAME,KAAKS,SACxBX,GAAME,KAAKS,GAClBX,EAAMI,MAAQ,GAGTJ,EAAMG,QAAQQ,GASvB,QAASwC,GAAaxC,GACpB,GAAIX,GAAQC,IAQZ,OAN0BK,UAAtBN,EAAMG,QAAQQ,KAChBX,EAAME,KAAKS,GAAMX,EAAMG,QAAQQ,SACxBX,GAAMG,QAAQQ,GACrBX,EAAMI,MAAQ,GAGTJ,EAAME,KAAKS,GAQpB,QAASyC,GAAazC,GACpB,GAAIX,GAAQC,WAELD,GAAMG,QAAQQ,GAhOvB,MAbAZ,GAA4BsD,UAAUtB,IAAMA,EAC5ChC,EAA4BsD,UAAUnB,MAAQA,EAC9CnC,EAA4BsD,UAAUP,YAAcA,EACpD/C,EAA4BsD,UAAU9C,YAAcA,EAEpDR,EAA4BsD,UAAUrC,SAAWA,EACjDjB,EAA4BsD,UAAU3B,OAASA,EAC/C3B,EAA4BsD,UAAUvB,MAAQA,EAE9C/B,EAA4BsD,UAAUH,OAASA,EAC/CnD,EAA4BsD,UAAUF,aAAeA,EACrDpD,EAA4BsD,UAAUD,aAAeA,GAGnDE,OAAQzD,GAtBZR,QAAQC,OAAO,mBACdiE,QAAQ,8BAA+B7D,GAuPxCA,EAAmC8D,SAAW,QAAS,WAEzD,WACE,YAKA,SAASC,GAAiC7D,GAexC,QAAS8D,GAAW/B,GAClB,MAAe,QAAXA,EACK,MAGDK,KAAML,EAAOzB,KAAK8B,KAAMrB,GAAIgB,EAAOzB,KAAKS,IAUlD,QAASgD,GAAKhC,EAAQe,EAAKkB,EAAQC,EAAQC,GACzC,GAAI7B,EAGJ,OAFA6B,GAAgBxD,SAATwD,GAAqB,EAAQA,EAErBxD,SAAXqB,GACF/B,EAAKgB,MAAM,wCAA0Ce,EAAQe,EAAKkB,GAClEhE,EAAKgB,MAAM,UAAWe,EAAOzB,KAAK8B,KAAML,GACxC/B,EAAKgB,MAAM,UAAWgD,EAAO1D,KAAK8B,KAAM4B,GACxChE,EAAKgB,MAAM,OAAQ8B,QAIrBT,EAASN,EAAOM,OAAO8B,cAAcrB,GAEtBpC,SAAXsD,GACFhE,EAAKgB,MAAM,iCAAmCe,EAAQe,EAAKkB,EAAQ3B,GACnErC,EAAKgB,MAAM,UAAWe,EAAOzB,KAAK8B,KAAML,GACxC/B,EAAKgB,MAAM,UAAWgD,EAAO1D,KAAK8B,KAAM4B,GACxChE,EAAKgB,MAAM,OAAQ8B,GACnB9C,EAAKgB,MAAM,UAAWqB,OAIT3B,SAAX2B,GACFrC,EAAKgB,MAAM,wCAA0Ce,EAAQe,EAAKkB,EAAQ3B,GAC1ErC,EAAKgB,MAAM,UAAWe,EAAOzB,KAAK8B,KAAML,GACxC/B,EAAKgB,MAAM,UAAWgD,EAAO1D,KAAK8B,KAAM4B,GACxChE,EAAKgB,MAAM,OAAQ8B,GACnB9C,EAAKgB,MAAM,UAAWqB,OAIT,OAAX2B,GAAmB3B,EAAO+B,eAAgB,GAAS/B,EAAOgC,QAAUL,EAAO1D,KAAK8B,MAClFpC,EAAKgB,MAAM,+CAAiDqB,EAAOgC,MAAQ,eAAiBL,EAAO1D,KAAK8B,MACxGpC,EAAKgB,MAAM,UAAWe,EAAOzB,KAAK8B,KAAML,GACxC/B,EAAKgB,MAAM,UAAWgD,EAAO1D,KAAK8B,KAAM4B,GACxChE,EAAKgB,MAAM,OAAQ8B,GACnB9C,EAAKgB,MAAM,UAAWqB,OAIJ,YAAhBA,EAAOD,KACL6B,KAAW,GACbK,EAAavC,EAAQe,EAAKkB,EAAQE,OAG3BK,EAAoBxC,EAAQe,EAAKkB,EAAQE,GAEzB,WAAhB7B,EAAOD,KACZ6B,KAAW,GACbO,EAAYzC,EAAQe,EAAKkB,EAAQE,OAG1BO,EAAmB1C,EAAQe,EAAKkB,EAAQE,GAL5C,QAiBT,QAASQ,GAAO3C,EAAQe,EAAKkB,EAAQC,EAAQC,GAC3C,GAAI7B,EAGJ,OAFA6B,GAAgBxD,SAATwD,GAAqB,EAAQA,EAErBxD,SAAXqB,GACF/B,EAAKgB,MAAM,6CAA+Ce,EAAQe,EAAKkB,GACvEhE,EAAKgB,MAAM,UAAWe,EAAOzB,KAAK8B,KAAML,GACxC/B,EAAKgB,MAAM,UAAWgD,EAAO1D,KAAK8B,KAAM4B,GACxChE,EAAKgB,MAAM,OAAQ8B,QAIrBT,EAASN,EAAOM,OAAO8B,cAAcrB,GAEtBpC,SAAX2B,GACFrC,EAAKgB,MAAM,2CAA6Ce,EAAQe,EAAKkB,EAAQ3B,GAC7ErC,EAAKgB,MAAM,UAAWe,EAAOzB,KAAK8B,KAAML,GACxC/B,EAAKgB,MAAM,UAAWgD,EAAO1D,KAAK8B,KAAM4B,GACxChE,EAAKgB,MAAM,OAAQ8B,GACnB9C,EAAKgB,MAAM,UAAWqB,OAIpB4B,KAAW,GACbU,EAAgB5C,EAAQe,EAAKkB,EAAQE,OAG9BU,EAAgB7C,EAAQe,EAAKkB,EAAQE,IAQhD,QAASK,GAAoBxC,EAAQe,EAAKkB,EAAQE,GAChD,GACIW,GADAC,EAAgB/C,EAAOM,OAAO8B,cAAcrB,GAAKiC,UAGrD,OAAID,MAAkB,GACpBR,EAAavC,EAAQe,EAAKkB,EAAQE,QAIpCW,EAAmBb,EAAO3B,OAAO8B,cAAcW,GAEjB,WAA1BD,EAAiBzC,KACZ4C,EACLC,EAAclD,EAAQe,EAAKkB,GAC3BiB,EAAcjB,EAAQc,EAAe/C,GACrC0C,EAAmBT,EAAQc,EAAe/C,EAAQmC,IAEjB,YAA1BW,EAAiBzC,MAC1BkC,EAAavC,EAAQe,EAAKkB,EAAQE,GAClCI,EAAaN,EAAQc,EAAe/C,EAAQmC,IACpCe,EAAcjB,EAAQc,EAAe/C,KAHxC,QAOT,QAAS0C,GAAmB1C,EAAQe,EAAKkB,EAAQE,GAC/C,GAEIW,GACAK,EAHAJ,EAAgB/C,EAAOM,OAAO8B,cAAcrB,GAAKiC,WACjDI,EAAgBpD,EAAOoC,cAAcrB,GAGrCsC,IA4BJ,OA1BAZ,GAAYzC,EAAQe,EAAKkB,EAAQE,GAEXxD,SAAlByE,GAAiD,OAAlBA,IACjCD,EAAsBC,EAAc9C,OAAO8B,cAAcW,GAExB,WAA7BI,EAAoB9C,KACtBiD,EAAeF,EAAeL,EAAe/C,EAAQmC,GACf,YAA7BgB,EAAoB9C,MAC7BuC,EAAgBQ,EAAeL,EAAe/C,EAAQmC,GAGxDkB,EAAOnD,KAAKgD,EAAcE,EAAeL,EAAe/C,KAG3CrB,SAAXsD,GAAmC,OAAXA,GAAmBc,KAAkB,IAC/DD,EAAmBb,EAAO3B,OAAO8B,cAAcW,GAEjB,WAA1BD,EAAiBzC,KACnBoC,EAAYR,EAAQc,EAAe/C,EAAQmC,GACR,YAA1BW,EAAiBzC,MAC1BkC,EAAaN,EAAQc,EAAe/C,EAAQmC,GAG9CkB,EAAOnD,KAAKgD,EAAcjB,EAAQc,EAAe/C,KAG5CqD,EAGT,QAASR,GAAgB7C,EAAQe,EAAKkB,EAAQE,GAC5C,GAEIW,GAFAxC,EAASN,EAAOM,OAAO8B,cAAcrB,GACrCgC,EAAgBzC,EAAO0C,UAS3B,OANoB,YAAhB1C,EAAOD,KACTuC,EAAgB5C,EAAQe,EAAKkB,EAAQE,GACZ,WAAhB7B,EAAOD,MAChBiD,EAAetD,EAAQe,EAAKkB,EAAQE,GAGlCY,KAAkB,MAItBD,EAAmBb,EAAO3B,OAAO8B,cAAcW,GAEjB,WAA1BD,EAAiBzC,KACnBiD,EAAerB,EAAQc,EAAe/C,EAAQmC,GACX,YAA1BW,EAAiBzC,MAC1BuC,EAAgBX,EAAQc,EAAe/C,EAAQmC,IAGzCe,EAAcjB,EAAQc,EAAe/C,KAG/C,QAASyC,GAAYzC,EAAQe,EAAKkB,EAAQE,GAcxC,MAbAlE,GAAKsF,MAAM,YAAavD,EAAQe,EAAKkB,GAEjCE,KAAS,IACXnC,EAASA,EAAOmC,MAGlBnC,EAAOoC,cAAcrB,GAAOkB,EAC5BjC,EAAOzB,KAAK6D,cAAcrB,GAAKxC,KAAOwD,EAAWE,GAE7CE,KAAS,GACXnC,EAAOwD,OAAM,IAGR,EAGT,QAASjB,GAAavC,EAAQe,EAAKkB,EAAQE,GACzClE,EAAKsF,MAAM,aAAcvD,EAAQe,EAAKkB,EAEtC,IAAIwB,GAAW1B,EAAWE,EAK1B,OAJIE,MAAS,IACXnC,EAASA,EAAOmC,MAGdzE,QAAQgG,QAAQ1D,EAAOoC,cAAcrB,KAASf,EAAOoC,cAAcrB,GAAK4C,QAAQ1B,GAAU,IACrF,GAGTjC,EAAOoC,cAAcrB,GAAOf,EAAOoC,cAAcrB,OACjDf,EAAOzB,KAAK6D,cAAcrB,GAAKxC,KAAOyB,EAAOzB,KAAK6D,cAAcrB,GAAKxC,SAErEyB,EAAOoC,cAAcrB,GAAKb,KAAK+B,GAC/BjC,EAAOzB,KAAK6D,cAAcrB,GAAKxC,KAAK2B,KAAKuD,GAErCtB,KAAS,GACXnC,EAAOwD,OAAM,IAGR,GAGT,QAASF,GAAetD,EAAQe,EAAKkB,EAAQE,GAO3C,MANAlE,GAAKsF,MAAM,eAAgBvD,EAAQe,EAAKkB,GAEpCE,KAAS,IACXnC,EAASA,EAAOmC,MAGHxD,SAAXsD,GAAwBjC,EAAOoC,cAAcrB,KAASkB,GACjD,GAGTjC,EAAOoC,cAAcrB,GAAO,KAC5Bf,EAAOzB,KAAK6D,cAAcrB,GAAKxC,KAAOI,OAElCwD,KAAS,GACXnC,EAAOwD,OAAM,IAGR,GAGT,QAASZ,GAAgB5C,EAAQe,EAAKkB,EAAQE,GAO5C,GANAlE,EAAKsF,MAAM,gBAAiBvD,EAAQe,EAAKkB,GAErCE,KAAS,IACXnC,EAASA,EAAOmC,MAGgBxD,SAA9BqB,EAAOoC,cAAcrB,GAAzB,CAIA,GAAepC,SAAXsD,EAOF,MANAjC,GAAOoC,cAAcrB,MACrBf,EAAOzB,KAAK6D,cAAcrB,GAAKxC,QAC3B4D,KAAS,GACXnC,EAAOwD,OAAM,IAGR,CAGT,IAAIjD,GAAQP,EAAOoC,cAAcrB,GAAK4C,QAAQ1B,EAE9C,OAAc,KAAV1B,GACK,GAGTP,EAAOoC,cAAcrB,GAAK6C,OAAOrD,EAAO,GACxCP,EAAOzB,KAAK6D,cAAcrB,GAAKxC,KAAKqF,OAAOrD,EAAO,GAE9C4B,KAAS,GACXnC,EAAOwD,OAAM,IAGR,IAGT,QAASN,GAAclD,EAAQe,EAAKkB,GAClC,OACEjC,OAAQA,EACRe,IAAKA,EACLkB,OAAQA,GAIZ,QAASgB,GAAcjC,EAAO6C,EAAUzC,GACtC,GAAIb,GAAQ,EAaZ,OAZA7C,SAAQmC,QAAQuB,EAAO,SAAS0C,EAAMC,GAChCD,EAAK9D,SAAWgB,EAAMhB,QAAU8D,EAAK/C,MAAQC,EAAMD,KAAO+C,EAAK7B,SAAWjB,EAAMiB,SAClF1B,EAAQwD,KAIRxD,EAAQ,GACVa,EAAMb,GAASsD,EAEfzC,EAAMlB,KAAK2D,GAGNzC,EAjVT,GAAI/C,GAAQC,IAOZ,OALAD,GAAM0D,WAAaA,EAEnB1D,EAAM2D,KAAOA,EACb3D,EAAMsE,OAASA,EAERrE,KAXTZ,QAAQC,OAAO,mBACdqG,QAAQ,mCAAoClC,GAwV7CA,EAAiCD,SAAW,WAC9C,WACE,YAKA,SAASoC,GACPC,EACApC,EACAqC,EACAC,GAgBA,QAASC,GAA+BC,GACtC,MAAO,IAAIC,GAAwBD,GAGrC,QAASC,GAAwBD,GAC/B,GAAIjG,GAAQC,IAEZD,GAAME,MACJS,GAAIsF,EAAO/F,KAAKS,GAChBqB,KAAMiE,EAAO/F,KAAK8B,KAClBS,cACAsB,kBAGF/D,EAAM+D,iBACN/D,EAAMiG,OAASA,EACfjG,EAAMiC,OAASgE,EAAOhE,OACtBjC,EAAMmF,QAOR,QAASzD,KACP,GAAI1B,GAAQC,KACRC,EAAOb,QAAQ8G,KAAKnG,EAAME,MAC1B6D,IAUJ,OARA1E,SAAQmC,QAAQtB,EAAK6D,cAAe,SAASpB,EAAOD,GAC/BpC,SAAfqC,EAAMzC,OACR6D,EAAcrB,GAAOC,KAIzBzC,EAAK6D,cAAgBA,GAGnB7D,KAAMA,GAQV,QAASkG,KACP,GAAIpG,GAAQC,IAEZ,OAAOD,GAAMiG,OAAOG,OAOtB,QAASjB,GAAMkB,GACb,GAAIrG,GAAQC,IAEZZ,SAAQmC,QAAQxB,EAAMiC,OAAO8B,cAAe,SAAS7D,EAAMwC,GACzD1C,EAAME,KAAK6D,cAAcrB,GAAOrD,QAAQ8G,KAAKnG,EAAMiG,OAAO/F,KAAK6D,cAAcrB,QACzErD,QAAQgG,QAAQrF,EAAM+D,cAAcrB,IACtC1C,EAAM+D,cAAcrB,GAAO1C,EAAMiG,OAAOlC,cAAcrB,GAAK4D,QAE3DtG,EAAM+D,cAAcrB,GAAO1C,EAAMiG,OAAOlC,cAAcrB,MAItD2D,KAAS,GAAQrG,EAAMiG,OAANjG,mBAA8B,KAInDX,QAAQmC,QAAQxB,EAAMiC,OAAOQ,WAAY,SAAS8D,EAAW7D,GAC3D1C,EAAME,KAAKuC,WAAWC,GAAOrD,QAAQ8G,KAAKnG,EAAMiG,OAAO/F,KAAKuC,WAAWC,MAGzE1C,EAAMiG,OAAOO,OAAOC,WAAW3E,SAQjC,QAASrC,GAASiD,GAsBhB,QAASgE,KACKpG,SAARoC,EACF1C,EAAMiG,OAAOO,OAAOC,WAAW3E,QAE/B9B,EAAMiG,OAAOO,OAAOC,WAAW3E,MAAMY,GAGvCiE,EAASD,UAGX,QAASE,GAAOC,GACd7G,EAAMiG,OAAOrF,OAAQ,EACTN,SAARoC,EACF1C,EAAMiG,OAAOO,OAAOC,WAAW3E,QAE/B9B,EAAMiG,OAAOO,OAAOC,WAAW3E,MAAMY,GAGvCrD,QAAQmC,QAAQqF,EAAW,SAASL,EAAQM,GAC1CzH,QAAQmC,QAAQgF,EAAQ,SAAS5F,GAC/BZ,EAAMiG,OAAOO,OAAOC,WAAWM,IAAID,EAAWjB,EAAmCvC,OAAO1C,EAAOkG,QAInGH,EAASC,OAAO5G,EAAMiG,OAAOO,OAAOC,YA7CtC,GACIO,GACAC,EAFAjH,EAAQC,KAGR0G,EAAWZ,EAAGmB,OA6ClB,OA3CY5G,UAARoC,GACFsE,EAAoBhH,EAAME,KAAKuC,WAC/BwE,EAAqBjH,EAAMiC,OAAOQ,aAElCuE,KACAC,KAEAD,EAAkBtE,GAAO1C,EAAME,KAAKuC,WAAWC,GAC/CuE,EAAmBvE,GAAO1C,EAAMiC,OAAOQ,WAAWC,IAGpDoD,EAAWqB,MACTH,EACAC,GACAG,KAAKV,EAASE,GA6BTD,EAASU,QASlB,QAAS1D,GAAKjB,EAAKkB,EAAQC,GACzB,GAAI7D,GAAQC,IAGZ,OAFA4D,GAAoBvD,SAAXuD,GAAuB,GAAQ,EAEjCkC,EAAGW,QAAQjD,EAAiCE,KAAK3D,EAAMiG,OAAQvD,EAAKkB,EAAQC,GAAQ,IAS7F,QAASS,GAAO5B,EAAKkB,EAAQC,GAC3B,GAAI7D,GAAQC,IAGZ,OAFA4D,GAAoBvD,SAAXuD,GAAuB,GAAQ,EAEjCkC,EAAGW,QAAQjD,EAAiCa,OAAOtE,EAAMiG,OAAQvD,EAAKkB,EAAQC,GAAQ,IAnK/F,MATAqC,GAAwB7C,UAAU+C,KAAOA,EACzCF,EAAwB7C,UAAU8B,MAAQA,EAC1Ce,EAAwB7C,UAAU5D,SAAWA,EAE7CyG,EAAwB7C,UAAUM,KAAOA,EACzCuC,EAAwB7C,UAAUiB,OAASA,EAE3C4B,EAAwB7C,UAAU3B,OAASA,GAGzC4B,OAAQ0C,GApBZ3G,QAAQC,OAAO,mBACdiE,QAAQ,0BAA2BqC,GA0LpCA,EAA+BpC,SAAW,qCAAsC,mCAAoC,aAAc,SAApI,WACE,YAKA,SAAS8D,GACPC,EACA1B,EACA2B,EACA/D,EACAyC,EACAuB,EACAC,EACA9H,EACAmG,GAwBA,QAAS4B,GAA4BzH,EAAMO,EAAQC,GACjD,GAAIV,GAAQC,IAEZC,GAAK6D,cAAgB7D,EAAK6D,kBAM1B/D,EAAAA,OAA2BM,SAAfG,EAAAA,QAA2B,EAAQA,EAAAA,OAM/CT,EAAMqB,OAA2Bf,SAAlBG,EAAOY,QAAuB,EAAOZ,EAAOY,OAM3DrB,EAAAA,gBAA6CM,SAAxBG,EAAAA,iBAAoC,EAAOA,EAAAA,gBAMhET,EAAMsB,SAA+BhB,SAApBG,EAAOa,UAAyB,EAAOb,EAAOa,SAE/DtB,EAAMG,SAAU,EAChBH,EAAM4H,SAAU,EAChB5H,EAAM6H,QAAS,EACf7H,EAAMU,UAAYV,EAAAA,mBAAuB,EAAO8H,KAAKC,MAAQrH,EAE7DV,EAAMgI,aAAe,EACrBhI,EAAMiI,YAAc,EAEpBjI,EAAME,MACJ6D,iBACAtB,eAEFzC,EAAM+D,iBAEN1E,QAAQmC,QAAQxB,EAAMiC,OAAO8B,cAAe,SAAS9B,EAAQS,GAC3D1C,EAAM+D,cAAcrB,GAAOpC,SAG7BN,EAAMwG,QACJC,WAAYe,EAAiClE,OAC3C,aACA,kCACAuC,GAEFqC,gBAAiBV,EAAiClE,OAChD,SACA,6BACAiE,IAIJvH,EAAMqH,QAAUtB,EAAGW,QAAQ1G,GAE3BmI,EAAUnI,EAAOE,GAEjBF,EAAM8D,KAAOoC,EAAwB5C,OAAOtD,GAO9C,QAASoG,KAiBP,QAASgC,KACPpI,EAAMoI,YAAY3H,GAAQ2G,KAAKV,EAASE,EAAQyB,GAGlD,QAAS3B,GAAQ4B,GACfb,EAAWc,MAAM,kBAAoBvI,EAAME,KAAK8B,KAAO,WAAavB,EAAO+H,OAAQ,WAAYxI,EAAOsI,GACtGtI,EAAMc,OAAOwH,EAASpI,KAAKA,MAEvBF,EAAAA,UAAc,IAChBA,EAAMF,SAAS2I,MAAMpI,SAAWL,EAAMF,SAAS2I,MAAMpI,aACrDL,EAAMF,SAAS2I,MAAMpI,SAASwB,KAAK7B,EAAME,KAAKS,KAGhDX,EAAAA,iBAAqB,EACrBA,EAAAA,QAAY,EACZA,EAAMsB,UAAW,EACjBtB,EAAMqB,QAAS,EAEfiH,EAASI,SACT1I,EAAMwG,OAAO0B,gBAAgBS,OAAOL,EAAS9B,QAC7CG,EAASD,QAAQ4B,EAASpI,KAAK0I,MAGjC,QAAShC,GAAO0B,GACdb,EAAWc,MAAM,kBAAoBvI,EAAME,KAAK8B,KAAO,eAAgB,WAAYhC,EAAOsI,GAE1FA,EAASI,SACT1I,EAAMwG,OAAO0B,gBAAgBS,OAAOL,EAAS9B,QAC7CG,EAASC,OAAO5G,GAGlB,QAASqI,GAAOC,GACdb,EAAWc,MAAM,kBAAoBvI,EAAME,KAAK8B,KAAO,eAAgB,SAAUhC,EAAOsI,GAExF3B,EAAS0B,OAAOC,GAlDlB,GAAItI,GAAQC,KACR0G,EAAWZ,EAAGmB,QACdzG,GACF+H,OAAQxI,EAAAA,UAAc,EAAO,MAAQ,SACrC2B,OAAQ3B,EAUV,OAPAA,GAAM8D,KAAKrE,WAAW2H,KACpBgB,EACAzB,EAASC,QAFX5G,WAGU6I,EAAyBhG,KAAK7C,EAAOM,SAE/CwI,EAAyB9I,GAElB2G,EAASU,QA4ClB,QAASlC,KACP,GAAInF,GAAQC,IAEOK,UAAfN,EAAM8D,MACR9D,EAAM8D,KAAKqB,QAQf,QAAS4D,GAAQ5G,GA0Bf,QAASuE,GAAQ4B,GAYf,QAASU,GAAoBrH,GAG3B,MAFAsH,GAA0BtH,GAEnBA,EAAOyG,aACZI,OAAQ,UACR7G,OAAQA,IAFHA,WAGIuH,EAA0BrG,KAAKlB,EAAQrB,SAGpD,QAAS6I,GAAgBC,GACvB/J,QAAQmC,QAAQ4H,EAAkB,SAASC,EAAW3G,GAChD2G,EAAUC,WAAY,IACxB7B,EAAWc,MAAM,kBAAoBgB,EAAQC,SAAS9G,GAAKxC,KAAK8B,KAAO,kBAAmB,WAAYuH,EAAQC,SAAS9G,GAAM2G,GAC7HA,EAAU1G,MAAM+F,YAIpB/B,EAASD,QAAQ4B,EAASpI,KAAK0I,MA5BjC,GAAIW,GAAUE,EAASC,iBAAiBpB,EAASpI,KACjDuH,GAAWc,MAAM,kBAAoBvI,EAAME,KAAK8B,KAAO,kBAAmB,WAAYhC,EAAOsI,GAC7FvC,EAAG4D,WAAWJ,EAAQC,SAAS5G,IAAIoG,IAAsB5B,KAAK+B,EAAiBxC,EAASC,QAExF5G,EAAAA,iBAAqB,EACrBA,EAAMqB,QAAS,EACfrB,EAAMsB,UAAW,EAEjBgH,EAASI,SACT1I,EAAMwG,OAAO0B,gBAAgBS,OAAOL,EAAS9B,QAuB/C,QAASI,GAAO0B,GACdb,EAAWc,MAAM,kBAAoBvI,EAAME,KAAK8B,KAAO,kBAAmB,WAAYhC,EAAOsI,GAE7FA,EAASI,SACT1I,EAAMwG,OAAO0B,gBAAgBS,OAAOL,EAAS9B,QAC7CG,EAASC,OAAO5G,GAGlB,QAASqI,GAAOC,GACdb,EAAWc,MAAM,kBAAoBvI,EAAME,KAAK8B,KAAO,kBAAmB,SAAUhC,EAAOsI,GAE3F3B,EAAS0B,OAAOC,GArElB,GAAImB,GAAW/B,EAAU3F,IAAI,YACzB4E,EAAWZ,EAAGmB,QACdlH,EAAQC,IACZkC,GAAoB7B,SAAX6B,EAAuBnC,EAAMiC,OAAOE,OAAOJ,IAAMI,CAE1D,IAAI1B,IACF+H,OAAQ,UACR7G,OAAQ3B,EACRmC,OAAQA,EAGV,IAAInC,EAAAA,UAAc,EAAM,CACtB,GAAIY,GAAQ2G,EAA+BjE,OAAO,2BAA6B,KAAM,EAAG,UACxFtD,GAAMwG,OAAO0B,gBAAgBnB,IAAI,UAAWnG,GAC5C+F,EAASC,OAAOhG,OAEhBqI,GAA0BjJ,GAE1BA,EAAMoI,YAAY3H,GACf2G,KAAKV,EAASE,EAAQyB,GADzBrI,WAEWkJ,EAA0BrG,KAAK7C,EAAOM,QAGnD,OAAOqG,GAASU,QAsDlB,QAAS3F,KACP,GAAI1B,GAAQC,KACRC,EAAOF,EAAME,KACb6D,IAUJ,OARA1E,SAAQmC,QAAQtB,EAAK6D,cAAe,SAASpB,EAAOD,GAC/BpC,SAAfqC,EAAMzC,OACR6D,EAAcrB,GAAOC,KAIzBzC,EAAK6D,cAAgBA,GAGnB7D,KAAMA,EACNQ,UAAWV,EAAMU,WAQrB,QAASwC,KAuBP,QAASwD,GAAQ4B,GACfb,EAAWc,MAAM,kBAAoBvI,EAAME,KAAK8B,KAAO,iBAAkB,WAAYhC,EAAOsI,GAC5FtI,EAAMG,SAAU,EAChBH,EAAM4J,YACN5J,EAAMF,SAAS2I,MAAMrF,aAAapD,EAAME,KAAKS,IAE7C2H,EAASI,SACT1I,EAAMwG,OAAO0B,gBAAgBS,OAAOL,EAAS9B,QAE7CG,EAASD,UAGX,QAASE,GAAO0B,GACdb,EAAWc,MAAM,kBAAoBvI,EAAME,KAAK8B,KAAO,iBAAkB,WAAYhC,EAAOsI,GAC5FtI,EAAMF,SAAS2I,MAAMtF,aAAanD,EAAME,KAAKS,IAE7C2H,EAASI,SACT1I,EAAMwG,OAAO0B,gBAAgBS,OAAOL,EAAS9B,QAC7CG,EAASC,OAAO5G,GAGlB,QAASqI,GAAOC,GACdb,EAAWc,MAAM,kBAAoBvI,EAAME,KAAK8B,KAAO,iBAAkB,SAAUhC,EAAOsI,GAE1F3B,EAAS0B,OAAOC,GA9ClB,GAAItI,GAAQC,KACR0G,EAAWZ,EAAGmB,QAEdzG,GACF+H,OAAQ,SACR7G,OAAQ3B,EAeV,OAZAA,GAAMF,SAAS2I,MAAMvF,OAAOlD,EAAME,KAAKS,IAEnCX,EAAAA,UAAc,EAChB2G,EAASD,WAEToC,EAAyB9I,GAEzBA,EAAMoI,YAAY3H,GACf2G,KAAKV,EAASE,EAAQyB,GADzBrI,WAEW6I,EAAyBhG,KAAK7C,EAAOM,UAG3CqG,EAASU,QAkClB,QAASuC,GAAUlH,GAgBjB,QAASmH,GAAWC,EAAUpH,GAC5B,GAAIT,GAASjC,EAAMiC,OAAO8B,cAAcrB,GACpCgC,EAAgBzC,EAAO0C,UAEvBtF,SAAQgG,QAAQyE,GAClBzK,QAAQmC,QAAQsI,EAAUC,EAAqBlH,KAAKvC,OAAWoE,IACtDrF,QAAQkC,SAASuI,IAC1BC,EAAqBrF,EAAeoF,GAGlB,WAAhB7H,EAAOD,KACThC,EAAM+D,cAAcrB,GAAO,KACF,YAAhBT,EAAOD,OAChBhC,EAAM+D,cAAcrB,OAIxB,QAASqH,GAAqBrF,EAAed,GAgB3C,QAAS8C,GAAQ4B,GACfb,EAAWc,MAAM,kBAAoBvI,EAAME,KAAK8B,KAAO,2BAA4B,UAAWhC,EAAOsI,GAErGA,EAASI,SACT1I,EAAMwG,OAAO0B,gBAAgBS,OAAOL,EAAS9B,QAC7CG,EAASD,UAGX,QAASE,GAAO0B,GACdb,EAAWc,MAAM,kBAAoBvI,EAAME,KAAK8B,KAAO,2BAA4B,WAAYhC,EAAOsI,GAEtGA,EAASI,SACT1I,EAAMwG,OAAO0B,gBAAgBS,OAAOL,EAAS9B,QAC7CG,EAASC,OAAO5G,GAGlB,QAASqI,GAAOC,GACdb,EAAWc,MAAM,kBAAoBvI,EAAME,KAAK8B,KAAO,2BAA4B,SAAUhC,EAAOsI,GAEpGA,EAASI,SACT/B,EAAS0B,OAAOC,GAnClB,GAAI7D,GAAmBb,EAAO3B,OAAO8B,cAAcW,GAC/CjE,GACF+H,OAAQ,mBACR7G,OAAQiC,EACRA,OAAQ5D,EACR0C,IAAKgC,EAGPuE,GAA0BrF,GAC1BH,EAAiCa,OAAOV,EAAQc,EAAe1E,EAAOyE,GAEtEb,EAAOwE,YAAY3H,GAChB2G,KAAKV,EAASE,EAAQyB,GADzBzE,WAEWsF,EAA0BrG,KAAKe,EAAQtD,SA9CpD,GAAIN,GAAQC,KACR0G,EAAWZ,EAAGmB,OAYlB,OAVA+B,GAA0BjJ,GAEdM,SAARoC,EACFrD,QAAQmC,QAAQxB,EAAM+D,cAAe8F,GAErCA,EAAW7J,EAAM+D,cAAcrB,GAAMA,GAGvCwG,EAA0BlJ,GAEnB2G,EAASU,QAkElB,QAAS1D,GAAKjB,EAAKkB,GA6BjB,QAAS8C,GAAQ4B,GAaf,QAASF,GAAYpD,GAGnB,MAFAiE,GAA0BrF,GAEnBA,EAAOwE,aACZI,OAAQ,iBACR7G,OAAQqD,EAAOrD,OACfiC,OAAQoB,EAAOpB,OACflB,IAAKsC,EAAOtC,MAJPkB,WAKIsF,EAA0BrG,KAAKe,EAAQtD,SAGpD,QAAS0J,GAAkB1B,GACzBjJ,QAAQmC,QAAQ8G,EAAU,SAASe,EAAW3G,GACxC2G,EAAUC,WAAY,IACxB7B,EAAWc,MAAM,kBAAoB0B,EAAQvH,GAAKf,OAAOzB,KAAK8B,KAAO,yBAA0B,WAAYiI,EAAQvH,GAAM2G,GACzHA,EAAU1G,MAAM+F,YAIpB/B,EAASD,QAAQ4B,EAASpI,KAAK0I,MA/BjCnB,EAAWc,MAAM,kBAAoBvI,EAAME,KAAK8B,KAAO,eAAgB,WAAYhC,EAAOsI,EAE1F,IAAI2B,GAAUxG,EAAiCE,KAAK3D,EAAO0C,EAAKkB,EAEhE5D,GAAMqB,QAAS,EACfrB,EAAMsB,UAAW,EACjBgH,EAASI,SACT1I,EAAMwG,OAAO0B,gBAAgBS,OAAOL,EAAS9B,QAE7CT,EAAG4D,WAAWM,EAAQrH,IAAIwF,IACvBhB,KAAK4C,EAAmBrD,EAASC,QAyBtC,QAASA,GAAO0B,GACdb,EAAWc,MAAM,kBAAoBvI,EAAME,KAAK8B,KAAO,eAAgB,WAAYhC,EAAOsI,GAE1F3B,EAASC,OAAO0B,EAAS9B,QACzB8B,EAASI,SACT1I,EAAMwG,OAAO0B,gBAAgBS,OAAOL,EAAS9B,QAC7CG,EAASC,OAAO5G,GAGlB,QAASqI,GAAOC,GACdb,EAAWc,MAAM,kBAAoBvI,EAAME,KAAK8B,KAAO,eAAgB,SAAUhC,EAAOsI,GAExF3B,EAAS0B,OAAOC,GA5ElB,GAEI1H,GAFA+F,EAAWZ,EAAGmB,QACdlH,EAAQC,KAERQ,GACF+H,OAAQ,OACR7G,OAAQ3B,EACR4D,OAAQA,EACRlB,IAAKA,EAmBP,OAhBepC,UAAXsD,GACFhD,EAAQ2G,EAA+BjE,OAAO,uBAAyB,KAAM,EAAG,QAChFtD,EAAMwG,OAAO0B,gBAAgBnB,IAAI,OAAQnG,GACzC+F,EAASC,OAAOhG,IACPZ,EAAAA,UAAc,GACvBY,EAAQ2G,EAA+BjE,OAAO,wBAA0B,KAAM,EAAG,QACjFtD,EAAMwG,OAAO0B,gBAAgBnB,IAAI,OAAQnG,GACzC+F,EAASC,OAAOhG,KAEhBkI,EAAyB9I,GAEzBA,EAAMoI,YAAY3H,GACf2G,KAAKV,EAASE,EAAQyB,GADzBrI,WAEW6I,EAAyBhG,KAAK7C,EAAOM,UAG3CqG,EAASU,QA4DlB,QAAS/C,GAAO5B,EAAKkB,GA6BnB,QAAS8C,GAAQ4B,GAaf,QAASF,GAAYpD,GAGnB,MAFAiE,GAA0BrF,GAEnBA,EAAOwE,aACZI,OAAQ,mBACR7G,OAAQqD,EAAOrD,OACfiC,OAAQoB,EAAOpB,OACflB,IAAKsC,EAAOtC,MAJPkB,WAKIsF,EAA0BrG,KAAKe,EAAQtD,SAGpD,QAAS0J,GAAkB1B,GACzBjJ,QAAQmC,QAAQ8G,EAAU,SAASe,GAC7BA,EAAUC,WAAY,IACxB7B,EAAWc,MAAM,kBAAoB0B,EAAQvH,GAAKxC,KAAK8B,KAAO,2BAA4B,WAAYiI,EAAQvH,GAAM2G,GACpHf,EAAS3F,MAAM+F,YAInB/B,EAASD,UA/BXe,EAAWc,MAAM,kBAAoBvI,EAAME,KAAK8B,KAAO,iBAAkB,WAAYhC,EAAOsI,EAE5F,IAAI2B,GAAUxG,EAAiCE,KAAK3D,EAAO0C,EAAKkB,EAEhE5D,GAAMqB,QAAS,EACfrB,EAAMsB,UAAW,EACjBgH,EAASI,SACT1I,EAAMwG,OAAO0B,gBAAgBS,OAAOL,EAAS9B,QAE7CT,EAAG4D,WAAWM,EAAQrH,IAAIwF,IACvBhB,KAAK4C,EAAmBrD,EAASC,QAyBtC,QAASA,GAAO0B,GACdb,EAAWc,MAAM,kBAAoBvI,EAAME,KAAK8B,KAAO,iBAAkB,WAAYhC,EAAOsI,GAE5F3B,EAASC,OAAO0B,EAAS9B,QACzB8B,EAASI,SACT1I,EAAMwG,OAAO0B,gBAAgBS,OAAOL,EAAS9B,QAC7CG,EAASC,OAAO5G,GAGlB,QAASqI,GAAOC,GACdb,EAAWc,MAAM,kBAAoBvI,EAAME,KAAK8B,KAAO,iBAAkB,SAAUhC,EAAOsI,GAE1F3B,EAAS0B,OAAOC,GA5ElB,GAEI1H,GAFA+F,EAAWZ,EAAGmB,QACdlH,EAAQC,KAERQ,GACF+H,OAAQ,SACR7G,OAAQ3B,EACR4D,OAAQA,EACRlB,IAAKA,EAmBP,OAhBepC,UAAXsD,GACFhD,EAAQ2G,EAA+BjE,OAAO,yBAA2B,KAAM,EAAG,UAClFtD,EAAMwG,OAAO0B,gBAAgBnB,IAAI,SAAUnG,GAC3C+F,EAASC,OAAO5G,IACPA,EAAAA,UAAc,GACvBY,EAAQ2G,EAA+BjE,OAAO,0BAA4B,KAAM,EAAG,UACnFtD,EAAMwG,OAAO0B,gBAAgBnB,IAAI,SAAUnG,GAC3C+F,EAASC,OAAO5G,KAEhB8I,EAAyB9I,GAEzBA,EAAMoI,YAAY3H,GACf2G,KAAKV,EAASE,EAAQyB,GADzBrI,WAEW6I,EAAyBhG,KAAK7C,EAAOM,UAG3CqG,EAASU,QA2DlB,QAASvG,GAAON,EAAe6F,EAAMtF,GACnC,GAAIf,GAAQC,IAEZgJ,GAA0BjJ,GAE1BmI,EAAUnI,EAAOQ,GACjBR,EAAMmF,MAAMkB,GACZrG,EAAAA,gBAAqBe,KAAmB,GAAO,GAAQ,EACvDf,EAAMqB,OAASN,KAAmB,GAAO,GAAQ,EACjDf,EAAMU,UAAYoH,KAAKC,MAEvBmB,EAA0BlJ,GAO5B,QAAS4B,KACP,GAAI5B,GAAQC,KACRiK,GAAS,CAMb,OAJA7K,SAAQmC,QAAQxB,EAAMwG,OAAQ,SAAS5F,GACrCsJ,EAAStJ,EAAMgB,aAAesI,IAGzBA,EAaT,QAAS/B,GAAUxG,EAAQnB,GA2BzB,QAAS2J,GAAcC,EAAY1H,GACjCf,EAAOzB,KAAKuC,WAAWC,GAAOlC,EAAciC,WAAWC,GAGzD,QAAS2H,GAAiBpI,EAAQS,GAChC,GAAI4H,GAAmB9J,EAAcuD,cAAcrB,EAEnD,OAAyBpC,UAArBgK,OACqChK,SAAnCqB,EAAOzB,KAAK6D,cAAcrB,KAC5Bf,EAAOzB,KAAK6D,cAAcrB,IAAQxC,KAAMI,WAM5CqB,EAAOzB,KAAK6D,cAAcrB,GAAOf,EAAOzB,KAAK6D,cAAcrB,OAC3Df,EAAOzB,KAAK6D,cAAcrB,GAAK6H,MAAQD,EAAiBC,WAEpC,WAAhBtI,EAAOD,KACTwI,EAAQ7I,EAAQe,EAAK4H,EAAiBpK,MACb,YAAhB+B,EAAOD,MACZ3C,QAAQgG,QAAQiF,EAAiBpK,QACE,IAAjCoK,EAAiBpK,KAAKuK,QACxB9I,EAAOzB,KAAK6D,cAAcrB,GAAKxC,QAC/ByB,EAAOiI,UAAUlH,KAEjBrD,QAAQmC,QACNG,EAAOoC,cAAcrB,GACrBgI,EAAU7H,KAAKvC,OAAWqB,EAAQe,EAAK4H,EAAiBpK,OAE1Db,QAAQmC,QACN8I,EAAiBpK,KACjBsK,EAAQ3H,KAAKvC,OAAWqB,EAAQe,QAO1C,QAAS8H,GAAQ7I,EAAQe,EAAKxC,GAC5B,GAAIJ,EAEJ,IAAa,OAATI,EAEF,WADAuD,GAAiCE,KAAKhC,EAAQe,EAAK,KAIrD,IAAapC,SAATJ,EAAJ,CAMA,GAFAJ,EAAW2J,EAASkB,YAAYzK,EAAK8B,MAEpB1B,SAAbR,EAEF,WADAF,GAAKgB,MAAM,oBAAqBV,EAAK8B,KAAM9B,EAI7C,IAAI0D,GAAS9D,EAAS2I,MAAM1G,IAAI7B,EAAKS,GAErC8C,GAAiCE,KAAKhC,EAAQe,EAAKkB,IAGrD,QAAS8G,GAAU/I,EAAQe,EAAK4H,EAAkB1G,GAC5C0G,EAAiBhF,QAAQ1B,EAAO1D,KAAKS,IAAM,IAI/C8C,EAAiCa,OAAO3C,EAAQe,EAAKkB,GA7FvD,GAAI6F,GAAW/B,EAAU3F,IAAI,YACzBE,EAASN,EAAOM,MAKpB,OAHAN,GAAOzB,KAAKS,GAAKH,EAAcG,GAC/BgB,EAAOzB,KAAK8B,KAAOxB,EAAcwB,KAE7BL,EAAO7B,SAASmC,OAAOD,OAASxB,EAAcwB,MAChDpC,EAAKgB,MAAM,+BAAgCe,EAAO7B,SAASmC,OAAOD,KAAMxB,IACjE,GAGJmB,EAAOM,OAAOtB,GAAGlB,SAASkC,EAAOzB,KAAKS,KAK3CgB,EAAOzB,KAAKqK,MAAQ/J,EAAc+J,MAClC/J,EAAciC,WAAajC,EAAciC,eACzCjC,EAAcuD,cAAgBvD,EAAcuD,kBAE5C1E,QAAQmC,QAAQS,EAAOQ,WAAY0H,GACnC9K,QAAQmC,QAAQS,EAAO8B,cAAesG,IAE/B,IAXLzK,EAAKgB,MAAM,eACJ,GApmBX,MAfA+G,GAA4BtE,UAAU0F,QAAUA,EAChDpB,EAA4BtE,UAAUH,OAASA,EAC/CyE,EAA4BtE,UAAU8B,MAAQA,EAC9CwC,EAA4BtE,UAAU+C,KAAOA,EAE7CuB,EAA4BtE,UAAUvC,OAASA,EAE/C6G,EAA4BtE,UAAUM,KAAOA,EAC7CgE,EAA4BtE,UAAUiB,OAASA,EAC/CqD,EAA4BtE,UAAUuG,UAAYA,EAElDjC,EAA4BtE,UAAU3B,OAASA,EAE/CiG,EAA4BtE,UAAUzB,UAAYA,EAE3C+F,EA6rBT,QAASsB,GAA0BtH,GACjCA,EAAoBrB,SAAXqB,EAAuB1B,KAAO0B,EACvCA,EAAOqG,cAAgB,EACvBrG,EAAOiG,SAAU,EAGnB,QAASsB,GAA0BvH,GACjCA,EAAoBrB,SAAXqB,EAAuB1B,KAAO0B,EACvCA,EAAOqG,cAAgB,EACvBrG,EAAOiG,QAAUjG,EAAOqG,aAAe,EAGzC,QAASc,GAAyBnH,GAChCA,EAAoBrB,SAAXqB,EAAuB1B,KAAO0B,EACvCA,EAAOsG,aAAe,EACtBtG,EAAOkG,QAAS,EAGlB,QAASgB,GAAyBlH,GAChCA,EAAoBrB,SAAXqB,EAAuB1B,KAAO0B,EACvCA,EAAOsG,aAAe,EACtBtG,EAAOkG,OAASlG,EAAOsG,YAAc,EA/uBvC5I,QAAQC,OAAO,mBACdiE,QAAQ,8BAA+B+D,GAutBxCA,EAAmC9D,SAAW,iCAAkC,qCAAsC,mCAAoC,mCAAoC,0BAA2B,aAAc,YAAa,OAAQ,SA2B9P,WACE,YAKA,SAASoH,KASP,QAASC,GAAuBC,EAAShE,GACvC,MAAO,IAAIiE,GAAgBD,EAAShE,GAGtC,QAASiE,GAAgBD,EAAShE,GAChC,GAAI9G,GAAQC,IACZ+K,OAAMC,kBAAkBjL,EAAOA,EAAMkL,aAErClL,EAAM8K,QAAUA,EAChB9K,EAAMmL,SACJrE,UAAWA,GAdf,MAJAiE,GAAgB1H,UAAY+H,OAAO9H,OAAO0H,MAAM3H,WAChD0H,EAAgB1H,UAAU6H,YAAcH,EACxCA,EAAgB1H,UAAUgI,KAAO,mBAG/B/H,OAAQuH,GATZxL,QAAQC,OAAO,mBACdiE,QAAQ,qCAAsCqH,MA2BjD,WACE,YAKA,SAASU,KASP,QAASC,GAAmBT,EAASU,EAAQC,EAAMjD,GACjD,MAAO,IAAIkD,GAAYZ,EAASU,EAAQC,EAAMjD,GAGhD,QAASkD,GAAYZ,EAASU,EAAQC,EAAMjD,GAC1C,GAAIxI,GAAQC,IACZ+K,OAAMC,kBAAkBjL,EAAOA,EAAMkL,aAErClL,EAAM8K,QAAUA,EAChB9K,EAAMmL,SACJK,OAAQA,EACRC,KAAMA,EACNjD,OAAQA,GAhBZ,MAJAkD,GAAYrI,UAAY+H,OAAO9H,OAAO0H,MAAM3H,WAC5CqI,EAAYrI,UAAU6H,YAAcQ,EACpCA,EAAYrI,UAAUgI,KAAO,eAG3B/H,OAAQiI,GATZlM,QAAQC,OAAO,mBACdiE,QAAQ,iCAAkC+H,MA6B7C,WACE,YAKA,SAASK,KAWP,QAASC,GAAqBP,EAAMQ,EAAaC,EAAkBC,GACjE,MAAO,IAAIC,GAAcX,EAAMQ,EAAaC,EAAkBC,GAGhE,QAASC,GAAcX,EAAMQ,EAAaC,EAAkBC,GAC1D,GAAI/L,GAAQC,IACZD,GAAMqL,KAAOA,EACbrL,EAAM6L,YAAcA,EAEpB7L,EAAM8L,iBAAmBA,EACzB9L,EAAMwG,UACNxG,EAAM+L,cAAgBA,GAAiB,WAAa,OAAO,GAG7D,QAASjK,GAAMY,GACb,GAAI1C,GAAQC,IAEAK,UAARoC,EACFrD,QAAQmC,QAAQxB,EAAMwG,OAAQ,SAASyF,EAAKvJ,GAC1C1C,EAAMwG,OAAO9D,QAGf1C,EAAMwG,OAAO9D,MAIjB,QAASqE,GAAIrE,EAAK9B,GAChB,GAAIZ,GAAQC,IAEZD,GAAMwG,OAAO9D,GAAO1C,EAAMwG,OAAO9D,OACjC1C,EAAMwG,OAAO9D,GAAKb,KAAKjB,GAGzB,QAAS+H,GAAOnC,GACd,GAAIxG,GAAQC,IAEZZ,SAAQmC,QAAQgF,EAAQ,SAAS5F,GAC/BZ,EAAMwG,OAAO5F,EAAM8B,UAGrBrD,QAAQmC,QAAQgF,EAAQ,SAAS5F,GAC/BZ,EAAMwG,OAAO5F,EAAM8B,KAAKb,KAAKjB,EAAMe,UAKvC,QAASC,GAAUc,GACjB,GAAI1C,GAAQC,IAEZ,IAAYK,SAARoC,EAAmB,CACrB,GAAIwH,IAAS,CAMb,OAJA7K,SAAQmC,QAAQxB,EAAMwG,OAAQ,SAAS5F,GACrCsJ,EAASA,GAAUtJ,EAAM6J,OAAS,IAG7BP,EAEP,MAA6B5J,UAAtBN,EAAMwG,OAAO9D,IAAsB1C,EAAMwG,OAAO9D,GAAK+H,OAAS,EA9DzE,MANAuB,GAAc3I,UAAU6H,YAAcc,EACtCA,EAAc3I,UAAUsF,OAASA,EACjCqD,EAAc3I,UAAUvB,MAAQA,EAChCkK,EAAc3I,UAAU0D,IAAMA,EAC9BiF,EAAc3I,UAAUzB,UAAYA,GAGlC0B,OAAQsI,GAXZvM,QAAQC,OAAO,mBACdiE,QAAQ,mCAAoCoI,MA6E/C,WACE,YAKA,SAASO,GAAcb,EAAMc,GAC3B,MAAO,IAAIC,UAAS,KAClB,mBAAqBf,EAAO,wCAC5Bc,GANJ9M,QAAQC,OAAO,mBACZC,SAAS,gBAAiB2M,MAU/B,WACE,YAEA7M,SAAQC,OAAO,mBACZC,SAAS,eAAgB,SAASqE,EAAQyI,EAAcC,GACvD,GAAItH,GACAuH,CACJnB,QAAOoB,eAAe5I,EAAQyI,GAC5BtK,IAAK,WAOH,MANKwK,KAEHA,GAAO,EACPvH,EAASsH,EAASG,KAAK7I,IAGlBoB,GAIT0H,YAAY,EACZC,cAAc,SAMtB,WACE,YAEAtN,SAAQC,OAAO,mBACZC,SAAS,cAAe,SAASqN,GAChC,MAAOA,GAAIC,QAAQ,kBAAmB,SAASC,mBAKrD,WACE,YAEAzN,SAAQC,OAAO,mBAAmBmB,QAAQ,WAAY,SAASsM,GAC7DA,EAASC,UAAU,MAAO,YAAa,SAASC,GAC9C,GAAIlH,GAAKkH,CAqCT,OAnCAlH,GAAG4D,WAAa5D,EAAG4D,YAAc,SAAoBuD,EAAUC,EAAkBC,GAe/E,QAASC,GAAKhG,GACZ,MAAOtB,GAAGW,QAAQW,GACfD,KAAK,SAASzE,GAKb,MAJItD,SAAQiO,WAAWH,IACrBA,EAAiBxK,IAGV2G,SAAS,EAAM3G,MAAOA,IAGjC,SAAS4K,GAKP,MAJIlO,SAAQiO,WAAWF,IACrBA,EAAiBG,IAGVjE,SAAS,EAAOiE,OAAQA,KAzBvC,GAAIC,GAAUnO,QAAQgG,QAAQ6H,QAQ9B,OANA7N,SAAQmC,QAAQ0L,EAAU,SAAS7F,EAAS3E,GACrC8K,EAAQC,eAAe/K,KAC1B8K,EAAQ9K,GAAO2K,EAAKhG,MAIjBtB,EAAG2H,IAAIF,IAsBTzH,WAMb,WACE,YAKA,SAAS4H,GAAwCC,EAAqC7H,EAAInG,GAWxF,QAASiO,GAAwCC,GAC/C,MAAO,IAAIC,GAAiCD,GAG9C,QAASC,GAAiCD,GACxC,GAAI9N,GAAQC,IAEZD,GAAMgO,SAENJ,EAAoCnB,KAAKzM,EAAO8N,GAEhDzO,QAAQmC,QAAQsM,EAAS,SAAStC,GAChCA,EAAOyC,aAAejO,IAI1B,QAASoI,GAAY3H,GA4BnB,QAAS0M,GAAiBxK,GACxBgE,EAAS0B,QAAQ6F,KAAM,kBAAmBhO,KAAMyC,IAGlD,QAASyK,GAAiBG,GACxB5G,EAAS0B,QAAQ6F,KAAM,kBAAmB1H,OAAQ+G,IAGpD,QAASY,GAAS5E,GAChBvJ,EAAMgO,MAAMxF,GAAUxI,EAAMgO,MAAMxF,OAClCxI,EAAMgO,MAAMxF,GAAQc,SAAU,EAE9BjK,QAAQmC,QAAQ+H,EAAS,SAASvE,GAC5BA,EAAOsE,WAAY,IACrBtJ,EAAMgO,MAAMxF,GAAQc,SAAU,KAIlCjK,QAAQmC,QAAQxB,EAAM8N,QAAS,SAAStC,GACtCnM,QAAQmC,QAAQgK,EAAO4C,WAAW5F,GAAS,SAAS6F,GAClD1H,EAAS0B,QAAQ6F,KAAM,QAAS1H,OAAQ6H,EAAK5B,KAAKzM,EAAOS,EAAQ8I,QAIrE,IAAIrJ,GACAsG,IAEJnH,SAAQmC,QAAQ+H,EAAS,SAASvE,GAC5BA,EAAOsE,WAAY,EACrBpJ,EAAO8E,EAAOrC,MAEd6D,EAAO3E,MACLa,IAAK8F,EACL7G,OAAQqD,EAAOuI,WAKjB/G,EAAOiE,OAAS,EAClB9D,EAASC,QAAQ1G,KAAMA,MAAYwI,OAAQA,EAAQlC,OAAQA,IAE3DG,EAASD,SAASxG,KAAMA,MAAYwI,OAAQA,EAAQlC,OAAQA,IAIhE,QAASkC,KACPrJ,QAAQmC,QAAQxB,EAAM8N,QAAS,SAAStC,GACtCnM,QAAQmC,QAAQgK,EAAO8C,YAAY9F,GAAS,SAAS6F,GACnD1H,EAAS0B,QAAQ6F,KAAM,SAAU1H,OAAQ6H,EAAK5B,KAAKzM,EAAOS,SAKhE,QAAS8N,GAAS/H,GAChB5G,EAAKgB,MAAM,8CAEX+F,EAASC,QAAQ8B,OAAQrJ,QAAQmP,KAAMhI,OAAQA,IAnFjD,GAAIxG,GAAQC,KACRiN,KACAvG,EAAWZ,EAAGmB,QACdsB,EAAS/H,EAAO+H,MAmFpB,OAjFAoF,GAAoCvK,UAAU+E,YAAYqE,KAAKzM,EAAOS,GAEtEpB,QAAQmC,QAAQxB,EAAM8N,QAAS,SAAStC,GACtCnM,QAAQmC,QAAQgK,EAAOiD,WAAWjG,GAAS,SAAS6F,GAClD1H,EAAS0B,QAAQ6F,KAAM,QAAShO,KAAMmO,EAAK5B,KAAKzM,EAAOS,SAI3DpB,QAAQmC,QAAQxB,EAAM8N,QAAS,SAAStC,GACtCnM,QAAQmC,QAAQgK,EAAOkD,YAAYlG,GAAS,SAAS6F,GACnD1H,EAAS0B,QAAQ6F,KAAM,SAAUhO,KAAMmO,EAAK5B,KAAKzM,EAAOS,SAI5DpB,QAAQmC,QAAQxB,EAAM8N,QAAS,SAAStC,GACtCnM,QAAQmC,QAAQgK,EAAOmD,qBAAqBnG,GAAS,SAAS6F,GAC5DnB,EAASrL,KAAKwM,EAAK5B,KAAKzM,EAAOS,QAInCsF,EAAG4D,WAAWuD,EAAUC,EAAkBC,GAAkBhG,KAAK+G,EAAUI,GA6DpE5H,EAASU,QA3GlB,MALA0G,GAAiC1K,UAAY+H,OAAO9H,OAAOsK,EAAoCvK,WAC/F0K,EAAiC1K,UAAU6H,YAAc6C,EAEzDA,EAAiC1K,UAAU+E,YAAcA,GAGvD9E,OAAQuK,GAXZxO,QAAQC,OAAO,mBACdiE,QAAQ,mCAAoCoK,GA2H7CA,EAAwCnK,SAAW,sCAAuC,KAAM,WAFlG,WACE,YAKA,SAASoL,GAA2ChP,GAMlD,QAASgO,GAAoCE,GAC3C,GAAI9N,GAAQC,IAEZD,GAAM8N,QAAUA,EAGlB,QAAS1F,GAAY3H,GACnB,GAAIT,GAAQC,IAEZL,GAAKsF,MAAM,qBAAsBlF,EAAMF,SAASmC,OAAOD,KAAMvB,GAEvCH,SAAlBG,EAAO+H,QACT5I,EAAKgB,MAAM,qCAAuCH,GAdtD,MAFAmN,GAAoCvK,UAAU+E,YAAcA,EAErDwF,EAPTvO,QAAQC,OAAO,mBACdiE,QAAQ,sCAAuCqL,GA6BhDA,EAA2CpL,SAAW,WAHxD,WACE,YAKA,SAASqL,GACPtH,EACAuH,EACArL,EACAsL,EACAhJ,EACAiJ,GAYA,QAASC,GAAgC5D,EAAM6D,GAC7C,MAAO,IAAIC,GAAyB9D,EAAM6D,GAG5C,QAASC,GAAyB9D,EAAM6D,GAkBtC,QAASxB,GAAIjN,GACX,MAAOuO,IACLI,OAAQ,MACRC,QAASA,EACTH,IAAKA,EACL/M,OAAQmN,EAAa7O,EAAO0B,UAC3BiF,KAAKmI,EAAaC,EAAW3M,KAAK,KAAM,QAG7C,QAASd,GAAItB,GACX,MAAOuO,IACLI,OAAQ,MACRC,QAASA,EACTH,IAAKA,EAAM,IAAMzO,EAAOkB,OAAOzB,KAAKS,GACpCwB,OAAQmN,EAAa7O,EAAO0B,UAC3BiF,KAAKmI,EAAaC,EAAW3M,KAAK,KAAM,QAG7C,QAASK,GAAOzC,GACd,MAAOuO,IACLI,OAAQ,SACRC,QAASA,EACTH,IAAKA,EAAM,IAAMzO,EAAOkB,OAAOzB,KAAKS,KACnCyG,KAAKmI,EAAaC,EAAW3M,KAAK,KAAM,WAG7C,QAASyB,GAAO7D,GACd,GAAIkG,GAAWZ,EAAGmB,QACdjF,EAASxB,EAAOkB,OAAOM,OAAO8B,cAActD,EAAOiC,IA6BvD,OA3BIjC,GAAOkB,OAAOxB,WAAY,EAC5BwG,EAASC,OAAOW,EAA+BjE,OAAO,0BAA2BtD,EAAO,EAAG,WAChEM,SAAlBG,EAAOmD,QAAkDtD,SAA1BG,EAAOmD,OAAO1D,KAAKS,GAC3DgG,EAASC,OAAOW,EAA+BjE,OAAO,mDAAqDtD,EAAO,EAAG,WAC5F,WAAhBiC,EAAOD,KAChBgN,GACEI,OAAQ,SACRC,QAASA,EACTH,IAAKA,EAAM,IAAMzO,EAAOkB,OAAOzB,KAAKS,GAAK,kBAAoBF,EAAOiC,MACnE0E,KAAKmI,EAAaC,EAAW3M,KAAK,KAAM,QAAQuE,KAAKT,EAASD,QAASC,EAASC,QAC1D,YAAhB3E,EAAOD,OACM1B,SAAlBG,EAAOmD,OACToL,GACEI,OAAQ,MACRC,QAASA,EACTnP,MAAOA,SACPgP,IAAKA,EAAM,IAAMzO,EAAOkB,OAAOzB,KAAKS,GAAK,kBAAoBF,EAAOiC,MACnE0E,KAAKmI,EAAaC,EAAW3M,KAAK,KAAM,WAAWuE,KAAKT,EAASD,QAASC,EAASC,QAEtFoI,GACEI,OAAQ,SACRC,QAASA,EACTH,IAAKA,EAAM,IAAMzO,EAAOkB,OAAOzB,KAAKS,GAAK,kBAAoBF,EAAOiC,IAAM,IAAMjC,EAAOmD,OAAO1D,KAAKS,KAClGyG,KAAKmI,EAAaC,EAAW3M,KAAK,KAAM,WAAWuE,KAAKT,EAASD,QAASC,EAASC,SAInFD,EAASU,QAGlB,QAAS1D,GAAKlD,GACZ,GAAIkG,GAAWZ,EAAGmB,QACdjF,EAASxB,EAAOkB,OAAOM,OAAO8B,cAActD,EAAOiC,IAsBvD,OApBIjC,GAAOkB,OAAOxB,WAAY,EAC5BwG,EAASC,QAAQJ,SAAUiJ,OAAQ,EAAGC,WAAY,8BACvBpP,SAAlBG,EAAOmD,QAAkDtD,SAA1BG,EAAOmD,OAAO1D,KAAKS,GAC3DgG,EAASC,QAAQJ,SAAUiJ,OAAQ,EAAGC,WAAY,qDACzB,WAAhBzN,EAAOD,KAChBgN,GACEI,OAAQ,MACRC,QAASA,EACTnP,MAAOA,KAAMuD,EAAiCC,WAAWjD,EAAOmD,SAChEsL,IAAKA,EAAM,IAAMzO,EAAOkB,OAAOzB,KAAKS,GAAK,kBAAoBF,EAAOiC,MACnE0E,KAAKmI,EAAaC,EAAW3M,KAAK,KAAM,SAASuE,KAAKT,EAASD,QAASC,EAASC,QAC3D,YAAhB3E,EAAOD,MAChBgN,GACEI,OAAQ,OACRC,QAASA,EACTnP,MAAOA,MAAOuD,EAAiCC,WAAWjD,EAAOmD,UACjEsL,IAAKA,EAAM,IAAMzO,EAAOkB,OAAOzB,KAAKS,GAAK,kBAAoBF,EAAOiC,MACnE0E,KAAKmI,EAAaC,EAAW3M,KAAK,KAAM,SAASuE,KAAKT,EAASD,QAASC,EAASC,QAG/ED,EAASU,QAGlB,QAASvG,GAAOL,GACd,MAAOuO,IACLI,OAAQ,MACRC,QAASA,EACTH,IAAKA,EAAM,IAAMzO,EAAOkB,OAAOzB,KAAKS,GACpCT,KAAMO,EAAOkB,OAAOmC,KAAKpC,WACxB0F,KAAKmI,EAAaC,EAAW3M,KAAK,KAAM,WAG7C,QAASkE,GAAItG,GACX,MAAOuO,IACLI,OAAQ,OACRC,QAASA,EACTH,IAAKA,EACLhP,KAAMO,EAAOkB,OAAOmC,KAAKpC,WACxB0F,KAAKmI,EAAaC,EAAW3M,KAAK,KAAM,QAG7C,QAAS0M,GAAYjH,GACnB,MAAOvC,GAAGW,QAAQ4B,EAASpI,MAG7B,QAASsP,GAAWhH,EAAQF,GAc1B,QAASqH,GAAoBrH,GAC3B3B,EAASC,OAAOW,EAA+BjE,OAAO,oBAAqBtD,EAAOsI,EAASmH,OAAQjH,IAGrG,QAASoH,KACPjJ,EAASC,OAAOW,EAA+BjE,OAAO,yBAA0BtD,EAAOsI,EAASmH,OAAQjH,IAlB1G,GAAI7B,GAAWZ,EAAGmB,OAWlB,OATwB,KAApBoB,EAASmH,OACXT,GACEI,OAAQ,MACRF,IAAK,0DACJ9H,KAAKuI,EAAqBC,GAE7BjJ,EAASC,OAAOW,EAA+BjE,OAAOgF,EAASoH,WAAY1P,EAAOsI,EAASmH,OAAQjH,IAG9F7B,EAASU,QA1IlB,GAAIrH,GAAQC,KACRoP,GACFQ,OAAU,2BACVC,eAAgB,2BAGlBhB,GAA8BiB,MAAM/P,EAAOgQ,WAE3ChQ,EAAMkI,gBAAgB,SAAUhF,GAChClD,EAAMkI,gBAAgB,SAAU5D,GAChCtE,EAAMkI,gBAAgB,OAAQvE,GAC9B3D,EAAMkI,gBAAgB,SAAUpH,GAChCd,EAAMkI,gBAAgB,MAAOnB,GAC7B/G,EAAMkI,gBAAgB,MAAOwF,GAC7B1N,EAAMkI,gBAAgB,MAAOnG,GAC7B/B,EAAMkI,gBAAgB,UAAWnG,GAuInC,QAASuN,GAAanN,GAqBpB,QAAS8N,GAAY5N,GACnB,MAAIhD,SAAQgG,QAAQhD,GACXA,EAAS6N,KAAK,KAEd7N,EAxBX,GAAI8N,KAEJ,OAAe7P,UAAX6B,MAIJ9C,QAAQmC,QAAQW,EAAQ,SAASiO,EAAYC,GACvChR,QAAQgG,QAAQ+K,GAClBD,EAAcE,GAAYJ,EAAYG,GAC7B/Q,QAAQkC,SAAS6O,GAC1B/Q,QAAQmC,QAAQ4O,EAAY,SAASE,EAAiBC,GACpDJ,EAAcE,EAAW,IAAME,EAAgB,KAAON,EAAYK,KAGpEH,EAAcE,GAAYD,IAIvBD,GAWT,QAASK,GAAarO,GACpB,GAAIsO,KAkBJ,OAhBApR,SAAQmC,QAAQW,EAAQ,SAASQ,EAAOD,GACtC,GAAIgO,GAAiBhO,EAAI4C,QAAQ,IAIjC,IAHA3C,EAAQA,EAAMgO,MAAM,KACpBhO,EAAyB,IAAjBA,EAAM8H,OAAe9H,EAAM,GAAKA,EAEpC+N,EAAiB,GAAI,CACvB,GAAIE,GAAYlO,EAAImO,OAAO,EAAGH,GAC1BI,EAAmBpO,EAAImO,OAAOH,EAAiB,EAAGhO,EAAI4C,QAAQ,KAAOoL,EAAiB,EAE1FD,GAAcG,MACdH,EAAcG,GAAWE,GAAoBnO,MAE7C8N,GAAc/N,GAAOC,IAIlB8N,EAlNT,MAHAtB,GAAyB9L,UAAY+H,OAAO9H,OAAOwL,EAA8BzL,WACjF8L,EAAyB9L,UAAU6H,YAAciE,GAG/C7L,OAAQ2L,EACRK,aAAcA,EACdkB,aAAcA,GAlBlBnR,QAAQC,OAAO,wBAAyB,oBACvCiE,QAAQ,2BAA4BsL,GAyOrCA,EAAgCrL,SAAW,iCAAkC,gCAAiC,mCAAoC,cAAe,KAAM,YAJzK,WACE,YAKA,SAASuN,KASP,QAASjC,GAA8BzD,GACrC,GAAIrL,GAAQC,KACR+Q,GACF,MACA,OACA,MACA,MACA,aACA,SACA,SACA,mBACA,OACA,iBACA,SACA,UACA,UAGFhR,GAAMqL,KAAOA,EACbrL,EAAMgO,SAENhO,EAAMyO,cACNzO,EAAM0O,eACN1O,EAAM2O,wBACN3O,EAAMoO,cACNpO,EAAMsO,eAENtO,EAAMiR,WAEN5R,QAAQmC,QAAQwP,EAAU,SAASE,GACjClR,EAAMyO,WAAWyC,MACjBlR,EAAM0O,YAAYwC,MAClBlR,EAAM2O,qBAAqBuC,MAC3BlR,EAAMoO,WAAW8C,MACjBlR,EAAMsO,YAAY4C,MAClBlR,EAAMgO,MAAMkD,IACVtJ,SAAS,EACT0B,SAAS,KAKf,QAAS6H,GAAM3I,EAAQ8D,GACrB,GAAItM,GAAQC,IAEZD,GAAMyO,WAAWjG,GAAQ3G,KAAKyK,GAGhC,QAAS5D,GAAOF,EAAQ8D,GACtB,GAAItM,GAAQC,IAEZD,GAAMsO,YAAY9F,GAAQ3G,KAAKyK,GAGjC,QAAS8E,GAAc5I,EAAQ8D,GAC7B,GAAItM,GAAQC,IAEZD,GAAM0O,YAAYlG,GAAQ3G,KAAKyK,GAGjC,QAAS+E,GAAa7I,EAAQ8D,GAC5B,GAAItM,GAAQC,IAEZD,GAAMoO,WAAW5F,GAAQ3G,KAAKyK,GAGhC,QAASpE,GAAgBM,EAAQ8D,GAC/B,GAAItM,GAAQC,IAEZD,GAAM2O,qBAAqBnG,GAAQ3G,KAAKyK,GAvE1C,MANAwC,GAA8BzL,UAAUiO,OAASF,EACjDtC,EAA8BzL,UAAUkO,MAAQF,EAChDvC,EAA8BzL,UAAU8N,MAAQA,EAChDrC,EAA8BzL,UAAUqF,OAASA,EACjDoG,EAA8BzL,UAAU6E,gBAAkBA,EAEnD4G,EAVTzP,QAAQC,OAAO,mBACdiE,QAAQ,gCAAiCwN,MAsF5C,WACE,YAKA,SAASS,GACP1C,EACA2C,EACA1L,GAiBA,QAAS2L,GAAiCrG,EAAMsG,GAC9C,MAAO,IAAIC,GAA0BvG,EAAMsG,GAG7C,QAASC,GAA0BvG,EAAMsG,GA2BvC,QAASE,KACP,GAAI7P,GAAOhC,EAAMiO,aAAanO,SAASmC,OAAOD,IAC9C,OAAO+D,GAAGW,QAAQ+K,EAAQK,aAAaC,QAAQJ,EAAS,IAAM3P,IAGhE,QAASF,KACP,GAAIE,GAAOhC,EAAMiO,aAAanO,SAASmC,OAAOD,KAC1CU,EAAMiP,EAAS,IAAM3P,CAEzB5B,GAAKsN,KAAOtN,EAAK4R,KAAKtP,SACftC,GAAK4R,KAAKtP,GACjBtC,EAAK6R,IAAMC,EAAa9R,EAAK4R,MAC7B5R,EAAK+R,SAAW/R,EAAK4R,KAAK5R,EAAK6R,KAAO7R,EAAKgS,MAAQ,IAEnDX,EAAQK,aAAaO,WAAW3P,GAGlC,QAAS4P,KACP,GAAItQ,GAAOhC,EAAMiO,aAAanO,SAASmC,OAAOD,KAC1CyG,EAAQzI,EAAMiO,aAAanO,SAAS2I,MACpCxH,EAAOwH,EAAM/G,SACbgB,EAAMiP,EAAS,IAAM3P,CAEzB5B,GAAK4R,KAAKtP,GAA0BpC,SAAnBF,EAAK4R,KAAKtP,GAAqB,EAAItC,EAAK4R,KAAKtP,GAC9DtC,EAAKsN,KAAOzM,EAAKwJ,OAASrK,EAAK4R,KAAKtP,GACpCtC,EAAK4R,KAAKtP,GAAOzB,EAAKwJ,OACtBrK,EAAK6R,IAAMC,EAAa9R,EAAK4R,MAC7B5R,EAAK+R,SAAW/R,EAAK4R,KAAK5R,EAAK6R,KAAO7R,EAAKgS,MAAQ,IAEnDX,EAAQK,aAAaS,QAAQ7P,EAAKzB,GAGpC,QAASiR,GAAavQ,GACpB,MAAOyJ,QAAOoH,KAAK7Q,GAAQ8Q,OAAO,SAASC,EAAGC,GAC5C,MAAOhR,GAAOgR,GAAKhR,EAAO+Q,GAAKC,EAAID,GAClCtH,OAAOoH,KAAK7Q,GAAQ,IA7DzB,GAAI3B,GAAQC,IAEZ0R,GAASA,GAAU,iBAEnB3R,EAAM4S,gBAAkBN,EAExBxD,EAA8BiB,MAAM/P,EAAOgQ,WAE3ChQ,EAAMkI,gBAAgB,OAAQ2J,GAE9B7R,EAAMmR,MAAM,aAAcrP,GAE1B9B,EAAM0I,OAAO,OAAQ4J,GACrBtS,EAAM0I,OAAO,aAAc4J,GAC3BtS,EAAM0I,OAAO,SAAU4J,GACvBtS,EAAM0I,OAAO,UAAW4J,GACxBtS,EAAM0I,OAAO,SAAU4J,GACvBtS,EAAM0I,OAAO,mBAAoB4J,GACjCtS,EAAM0I,OAAO,OAAQ4J,GACrBtS,EAAM0I,OAAO,iBAAkB4J,GAC/BtS,EAAM0I,OAAO,SAAU4J,GACvBtS,EAAM0I,OAAO,MAAO4J,GACpBtS,EAAM0I,OAAO,MAAO4J,GACpBtS,EAAM0I,OAAO,MAAO4J,GACpBtS,EAAM0I,OAAO,UAAW4J,GA5C1B,GAAIlS,IACF6R,IAAK,EACLvE,IAAK,EACL0E,MAAO,KACPJ,QAMF,OAHAJ,GAA0BvO,UAAY+H,OAAO9H,OAAOwL,EAA8BzL,WAClFuO,EAA0BvO,UAAU6H,YAAc0G,GAGhDtO,OAAQoO,EACRtR,KAAMA,GApBVf,QAAQC,OAAO,yBAA0B,oBACxCiE,QAAQ,4BAA6BiO,GAmGtCA,EAAiChO,SAAW,gCAAiC,UAAW,SAL1F,WACE,YAKA,SAASqP,GACPjT,EACAJ,EACAG,EACAmT,GAOA,QAASC,GAA4B9Q,GACnC,MAAO,IAAI+Q,GAAqB/Q,GAGlC,QAAS+Q,GAAqB/Q,GAC5B,GAAIjC,GAAQC,KACRgT,EAAUhR,EAAOgR,WACrBhR,GAAOgR,QAAUA,EACjBA,EAAQlR,IAAME,EAAOgR,QAAQlR,QAC7BkR,EAAQvF,IAAMzL,EAAOgR,QAAQvF,QAE7B1N,EAAMmC,QACJJ,OACA2L,QAGgB,UAAdzL,EAAOtB,GACTsB,EAAOtB,GAAKhB,EACW,QAAdsC,EAAOtB,GAChBsB,EAAOtB,IACLuS,SAAU7T,QAAQmP,KAClB/O,SAAUJ,QAAQ8T,UAEX9T,QAAQkC,SAASU,EAAOtB,IAC5BtB,QAAQiO,WAAWrL,EAAOtB,GAAGuS,YAChCjR,EAAOtB,GAAGuS,SAAW7T,QAAQmP,MAG/BvM,EAAOtB,IACLuS,SAAU7T,QAAQmP,KAClB/O,SAAUJ,QAAQ+T,SAASvQ,KAAK,MAAM,IAI1CxD,QAAQmC,QAAQS,EAAO8B,cAAe,SAASsP,EAAYC,GACzD,GAAIC,GAAgBT,EAAyBxP,OAAO+P,EAAYC,EAAUrR,EAAOD,KACjFC,GAAO8B,cAAcuP,GAAYC,EAC7BA,EAAc/J,YAAa,IAC7ByJ,EAAQlR,IAAIF,KAAKyR,GACU,WAAvBC,EAAcvR,MAChBiR,EAAQvF,IAAI7L,KAAKyR,MAKvBjU,QAAQmU,OAAOxT,EAAOiC,GAElBgR,EAAQlR,IAAI0I,OAAS,IACvBzK,EAAMmC,OAAOJ,IAAIkR,QAAUA,EAAQlR,KAGjCkR,EAAQvF,IAAIjD,OAAS,IACvBzK,EAAMmC,OAAOuL,IAAIuF,QAAUA,EAAQvF,KAxDvC,OACEpK,OAAQyP,GAXZ1T,QAAQC,OAAO,mBACdiE,QAAQ,uBAAwBsP,GA8EjCA,EAA4BrP,SAAW,OAAQ,YAAa,QAAS,+BANvE,WACE,YAKA,SAASiQ,GAAgC7T,EAAMJ,GAM7C,QAASkU,GAAgCL,EAAYC,EAAUtR,GAC7D,MAAO,IAAI8Q,GAAyBO,EAAYC,EAAUtR,GAG5D,QAAS8Q,GAAyBO,EAAYC,EAAUtR,GACtD,GAAIhC,GAAQC,IAERZ,SAAQ4D,SAASoQ,IACnBrT,EAAMiE,MAAQzE,EAAUmU,OAAOL,GAC/BtT,EAAMgC,KAAOqR,EACbrT,EAAMgE,aAAc,EACpBhE,EAAM2E,WAAa3C,IAEK1B,SAApB+S,EAAWrR,MACbpC,EAAKgB,MAAM,kCAAmCyS,EAAYC,GAGpC,YAApBD,EAAWrR,MAA0C,WAApBqR,EAAWrR,MAC9CpC,EAAKgB,MAAM,mCAAoCyS,EAAWrR,KAAM,8BAGlEhC,EAAMiE,MAAQoP,EAAWpP,OAASzE,EAAUmU,OAAOL,GACnDtT,EAAMgC,KAAOqR,EAAWrR,KACxBhC,EAAMgE,YAAcqP,EAAWrP,cAAe,EAEhB1D,SAA1B+S,EAAW1O,WACb3E,EAAM2E,WAA4B,YAAf3E,EAAMgC,KAAqBxC,EAAUoU,SAAS5R,GAAQA,EAEzEhC,EAAM2E,WAAa0O,EAAW1O,WAGhC3E,EAAMwJ,SAAW6J,EAAW7J,WAAY,GAnC5C,OACElG,OAAQoQ,GANZrU,QAAQC,OAAO,mBACdiE,QAAQ,2BAA4BkQ,GAqDrCA,EAAgCjQ,SAAW,OAAQ,gBAPrD,WACE,YAKA,SAASqQ,GACPC,EACAd,EACAjT,EACAgU,EACAtM,EACA7H,EACAmG,GAaA,QAASiO,GAA8B/R,EAAQgM,GAC7C,MAAO,IAAIgG,GAAuBhS,EAAQgM,GAQ5C,QAASgG,GAAuBhS,EAAQgM,GAwBtC,QAASvH,GAAQ4B,GACfb,EAAWc,MAAM,kBAAoBvI,EAAMgC,KAAO,iBAAkB,WAAYsG,GAChFtI,EAAMyI,MAAMzH,SAASsH,EAASpI,MAC9BF,EAAMkU,aAAc,EAEpB5L,EAASI,SAGX,QAAS9B,GAAO0B,GACdb,EAAWc,MAAM,kBAAoBvI,EAAMgC,KAAO,iBAAkB,WAAYsG,GAChFA,EAASI,SACT1I,EAAMkU,aAAc,EAGtB,QAAS7L,GAAOC,GACdb,EAAWc,MAAM,kBAAoBvI,EAAMgC,KAAO,iBAAkB,SAAUsG,GAtChF,GAAItI,GAAQC,KACRQ,GACF+H,OAAQ,OAGVxI,GAAMiC,OAAS+Q,EAAqB1P,OAAOrB,GAC3CjC,EAAMyI,MAAQ1I,EAA4BuD,OAAOtD,GAEjDA,EAAMiO,aAAeA,EACrBjO,EAAMiO,aAAanO,SAAWE,EAE9BA,EAAMa,aAAeiT,EAAoBjT,aACvCb,EAAMiC,OACNjC,GAGFA,EAAMkU,aAAc,EACpBlU,EAAMgC,KAAOhC,EAAMiC,OAAOD,KAE1BiM,EAAanO,SAAWE,EAExBA,EAAMiO,aAAa7F,YAAY3H,GAAQ2G,KAAKV,EAASE,EAAQyB,GA0B/D,QAAStG,GAAIpB,EAAIwB,GACf,GAAInC,GAAQC,IAEZ,KAAKD,EAAMiC,OAAOtB,GAAGlB,SAASkB,GAC5B,MAAOoF,GAAGa,QAAQJ,SAAUiJ,OAAQ,EAAGC,WAAY,gBAGrD,IAAI/N,GAAS3B,EAAMyI,MAAM1G,IAAIpB,EAI7B,OAFAgB,GAAO0F,QAAU1F,EAAOoH,QAAQ5G,GAEzBR,EAQT,QAAS+L,GAAIvL,GACX,GAAInC,GAAQC,IACZkC,GAAS9C,QAAQmU,UAAWxT,EAAMiC,OAAOE,OAAOuL,IAAKvL,EAErD,IAAIjB,GAAa6S,EAAyBzQ,OACxCtD,EACAmC,EAKF,OAFAjB,GAAWmG,QAAUnG,EAAWiT,QAEzBjT,EAST,QAASgC,GAAOvC,GACd,GAAIX,GAAQC,KACR0B,EAAS3B,EAAMyI,MAAMvF,OAAOvC,EAEhC,OAAOgB,GAAOuB,SAOhB,QAASkR,KACP,GAAIpU,GAAQC,KACR8D,IAEJ1E,SAAQmC,QAAQxB,EAAMiC,OAAO8B,cAAe,SAASsQ,EAAoBC,GACvC,WAA5BD,EAAmBrS,KACrB+B,EAAcuQ,IACZpU,KAAM,MAE6B,YAA5BmU,EAAmBrS,OAC5B+B,EAAcuQ,IACZpU,WAKN,IAAIA,IACF8B,KAAMhC,EAAMgC,KACZrB,GAAIX,EAAMiC,OAAOtB,GAAGuS,WACpBzQ,cACAsB,cAAeA,GAGbtD,GACFU,OAAK,EACLC,gBAAc,EACdC,QAAQ,EACRC,UAAU,EACVP,gBAAgB,GAGdY,EAAS3B,EAAMa,aAAaX,EAAMO,EAItC,OAFAgH,GAAWc,MAAM,kBAAoBvI,EAAMgC,KAAO,uBAAwB,WAAYL,GAE/EA,EAOT,QAAS4S,KAaP,QAAS7N,GAAQ4B,GACfb,EAAWc,MAAM,kBAAoBvI,EAAMgC,KAAO,uBAAwB,WAAYsG,GACtFA,EAASI,SAET/B,EAASD,QAAQ4B,GAGnB,QAAS1B,GAAO0B,GACdb,EAAWc,MAAM,kBAAoBvI,EAAMgC,KAAO,uBAAwB,WAAYsG,GACtFA,EAASI,SAET/B,EAASC,OAAO0B,GAGlB,QAASD,GAAOC,GACdb,EAAWc,MAAM,kBAAoBvI,EAAMgC,KAAO,uBAAwB,SAAUsG,GAEpF3B,EAAS0B,OAAOC,GA7BlB,GAAItI,GAAQC,KACR0G,EAAWZ,EAAGmB,QACdzG,GACF+H,OAAQ,aAOV,OAJAxI,GAAMyI,MAAM3G,QAEZ9B,EAAMiO,aAAa7F,YAAY3H,GAAQ2G,KAAKV,EAASE,EAAQyB,GAEtD1B,EApKT,MAPAsN,GAAuB5Q,UAAUtB,IAAMA,EACvCkS,EAAuB5Q,UAAUqK,IAAMA,EACvCuG,EAAuB5Q,UAAUH,OAASA,EAC1C+Q,EAAuB5Q,UAAU+Q,WAAaA,EAE9CH,EAAuB5Q,UAAUkR,WAAaA,GAG5CjR,OAAQ0Q,GApBZ3U,QAAQC,OAAO,mBACdiE,QAAQ,yBAA0BsQ;AAuNnCA,EAA8BrQ,SAAW,sBAAuB,uBAAwB,8BAA+B,2BAA4B,aAAc,OAAQ,SAR3K,WACE,YAKA,SAASsQ,GACPnM,EACAqL,EACA9G,EACA1M,EACAI,GAOA,QAAS4U,GAAmBC,EAAW3U,GA8BrC,QAASe,GAAaX,EAAMQ,EAAWgU,GACrC,MAAO,IAAIC,GAAMzU,EAAMQ,EAAWgU,GA9BpC,GAAIE,GAAkBpV,EAAUmU,OAAOc,EAAUzS,KAAM,GAEnD2S,EAAQzI,EAAc0I,EAAiB,SAAS1U,EAAMO,EAAQC,GAChE,GAAIV,GAAQC,IAERC,GAAK8B,OAAShC,EAAMiC,OAAOD,MAC7BpC,EAAKgB,MAAM,4CAA6CV,EAAK8B,KAAM,eAAgBhC,EAAMiC,OAAOD,MAGlG2F,EAA4B8E,KAAKzM,EAAOE,EAAMO,EAAQC,GAEtDV,EAAM8D,KAAKmC,OAASjG,GAgBtB,OAbA2U,GAAMtR,UAAY+H,OAAO9H,OAAOqE,EAA4BtE,WAC5DsR,EAAMtR,UAAU6H,YAAcyJ,EAE9BA,EAAMtR,UAAUpB,OAASwS,EACzBE,EAAMtR,UAAUvD,SAAWA,EAC3B6U,EAAMtR,UAAU+E,YAActI,EAASmO,aAAa7F,YAAYvF,KAAK/C,EAASmO,cAE9E5O,QAAQmC,QAAQiT,EAAUI,UAAW,SAASC,EAAcC,GAC1DJ,EAAMtR,UAAU0R,GAAoB,WAClC,MAAOD,GAAa/E,MAAM9P,KAAM+P,cAI7BnP,EAhCT,OACEA,aAAc2T,GAZlBnV,QAAQC,OAAO,mBACdiE,QAAQ,sBAAuBuQ,GA4DhCA,EAAoBtQ,SAAW,8BAA+B,uBAAwB,gBAAiB,YAAa,WATtH,WACE,YAKA,SAASwR,GACPzN,EACAC,EACAC,EACAC,EACA3B,GAYA,QAASkP,GAAgCnV,EAAUqC,GACjD,MAAO,IAAI4R,GAAyBjU,EAAUqC,GAQhD,QAAS4R,GAAyBjU,EAAUqC,GA8B1C,QAASe,GAAOgS,EAAOzF,EAAQ9N,GAC7B,GAAIO,EAEW,cAAXuN,GAAwCnP,SAAfN,EAAME,OACjCgC,EAAQlC,EAAME,KAAKoF,QAAQ3D,GACvBO,EAAQ,KACVlC,EAAME,KAAKqF,OAAOrD,EAAO,GACzBlC,EAAMF,SAAS2I,MAAM3F,YAAY9C,EAAME,QAK7C,QAAS4B,KACP9B,EAAME,KAAOI,OACbN,EAAMsB,UAAW,EAGnB,QAASyF,GAAImO,EAAOzF,EAAQ9N,GACX,aAAX8N,IACFzP,EAAME,KAAOF,EAAME,SACnBF,EAAME,KAAK2B,KAAKF,IAIpB,QAASwT,KACPC,IACAC,IACAC,IAxDF,GAAItV,GAAQC,IAEZD,GAAMF,SAAWA,EACjBE,EAAMgC,KAAOlC,EAASmC,OAAOD,KAC7BhC,EAAMmC,OAASA,MAEfnC,EAAMwG,QACJ0B,gBAAiBV,EAAiClE,OAChD,SACA,6BACAiE,IAIJvH,EAAME,KAAOF,EAAMF,SAAS2I,MAAMvG,MAAMlC,EAAMmC,QAE9CnC,EAAM4H,SAAU,EAChB5H,EAAMgI,aAAe,EACrBhI,EAAAA,iBAAqB,EACrBA,EAAMsB,SAA0BhB,SAAfN,EAAME,KAEvBF,EAAMqH,QAAUtB,EAAGW,QAAQ1G,EAE3B,IAAIoV,GAAiB3N,EAAW8N,IAAI,kBAAoBvV,EAAMgC,KAAO,iBAAkBkB,GACnFmS,EAAiB5N,EAAW8N,IAAI,kBAAoBvV,EAAMgC,KAAO,uBAAwBF,GACzFwT,EAAc7N,EAAW8N,IAAI,kBAAoBvV,EAAMgC,KAAO,cAAe+E,EAEjFU,GAAW8N,IAAI,WAAYJ,GAqC7B,QAASvT,KACP,GAAI5B,GAAQC,KACRiK,GAAS,CAMb,OAJA7K,SAAQmC,QAAQxB,EAAMwG,OAAQ,SAAS5F,GACrCsJ,EAAStJ,EAAMgB,aAAesI,IAGzBA,EAQT,QAASnI,GAAIpB,EAAIwB,GACf,GAAInC,GAAQC,IAEZ,OAAOD,GAAMF,SAASiC,IAAIpB,EAAIwB,GAOhC,QAASgS,KAmBP,QAASzN,GAAQ4B,GAiBf,QAASU,GAAoBrH,GAG3B,MAFAsH,GAA0BtH,GAEnBA,EAAOyG,aACZI,OAAQ,UACR7G,OAAQA,IAFHA,WAGIuH,EAA0BrG,KAAKlB,EAAQrB,SAGpD,QAAS6I,GAAgBC,GACvB/J,QAAQmC,QAAQ4H,EAAkB,SAASC,EAAW3G,GAChD2G,EAAUC,WAAY,IACxB7B,EAAWc,MAAM,kBAAoBgB,EAAQC,SAAS9G,GAAKxC,KAAK8B,KAAO,kBAAmB,WAAYuH,EAAQC,SAAS9G,GAAM2G,GAE7HA,EAAU1G,MAAM+F,YAIpB/B,EAASD,QAAQ4B,EAASpI,KAAK0I,MAlCjC,GAAIW,GAAUE,EAASC,iBAAiBpB,EAASpI,KACjDuH,GAAWc,MAAM,kBAAoBvI,EAAMgC,KAAO,oBAAqB,WAAYhC,EAAOsI,GAC1FvC,EAAG4D,WAAWJ,EAAQC,SAAS5G,IAAIoG,IAAsB5B,KAAK+B,EAAiBxC,EAASC,QAExFvH,QAAQmC,QAAQxB,EAAME,KAAMgJ,GAE5BlJ,EAAME,KAAOqJ,EAAQrJ,KACrBF,EAAMuK,MAAQjC,EAASpI,KAAKqK,MAE5BvK,EAAMU,UAAYoH,KAAKC,MACvB/H,EAAAA,iBAAqB,EAErBA,EAAMF,SAAS2I,MAAM3F,YAAY9C,EAAME,MACvCoI,EAASI,SACT1I,EAAMwG,OAAO0B,gBAAgBS,OAAOL,EAAS9B,QAwB/C,QAASI,GAAO0B,GACdb,EAAWc,MAAM,kBAAoBvI,EAAMgC,KAAO,oBAAqB,WAAYhC,EAAOsI,GAE1FjJ,QAAQmC,QAAQxB,EAAME,KAAMgJ,GAC5BZ,EAASI,SACT1I,EAAMwG,OAAO0B,gBAAgBS,OAAOL,EAAS9B,QAC7CG,EAASC,OAAO5G,GAGlB,QAASqI,GAAOC,GACdb,EAAWc,MAAM,kBAAoBvI,EAAMgC,KAAO,oBAAqB,SAAUhC,EAAOsI,GAExF3B,EAAS0B,OAAOC,GArElB,GAAItI,GAAQC,KACR0G,EAAWZ,EAAGmB,QACduC,EAAW/B,EAAU3F,IAAI,YACzBtB,GACF+H,OAAQ,MACRrG,OAAQnC,EAAMmC,OAWhB,OARA8G,GAA0BjJ,GAE1BX,QAAQmC,QAAQxB,EAAME,KAAM+I,GAE5BjJ,EAAMF,SAASmO,aAAa7F,YAAY3H,GACrC2G,KAAKV,EAASE,EAAQyB,GADzBrI,WAEWkJ,EAA0BrG,KAAK7C,EAAOM,SAE1CqG,EAASU,QAzHlB,MALA0M,GAAyB1Q,UAAU8Q,MAAQA,EAC3CJ,EAAyB1Q,UAAU0F,QAAUoL,EAC7CJ,EAAyB1Q,UAAUtB,IAAMA,EACzCgS,EAAyB1Q,UAAUzB,UAAYA,GAG7C0B,OAAQ2R,GAkLZ,QAAShM,GAA0BtH,GACjCA,EAAoBrB,SAAXqB,EAAuB1B,KAAO0B,EACvCA,EAAOqG,cAAgB,EACvBrG,EAAOiG,SAAU,EAGnB,QAASsB,GAA0BvH,GACjCA,EAAoBrB,SAAXqB,EAAuB1B,KAAO0B,EACvCA,EAAOqG,cAAgB,EACvBrG,EAAOiG,QAAUjG,EAAOqG,aAAe,EA5MzC3I,QAAQC,OAAO,mBACdiE,QAAQ,2BAA4ByR,GA6MrCA,EAAgCxR,SAAW,iCAAkC,mCAAoC,aAAc,YAAa,SAE9I,WACE,YAKA,SAASgS,GAAgB1P,GAKvB,QAAS2P,GAAe7V,EAAMqU,GAY5B,QAASyB,GAAYzT,EAAQgM,GAC3B,GAAInO,GAAWmU,EAAuB3Q,OAAOrB,EAAQgM,EAErD0H,GAAO1T,EAAOD,MAAQlC,EACtB8V,EAAM/T,KAAKI,EAAOD,MAGpB,QAAS2I,GAAY3I,GACnB,MAAO2T,GAAO3T,GAGhB,QAAS6T,KACP,MAAOF,GAGT,QAASG,KACP,MAAOF,GAGT,QAASrB,KACPlV,QAAQmC,QAAQmU,EAAQ,SAAS7V,GAC/BA,EAASyU,eAIb,QAASwB,GAAa1K,EAAM9E,GAC1B,MAAKlH,SAAQ4D,SAASoI,IAGqB/K,SAAhCwF,EAAWsE,WAAWiB,IAC/BzL,EAAKoW,KAAK,wBAAyB3K,QAGrCvF,EAAWsE,WAAWiB,GAAQ9E,QAN5B3G,GAAKgB,MAAM,iCAAkCyK,GASjD,QAAS3B,GAAiBH,GACxB,GAAI0M,IACF/V,QACAsJ,YAGF,IAAgBlJ,SAAZiJ,EAEF,WADA3J,GAAKgB,MAAM,0BAA4B2I,EAIzC,IAAI9I,IACFU,OAAK,EACLC,gBAAc,EACdC,QAAQ,EACRC,UAAU,EACVP,gBAAgB,EAelB,OAZA1B,SAAQmC,QAAQ+H,EAAQC,SAAU,SAAStJ,GACzC+V,EAAQzM,SAAS3H,KAAK8I,EAAYzK,EAAK8B,MAAMyG,MAAMlI,YAAYL,EAAMO,MAGnEpB,QAAQgG,QAAQkE,EAAQrJ,MAC1Bb,QAAQmC,QAAQ+H,EAAQrJ,KAAM,SAASA,GACrC+V,EAAQ/V,KAAK2B,KAAK8I,EAAYzK,EAAK8B,MAAMyG,MAAMlI,YAAYL,EAAMO,MAEzCH,SAAjBiJ,EAAQrJ,MACjB+V,EAAQ/V,KAAK2B,KAAK8I,EAAYpB,EAAQrJ,KAAK8B,MAAMyG,MAAMlI,YAAYgJ,EAAQrJ,KAAMO,IAG5EwV,EA9ET,OACEP,YAAaA,EACb/K,YAAaA,EACb4J,WAAYA,EACZsB,aAAcA,EACdC,cAAeA,EACfC,aAAcA,EAEdrM,iBAAkBA,GAbtB,GAAIiM,MACAC,IACJ3V,MAAKiW,KAAOT,EAiGZA,EAAejS,SAAW,OAAQ,0BAvGpCnE,QAAQC,OAAO,mBACd6W,SAAS,WAAYX,GAwGtBA,EAAgBhS,SAAW,iBAV7B,WACE,YAEAnE,SAAQC,OAAO,mBACdmB,QAAA,eAAO,SAAS2V,GACfA,EAAaC,cAAa,MAE3BC,KAAA,aAAA,KAAI,SAASxQ,EAAYC,GACxBD,EAAWyQ,QAAUxQ","file":"scripts/lib-987fbd0989.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false, validate: false */\n  .constant('pluralize', pluralize)\n  .constant('validateJS', validate);\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResourceCache', AngularJsonAPIResourceCacheWrapper);\n\n  function AngularJsonAPIResourceCacheWrapper(\n    uuid4,\n    $log\n  ) {\n\n    AngularJsonAPIResourceCache.prototype.get = get;\n    AngularJsonAPIResourceCache.prototype.index = index;\n    AngularJsonAPIResourceCache.prototype.setIndexIds = setIndexIds;\n    AngularJsonAPIResourceCache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPIResourceCache.prototype.fromJson = fromJson;\n    AngularJsonAPIResourceCache.prototype.toJson = toJson;\n    AngularJsonAPIResourceCache.prototype.clear = clear;\n\n    AngularJsonAPIResourceCache.prototype.remove = remove;\n    AngularJsonAPIResourceCache.prototype.revertRemove = revertRemove;\n    AngularJsonAPIResourceCache.prototype.clearRemoved = clearRemoved;\n\n    return {\n      create: AngularJsonAPIResourceCacheFactory\n    };\n\n    function AngularJsonAPIResourceCacheFactory(resource) {\n      return new AngularJsonAPIResourceCache(resource);\n    }\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPIResourceCache(resource) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n\n      _this.indexIds = undefined;\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData, config, updatedAt) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(validatedData, config, updatedAt);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData, !config.new, config.initialization);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: true\n      };\n\n      if (angular.isObject(collection) && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n        _this.indexIds = collection.indexIds;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, config, objectData.updatedAt);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: [],\n        updatedAt: _this.updatedAt,\n        indexIds: _this.indexIds\n      };\n\n      angular.forEach(_this.data, function(object) {\n        if (object.hasErrors() === false) {\n          json.data.push(object.toJson());\n        }\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.indexIds = undefined;\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      var data = {\n        id: id,\n        type: _this.resource.schema.type\n      };\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: true\n      };\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(data, config);\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization, used for index requests\n     * @param  {objec} params\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function index(params) {\n      var _this = this;\n      params = params || {};\n\n      if (_this.indexIds === undefined) {\n        return _this.indexIds;\n      }\n\n      return _this.indexIds.map(_this.get.bind(_this)).filter(filter);\n\n      function filter(argument) {\n        var filterParams  = params.filter;\n        var valid = true;\n\n        angular.forEach(filterParams, function(constraint) {\n          valid = valid && argument.data.attributes[constraint.key] === constraint.value;\n        });\n\n        return valid;\n      }\n    }\n\n    /**\n     * Cache ids of objects returned by index request\n     * @param {ids array or AngularJsonAPIModel array} array Objects or ids to be cached\n     */\n    function setIndexIds(array) {\n      var _this = this;\n\n      _this.indexIds = [];\n\n      angular.forEach(array, function(element) {\n        if (angular.isString(element) && _this.resource.schema.id.validate(element)) {\n          _this.indexIds.push(element);\n        } else if (angular.isObject(element) && _this.resource.schema.id.validate(element.data.id)) {\n          _this.indexIds.push(element.data.id);\n        }\n      });\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, oneWay, form) {\n      var schema;\n      form = form === undefined ? false : form;\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema.type === 'hasMany') {\n        if (oneWay === true) {\n          __addHasMany(object, key, target, form);\n          return [];\n        } else {\n          return __processAddHasMany(object, key, target, form);\n        }\n      } else if (schema.type === 'hasOne') {\n        if (oneWay === true) {\n          __addHasOne(object, key, target, form);\n          return [];\n        } else {\n          return __processAddHasOne(object, key, target, form);\n        }\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, oneWay, form) {\n      var schema;\n      form = form === undefined ? false : form;\n\n      if (object === undefined) {\n        $log.error('Can\\'t remove link from non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (oneWay === true) {\n        __removeHasMany(object, key, target, form);\n        return [];\n      } else {\n        return __processRemove(object, key, target, form);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __processAddHasMany(object, key, target, form) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var reflectionSchema;\n\n      if (reflectionKey === false) {\n        __addHasMany(object, key, target, form);\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        return __swapResults(\n          __wrapResults(object, key, target),\n          __wrapResults(target, reflectionKey, object),\n          __processAddHasOne(target, reflectionKey, object, form)\n        );\n      } else if (reflectionSchema.type === 'hasMany') {\n        __addHasMany(object, key, target, form);\n        __addHasMany(target, reflectionKey, object, form);\n        return [__wrapResults(target, reflectionKey, object)];\n      }\n    }\n\n    function __processAddHasOne(object, key, target, form) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var oldReflection = object.relationships[key];\n      var reflectionSchema;\n      var oldReflectionSchema;\n      var result = [];\n\n      __addHasOne(object, key, target, form);\n\n      if (oldReflection !== undefined && oldReflection !== null) {\n        oldReflectionSchema = oldReflection.schema.relationships[reflectionKey];\n\n        if (oldReflectionSchema.type === 'hasOne') {\n          __removeHasOne(oldReflection, reflectionKey, object, form);\n        } else if (oldReflectionSchema.type === 'hasMany') {\n          __removeHasMany(oldReflection, reflectionKey, object, form);\n        }\n\n        result.push(__wrapResults(oldReflection, reflectionKey, object));\n      }\n\n      if (target !== undefined && target !== null && reflectionKey !== false) {\n        reflectionSchema = target.schema.relationships[reflectionKey];\n\n        if (reflectionSchema.type === 'hasOne') {\n          __addHasOne(target, reflectionKey, object, form);\n        } else if (reflectionSchema.type === 'hasMany') {\n          __addHasMany(target, reflectionKey, object, form);\n        }\n\n        result.push(__wrapResults(target, reflectionKey, object));\n      }\n\n      return result;\n    }\n\n    function __processRemove(object, key, target, form) {\n      var schema = object.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema;\n\n      if (schema.type === 'hasMany') {\n        __removeHasMany(object, key, target, form);\n      } else if (schema.type === 'hasOne') {\n        __removeHasOne(object, key, target, form);\n      }\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        __removeHasOne(target, reflectionKey, object, form);\n      } else if (reflectionSchema.type === 'hasMany') {\n        __removeHasMany(target, reflectionKey, object, form);\n      }\n\n      return [__wrapResults(target, reflectionKey, object)];\n    }\n\n    function __addHasOne(object, key, target, form) {\n      $log.debug('addHasOne', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      object.relationships[key] = target;\n      object.data.relationships[key].data = toLinkData(target);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, form) {\n      $log.debug('addHasMany', object, key, target);\n\n      var linkData = toLinkData(target);\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (angular.isArray(object.relationships[key]) && object.relationships[key].indexOf(target) > -1) {\n        return false;\n      }\n\n      object.relationships[key] = object.relationships[key] || [];\n      object.data.relationships[key].data = object.data.relationships[key].data || [];\n\n      object.relationships[key].push(target);\n      object.data.relationships[key].data.push(linkData);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, form) {\n      $log.debug('removeHasOne', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        return false;\n      }\n\n      object.relationships[key] = null;\n      object.data.relationships[key].data = undefined;\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, form) {\n      $log.debug('removeHasMany', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (object.relationships[key] === undefined) {\n        return;\n      }\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n        if (form === false) {\n          object.reset(true);\n        }\n\n        return true;\n      }\n\n      var index = object.relationships[key].indexOf(target);\n\n      if (index === -1) {\n        return false;\n      }\n\n      object.relationships[key].splice(index, 1);\n      object.data.relationships[key].data.splice(index, 1);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __wrapResults(object, key, target) {\n      return {\n        object: object,\n        key: key,\n        target: target\n      };\n    }\n\n    function __swapResults(value, newValue, array) {\n      var index = -1;\n      angular.forEach(array, function(item, i) {\n        if (item.object === value.object && item.key === value.key && item.target === value.target) {\n          index = i;\n        }\n      });\n\n      if (index > -1) {\n        array[index] = newValue;\n      } else {\n        array.push(newValue);\n      }\n\n      return array;\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelLinkerService,\n    validateJS,\n    $q\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return {\n      create: AngularJsonAPIModelFormFactory\n    };\n\n    function AngularJsonAPIModelFormFactory(parent) {\n      return new AngularJsonAPIModelForm(parent);\n    }\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        id: parent.data.id,\n        type: parent.data.type,\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset(auto) {\n      var _this = this;\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = angular.copy(_this.parent.data.relationships[key]) || {};\n        if (angular.isArray(_this.relationships[key])) {\n          _this.relationships[key] = _this.parent.relationships[key].slice();\n        } else {\n          _this.relationships[key] = _this.parent.relationships[key];\n        }\n      });\n\n      if (auto === true && _this.parent.synchronized === true) {\n        return;\n      }\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        _this.data.attributes[key] = angular.copy(_this.parent.data.attributes[key]);\n      });\n\n      _this.parent.errors.validation.clear();\n    }\n\n    /**\n     * Validates form\n     * @return {promise} Promise rejected to errors object indexed by keys. If the\n     * key param i stated it only validates an attribute, else all attributes.\n     */\n    function validate(key) {\n      var _this = this;\n      var attributesWrapper;\n      var constraintsWrapper;\n      var deferred = $q.defer();\n\n      if (key === undefined) {\n        attributesWrapper = _this.data.attributes;\n        constraintsWrapper = _this.schema.attributes;\n      } else {\n        attributesWrapper = {};\n        constraintsWrapper = {};\n\n        attributesWrapper[key] = _this.data.attributes[key];\n        constraintsWrapper[key] = _this.schema.attributes[key];\n      }\n\n      validateJS.async(\n        attributesWrapper,\n        constraintsWrapper\n      ).then(resolve, reject);\n\n      function resolve() {\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        deferred.resolve();\n      }\n\n      function reject(errorsMap) {\n        _this.parent.error = true;\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        angular.forEach(errorsMap, function(errors, attribute) {\n          angular.forEach(errors, function(error) {\n            _this.parent.errors.validation.add(attribute, AngularJsonAPIModelValidationError.create(error, attribute));\n          });\n        });\n\n        deferred.reject(_this.parent.errors.validation);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target, oneWay) {\n      var _this = this;\n      oneWay = oneWay === undefined ? false : true;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.link(_this.parent, key, target, oneWay, true));\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target, oneWay) {\n      var _this = this;\n      oneWay = oneWay === undefined ? false : true;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.unlink(_this.parent, key, target, oneWay, true));\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelErrorsManager,\n    AngularJsonAPIModelLinkerService,\n    AngularJsonAPIModelForm,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    AngularJsonAPIAbstractModel.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {object} config   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, config, updatedAt) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      /**\n       * Is not a new record\n       * @type {Boolean}\n       */\n      _this.new = config.new === undefined ? false : config.new;\n\n      /**\n       * Is present on the server\n       * @type {Boolean}\n       */\n      _this.stable = config.stable === undefined ? true : config.stable;\n\n      /**\n       * Has been synchronized with the server\n       * @type {Boolean}\n       */\n      _this.synchronized = config.synchronized === undefined ? true : config.synchronized;\n\n      /**\n       * Has just been created by request and may not exist on the server\n       * @type {Boolean}\n       */\n      _this.pristine = config.pristine === undefined ? true : config.pristine;\n\n      _this.removed = false;\n      _this.loading = false;\n      _this.saving = false;\n      _this.updatedAt = _this.synchronized === true ? Date.now() : updatedAt;\n\n      _this.loadingCount = 0;\n      _this.savingCount = 0;\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(schema, key) {\n        _this.relationships[key] = undefined;\n      });\n\n      _this.errors = {\n        validation: AngularJsonAPIModelErrorsManager.create(\n          'Validation',\n          'Errors of attributes validation',\n          AngularJsonAPIModelValidationError\n        ),\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Source',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSourceError\n        )\n      };\n\n      _this.promise = $q.resolve(_this);\n\n      __setData(_this, data);\n\n      _this.form = AngularJsonAPIModelForm.create(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: _this.new === true ? 'add' : 'update',\n        object: _this\n      };\n\n      _this.form.validate().then(\n        synchronize,\n        deferred.reject\n      ).finally(__decrementSavingCounter.bind(_this, undefined));\n\n      __incrementSavingCounter(_this);\n\n      return deferred.promise;\n\n      function synchronize() {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:' + config.action, 'resolved', _this, response);\n        _this.update(response.data.data);\n\n        if (_this.new === true) {\n          _this.resource.cache.indexIds = _this.resource.cache.indexIds || [];\n          _this.resource.cache.indexIds.push(_this.data.id);\n        }\n\n        _this.synchronized = true;\n        _this.new = false;\n        _this.pristine = false;\n        _this.stable = true;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.resolve(response.data.meta);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      if (_this.form !== undefined) {\n        _this.form.reset();\n      }\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh(params) {\n      var $jsonapi = $injector.get('$jsonapi');\n      var deferred = $q.defer();\n      var _this = this;\n      params = params === undefined ? _this.schema.params.get : params;\n\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: params\n      };\n\n      if (_this.new === true) {\n        var error = AngularJsonAPIModelSourceError.create('Can\\'t refresh new object', null, 0, 'refresh');\n        _this.errors.synchronization.add('refresh', error);\n        deferred.reject(error);\n      } else {\n        __incrementLoadingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        _this.synchronized = true;\n        _this.stable = true;\n        _this.pristine = false;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = _this.data;\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      var config = {\n        action: 'remove',\n        object: _this\n      };\n\n      _this.resource.cache.remove(_this.data.id);\n\n      if (_this.new === true) {\n        deferred.resolve();\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'resolved', _this, response);\n        _this.removed = true;\n        _this.unlinkAll();\n        _this.resource.cache.clearRemoved(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        deferred.resolve();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'rejected', _this, response);\n        _this.resource.cache.revertRemove(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlink all reflection relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      __incrementLoadingCounter(_this);\n\n      if (key === undefined) {\n        angular.forEach(_this.relationships, removeLink);\n      } else {\n        removeLink(_this.relationships[key], key);\n      }\n\n      __decrementLoadingCounter(_this);\n\n      return deferred.promise;\n\n      function removeLink(linksObj, key) {\n        var schema = _this.schema.relationships[key];\n        var reflectionKey = schema.reflection;\n\n        if (angular.isArray(linksObj)) {\n          angular.forEach(linksObj, removeReflectionLink.bind(undefined, reflectionKey));\n        } else if (angular.isObject(linksObj)) {\n          removeReflectionLink(reflectionKey, linksObj);\n        }\n\n        if (schema.type === 'hasOne') {\n          _this.relationships[key] = null;\n        } else if (schema.type === 'hasMany') {\n          _this.relationships[key] = [];\n        }\n      }\n\n      function removeReflectionLink(reflectionKey, target) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n        var config = {\n          action: 'unlinkReflection',\n          object: target,\n          target: _this,\n          key: reflectionKey\n        };\n\n        __incrementLoadingCounter(target);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        target.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(target, undefined));\n\n        function resolve(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'resolve', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.resolve();\n        }\n\n        function reject(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'rejected', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.reject(_this);\n        }\n\n        function notify(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'link',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t link undefined', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t link new object', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'linkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].object.data.type + ':object:linkReflection', 'resolved', targets[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked if undefined unlinks all\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'unlink',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t unlink undefined', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t unlink new object', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'unlinkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:unlinkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve();\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData, auto, initialization) {\n      var _this = this;\n\n      __incrementLoadingCounter(_this);\n\n      __setData(_this, validatedData);\n      _this.reset(auto);\n      _this.synchronized = initialization === true ? false : true;\n      _this.stable = initialization === true ? false : true;\n      _this.updatedAt = Date.now();\n\n      __decrementLoadingCounter(_this);\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData) {\n\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.resource.schema.type !== validatedData.type) {\n        $log.error('Different type then resource', object.resource.schema.type, validatedData);\n        return false;\n      }\n\n      if (!object.schema.id.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      object.data.links = validatedData.links;\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        var relationshipData = validatedData.relationships[key];\n\n        if (relationshipData === undefined) {\n          if (object.data.relationships[key] === undefined) {\n            object.data.relationships[key] = {data: undefined};\n          }\n\n          return;\n        }\n\n        object.data.relationships[key] = object.data.relationships[key] || {};\n        object.data.relationships[key].links = relationshipData.links;\n\n        if (schema.type === 'hasOne') {\n          linkOne(object, key, relationshipData.data);\n        } else if (schema.type === 'hasMany') {\n          if (angular.isArray(relationshipData.data)) {\n            if (relationshipData.data.length === 0) {\n              object.data.relationships[key].data = [];\n              object.unlinkAll(key);\n            } else {\n              angular.forEach(\n                object.relationships[key],\n                unlinkOne.bind(undefined, object, key, relationshipData.data)\n              );\n              angular.forEach(\n                relationshipData.data,\n                linkOne.bind(undefined, object, key)\n              );\n            }\n          }\n        }\n      }\n\n      function linkOne(object, key, data) {\n        var resource;\n\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        resource = $jsonapi.getResource(data.type);\n\n        if (resource === undefined) {\n          $log.error('Factory not found', data.type, data);\n          return;\n        }\n\n        var target = resource.cache.get(data.id);\n\n        AngularJsonAPIModelLinkerService.link(object, key, target);\n      }\n\n      function unlinkOne(object, key, relationshipData, target) {\n        if (relationshipData.indexOf(target.data.id) > -1) {\n          return;\n        }\n\n        AngularJsonAPIModelLinkerService.unlink(object, key, target);\n      }\n    }\n  }\n\n  /////////////\n  // Private //\n  /////////////\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n\n  function __incrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount += 1;\n    object.saving = true;\n  }\n\n  function __decrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount -= 1;\n    object.saving = object.savingCount > 0;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelValidationError', AngularJsonAPIModelValidationErrorWrapper);\n\n  function AngularJsonAPIModelValidationErrorWrapper() {\n    ValidationError.prototype = Object.create(Error.prototype);\n    ValidationError.prototype.constructor = ValidationError;\n    ValidationError.prototype.name = 'ValidationError';\n\n    return {\n      create: ValidationErrorFactory\n    };\n\n    function ValidationErrorFactory(message, attribute) {\n      return new ValidationError(message, attribute);\n    }\n\n    function ValidationError(message, attribute) {\n      var _this = this;\n      Error.captureStackTrace(_this, _this.constructor);\n\n      _this.message = message;\n      _this.context = {\n        attribute: attribute\n      };\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelSourceError', AngularJsonAPIModelSourceErrorWrapper);\n\n  function AngularJsonAPIModelSourceErrorWrapper() {\n    SourceError.prototype = Object.create(Error.prototype);\n    SourceError.prototype.constructor = SourceError;\n    SourceError.prototype.name = 'SourceError';\n\n    return {\n      create: SourceErrorFactory\n    };\n\n    function SourceErrorFactory(message, source, code, action) {\n      return new SourceError(message, source, code, action);\n    }\n\n    function SourceError(message, source, code, action) {\n      var _this = this;\n      Error.captureStackTrace(_this, _this.constructor);\n\n      _this.message = message;\n      _this.context = {\n        source: source,\n        code: code,\n        action: action\n      };\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelErrorsManager', AngularJsonAPIModelErrorsManagerWrapper);\n\n  function AngularJsonAPIModelErrorsManagerWrapper() {\n    ErrorsManager.prototype.constructor = ErrorsManager;\n    ErrorsManager.prototype.concat = concat;\n    ErrorsManager.prototype.clear = clear;\n    ErrorsManager.prototype.add = add;\n    ErrorsManager.prototype.hasErrors = hasErrors;\n\n    return {\n      create: ErrorsManagerFactory\n    };\n\n    function ErrorsManagerFactory(name, description, ErrorConstructor, defaultFilter) {\n      return new ErrorsManager(name, description, ErrorConstructor, defaultFilter);\n    }\n\n    function ErrorsManager(name, description, ErrorConstructor, defaultFilter) {\n      var _this = this;\n      _this.name = name;\n      _this.description = description;\n\n      _this.ErrorConstructor = ErrorConstructor;\n      _this.errors = {};\n      _this.defaultFilter = defaultFilter || function() { return true; };\n    }\n\n    function clear(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        angular.forEach(_this.errors, function(obj, key) {\n          _this.errors[key] = [];\n        });\n      } else {\n        _this.errors[key] = [];\n      }\n    }\n\n    function add(key, error) {\n      var _this = this;\n\n      _this.errors[key] = _this.errors[key] || [];\n      _this.errors[key].push(error);\n    }\n\n    function concat(errors) {\n      var _this = this;\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key] = [];\n      });\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key].push(error.object);\n      });\n\n    }\n\n    function hasErrors(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        var answer = false;\n\n        angular.forEach(_this.errors, function(error) {\n          answer = answer || error.length > 0;\n        });\n\n        return answer;\n      } else {\n        return _this.errors[key] !== undefined && _this.errors[key].length > 0;\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('namedFunction', namedFunction);\n\n  function namedFunction(name, fn) {\n    return new Function('fn',\n      'return function ' + name + '(){ return fn.apply(this,arguments)}'\n    )(fn);\n  };\n})();\n\n// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises, resolvedCallback, rejectedCallback) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.resolve(promise)\n            .then(function(value) {\n              if (angular.isFunction(resolvedCallback)) {\n                resolvedCallback(value);\n              }\n\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              if (angular.isFunction(rejectedCallback)) {\n                rejectedCallback(reason);\n              }\n\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return {\n      create: AngularJsonAPISynchronizerSimpleFactory\n    };\n\n    function AngularJsonAPISynchronizerSimpleFactory(sources) {\n      return new AngularJsonAPISynchronizerSimple(sources);\n    }\n\n    function AngularJsonAPISynchronizerSimple(sources) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, sources);\n\n      angular.forEach(sources, function(source) {\n        source.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.sources, function(source) {\n          angular.forEach(source.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push({\n              key: action,\n              object: result.reason\n            });\n          }\n        });\n\n        if (errors.length > 0) {\n          deferred.reject({data: data || {}, finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data || {}, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.sources, function(source) {\n          angular.forEach(source.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(sources) {\n      var _this = this;\n\n      _this.sources = sources;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.resource.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISourceRest', AngularJsonAPISourceRestWrapper);\n\n  function AngularJsonAPISourceRestWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPISourcePrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISourceRest.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceRest.prototype.constructor = AngularJsonAPISourceRest;\n\n    return {\n      create: AngularJsonAPISourceRestFactory,\n      encodeParams: encodeParams,\n      decodeParams: decodeParams\n    };\n\n    function AngularJsonAPISourceRestFactory(name, url) {\n      return new AngularJsonAPISourceRest(name, url);\n    }\n\n    function AngularJsonAPISourceRest(name, url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: encodeParams(config.params)\n        }).then(resolveHttp, rejectHttp.bind(null, 'all'));\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: encodeParams(config.params)\n        }).then(resolveHttp, rejectHttp.bind(null, 'get'));\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp.bind(null, 'remove'));\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Object has been removed', _this, 0, 'unlink'));\n        } else if (config.target !== undefined && config.target.data.id === undefined) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Can\\'t unlink object without id through rest call', _this, 0, 'unlink'));\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'get')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          if (config.target === undefined) {\n            $http({\n              method: 'PUT',\n              headers: headers,\n              data: {data: []},\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          } else {\n            $http({\n              method: 'DELETE',\n              headers: headers,\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key + '/' + config.target.data.id\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          }\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target === undefined || config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'PUT',\n            headers: headers,\n            data: {data: AngularJsonAPIModelLinkerService.toLinkData(config.target)},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          $http({\n            method: 'POST',\n            headers: headers,\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        return $http({\n          method: 'PUT',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'update'));\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'add'));\n      }\n\n      function resolveHttp(response) {\n        return $q.resolve(response.data);\n      }\n\n      function rejectHttp(action, response) {\n        var deferred = $q.defer();\n\n        if (response.status === 0) {\n          $http({\n            method: 'GET',\n            url: 'https://status.cloud.google.com/incidents.schema.json'\n          }).then(rejectServerOffline, rejectNoConnection);\n        } else {\n          deferred.reject(AngularJsonAPIModelSourceError.create(response.statusText, _this, response.status, action));\n        }\n\n        return deferred.promise;\n\n        function rejectServerOffline(response) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Server is offline', _this, response.status, action));\n        }\n\n        function rejectNoConnection() {\n          deferred.reject(AngularJsonAPIModelSourceError.create('No internet connection', _this, response.status, action));\n        }\n      }\n    }\n\n    function encodeParams(params) {\n      var encodedParams = {};\n\n      if (params === undefined) {\n        return {};\n      }\n\n      angular.forEach(params, function(paramValue, paramKey) {\n        if (angular.isArray(paramValue)) {\n          encodedParams[paramKey] = encodeValue(paramValue);\n        } else if (angular.isObject(paramValue)) {\n          angular.forEach(paramValue, function(paramInnerValue, paramInnerKey) {\n            encodedParams[paramKey + '[' + paramInnerKey + ']'] = encodeValue(paramInnerValue);\n          });\n        } else {\n          encodedParams[paramKey] = paramValue;\n        }\n      });\n\n      return encodedParams;\n\n      function encodeValue(argument) {\n        if (angular.isArray(argument)) {\n          return argument.join(',');\n        } else {\n          return argument;\n        }\n      }\n    }\n\n    function decodeParams(params) {\n      var decodedParams = {};\n\n      angular.forEach(params, function(value, key) {\n        var objectKeyStart = key.indexOf('[');\n        value = value.split(',');\n        value = value.length === 1 ? value[0] : value;\n\n        if (objectKeyStart > -1) {\n          var objectKey = key.substr(0, objectKeyStart);\n          var objectElementKey = key.substr(objectKeyStart + 1, key.indexOf(']') - objectKeyStart - 1);\n\n          decodedParams[objectKey] = {};\n          decodedParams[objectKey][objectElementKey] = value;\n        } else {\n          decodedParams[key] = value;\n        }\n      });\n\n      return decodedParams;\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISourcePrototype', AngularJsonAPISourcePrototypeWrapper);\n\n  function AngularJsonAPISourcePrototypeWrapper() {\n    AngularJsonAPISourcePrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISourcePrototype.prototype.after = afterSynchro;\n    AngularJsonAPISourcePrototype.prototype.begin = begin;\n    AngularJsonAPISourcePrototype.prototype.finish = finish;\n    AngularJsonAPISourcePrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISourcePrototype;\n\n    function AngularJsonAPISourcePrototype(name) {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clearCache',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh',\n        'include'\n      ];\n\n      _this.name = name;\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISourceLocal', AngularJsonAPISourceLocalWrapper);\n\n  function AngularJsonAPISourceLocalWrapper(\n    AngularJsonAPISourcePrototype,\n    $window,\n    $q\n  ) {\n    var size = {\n      max: 0,\n      all: 0,\n      limit: 5200000,\n      list: {}\n    };\n\n    AngularJsonAPISourceLocal.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceLocal.prototype.constructor = AngularJsonAPISourceLocal;\n\n    return {\n      create: AngularJsonAPISourceLocalFactory,\n      size: size\n    };\n\n    function AngularJsonAPISourceLocalFactory(name, prefix) {\n      return new AngularJsonAPISourceLocal(name, prefix);\n    }\n\n    function AngularJsonAPISourceLocal(name, prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('init', init);\n\n      _this.begin('clearCache', clear);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clearCache', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('refresh', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n      _this.finish('include', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.resource.schema.type;\n        return $q.resolve($window.localStorage.getItem(prefix + '.' + type));\n      }\n\n      function clear() {\n        var type = _this.synchronizer.resource.schema.type;\n        var key = prefix + '.' + type;\n\n        size.all -= size.list[key];\n        delete size.list[key];\n        size.max = objectMaxKey(size.list);\n        size.fraction = size.list[size.max] / size.limit * 100;\n\n        $window.localStorage.removeItem(key);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.resource.schema.type;\n        var cache = _this.synchronizer.resource.cache;\n        var json = cache.toJson();\n        var key = prefix + '.' + type;\n\n        size.list[key] = size.list[key] === undefined ? 0 : size.list[key];\n        size.all += json.length - size.list[key];\n        size.list[key] = json.length;\n        size.max = objectMaxKey(size.list);\n        size.fraction = size.list[size.max] / size.limit * 100;\n\n        $window.localStorage.setItem(key, json);\n      }\n\n      function objectMaxKey(object) {\n        return Object.keys(object).reduce(function(m, k) {\n          return object[k] > object[m] ? k : m;\n        }, Object.keys(object)[0]);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper(\n    $log,\n    pluralize,\n    uuid4,\n    AngularJsonAPISchemaLink\n  ) {\n\n    return {\n      create: AngularJsonAPISchemaFactory\n    };\n\n    function AngularJsonAPISchemaFactory(schema) {\n      return new AngularJsonAPISchema(schema);\n    }\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      if (schema.id === 'uuid4') {\n        schema.id = uuid4;\n      } else if (schema.id === 'int') {\n        schema.id = {\n          generate: angular.noop,\n          validate: angular.isNumber\n        };\n      } else if (angular.isObject(schema.id)) {\n        if (!angular.isFunction(schema.id.generate)) {\n          schema.id.generate = angular.noop;\n        }\n      } else {\n        schema.id = {\n          generate: angular.noop,\n          validate: angular.identity.bind(null, true)\n        };\n      }\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = AngularJsonAPISchemaLink.create(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get;\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all;\n      }\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchemaLink', AngularJsonAPILinkSchrapperLink);\n\n  function AngularJsonAPILinkSchrapperLink($log, pluralize) {\n\n    return {\n      create: AngularJsonAPISchemaLinkFactory\n    };\n\n    function AngularJsonAPISchemaLinkFactory(linkSchema, linkName, type) {\n      return new AngularJsonAPISchemaLink(linkSchema, linkName, type);\n    }\n\n    function AngularJsonAPISchemaLink(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        if (linkSchema.type !== 'hasMany' && linkSchema.type !== 'hasOne') {\n          $log.error('Schema of link with wrong type: ', linkSchema.type, 'available: hasOne, hasMany');\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n\n        if (linkSchema.reflection === undefined) {\n          _this.reflection = _this.type === 'hasMany' ? pluralize.singular(type) : type;\n        } else {\n          _this.reflection = linkSchema.reflection;\n        }\n\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResource', AngularJsonAPIResourceWrapper);\n\n  function AngularJsonAPIResourceWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPIResourceCache,\n    AngularJsonAPICollection,\n    $rootScope,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIResource.prototype.get = get;\n    AngularJsonAPIResource.prototype.all = all;\n    AngularJsonAPIResource.prototype.remove = remove;\n    AngularJsonAPIResource.prototype.initialize = initialize;\n\n    AngularJsonAPIResource.prototype.clearCache = clearCache;\n\n    return {\n      create: AngularJsonAPIResourceFactory\n    };\n\n    function AngularJsonAPIResourceFactory(schema, synchronizer) {\n      return new AngularJsonAPIResource(schema, synchronizer);\n    }\n\n    /**\n     * AngularJsonAPIResource constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the resource\n     */\n    function AngularJsonAPIResource(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = AngularJsonAPISchema.create(schema);\n      _this.cache = AngularJsonAPIResourceCache.create(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.resource = _this;\n\n      _this.modelFactory = AngularJsonAPIModel.modelFactory(\n        _this.schema,\n        _this\n      );\n\n      _this.initialized = false;\n      _this.type = _this.schema.type;\n\n      synchronizer.resource = _this;\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'resolved', response);\n        _this.cache.fromJson(response.data);\n        _this.initialized = true;\n\n        response.finish();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'rejected', response);\n        response.finish();\n        _this.initialized = true;\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'notify', response);\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id, params) {\n      var _this = this;\n\n      if (!_this.schema.id.validate(id)) {\n        return $q.reject({errors: [{status: 0, statusText: 'Invalid id'}]});\n      }\n\n      var object = _this.cache.get(id);\n\n      object.promise = object.refresh(params);\n\n      return object;\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = angular.extend({}, _this.schema.params.all, params);\n\n      var collection = AngularJsonAPICollection.create(\n        _this,\n        params\n      );\n\n      collection.promise = collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n\n      return object.remove();\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize() {\n      var _this = this;\n      var relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(relationshipSchema, relationshipName) {\n        if (relationshipSchema.type === 'hasOne') {\n          relationships[relationshipName] = {\n            data: null\n          };\n        } else if (relationshipSchema.type === 'hasMany') {\n          relationships[relationshipName] = {\n            data: []\n          };\n        }\n      });\n\n      var data = {\n        type: _this.type,\n        id: _this.schema.id.generate(),\n        attributes: {},\n        relationships: relationships\n      };\n\n      var config = {\n        new: true,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: false\n      };\n\n      var object = _this.modelFactory(data, config);\n\n      $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:initialize', 'resolved', object);\n\n      return object;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clearCache() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: 'clearCache'\n      };\n\n      _this.cache.clear();\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'notify', response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(\n    AngularJsonAPIAbstractModel,\n    AngularJsonAPISchema,\n    namedFunction,\n    pluralize,\n    $log\n  ) {\n\n    return {\n      modelFactory: createModelFactory\n    };\n\n    function createModelFactory(schemaObj, resource) {\n      var constructorName = pluralize.plural(schemaObj.type, 1);\n\n      var Model = namedFunction(constructorName, function(data, config, updatedAt) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, config, updatedAt);\n\n        _this.form.parent = _this;\n      });\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.resource = resource;\n      Model.prototype.synchronize = resource.synchronizer.synchronize.bind(resource.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return modelFactory;\n\n      function modelFactory(data, updatedAt, isNew) {\n        return new Model(data, updatedAt, isNew);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPIModelErrorsManager,\n    $rootScope,\n    $injector,\n    $q\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n    AngularJsonAPICollection.prototype.hasErrors = hasErrors;\n\n    return {\n      create: AngularJsonAPICollectionFactory\n    };\n\n    function AngularJsonAPICollectionFactory(resource, params) {\n      return new AngularJsonAPICollection(resource, params);\n    }\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIResource} resource Factory associated with the collection\n     * @param {object} params  Params associated with this resource (such as filters)\n     */\n    function AngularJsonAPICollection(resource, params) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.type = resource.schema.type;\n      _this.params = params || {};\n\n      _this.errors = {\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Source',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSourceError\n        )\n      };\n\n      _this.data = _this.resource.cache.index(_this.params);\n\n      _this.loading = false;\n      _this.loadingCount = 0;\n      _this.synchronized = false;\n      _this.pristine = _this.data === undefined;\n\n      _this.promise = $q.resolve(_this);\n\n      var onObjectRemove = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:remove', remove);\n      var onFactoryClear = $rootScope.$on('angularJsonAPI:' + _this.type + ':resource:clearCache', clear);\n      var onObjectAdd = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:add', add);\n\n      $rootScope.$on('$destroy', clearWatchers);\n\n      function remove(event, status, object) {\n        var index;\n\n        if (status === 'resolved' && _this.data !== undefined) {\n          index = _this.data.indexOf(object);\n          if (index > -1) {\n            _this.data.splice(index, 1);\n            _this.resource.cache.setIndexIds(_this.data);\n          }\n        }\n      }\n\n      function clear() {\n        _this.data = undefined;\n        _this.pristine = true;\n      }\n\n      function add(event, status, object) {\n        if (status === 'resolved') {\n          _this.data = _this.data || [];\n          _this.data.push(object);\n        }\n      }\n\n      function clearWatchers() {\n        onObjectRemove();\n        onFactoryClear();\n        onObjectAdd();\n      }\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /**\n     * Shortcut to this.resource.get\n     * @param  {string} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id, params) {\n      var _this = this;\n\n      return _this.resource.get(id, params);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var deferred = $q.defer();\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params\n      };\n\n      __incrementLoadingCounter(_this);\n\n      angular.forEach(_this.data, __incrementLoadingCounter);\n\n      _this.resource.synchronizer.synchronize(config)\n        .then(resolve, reject, notify)\n        .finally(__decrementLoadingCounter.bind(_this, undefined));\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n\n        _this.data = results.data;\n        _this.links = response.data.links;\n\n        _this.updatedAt = Date.now();\n        _this.synchronized = true;\n\n        _this.resource.cache.setIndexIds(_this.data);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'rejected', _this, response);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider(validateJS) {\n    var memory = {};\n    var names = [];\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPIResource) {\n      return {\n        addResource: addResource,\n        getResource: getResource,\n        clearCache: clearCache,\n        allResources: allResources,\n        listResources: listResources,\n        addValidator: addValidator,\n\n        __proccesResults: __proccesResults\n      };\n\n      function addResource(schema, synchronizer) {\n        var resource = AngularJsonAPIResource.create(schema, synchronizer);\n\n        memory[schema.type] = resource;\n        names.push(schema.type);\n      }\n\n      function getResource(type) {\n        return memory[type];\n      }\n\n      function allResources() {\n        return memory;\n      }\n\n      function listResources() {\n        return names;\n      }\n\n      function clearCache() {\n        angular.forEach(memory, function(resource) {\n          resource.clearCache();\n        });\n      }\n\n      function addValidator(name, validator) {\n        if (!angular.isString(name)) {\n          $log.error('Validator name is not a string', name);\n          return;\n        } else if (validateJS.validators[name] === undefined) {\n          $log.warn('Redeclaring validator', name);\n        }\n\n        validateJS.validators[name] = validator;\n      }\n\n      function __proccesResults(results) {\n        var objects = {\n          data: [],\n          included: []\n        };\n\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n          return;\n        }\n\n        var config = {\n          new: false,\n          synchronized: true,\n          stable: true,\n          pristine: false,\n          initialization: false\n        };\n\n        angular.forEach(results.included, function(data) {\n          objects.included.push(getResource(data.type).cache.addOrUpdate(data, config));\n        });\n\n        if (angular.isArray(results.data)) {\n          angular.forEach(results.data, function(data) {\n            objects.data.push(getResource(data.type).cache.addOrUpdate(data, config));\n          });\n        } else if (results.data !== undefined) {\n          objects.data.push(getResource(results.data.type).cache.addOrUpdate(results.data, config));\n        }\n\n        return objects;\n      }\n    }\n  }\n\n})();\n\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(function($logProvider) {\n    $logProvider.debugEnabled(false);\n  })\n  .run(function(validateJS, $q) {\n    validateJS.Promise = $q;\n  });\n})();\n"],"sourceRoot":"/source/"}