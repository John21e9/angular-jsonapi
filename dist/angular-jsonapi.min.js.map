{"version":3,"sources":["/source/jsonapi.module.js","/source/resource/resource-cache/resource-cache.factory.js","angular-jsonapi.min.js","/source/model/model-linker/model-linker.js","/source/model/model-form/model-form.factory.js","/source/model/abstract-model/abstract-model.js","/source/errors/validation-error/validation-error.factory.js","/source/errors/synchronization-error/synchronization-error.factory.js","/source/errors/errors-manager/errors-manager.factory.js","/source/utils/lazy-property.js","/source/utils/kebab-case.js","/source/utils/all-settled.js","/source/synchronizers/synchronizer-simple.factory.js","/source/synchronizers/synchronizer-prototype.js","/source/synchronizations/synchronization-rest.factory.js","/source/synchronizations/synchronization-prototype.js","/source/synchronizations/synchronization-local.factory.js","/source/schema/schema.factory.js","/source/schema/schema-link.factory.js","/source/resource/resource.factory.js","/source/model/model-factory.factory.js","/source/collection/collection.factory.js","/source/jsonapi.provider.js","/source/jsonapi.config.js"],"names":["angular","module","constant","pluralize","validate","AngularJsonAPIResourceCacheWrapper","uuid4","$log","AngularJsonAPIResourceCacheFactory","resource","AngularJsonAPIResourceCache","_this","this","data","removed","size","indexIds","undefined","addOrUpdate","validatedData","config","updatedAt","id","error","modelFactory","update","initialization","fromJson","json","collection","new","synchronized","stable","pristine","isObject","forEach","objectData","toJson","object","hasErrors","push","clear","get","type","schema","index","params","debug","map","bind","setIndexIds","array","element","isString","remove","revertRemove","clearRemoved","prototype","create","factory","$inject","AngularJsonAPIModelLinkerService","toLinkData","link","key","target","oneWay","relationships","polymorphic","model","__addHasMany","__processAddHasMany","__addHasOne","__processAddHasOne","unlink","__removeHasMany","__processRemove","reflectionSchema","reflectionKey","reflection","__swapResults","__wrapResults","oldReflectionSchema","oldReflection","result","__removeHasOne","reset","linkData","isArray","indexOf","splice","value","newValue","item","i","service","AngularJsonAPIModelFormWrapper","AngularJsonAPIModelValidationError","validateJS","$q","AngularJsonAPIModelFormFactory","parent","AngularJsonAPIModelForm","attributes","copy","save","auto","slice","validator","errors","validation","resolve","deferred","reject","errorsMap","attribute","add","attributesWrapper","constraintsWrapper","defer","async","then","promise","AngularJsonAPIAbstractModelWrapper","AngularJsonAPIModelSynchronizationError","AngularJsonAPIModelErrorsManager","$rootScope","$injector","AngularJsonAPIAbstractModel","loading","saving","Date","now","loadingCount","savingCount","synchronization","promises","__setData","form","synchronize","notify","response","$emit","action","cache","finish","concat","__decrementSavingCounter","__incrementSavingCounter","refresh","synchronizeIncluded","__incrementLoadingCounter","__decrementLoadingCounter","resolveIncluded","includedResponse","operation","success","results","included","$jsonapi","__proccesResults","allSettled","unlinkAll","removeLink","linksObj","removeReflectionLink","resolveReflection","targets","answer","setAttributes","validators","setRelationships","relationshipData","links","linkOne","length","unlinkOne","getResource","AngularJsonAPIModelValidationErrorWrapper","ValidationErrorFactory","message","ValidationError","Error","captureStackTrace","constructor","context","Object","name","AngularJsonAPIModelSynchronizationErrorWrapper","SynchronizationErrorFactory","code","SynchronizationError","AngularJsonAPIModelErrorsManagerWrapper","ErrorsManagerFactory","description","ErrorConstructor","defaultFilter","ErrorsManager","obj","propertyName","callback","done","defineProperty","call","enumerable","configurable","str","replace","toLowerCase","$provide","decorator","$delegate","resolvedCallback","rejectedCallback","wrap","isFunction","reason","wrapped","hasOwnProperty","all","AngularJsonAPISynchronizerSimpleWrapper","AngularJsonAPISynchronizerPrototype","AngularJsonAPISynchronizerSimpleFactory","synchronizations","AngularJsonAPISynchronizerSimple","state","synchronizer","step","resolved","afterHooks","hook","finishHooks","rejected","noop","beginHooks","beforeHooks","synchronizationHooks","AngularJsonAPISynchronizerPrototypeWrapper","AngularJsonAPISynchronizationRestWrapper","AngularJsonAPISynchronizationPrototype","toKebabCase","$http","AngularJsonAPISynchronizationRestFactory","url","AngularJsonAPISynchronizationRest","method","headers","resolveHttp","rejectHttp","status","statusText","rejectServerOffline","rejectNoConnection","Accept","Content-Type","apply","arguments","AngularJsonAPISynchronizationPrototypeWrapper","allHooks","options","hookName","begin","beforeSynchro","afterSynchro","before","after","AngularJsonAPISynchronizationLocalWrapper","$window","AngularJsonAPISynchronizationLocalFactory","prefix","AngularJsonAPISynchronizationLocal","init","localStorage","getItem","removeItem","updateStorage","setItem","__updateStorage","AngularJsonAPISchemaWrapper","AngularJsonAPISchemaLink","AngularJsonAPISchemaFactory","AngularJsonAPISchema","include","linkSchema","linkName","linkSchemaObj","extend","join","AngularJsonAPILinkSchrapperLink","AngularJsonAPISchemaLinkFactory","plural","singular","AngularJsonAPIResourceWrapper","AngularJsonAPIModel","AngularJsonAPICollection","AngularJsonAPIResourceFactory","AngularJsonAPIResource","initialized","fetch","initialize","relationshipSchema","relationshipName","generate","clearCache","createModelFactory","schemaObj","isNew","Model","functions","metaFunction","metaFunctionName","AngularJsonAPICollectionWrapper","AngularJsonAPICollectionFactory","event","clearWatchers","onObjectRemove","onFactoryClear","onObjectAdd","$on","jsonapiProvider","jsonapiFactory","addResource","memory","names","allResources","listResources","addValidator","warn","objects","$get","provider","$logProvider","debugEnabled","run","Promise"],"mappings":"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","file":"angular-jsonapi.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false, validate: false */\n  .constant('pluralize', pluralize)\n  .constant('validateJS', validate);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResourceCache', AngularJsonAPIResourceCacheWrapper);\n\n  function AngularJsonAPIResourceCacheWrapper(\n    uuid4,\n    $log\n  ) {\n\n    AngularJsonAPIResourceCache.prototype.get = get;\n    AngularJsonAPIResourceCache.prototype.index = index;\n    AngularJsonAPIResourceCache.prototype.setIndexIds = setIndexIds;\n    AngularJsonAPIResourceCache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPIResourceCache.prototype.fromJson = fromJson;\n    AngularJsonAPIResourceCache.prototype.toJson = toJson;\n    AngularJsonAPIResourceCache.prototype.clear = clear;\n\n    AngularJsonAPIResourceCache.prototype.remove = remove;\n    AngularJsonAPIResourceCache.prototype.revertRemove = revertRemove;\n    AngularJsonAPIResourceCache.prototype.clearRemoved = clearRemoved;\n\n    return {\n      create: AngularJsonAPIResourceCacheFactory\n    };\n\n    function AngularJsonAPIResourceCacheFactory(resource) {\n      return new AngularJsonAPIResourceCache(resource);\n    }\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPIResourceCache(resource) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n\n      _this.indexIds = undefined;\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData, config, updatedAt) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(validatedData, config, updatedAt);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData, !config.new, config.initialization);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: true\n      };\n\n      if (angular.isObject(collection) && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n        _this.indexIds = collection.indexIds;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, config, objectData.updatedAt);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: [],\n        updatedAt: _this.updatedAt,\n        indexIds: _this.indexIds\n      };\n\n      angular.forEach(_this.data, function(object) {\n        if (object.hasErrors() === false) {\n          json.data.push(object.toJson());\n        }\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.indexIds = undefined;\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      var data = {\n        id: id,\n        type: _this.resource.schema.type\n      };\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: true\n      };\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(data, config);\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization, used for index requests\n     * @param  {objec} params\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function index(params) {\n      var _this = this;\n\n      $log.debug('Unused params', params);\n\n      if (_this.indexIds === undefined) {\n        return _this.indexIds;\n      }\n\n      return _this.indexIds.map(_this.get.bind(_this));\n    }\n\n    /**\n     * Cache ids of objects returned by index request\n     * @param {ids array or AngularJsonAPIModel array} array Objects or ids to be cached\n     */\n    function setIndexIds(array) {\n      var _this = this;\n\n      _this.indexIds = [];\n\n      angular.forEach(array, function(element) {\n        if (angular.isString(element) && uuid4.validate(element)) {\n          _this.indexIds.push(element);\n        } else if (angular.isObject(element) && uuid4.validate(element.data.id)) {\n          _this.indexIds.push(element.data.id);\n        }\n      });\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n","!function(){\"use strict\";angular.module(\"angular-jsonapi\",[\"uuid4\"]).constant(\"pluralize\",pluralize).constant(\"validateJS\",validate)}(),function(){\"use strict\";function n(n,e){function t(n){return new r(n)}function r(n){var e=this;e.resource=n,e.data={},e.removed={},e.size=0,e.indexIds=void 0}function a(n,t,r){var a=this,o=n.id;return void 0===o?void e.error(\"Can't add data without id!\",n):(void 0===a.data[o]?(a.data[o]=a.resource.modelFactory(n,t,r),a.size+=1):a.data[o].update(n,!t[\"new\"],t.initialization),a.data[o])}function o(n){var e=this,t=angular.fromJson(n),r={\"new\":!1,\"synchronized\":!1,stable:!1,pristine:!1,initialization:!0};angular.isObject(t)&&void 0!==t.data&&(e.updatedAt=t.updatedAt,e.indexIds=t.indexIds,angular.forEach(t.data,function(n){var t=n.data;e.addOrUpdate(t,r,n.updatedAt)}))}function i(){var n=this,e={data:[],updatedAt:n.updatedAt,indexIds:n.indexIds};return angular.forEach(n.data,function(n){n.hasErrors()===!1&&e.data.push(n.toJson())}),angular.toJson(e)}function s(){var n=this;n.indexIds=void 0,n.data={},n.removed={}}function c(n){var e=this,t={id:n,type:e.resource.schema.type},r={\"new\":!1,\"synchronized\":!1,stable:!1,pristine:!0};return void 0===e.data[n]&&(e.data[n]=e.resource.modelFactory(t,r)),e.data[n]}function u(n){var t=this;return e.debug(\"Unused params\",n),void 0===t.indexIds?t.indexIds:t.indexIds.map(t.get.bind(t))}function l(e){var t=this;t.indexIds=[],angular.forEach(e,function(e){angular.isString(e)&&n.validate(e)?t.indexIds.push(e):angular.isObject(e)&&n.validate(e.data.id)&&t.indexIds.push(e.data.id)})}function d(n){var e=this;return void 0!==e.data[n]&&(e.removed[n]=e.data[n],delete e.data[n],e.size-=1),e.removed[n]}function h(n){var e=this;return void 0!==e.removed[n]&&(e.data[n]=e.removed[n],delete e.removed[n],e.size+=1),e.data[n]}function p(n){var e=this;delete e.removed[n]}return r.prototype.get=c,r.prototype.index=u,r.prototype.setIndexIds=l,r.prototype.addOrUpdate=a,r.prototype.fromJson=o,r.prototype.toJson=i,r.prototype.clear=s,r.prototype.remove=d,r.prototype.revertRemove=h,r.prototype.clearRemoved=p,{create:t}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIResourceCache\",n),n.$inject=[\"uuid4\",\"$log\"]}(),function(){\"use strict\";function n(n){function e(n){return null===n?null:{type:n.data.type,id:n.data.id}}function t(e,t,r,i){var u;return void 0===e?(n.error(\"Can't add link to non existing object\",e,t,r),n.error(\"Object:\",e.data.type,e),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",t),[]):(u=e.schema.relationships[t],void 0===r?(n.error(\"Can't link non existing object\",e,t,r,u),n.error(\"Object:\",e.data.type,e),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",t),n.error(\"Schema:\",u),[]):void 0===u?(n.error(\"Can't add link not present in schema:\",e,t,r,u),n.error(\"Object:\",e.data.type,e),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",t),n.error(\"Schema:\",u),[]):null!==r&&u.polymorphic===!1&&u.model!==r.data.type?(n.error(\"This relation is not polymorphic, expected: \"+u.model+\" instead of \"+r.data.type),n.error(\"Object:\",e.data.type,e),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",t),n.error(\"Schema:\",u),[]):\"hasMany\"===u.type?i===!0?(c(e,t,r,!1),[]):a(e,t,r):\"hasOne\"===u.type?i===!0?(s(e,t,r,!1),[]):o(e,t,r):void 0)}function r(e,t,r,a){var o;return void 0===e?(n.error(\"Can't remove link from non existing object\",e,t,r),n.error(\"Object:\",e.data.type,e),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",t),[]):(o=e.schema.relationships[t],void 0===o?(n.error(\"Can't remove link not present in schema:\",e,t,r,o),n.error(\"Object:\",e.data.type,e),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",t),n.error(\"Schema:\",o),[]):a===!0?(l(e,t,r,!1),[]):i(e,t,r))}function a(n,e,t){var r,a=n.schema.relationships[e].reflection;return a===!1?(c(n,e,t),[]):(r=t.schema.relationships[a],\"hasOne\"===r.type?h(d(n,e,t),d(t,a,n),o(t,a,n)):\"hasMany\"===r.type?(c(n,e,t),c(t,a,n),[d(t,a,n)]):void 0)}function o(n,e,t){var r,a,o=n.schema.relationships[e].reflection,i=n.relationships[e],h=[];return s(n,e,t),void 0!==i&&null!==i&&(a=i.schema.relationships[o],\"hasOne\"===a.type?u(i,o,n):\"hasMany\"===a.type&&l(i,o,n),h.push(d(i,o,n))),void 0!==t&&null!==t&&o!==!1&&(r=t.schema.relationships[o],\"hasOne\"===r.type?s(t,o,n):\"hasMany\"===r.type&&c(t,o,n),h.push(d(t,o,n))),h}function i(n,e,t){var r,a=n.schema.relationships[e],o=a.reflection;return\"hasMany\"===a.type?l(n,e,t):\"hasOne\"===a.type&&u(n,e,t),o===!1?[]:(r=t.schema.relationships[o],\"hasOne\"===r.type?u(t,o,n):\"hasMany\"===r.type&&l(t,o,n),[d(t,o,n)])}function s(t,r,a,o){return n.debug(\"addHasOne\",t,r,a),t.relationships[r]=a,t.data.relationships[r].data=e(a),o!==!1&&t.reset(!0),!0}function c(t,r,a,o){var i=e(a);return n.debug(\"addHasMany\",t,r,a),angular.isArray(t.relationships[r])&&t.relationships[r].indexOf(a)>-1?!1:(t.relationships[r]=t.relationships[r]||[],t.data.relationships[r].data=t.data.relationships[r].data||[],t.relationships[r].push(a),t.data.relationships[r].data.push(i),o!==!1&&t.reset(!0),!0)}function u(e,t,r,a){return n.debug(\"removeHasOne\",e,t,r),void 0!==r&&e.relationships[t]!==r?!1:(e.relationships[t]=null,e.data.relationships[t].data=void 0,a!==!1&&e.reset(!0),!0)}function l(e,t,r,a){if(n.debug(\"removeHasMany\",e,t,r),void 0!==e.relationships[t]){if(void 0===r)return e.relationships[t]=[],e.data.relationships[t].data=[],a!==!1&&e.reset(!0),!0;var o=e.relationships[t].indexOf(r);return-1===o?!1:(e.relationships[t].splice(o,1),e.data.relationships[t].data.splice(o,1),a!==!1&&e.reset(!0),!0)}}function d(n,e,t){return{object:n,key:e,target:t}}function h(n,e,t){var r=-1;return angular.forEach(t,function(e,t){e.object===n.object&&e.key===n.key&&e.target===n.target&&(r=t)}),r>-1?t[r]=e:t.push(e),t}var p=this;return p.toLinkData=e,p.link=t,p.unlink=r,this}angular.module(\"angular-jsonapi\").service(\"AngularJsonAPIModelLinkerService\",n),n.$inject=[\"$log\"]}(),function(){\"use strict\";function n(n,e,t,r){function a(n){return new o(n)}function o(n){var e=this;e.data={id:n.data.id,type:n.data.type,attributes:{},relationships:{}},e.relationships={},e.parent=n,e.schema=n.schema,e.reset()}function i(){var n=this,e=angular.copy(n.data),t={};return angular.forEach(e.relationships,function(n,e){void 0!==n.data&&(t[e]=n)}),e.relationships=t,{data:e}}function s(){var n=this;return n.parent.save()}function c(n){var e=this;angular.forEach(e.schema.relationships,function(n,t){e.data.relationships[t]=angular.copy(e.parent.data.relationships[t])||{},angular.isArray(e.relationships[t])?e.relationships[t]=e.parent.relationships[t].slice():e.relationships[t]=e.parent.relationships[t]}),(n!==!0||e.parent[\"synchronized\"]!==!0)&&(angular.forEach(e.schema.attributes,function(n,t){e.data.attributes[t]=angular.copy(e.parent.data.attributes[t])}),e.parent.errors.validation.clear())}function u(e){function a(){void 0===e?c.parent.errors.validation.clear():c.parent.errors.validation.clear(e),u.resolve()}function o(t){c.parent.error=!0,void 0===e?c.parent.errors.validation.clear():c.parent.errors.validation.clear(e),angular.forEach(t,function(e,t){angular.forEach(e,function(e){c.parent.errors.validation.add(t,n.create(e,t))})}),u.reject(c.parent.errors.validation)}var i,s,c=this,u=r.defer();return void 0===e?(i=c.data.attributes,s=c.schema.attributes):(i={},s={},i[e]=c.data.attributes[e],s[e]=c.schema.attributes[e]),t.async(i,s).then(a,o),u.promise}function l(n,t){var a=this;return r.resolve(e.link(a,n,t,!0))}function d(n,t){var a=this;return r.resolve(e.unlink(a,n,t,!0))}return o.prototype.save=s,o.prototype.reset=c,o.prototype.validate=u,o.prototype.link=l,o.prototype.unlink=d,o.prototype.toJson=i,{create:a}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelForm\",n),n.$inject=[\"AngularJsonAPIModelValidationError\",\"AngularJsonAPIModelLinkerService\",\"validateJS\",\"$q\"]}(),function(){\"use strict\";function n(n,o,i,s,c,u,l,d,h,p){function f(e,t,r){var a=this;e.relationships=e.relationships||{},a[\"new\"]=void 0===t[\"new\"]?!1:t[\"new\"],a.stable=void 0===t.stable?!0:t.stable,a[\"synchronized\"]=void 0===t[\"synchronized\"]?!0:t[\"synchronized\"],a.pristine=void 0===t.pristine?!0:t.pristine,a.removed=!1,a.loading=!1,a.saving=!1,a.updatedAt=a[\"synchronized\"]===!0?Date.now():r,a.loadingCount=0,a.savingCount=0,a.data={relationships:{},attributes:{}},a.relationships={},angular.forEach(a.schema.relationships,function(n,e){a.relationships[e]=void 0}),a.errors={validation:i.create(\"Validation\",\"Errors of attributes validation\",o),synchronization:i.create(\"Synchronization\",\"Errors of synchronizations\",n)},a.promises={},E(a,e),a.form=c.create(a)}function y(){function n(){i.synchronize(c).then(e,t,o)}function e(n){l.$emit(\"angularJsonAPI:\"+i.data.type+\":object:\"+c.action,\"resolved\",i,n),i.update(i.form.data),i[\"new\"]===!0&&(i.resource.cache.indexIds=i.resource.cache.indexIds||[],i.resource.cache.indexIds.push(i.data.id)),i[\"synchronized\"]=!0,i[\"new\"]=!1,i.pristine=!1,i.stable=!0,n.finish(),i.errors.synchronization.concat(n.errors),s.resolve(i)}function t(n){l.$emit(\"angularJsonAPI:\"+i.data.type+\":object:save\",\"rejected\",i,n),n.finish(),i.errors.synchronization.concat(n.errors),s.reject(i)}function o(n){l.$emit(\"angularJsonAPI:\"+i.data.type+\":object:save\",\"notify\",i,n),s.notify(n)}var i=this,s=p.defer(),c={action:i[\"new\"]===!0?\"add\":\"update\",object:i};return i.form.validate().then(n,s.reject)[\"finally\"](a.bind(i,void 0)),r(i),s.promise}function g(){var n=this;void 0!==n.form&&n.form.reset()}function v(r){function a(n){function r(n){return e(n),n.synchronize({action:\"include\",object:n})[\"finally\"](t.bind(n,void 0))}function a(n){angular.forEach(n,function(n,e){n.success===!0&&(l.$emit(\"angularJsonAPI:\"+o.included[e].data.type+\":object:include\",\"resolved\",o.included[e],n),n.value.finish())}),c.resolve(u)}var o=s.__proccesResults(n.data);l.$emit(\"angularJsonAPI:\"+u.data.type+\":object:refresh\",\"resolved\",u,n),p.allSettled(o.included.map(r)).then(a,c.reject),u[\"synchronized\"]=!0,u.stable=!0,u.pristine=!1,n.finish(),u.errors.synchronization.concat(n.errors)}function o(n){l.$emit(\"angularJsonAPI:\"+u.data.type+\":object:refresh\",\"rejected\",u,n),n.finish(),u.errors.synchronization.concat(n.errors),c.reject(u)}function i(n){l.$emit(\"angularJsonAPI:\"+u.data.type+\":object:refresh\",\"notify\",u,n),c.notify(n)}var s=d.get(\"$jsonapi\"),c=p.defer(),u=this;r=void 0===r?u.schema.params.get:r;var h={action:\"refresh\",object:u,params:r};if(u[\"new\"]===!0){var f=n.create(\"Can't refresh new object\",null,0,\"refresh\");u.errors.synchronization.add(\"refresh\",f),c.reject(f)}else e(u),u.synchronize(h).then(a,o,i)[\"finally\"](t.bind(u,void 0));return c.promise}function m(){var n=this,e=angular.copy(n.data),t={};return angular.forEach(e.relationships,function(n,e){void 0!==n.data&&(t[e]=n)}),e.relationships=t,{data:e,updatedAt:n.updatedAt}}function b(){function n(n){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"resolved\",o,n),o.removed=!0,o.unlinkAll(),o.resource.cache.clearRemoved(o.data.id),n.finish(),o.errors.synchronization.concat(n.errors),i.resolve(o)}function e(n){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"rejected\",o,n),o.resource.cache.revertRemove(o.data.id),n.finish(),o.errors.synchronization.concat(n.errors),i.reject(o)}function t(n){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"notify\",o,n),i.notify(n)}var o=this,i=p.defer(),s={action:\"remove\",object:o};return o.resource.cache.remove(o.data.id),o[\"new\"]===!0?i.resolve():(r(o),o.synchronize(s).then(n,e,t)[\"finally\"](a.bind(o,void 0))),i.promise}function j(n){function r(n,e){var t=o.schema.relationships[e],r=t.reflection;angular.isArray(n)?angular.forEach(n,a.bind(void 0,r)):angular.isObject(n)&&a(r,n),\"hasOne\"===t.type?o.relationships[e]=null:\"hasMany\"===t.type&&(o.relationships[e]=[])}function a(n,r){function a(n){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"resolve\",o,n),n.finish(),o.errors.synchronization.concat(n.errors),i.resolve(o)}function c(n){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"rejected\",o,n),n.finish(),o.errors.synchronization.concat(n.errors),i.reject(o)}function u(n){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"notify\",o,n),n.finish(),i.notify(n)}var d=r.schema.relationships[n],h={action:\"unlinkReflection\",object:r,target:o,key:n};e(r),s.unlink(r,n,o,d),r.synchronize(h).then(a,c,u)[\"finally\"](t.bind(r,void 0))}var o=this,i=p.defer();return e(o),void 0===n?angular.forEach(o.relationships,r):r(o.relationships[n],n),t(o),i.promise}function A(o,i){function c(n){function r(n){return e(i),i.synchronize({action:\"linkReflection\",object:n.object,target:n.target,key:n.key})[\"finally\"](t.bind(i,void 0))}function a(n){angular.forEach(n,function(n,e){n.success===!0&&(l.$emit(\"angularJsonAPI:\"+c[e].object.data.type+\":object:linkReflection\",\"resolved\",c[e],n),n.value.finish())}),f.resolve(y)}l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:link\",\"resolved\",y,n);var c=s.link(y,o,i);y.stable=!0,y.pristine=!1,n.finish(),y.errors.synchronization.concat(n.errors),p.allSettled(c.map(r)).then(a,f.reject)}function u(n){l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:link\",\"rejected\",y,n),f.reject(n.errors),n.finish(),y.errors.synchronization.concat(n.errors),f.reject(y)}function d(n){l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:link\",\"notify\",y,n),f.notify(n)}var h,f=p.defer(),y=this,g={action:\"link\",object:y,target:i,key:o};return void 0===i?(h=n.create(\"Can't link undefined\",null,0,\"link\"),y.errors.synchronization.add(\"link\",h),f.reject(h)):y[\"new\"]===!0?(h=n.create(\"Can't link new object\",null,0,\"link\"),y.errors.synchronization.add(\"link\",h),f.reject(h)):(r(y),y.synchronize(g).then(c,u,d)[\"finally\"](a.bind(y,void 0))),f.promise}function k(o,i){function c(n){function r(n){return e(i),i.synchronize({action:\"unlinkReflection\",object:n.object,target:n.target,key:n.key})[\"finally\"](t.bind(i,void 0))}function a(n){angular.forEach(n,function(e){e.success===!0&&(l.$emit(\"angularJsonAPI:\"+c[o].data.type+\":object:unlinkReflection\",\"resolved\",c[o],e),n.value.finish())}),f.resolve(y)}l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:unlink\",\"resolved\",y,n);var c=s.link(y,o,i);y.stable=!0,y.pristine=!1,n.finish(),y.errors.synchronization.concat(n.errors),p.allSettled(c.map(r)).then(a,f.reject)}function u(n){l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:unlink\",\"rejected\",y,n),f.reject(n.errors),n.finish(),y.errors.synchronization.concat(n.errors),f.reject(y)}function d(n){l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:unlink\",\"notify\",y,n),f.notify(n)}var h,f=p.defer(),y=this,g={action:\"unlink\",object:y,target:i,key:o};return void 0===i?(h=n.create(\"Can't unlink undefined\",null,0,\"unlink\"),y.errors.synchronization.add(\"unlink\",h),f.reject(y)):y[\"new\"]===!0?(h=n.create(\"Can't unlink new object\",null,0,\"unlink\"),y.errors.synchronization.add(\"unlink\",h),f.reject(y)):(r(y),y.synchronize(g).then(c,u,d)[\"finally\"](a.bind(y,void 0))),f.promise}function z(n,r,a){var o=this;e(o),E(o,n),o.reset(r),o[\"synchronized\"]=a===!0?!1:!0,o.stable=a===!0?!1:!0,o.updatedAt=Date.now(),t(o)}function I(){var n=this,e=!1;return angular.forEach(n.errors,function(n){e=n.hasErrors()||e}),e}function E(n,e){function t(t,r){n.data.attributes[r]=e.attributes[r]}function r(t,r){var i=e.relationships[r];return void 0===i?void(n.data.relationships[r]={data:void 0}):(n.data.relationships[r]=n.data.relationships[r]||{},n.data.relationships[r].links=i.links,void(\"hasOne\"===t.type?a(n,r,i.data):\"hasMany\"===t.type&&angular.isArray(i.data)&&(0===i.data.length?(n.data.relationships[r].data=[],n.unlinkAll(r)):(angular.forEach(n.relationships[r],o.bind(void 0,n,r,i.data)),angular.forEach(i.data,a.bind(void 0,n,r))))))}function a(n,e,t){var r;if(null===t)return void s.link(n,e,null);if(void 0!==t){if(r=i.getResource(t.type),void 0===r)return void h.error(\"Factory not found\",t.type,t);var a=r.cache.get(t.id);s.link(n,e,a)}}function o(n,e,t,r){t.indexOf(r.data.id)>-1||s.unlink(n,e,r)}var i=d.get(\"$jsonapi\"),c=n.schema;return n.data.id=e.id,n.data.type=e.type,n.resource.schema.type!==e.type?(h.error(\"Different type then resource\",n.resource.schema.type,e),!1):u.validate(n.data.id)?(e.attributes=e.attributes||{},e.relationships=e.relationships||{},angular.forEach(c.attributes,t),angular.forEach(c.relationships,r),!0):(h.error(\"Invalid id\"),!1)}return f.prototype.refresh=v,f.prototype.remove=b,f.prototype.reset=g,f.prototype.save=y,f.prototype.update=z,f.prototype.link=A,f.prototype.unlink=k,f.prototype.unlinkAll=j,f.prototype.toJson=m,f.prototype.hasErrors=I,f}function e(n){n=void 0===n?this:n,n.loadingCount+=1,n.loading=!0}function t(n){n=void 0===n?this:n,n.loadingCount-=1,n.loading=n.loadingCount>0}function r(n){n=void 0===n?this:n,n.savingCount+=1,n.saving=!0}function a(n){n=void 0===n?this:n,n.savingCount-=1,n.saving=n.savingCount>0}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractModel\",n),n.$inject=[\"AngularJsonAPIModelSynchronizationError\",\"AngularJsonAPIModelValidationError\",\"AngularJsonAPIModelErrorsManager\",\"AngularJsonAPIModelLinkerService\",\"AngularJsonAPIModelForm\",\"uuid4\",\"$rootScope\",\"$injector\",\"$log\",\"$q\"]}(),function(){\"use strict\";function n(){function n(n,t){return new e(n,t)}function e(n,e){var t=this;Error.captureStackTrace(t,t.constructor),t.message=n,t.context={attribute:e}}return e.prototype=Object.create(Error.prototype),e.prototype.constructor=e,e.prototype.name=\"ValidationError\",{create:n}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelValidationError\",n)}(),function(){\"use strict\";function n(){function n(n,t,r,a){return new e(n,t,r,a)}function e(n,e,t,r){var a=this;Error.captureStackTrace(a,a.constructor),a.message=n,a.context={synchronization:e,code:t,action:r}}return e.prototype=Object.create(Error.prototype),e.prototype.constructor=e,e.prototype.name=\"SynchronizationError\",{create:n}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelSynchronizationError\",n)}(),function(){\"use strict\";function n(){function n(n,t,r,a){return new e(n,t,r,a)}function e(n,e,t,r){var a=this;a.name=n,a.description=e,a.ErrorConstructor=t,a.errors={},a.defaultFilter=r||function(){return!0}}function t(n){var e=this;void 0===n?angular.forEach(e.errors,function(n,t){e.errors[t]=[]}):e.errors[n]=[]}function r(n,e){var t=this;t.errors[n]=t.errors[n]||[],t.errors[n].push(e)}function a(n){var e=this;angular.forEach(n,function(n){e.errors[n.key]=[]}),angular.forEach(n,function(n){e.errors[n.key].push(n.object)})}function o(n){var e=this;if(void 0===n){var t=!1;return angular.forEach(e.errors,function(n){t=t||n.length>0}),t}return void 0!==e.errors[n]&&e.errors[n].length>0}return e.prototype.constructor=e,e.prototype.concat=a,e.prototype.clear=t,e.prototype.add=r,e.prototype.hasErrors=o,{create:n}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelErrorsManager\",n)}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"lazyProperty\",function(n,e,t){var r,a;Object.defineProperty(n,e,{get:function(){return a||(a=!0,r=t.call(n)),r},enumerable:!0,configurable:!0})})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"toKebabCase\",function(n){return n.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase()})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$provide\",function(n){n.decorator(\"$q\",[\"$delegate\",function(n){var e=n;return e.allSettled=e.allSettled||function(n,t,r){function a(n){return e.resolve(n).then(function(n){return angular.isFunction(t)&&t(n),{success:!0,value:n}},function(n){return angular.isFunction(r)&&r(n),{success:!1,reason:n}})}var o=angular.isArray(n)?[]:{};return angular.forEach(n,function(n,e){o.hasOwnProperty(e)||(o[e]=a(n))}),e.all(o)},e}])}])}(),function(){\"use strict\";function n(n,e,t){function r(n){return new a(n)}function a(e){var t=this;t.state={},n.call(t,e),angular.forEach(e,function(n){n.synchronizer=t})}function o(r){function a(n){d.notify({step:\"synchronization\",data:n})}function o(n){d.notify({step:\"synchronization\",errors:n})}function i(n){u.state[h]=u.state[h]||{},u.state[h].success=!0,angular.forEach(n,function(n){n.success===!1&&(u.state[h].success=!1)}),angular.forEach(u.synchronizations,function(e){angular.forEach(e.afterHooks[h],function(e){d.notify({step:\"after\",errors:e.call(u,r,n)})})});var e,t=[];angular.forEach(n,function(n){n.success===!0?e=n.value:t.push({key:h,object:n.reason})}),t.length>0?d.reject({data:e,finish:s,errors:t}):d.resolve({data:e,finish:s,errors:t})}function s(){angular.forEach(u.synchronizations,function(n){angular.forEach(n.finishHooks[h],function(n){d.notify({step:\"finish\",errors:n.call(u,r)})})})}function c(n){t.error(\"All settled rejected! Something went wrong\"),d.reject({finish:angular.noop,errors:n})}var u=this,l=[],d=e.defer(),h=r.action;return n.prototype.synchronize.call(u,r),angular.forEach(u.synchronizations,function(n){angular.forEach(n.beginHooks[h],function(n){d.notify({step:\"begin\",data:n.call(u,r)})})}),angular.forEach(u.synchronizations,function(n){angular.forEach(n.beforeHooks[h],function(n){d.notify({step:\"before\",data:n.call(u,r)})})}),angular.forEach(u.synchronizations,function(n){angular.forEach(n.synchronizationHooks[h],function(n){l.push(n.call(u,r))})}),e.allSettled(l,a,o).then(i,c),d.promise}return a.prototype=Object.create(n.prototype),a.prototype.constructor=a,a.prototype.synchronize=o,{create:r}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerSimple\",n),n.$inject=[\"AngularJsonAPISynchronizerPrototype\",\"$q\",\"$log\"]}(),function(){\"use strict\";function n(n){function e(n){var e=this;e.synchronizations=n}function t(e){var t=this;n.debug(\"Synchro Collection\",t.resource.schema.type,e),void 0===e.action&&n.error(\"Can't synchronize undefined action\",e)}return e.prototype.synchronize=t,e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerPrototype\",n),n.$inject=[\"$log\"]}(),function(){\"use strict\";function n(n,e,t,r,a,o){function i(n,e){return new s(n,e)}function s(r,i){function s(n){return o({method:\"GET\",headers:v,url:i,params:n.params||{}}).then(f,y.bind(null,\"all\"))}function c(n){return o({method:\"GET\",headers:v,url:i+\"/\"+n.object.data.id,params:n.params||{}}).then(f,y.bind(null,\"get\"))}function u(n){return o({method:\"DELETE\",headers:v,url:i+\"/\"+n.object.data.id}).then(f,y.bind(null,\"remove\"))}function l(e){var t=a.defer(),r=e.object.schema.relationships[e.key];return e.object.removed===!0?t.reject(n.create(\"Object has been removed\",g,0,\"unlink\")):void 0!==e.target&&void 0===e.target.data.id?t.reject(n.create(\"Can't unlink object without id through rest call\",g,0,\"unlink\")):\"hasOne\"===r.type?o({method:\"DELETE\",headers:v,url:i+\"/\"+e.object.data.id+\"/relationships/\"+e.key}).then(f,y.bind(null,\"get\")).then(t.resolve,t.reject):\"hasMany\"===r.type&&(void 0===e.target?o({method:\"PUT\",headers:v,data:{data:[]},url:i+\"/\"+e.object.data.id+\"/relationships/\"+e.key}).then(f,y.bind(null,\"unlink\")).then(t.resolve,t.reject):o({method:\"DELETE\",headers:v,url:i+\"/\"+e.object.data.id+\"/relationships/\"+e.key+\"/\"+e.target.data.id}).then(f,y.bind(null,\"unlink\")).then(t.resolve,t.reject)),t.promise}function d(n){var e=a.defer(),r=n.object.schema.relationships[n.key];return n.object.removed===!0?e.reject({errors:[{status:0,statusText:\"Object has been removed\"}]}):void 0===n.target||void 0===n.target.data.id?e.reject({errors:[{status:0,statusText:\"Can't link object without id through rest call\"}]}):\"hasOne\"===r.type?o({method:\"PUT\",headers:v,data:{data:t.toLinkData(n.target)},url:i+\"/\"+n.object.data.id+\"/relationships/\"+n.key}).then(f,y.bind(null,\"link\")).then(e.resolve,e.reject):\"hasMany\"===r.type&&o({method:\"POST\",headers:v,data:{data:[t.toLinkData(n.target)]},url:i+\"/\"+n.object.data.id+\"/relationships/\"+n.key}).then(f,y.bind(null,\"link\")).then(e.resolve,e.reject),e.promise}function h(n){return o({method:\"PUT\",headers:v,url:i+\"/\"+n.object.data.id,data:n.object.form.toJson()}).then(f,y.bind(null,\"update\"))}function p(n){return o({method:\"POST\",headers:v,url:i+\"/\",data:n.object.form.toJson()}).then(f,y.bind(null,\"add\"))}function f(n){return a.resolve(n.data)}function y(e,t){function r(t){s.reject(n.create(\"Server is offline\",g,t.status,e))}function i(){s.reject(n.create(\"No internet connection\",g,t.status,e))}var s=a.defer();return 0===t.status?o({method:\"GET\",url:\"https://status.cloud.google.com/incidents.schema.json\"}).then(r,i):s.reject(n.create(t.statusText,g,t.status,e)),s.promise}var g=this,v={Accept:\"application/vnd.api+json\",\"Content-Type\":\"application/vnd.api+json\"};e.apply(g,arguments),g.synchronization(\"remove\",u),g.synchronization(\"unlink\",l),g.synchronization(\"link\",d),g.synchronization(\"update\",h),g.synchronization(\"add\",p),g.synchronization(\"all\",s),g.synchronization(\"get\",c),g.synchronization(\"refresh\",c)}return s.prototype=Object.create(e.prototype),s.prototype.constructor=s,{create:i}}angular.module(\"angular-jsonapi-rest\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationRest\",n),n.$inject=[\"AngularJsonAPIModelSynchronizationError\",\"AngularJsonAPISynchronizationPrototype\",\"AngularJsonAPIModelLinkerService\",\"toKebabCase\",\"$q\",\"$http\"]}(),function(){\"use strict\";function n(){function n(n){var e=this,t=[\"add\",\"init\",\"get\",\"all\",\"clearCache\",\"remove\",\"unlink\",\"unlinkReflection\",\"link\",\"linkReflection\",\"update\",\"refresh\",\"include\"];e.name=n,e.state={},e.beginHooks={},e.beforeHooks={},e.synchronizationHooks={},e.afterHooks={},e.finishHooks={},e.options={},angular.forEach(t,function(n){e.beginHooks[n]=[],e.beforeHooks[n]=[],e.synchronizationHooks[n]=[],e.afterHooks[n]=[],e.finishHooks[n]=[],e.state[n]={loading:!1,success:!0}})}function e(n,e){var t=this;t.beginHooks[n].push(e)}function t(n,e){var t=this;t.finishHooks[n].push(e)}function r(n,e){var t=this;t.beforeHooks[n].push(e)}function a(n,e){var t=this;t.afterHooks[n].push(e)}function o(n,e){var t=this;t.synchronizationHooks[n].push(e)}return n.prototype.before=r,n.prototype.after=a,n.prototype.begin=e,n.prototype.finish=t,n.prototype.synchronization=o,n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizationPrototype\",n)}(),function(){\"use strict\";function n(n,e,t){function r(n,e){return new a(n,e)}function a(r,a){function o(){var n=u.synchronizer.resource.schema.type;return t.resolve(e.localStorage.getItem(a+\".\"+n))}function i(){var n=u.synchronizer.resource.schema.type;e.localStorage.removeItem(a+\".\"+n)}function s(){var n=u.synchronizer.resource.schema.type,t=u.synchronizer.resource.cache;e.localStorage.setItem(a+\".\"+n,t.toJson())}function c(){s()}var u=this;a=a||\"AngularJsonAPI\",u.__updateStorage=s,n.apply(u,arguments),u.synchronization(\"init\",o),u.begin(\"clearCache\",i),u.begin(\"remove\",s),u.begin(\"refresh\",s),u.begin(\"unlink\",s),u.begin(\"unlinkReflection\",s),u.begin(\"link\",s),u.begin(\"linkReflection\",s),u.begin(\"update\",s),u.begin(\"add\",s),u.begin(\"get\",s),u.begin(\"all\",s),u.begin(\"include\",s),u.finish(\"init\",c),u.finish(\"clearCache\",c),u.finish(\"remove\",c),u.finish(\"refresh\",c),u.finish(\"unlink\",c),u.finish(\"unlinkReflection\",c),u.finish(\"link\",c),u.finish(\"linkReflection\",c),u.finish(\"update\",c),u.finish(\"add\",c),u.finish(\"get\",c),u.finish(\"all\",c),u.finish(\"include\",c)}return a.prototype=Object.create(n.prototype),a.prototype.constructor=a,{create:r}}angular.module(\"angular-jsonapi-local\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationLocal\",n),n.$inject=[\"AngularJsonAPISynchronizationPrototype\",\"$window\",\"$q\"]}(),function(){\"use strict\";function n(n,e,t){function r(n){return new a(n)}function a(n){var e=this,r=n.include||{};n.include=r,r.get=n.include.get||[],r.all=n.include.all||[],e.params={get:{},all:{}},angular.forEach(n.relationships,function(e,a){var o=t.create(e,a,n.type);n.relationships[a]=o,o.included===!0&&(r.get.push(a),\"hasOne\"===o.type&&r.all.push(a))}),angular.extend(e,n),r.get.length>0&&(e.params.get.include=r.get.join(\",\")),r.all.length>0&&(e.params.all.include=r.all.join(\",\"))}return{create:r}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchema\",n),n.$inject=[\"$log\",\"pluralize\",\"AngularJsonAPISchemaLink\"]}(),function(){\"use strict\";function n(n,e){function t(n,e,t){return new r(n,e,t)}function r(t,r,a){var o=this;angular.isString(t)?(o.model=e.plural(r),o.type=t,o.polymorphic=!1,o.reflection=a):(void 0===t.type&&n.error(\"Schema of link without a type: \",t,r),\"hasMany\"!==t.type&&\"hasOne\"!==t.type&&n.error(\"Schema of link with wrong type: \",t.type,\"available: hasOne, hasMany\"),o.model=t.model||e.plural(r),o.type=t.type,o.polymorphic=t.polymorphic||!1,void 0===t.reflection?o.reflection=\"hasMany\"===o.type?e.singular(a):a:o.reflection=t.reflection,o.included=t.included||!1)}return{create:t}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchemaLink\",n),n.$inject=[\"$log\",\"pluralize\"]}(),function(){\"use strict\";function n(n,e,t,r,a,o,i,s){function c(n,e){return new u(n,e)}function u(r,a){function i(n){o.$emit(\"angularJsonAPI:\"+u.type+\":resource:init\",\"resolved\",n),u.cache.fromJson(n.data),u.initialized=!0,n.finish()}function s(n){o.$emit(\"angularJsonAPI:\"+u.type+\":resource:init\",\"rejected\",n),n.finish(),u.initialized=!0}function c(n){o.$emit(\"angularJsonAPI:\"+u.type+\":resource:init\",\"notify\",n)}var u=this,l={action:\"init\"};u.schema=e.create(r),u.cache=t.create(u),u.synchronizer=a,u.synchronizer.resource=u,u.modelFactory=n.modelFactory(u.schema,u),u.initialized=!1,u.type=u.schema.type,a.resource=u,u.synchronizer.synchronize(l).then(i,s,c)}function l(n,e){var t=this;if(!a.validate(n))return s.reject({errors:[{status:0,statusText:\"Invalid id not uuid4\"}]});var r=t.cache.get(n);return r.refresh(e),r}function d(n){var e=this;n=void 0===n?e.schema.params.all:n;var t=r.create(e,n);return t.fetch(),t}function h(n){var e=this,t=e.cache.remove(n);return t.remove()}function p(){var n=this,e={};angular.forEach(n.schema.relationships,function(n,t){\"hasOne\"===n.type?e[t]={data:null}:\"hasMany\"===n.type&&(e[t]={data:[]})});var t={type:n.type,id:a.generate(),attributes:{},relationships:e},r={\"new\":!0,\"synchronized\":!1,stable:!1,pristine:!1,initialization:!1},i=n.cache.addOrUpdate(t,r);return o.$emit(\"angularJsonAPI:\"+n.type+\":resource:initialize\",\"resolved\",i),i}function f(){function n(n){o.$emit(\"angularJsonAPI:\"+r.type+\":resource:clearCache\",\"resolved\",n),n.finish(),a.resolve(n)}function e(n){o.$emit(\"angularJsonAPI:\"+r.type+\":resource:clearCache\",\"resolved\",n),n.finish(),a.reject(n)}function t(n){o.$emit(\"angularJsonAPI:\"+r.type+\":resource:clearCache\",\"notify\",n),a.notify(n)}var r=this,a=s.defer(),i={action:\"clearCache\"};return r.cache.clear(),r.synchronizer.synchronize(i).then(n,e,t),a}return u.prototype.get=l,u.prototype.all=d,u.prototype.remove=h,u.prototype.initialize=p,u.prototype.clearCache=f,{create:c}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIResource\",n),n.$inject=[\"AngularJsonAPIModel\",\"AngularJsonAPISchema\",\"AngularJsonAPIResourceCache\",\"AngularJsonAPICollection\",\"uuid4\",\"$rootScope\",\"$log\",\"$q\"]}(),function(){\"use strict\";function n(n,e,t){function r(e,r){function a(n,e,t){return new o(n,e,t)}var o=function(e,r,a){var o=this;e.type!==o.schema.type&&t.error(\"Data type other then declared in schema: \",e.type,\" instead of \",o.schema.type),n.call(o,e,r,a),o.form.parent=o};return o.prototype=Object.create(n.prototype),o.prototype.constructor=o,o.prototype.schema=e,o.prototype.resource=r,o.prototype.synchronize=r.synchronizer.synchronize.bind(r.synchronizer),angular.forEach(e.functions,function(n,e){o.prototype[e]=function(){return n.apply(this,arguments)}}),a}return{modelFactory:r}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModel\",n),n.$inject=[\"AngularJsonAPIAbstractModel\",\"AngularJsonAPISchema\",\"$log\"]}(),function(){\"use strict\";function n(n,r,a,o,i){function s(n,e){return new c(n,e)}function c(e,t){function o(n,e,t){var r;\"resolved\"===e&&void 0!==u.data&&(r=u.data.indexOf(t),r>-1&&(u.data.splice(r,1),u.resource.cache.setIndexIds(u.data)))}function i(){u.data=void 0,u.pristine=!0}function s(n,e,t){\"resolved\"===e&&(u.data=u.data||[],u.data.push(t))}function c(){l(),d(),h()}var u=this;u.resource=e,u.type=e.schema.type,u.params=t,u.errors={\nsynchronization:r.create(\"Synchronization\",\"Errors of synchronizations\",n)},u.data=u.resource.cache.index(u.params),u.loading=!1,u.loadingCount=0,u[\"synchronized\"]=!1,u.pristine=void 0===u.data;var l=a.$on(\"angularJsonAPI:\"+u.type+\":object:remove\",o),d=a.$on(\"angularJsonAPI:\"+u.type+\":resource:clearCache\",i),h=a.$on(\"angularJsonAPI:\"+u.type+\":object:add\",s);a.$on(\"$destroy\",c)}function u(){var n=this,e=!1;return angular.forEach(n.errors,function(n){e=n.hasErrors()||e}),e}function l(n,e){var t=this;return t.resource.get(n,e)}function d(){function n(n){function r(n){return e(n),n.synchronize({action:\"include\",object:n})[\"finally\"](t.bind(n,void 0))}function o(n){angular.forEach(n,function(n,e){n.success===!0&&(a.$emit(\"angularJsonAPI:\"+s.included[e].data.type+\":object:include\",\"resolved\",s.included[e],n),n.value.finish())}),u.resolve(c)}var s=l.__proccesResults(n.data);a.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"resolved\",c,n),i.allSettled(s.included.map(r)).then(o,u.reject),angular.forEach(c.data,t),c.data=s.data,c.updatedAt=Date.now(),c[\"synchronized\"]=!0,c.resource.cache.setIndexIds(c.data),n.finish(),c.errors.synchronization.concat(n.errors),u.resolve(c)}function r(n){a.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"rejected\",c,n),angular.forEach(c.data,t),n.finish(),c.errors.synchronization.concat(n.errors),u.reject(c)}function s(n){a.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"notify\",c,n),u.notify(n)}var c=this,u=i.defer(),l=o.get(\"$jsonapi\"),d={action:\"all\",params:c.params};return e(c),angular.forEach(c.data,e),c.resource.synchronizer.synchronize(d).then(n,r,s)[\"finally\"](t.bind(c,void 0)),u.promise}return c.prototype.fetch=d,c.prototype.refresh=d,c.prototype.get=l,c.prototype.hasErrors=u,{create:s}}function e(n){n=void 0===n?this:n,n.loadingCount+=1,n.loading=!0}function t(n){n=void 0===n?this:n,n.loadingCount-=1,n.loading=n.loadingCount>0}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICollection\",n),n.$inject=[\"AngularJsonAPIModelSynchronizationError\",\"AngularJsonAPIModelErrorsManager\",\"$rootScope\",\"$injector\",\"$q\"]}(),function(){\"use strict\";function n(n){function e(e,a){function o(n,e){var o=a.create(n,e);t[n.type]=o,r.push(n.type)}function i(n){return t[n]}function s(){return t}function c(){return r}function u(){angular.forEach(t,function(n){n.clearCache()})}function l(t,r){return angular.isString(t)?(void 0===n.validators[t]&&e.warn(\"Redeclaring validator\",t),void(n.validators[t]=r)):void e.error(\"Validator name is not a string\",t)}function d(n){var t={data:[],included:[]};void 0===n&&e.error(\"Can't proccess results:\",n);var r={\"new\":!1,\"synchronized\":!0,stable:!0,pristine:!1,initialization:!1};return angular.forEach(n.included,function(n){t.included.push(i(n.type).cache.addOrUpdate(n,r))}),angular.isArray(n.data)?angular.forEach(n.data,function(n){t.data.push(i(n.type).cache.addOrUpdate(n,r))}):t.data.push(i(n.data.type).cache.addOrUpdate(n.data,r)),t}return{addResource:o,getResource:i,clearCache:u,allResources:s,listResources:c,addValidator:l,__proccesResults:d}}var t={},r=[];this.$get=e,e.$inject=[\"$log\",\"AngularJsonAPIResource\"]}angular.module(\"angular-jsonapi\").provider(\"$jsonapi\",n),n.$inject=[\"validateJS\"]}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$logProvider\",function(n){n.debugEnabled(!1)}]).run([\"validateJS\",\"$q\",function(n,e){n.Promise=e}])}();\n//# sourceMappingURL=angular-jsonapi.min.js.map","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, oneWay) {\n      var schema;\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema.type === 'hasMany') {\n        if (oneWay === true) {\n          __addHasMany(object, key, target, false);\n          return [];\n        } else {\n          return __processAddHasMany(object, key, target);\n        }\n      } else if (schema.type === 'hasOne') {\n        if (oneWay === true) {\n          __addHasOne(object, key, target, false);\n          return [];\n        } else {\n          return __processAddHasOne(object, key, target);\n        }\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, oneWay) {\n      var schema;\n\n      if (object === undefined) {\n        $log.error('Can\\'t remove link from non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (oneWay === true) {\n        __removeHasMany(object, key, target, false);\n        return [];\n      } else {\n        return __processRemove(object, key, target);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __processAddHasMany(object, key, target) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var reflectionSchema;\n\n      if (reflectionKey === false) {\n        __addHasMany(object, key, target);\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        return __swapResults(\n          __wrapResults(object, key, target),\n          __wrapResults(target, reflectionKey, object),\n          __processAddHasOne(target, reflectionKey, object)\n        );\n      } else if (reflectionSchema.type === 'hasMany') {\n        __addHasMany(object, key, target);\n        __addHasMany(target, reflectionKey, object);\n        return [__wrapResults(target, reflectionKey, object)];\n      }\n    }\n\n    function __processAddHasOne(object, key, target) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var oldReflection = object.relationships[key];\n      var reflectionSchema;\n      var oldReflectionSchema;\n      var result = [];\n\n      __addHasOne(object, key, target);\n\n      if (oldReflection !== undefined && oldReflection !== null) {\n        oldReflectionSchema = oldReflection.schema.relationships[reflectionKey];\n\n        if (oldReflectionSchema.type === 'hasOne') {\n          __removeHasOne(oldReflection, reflectionKey, object);\n        } else if (oldReflectionSchema.type === 'hasMany') {\n          __removeHasMany(oldReflection, reflectionKey, object);\n        }\n\n        result.push(__wrapResults(oldReflection, reflectionKey, object));\n      }\n\n      if (target !== undefined && target !== null && reflectionKey !== false) {\n        reflectionSchema = target.schema.relationships[reflectionKey];\n\n        if (reflectionSchema.type === 'hasOne') {\n          __addHasOne(target, reflectionKey, object);\n        } else if (reflectionSchema.type === 'hasMany') {\n          __addHasMany(target, reflectionKey, object);\n        }\n\n        result.push(__wrapResults(target, reflectionKey, object));\n      }\n\n      return result;\n    }\n\n    function __processRemove(object, key, target) {\n      var schema = object.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema;\n\n      if (schema.type === 'hasMany') {\n        __removeHasMany(object, key, target);\n      } else if (schema.type === 'hasOne') {\n        __removeHasOne(object, key, target);\n      }\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        __removeHasOne(target, reflectionKey, object);\n      } else if (reflectionSchema.type === 'hasMany') {\n        __removeHasMany(target, reflectionKey, object);\n      }\n\n      return [__wrapResults(target, reflectionKey, object)];\n    }\n\n    function __addHasOne(object, key, target, reset) {\n      $log.debug('addHasOne', object, key, target);\n\n      object.relationships[key] = target;\n      object.data.relationships[key].data = toLinkData(target);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, reset) {\n      var linkData = toLinkData(target);\n      $log.debug('addHasMany', object, key, target);\n\n      if (angular.isArray(object.relationships[key]) && object.relationships[key].indexOf(target) > -1) {\n        return false;\n      }\n\n      object.relationships[key] = object.relationships[key] || [];\n      object.data.relationships[key].data = object.data.relationships[key].data || [];\n\n      object.relationships[key].push(target);\n      object.data.relationships[key].data.push(linkData);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, reset) {\n      $log.debug('removeHasOne', object, key, target);\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        return false;\n      }\n\n      object.relationships[key] = null;\n      object.data.relationships[key].data = undefined;\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, reset) {\n      $log.debug('removeHasMany', object, key, target);\n\n      if (object.relationships[key] === undefined) {\n        return;\n      }\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n        if (reset !== false) {\n          object.reset(true);\n        }\n\n        return true;\n      }\n\n      var index = object.relationships[key].indexOf(target);\n\n      if (index === -1) {\n        return false;\n      }\n\n      object.relationships[key].splice(index, 1);\n      object.data.relationships[key].data.splice(index, 1);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __wrapResults(object, key, target) {\n      return {\n        object: object,\n        key: key,\n        target: target\n      };\n    }\n\n    function __swapResults(value, newValue, array) {\n      var index = -1;\n      angular.forEach(array, function(item, i) {\n        if (item.object === value.object && item.key === value.key && item.target === value.target) {\n          index = i;\n        }\n      });\n\n      if (index > -1) {\n        array[index] = newValue;\n      } else {\n        array.push(newValue);\n      }\n\n      return array;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelLinkerService,\n    validateJS,\n    $q\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return {\n      create: AngularJsonAPIModelFormFactory\n    };\n\n    function AngularJsonAPIModelFormFactory(parent) {\n      return new AngularJsonAPIModelForm(parent);\n    }\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        id: parent.data.id,\n        type: parent.data.type,\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset(auto) {\n      var _this = this;\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = angular.copy(_this.parent.data.relationships[key]) || {};\n        if (angular.isArray(_this.relationships[key])) {\n          _this.relationships[key] = _this.parent.relationships[key].slice();\n        } else {\n          _this.relationships[key] = _this.parent.relationships[key];\n        }\n      });\n\n      if (auto === true && _this.parent.synchronized === true) {\n        return;\n      }\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        _this.data.attributes[key] = angular.copy(_this.parent.data.attributes[key]);\n      });\n\n      _this.parent.errors.validation.clear();\n    }\n\n    /**\n     * Validates form\n     * @return {promise} Promise rejected to errors object indexed by keys. If the\n     * key param i stated it only validates an attribute, else all attributes.\n     */\n    function validate(key) {\n      var _this = this;\n      var attributesWrapper;\n      var constraintsWrapper;\n      var deferred = $q.defer();\n\n      if (key === undefined) {\n        attributesWrapper = _this.data.attributes;\n        constraintsWrapper = _this.schema.attributes;\n      } else {\n        attributesWrapper = {};\n        constraintsWrapper = {};\n\n        attributesWrapper[key] = _this.data.attributes[key];\n        constraintsWrapper[key] = _this.schema.attributes[key];\n      }\n\n      validateJS.async(\n        attributesWrapper,\n        constraintsWrapper\n      ).then(resolve, reject);\n\n      function resolve() {\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        deferred.resolve();\n      }\n\n      function reject(errorsMap) {\n        _this.parent.error = true;\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        angular.forEach(errorsMap, function(errors, attribute) {\n          angular.forEach(errors, function(error) {\n            _this.parent.errors.validation.add(attribute, AngularJsonAPIModelValidationError.create(error, attribute));\n          });\n        });\n\n        deferred.reject(_this.parent.errors.validation);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target) {\n      var _this = this;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.link(_this, key, target, true));\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target) {\n      var _this = this;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.unlink(_this, key, target, true));\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelSynchronizationError,\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelErrorsManager,\n    AngularJsonAPIModelLinkerService,\n    AngularJsonAPIModelForm,\n    uuid4,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    AngularJsonAPIAbstractModel.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {object} config   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, config, updatedAt) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      /**\n       * Is not a new record\n       * @type {Boolean}\n       */\n      _this.new = config.new === undefined ? false : config.new;\n\n      /**\n       * Is present on the server\n       * @type {Boolean}\n       */\n      _this.stable = config.stable === undefined ? true : config.stable;\n\n      /**\n       * Has been synchronized with the server\n       * @type {Boolean}\n       */\n      _this.synchronized = config.synchronized === undefined ? true : config.synchronized;\n\n      /**\n       * Has just been created by request and may not exist on the server\n       * @type {Boolean}\n       */\n      _this.pristine = config.pristine === undefined ? true : config.pristine;\n\n      _this.removed = false;\n      _this.loading = false;\n      _this.saving = false;\n      _this.updatedAt = _this.synchronized === true ? Date.now() : updatedAt;\n\n      _this.loadingCount = 0;\n      _this.savingCount = 0;\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(schema, key) {\n        _this.relationships[key] = undefined;\n      });\n\n      _this.errors = {\n        validation: AngularJsonAPIModelErrorsManager.create(\n          'Validation',\n          'Errors of attributes validation',\n          AngularJsonAPIModelValidationError\n        ),\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Synchronization',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSynchronizationError\n        )\n      };\n\n      _this.promises = {};\n\n      __setData(_this, data);\n\n      _this.form = AngularJsonAPIModelForm.create(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: _this.new === true ? 'add' : 'update',\n        object: _this\n      };\n\n      _this.form.validate().then(\n        synchronize,\n        deferred.reject\n      ).finally(__decrementSavingCounter.bind(_this, undefined));\n\n      __incrementSavingCounter(_this);\n\n      return deferred.promise;\n\n      function synchronize() {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:' + config.action, 'resolved', _this, response);\n        _this.update(_this.form.data);\n\n        if (_this.new === true) {\n          _this.resource.cache.indexIds = _this.resource.cache.indexIds || [];\n          _this.resource.cache.indexIds.push(_this.data.id);\n        }\n\n        _this.synchronized = true;\n        _this.new = false;\n        _this.pristine = false;\n        _this.stable = true;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      if (_this.form !== undefined) {\n        _this.form.reset();\n      }\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh(params) {\n      var $jsonapi = $injector.get('$jsonapi');\n      var deferred = $q.defer();\n      var _this = this;\n      params = params === undefined ? _this.schema.params.get : params;\n\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: params\n      };\n\n      if (_this.new === true) {\n        var error = AngularJsonAPIModelSynchronizationError.create('Can\\'t refresh new object', null, 0, 'refresh');\n        _this.errors.synchronization.add('refresh', error);\n        deferred.reject(error);\n      } else {\n        __incrementLoadingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        _this.synchronized = true;\n        _this.stable = true;\n        _this.pristine = false;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      var config = {\n        action: 'remove',\n        object: _this\n      };\n\n      _this.resource.cache.remove(_this.data.id);\n\n      if (_this.new === true) {\n        deferred.resolve();\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'resolved', _this, response);\n        _this.removed = true;\n        _this.unlinkAll();\n        _this.resource.cache.clearRemoved(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'rejected', _this, response);\n        _this.resource.cache.revertRemove(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlink all reflection relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      __incrementLoadingCounter(_this);\n\n      if (key === undefined) {\n        angular.forEach(_this.relationships, removeLink);\n      } else {\n        removeLink(_this.relationships[key], key);\n      }\n\n      __decrementLoadingCounter(_this);\n\n      return deferred.promise;\n\n      function removeLink(linksObj, key) {\n        var schema = _this.schema.relationships[key];\n        var reflectionKey = schema.reflection;\n\n        if (angular.isArray(linksObj)) {\n          angular.forEach(linksObj, removeReflectionLink.bind(undefined, reflectionKey));\n        } else if (angular.isObject(linksObj)) {\n          removeReflectionLink(reflectionKey, linksObj);\n        }\n\n        if (schema.type === 'hasOne') {\n          _this.relationships[key] = null;\n        } else if (schema.type === 'hasMany') {\n          _this.relationships[key] = [];\n        }\n      }\n\n      function removeReflectionLink(reflectionKey, target) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n        var config = {\n          action: 'unlinkReflection',\n          object: target,\n          target: _this,\n          key: reflectionKey\n        };\n\n        __incrementLoadingCounter(target);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        target.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(target, undefined));\n\n        function resolve(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'resolve', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.resolve(_this);\n        }\n\n        function reject(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'rejected', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.reject(_this);\n        }\n\n        function notify(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'link',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSynchronizationError.create('Can\\'t link undefined', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSynchronizationError.create('Can\\'t link new object', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'linkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].object.data.type + ':object:linkReflection', 'resolved', targets[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked if undefined unlinks all\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'unlink',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSynchronizationError.create('Can\\'t unlink undefined', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSynchronizationError.create('Can\\'t unlink new object', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'unlinkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:unlinkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData, auto, initialization) {\n      var _this = this;\n\n      __incrementLoadingCounter(_this);\n\n      __setData(_this, validatedData);\n      _this.reset(auto);\n      _this.synchronized = initialization === true ? false : true;\n      _this.stable = initialization === true ? false : true;\n      _this.updatedAt = Date.now();\n\n      __decrementLoadingCounter(_this);\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData) {\n\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.resource.schema.type !== validatedData.type) {\n        $log.error('Different type then resource', object.resource.schema.type, validatedData);\n        return false;\n      }\n\n      if (!uuid4.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        var relationshipData = validatedData.relationships[key];\n\n        if (relationshipData === undefined) {\n          object.data.relationships[key] = {data: undefined};\n          return;\n        }\n\n        object.data.relationships[key] = object.data.relationships[key] || {};\n        object.data.relationships[key].links = relationshipData.links;\n\n        if (schema.type === 'hasOne') {\n          linkOne(object, key, relationshipData.data);\n        } else if (schema.type === 'hasMany') {\n          if (angular.isArray(relationshipData.data)) {\n            if (relationshipData.data.length === 0) {\n              object.data.relationships[key].data = [];\n              object.unlinkAll(key);\n            } else {\n              angular.forEach(\n                object.relationships[key],\n                unlinkOne.bind(undefined, object, key, relationshipData.data)\n              );\n              angular.forEach(\n                relationshipData.data,\n                linkOne.bind(undefined, object, key)\n              );\n            }\n          }\n        }\n      }\n\n      function linkOne(object, key, data) {\n        var resource;\n\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        resource = $jsonapi.getResource(data.type);\n\n        if (resource === undefined) {\n          $log.error('Factory not found', data.type, data);\n          return;\n        }\n\n        var target = resource.cache.get(data.id);\n\n        AngularJsonAPIModelLinkerService.link(object, key, target);\n      }\n\n      function unlinkOne(object, key, relationshipData, target) {\n        if (relationshipData.indexOf(target.data.id) > -1) {\n          return;\n        }\n\n        AngularJsonAPIModelLinkerService.unlink(object, key, target);\n      }\n    }\n  }\n\n  /////////////\n  // Private //\n  /////////////\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n\n  function __incrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount += 1;\n    object.saving = true;\n  }\n\n  function __decrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount -= 1;\n    object.saving = object.savingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelValidationError', AngularJsonAPIModelValidationErrorWrapper);\n\n  function AngularJsonAPIModelValidationErrorWrapper() {\n    ValidationError.prototype = Object.create(Error.prototype);\n    ValidationError.prototype.constructor = ValidationError;\n    ValidationError.prototype.name = 'ValidationError';\n\n    return {\n      create: ValidationErrorFactory\n    };\n\n    function ValidationErrorFactory(message, attribute) {\n      return new ValidationError(message, attribute);\n    }\n\n    function ValidationError(message, attribute) {\n      var _this = this;\n      Error.captureStackTrace(_this, _this.constructor);\n\n      _this.message = message;\n      _this.context = {\n        attribute: attribute\n      };\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelSynchronizationError', AngularJsonAPIModelSynchronizationErrorWrapper);\n\n  function AngularJsonAPIModelSynchronizationErrorWrapper() {\n    SynchronizationError.prototype = Object.create(Error.prototype);\n    SynchronizationError.prototype.constructor = SynchronizationError;\n    SynchronizationError.prototype.name = 'SynchronizationError';\n\n    return {\n      create: SynchronizationErrorFactory\n    };\n\n    function SynchronizationErrorFactory(message, synchronization, code, action) {\n      return new SynchronizationError(message, synchronization, code, action);\n    }\n\n    function SynchronizationError(message, synchronization, code, action) {\n      var _this = this;\n      Error.captureStackTrace(_this, _this.constructor);\n\n      _this.message = message;\n      _this.context = {\n        synchronization: synchronization,\n        code: code,\n        action: action\n      };\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelErrorsManager', AngularJsonAPIModelErrorsManagerWrapper);\n\n  function AngularJsonAPIModelErrorsManagerWrapper() {\n    ErrorsManager.prototype.constructor = ErrorsManager;\n    ErrorsManager.prototype.concat = concat;\n    ErrorsManager.prototype.clear = clear;\n    ErrorsManager.prototype.add = add;\n    ErrorsManager.prototype.hasErrors = hasErrors;\n\n    return {\n      create: ErrorsManagerFactory\n    };\n\n    function ErrorsManagerFactory(name, description, ErrorConstructor, defaultFilter) {\n      return new ErrorsManager(name, description, ErrorConstructor, defaultFilter);\n    }\n\n    function ErrorsManager(name, description, ErrorConstructor, defaultFilter) {\n      var _this = this;\n      _this.name = name;\n      _this.description = description;\n\n      _this.ErrorConstructor = ErrorConstructor;\n      _this.errors = {};\n      _this.defaultFilter = defaultFilter || function() { return true; };\n    }\n\n    function clear(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        angular.forEach(_this.errors, function(obj, key) {\n          _this.errors[key] = [];\n        });\n      } else {\n        _this.errors[key] = [];\n      }\n    }\n\n    function add(key, error) {\n      var _this = this;\n\n      _this.errors[key] = _this.errors[key] || [];\n      _this.errors[key].push(error);\n    }\n\n    function concat(errors) {\n      var _this = this;\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key] = [];\n      });\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key].push(error.object);\n      });\n\n    }\n\n    function hasErrors(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        var answer = false;\n\n        angular.forEach(_this.errors, function(error) {\n          answer = answer || error.length > 0;\n        });\n\n        return answer;\n      } else {\n        return _this.errors[key] !== undefined && _this.errors[key].length > 0;\n      }\n    }\n  }\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises, resolvedCallback, rejectedCallback) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.resolve(promise)\n            .then(function(value) {\n              if (angular.isFunction(resolvedCallback)) {\n                resolvedCallback(value);\n              }\n\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              if (angular.isFunction(rejectedCallback)) {\n                rejectedCallback(reason);\n              }\n\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return {\n      create: AngularJsonAPISynchronizerSimpleFactory\n    };\n\n    function AngularJsonAPISynchronizerSimpleFactory(synchronizations) {\n      return new AngularJsonAPISynchronizerSimple(synchronizations);\n    }\n\n    function AngularJsonAPISynchronizerSimple(synchronizations) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, synchronizations);\n\n      angular.forEach(synchronizations, function(synchronization) {\n        synchronization.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push({\n              key: action,\n              object: result.reason\n            });\n          }\n        });\n\n        if (errors.length > 0) {\n          deferred.reject({data: data, finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(synchronizations) {\n      var _this = this;\n\n      _this.synchronizations = synchronizations;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.resource.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationRest', AngularJsonAPISynchronizationRestWrapper);\n\n  function AngularJsonAPISynchronizationRestWrapper(\n    AngularJsonAPIModelSynchronizationError,\n    AngularJsonAPISynchronizationPrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISynchronizationRest.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationRest.prototype.constructor = AngularJsonAPISynchronizationRest;\n\n    return {\n      create: AngularJsonAPISynchronizationRestFactory\n    };\n\n    function AngularJsonAPISynchronizationRestFactory(name, url) {\n      return new AngularJsonAPISynchronizationRest(name, url);\n    }\n\n    function AngularJsonAPISynchronizationRest(name, url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISynchronizationPrototype.apply(_this, arguments);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp.bind(null, 'all'));\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp.bind(null, 'get'));\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp.bind(null, 'remove'));\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject(AngularJsonAPIModelSynchronizationError.create('Object has been removed', _this, 0, 'unlink'));\n        } else if (config.target !== undefined && config.target.data.id === undefined) {\n          deferred.reject(AngularJsonAPIModelSynchronizationError.create('Can\\'t unlink object without id through rest call', _this, 0, 'unlink'));\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'get')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          if (config.target === undefined) {\n            $http({\n              method: 'PUT',\n              headers: headers,\n              data: {data: []},\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          } else {\n            $http({\n              method: 'DELETE',\n              headers: headers,\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key + '/' + config.target.data.id\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          }\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target === undefined || config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'PUT',\n            headers: headers,\n            data: {data: AngularJsonAPIModelLinkerService.toLinkData(config.target)},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          $http({\n            method: 'POST',\n            headers: headers,\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        return $http({\n          method: 'PUT',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'update'));\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url + '/',\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'add'));\n      }\n\n      function resolveHttp(response) {\n        return $q.resolve(response.data);\n      }\n\n      function rejectHttp(action, response) {\n        var deferred = $q.defer();\n\n        if (response.status === 0) {\n          $http({\n            method: 'GET',\n            url: 'https://status.cloud.google.com/incidents.schema.json'\n          }).then(rejectServerOffline, rejectNoConnection);\n        } else {\n          deferred.reject(AngularJsonAPIModelSynchronizationError.create(response.statusText, _this, response.status, action));\n        }\n\n        return deferred.promise;\n\n        function rejectServerOffline(response) {\n          deferred.reject(AngularJsonAPIModelSynchronizationError.create('Server is offline', _this, response.status, action));\n        }\n\n        function rejectNoConnection() {\n          deferred.reject(AngularJsonAPIModelSynchronizationError.create('No internet connection', _this, response.status, action));\n        }\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizationPrototype', AngularJsonAPISynchronizationPrototypeWrapper);\n\n  function AngularJsonAPISynchronizationPrototypeWrapper() {\n    AngularJsonAPISynchronizationPrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.after = afterSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.begin = begin;\n    AngularJsonAPISynchronizationPrototype.prototype.finish = finish;\n    AngularJsonAPISynchronizationPrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISynchronizationPrototype;\n\n    function AngularJsonAPISynchronizationPrototype(name) {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clearCache',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh',\n        'include'\n      ];\n\n      _this.name = name;\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationLocal', AngularJsonAPISynchronizationLocalWrapper);\n\n  function AngularJsonAPISynchronizationLocalWrapper(\n    AngularJsonAPISynchronizationPrototype,\n    $window,\n    $q\n  ) {\n\n    AngularJsonAPISynchronizationLocal.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationLocal.prototype.constructor = AngularJsonAPISynchronizationLocal;\n\n    return {\n      create: AngularJsonAPISynchronizationLocalFactory\n    };\n\n    function AngularJsonAPISynchronizationLocalFactory(name, prefix) {\n      return new AngularJsonAPISynchronizationLocal(name, prefix);\n    }\n\n    function AngularJsonAPISynchronizationLocal(name, prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISynchronizationPrototype.apply(_this, arguments);\n\n      _this.synchronization('init', init);\n\n      _this.begin('clearCache', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('refresh', updateStorage);\n      _this.begin('unlink', updateStorage);\n      _this.begin('unlinkReflection', updateStorage);\n      _this.begin('link', updateStorage);\n      _this.begin('linkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.begin('get', updateStorage);\n      _this.begin('all', updateStorage);\n      _this.begin('include', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clearCache', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('refresh', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n      _this.finish('include', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.resource.schema.type;\n        return $q.resolve($window.localStorage.getItem(prefix + '.' + type));\n      }\n\n      function clear() {\n        var type = _this.synchronizer.resource.schema.type;\n        $window.localStorage.removeItem(prefix + '.' + type);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.resource.schema.type;\n        var cache = _this.synchronizer.resource.cache;\n        $window.localStorage.setItem(prefix + '.' + type, cache.toJson());\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper($log, pluralize, AngularJsonAPISchemaLink) {\n\n    return {\n      create: AngularJsonAPISchemaFactory\n    };\n\n    function AngularJsonAPISchemaFactory(schema) {\n      return new AngularJsonAPISchema(schema);\n    }\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = AngularJsonAPISchemaLink.create(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get.join(',');\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all.join(',');\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchemaLink', AngularJsonAPILinkSchrapperLink);\n\n  function AngularJsonAPILinkSchrapperLink($log, pluralize) {\n\n    return {\n      create: AngularJsonAPISchemaLinkFactory\n    };\n\n    function AngularJsonAPISchemaLinkFactory(linkSchema, linkName, type) {\n      return new AngularJsonAPISchemaLink(linkSchema, linkName, type);\n    }\n\n    function AngularJsonAPISchemaLink(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        if (linkSchema.type !== 'hasMany' && linkSchema.type !== 'hasOne') {\n          $log.error('Schema of link with wrong type: ', linkSchema.type, 'available: hasOne, hasMany');\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n\n        if (linkSchema.reflection === undefined) {\n          _this.reflection = _this.type === 'hasMany' ? pluralize.singular(type) : type;\n        } else {\n          _this.reflection = linkSchema.reflection;\n        }\n\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResource', AngularJsonAPIResourceWrapper);\n\n  function AngularJsonAPIResourceWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPIResourceCache,\n    AngularJsonAPICollection,\n    uuid4,\n    $rootScope,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIResource.prototype.get = get;\n    AngularJsonAPIResource.prototype.all = all;\n    AngularJsonAPIResource.prototype.remove = remove;\n    AngularJsonAPIResource.prototype.initialize = initialize;\n\n    AngularJsonAPIResource.prototype.clearCache = clearCache;\n\n    return {\n      create: AngularJsonAPIResourceFactory\n    };\n\n    function AngularJsonAPIResourceFactory(schema, synchronizer) {\n      return new AngularJsonAPIResource(schema, synchronizer);\n    }\n\n    /**\n     * AngularJsonAPIResource constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the resource\n     */\n    function AngularJsonAPIResource(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = AngularJsonAPISchema.create(schema);\n      _this.cache = AngularJsonAPIResourceCache.create(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.resource = _this;\n\n      _this.modelFactory = AngularJsonAPIModel.modelFactory(\n        _this.schema,\n        _this\n      );\n\n      _this.initialized = false;\n      _this.type = _this.schema.type;\n\n      synchronizer.resource = _this;\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'resolved', response);\n        _this.cache.fromJson(response.data);\n        _this.initialized = true;\n\n        response.finish();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'rejected', response);\n        response.finish();\n        _this.initialized = true;\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'notify', response);\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id, params) {\n      var _this = this;\n\n      if (!uuid4.validate(id)) {\n        return $q.reject({errors: [{status: 0, statusText: 'Invalid id not uuid4'}]});\n      }\n\n      var object = _this.cache.get(id);\n\n      object.refresh(params);\n\n      return object;\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = params === undefined ? _this.schema.params.all : params;\n\n      var collection = AngularJsonAPICollection.create(\n        _this,\n        params\n      );\n\n      collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n\n      return object.remove();\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize() {\n      var _this = this;\n      var relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(relationshipSchema, relationshipName) {\n        if (relationshipSchema.type === 'hasOne') {\n          relationships[relationshipName] = {\n            data: null\n          };\n        } else if (relationshipSchema.type === 'hasMany') {\n          relationships[relationshipName] = {\n            data: []\n          };\n        }\n      });\n\n      var data = {\n        type: _this.type,\n        id: uuid4.generate(),\n        attributes: {},\n        relationships: relationships\n      };\n\n      var config = {\n        new: true,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: false\n      };\n\n      var object = _this.cache.addOrUpdate(data, config);\n\n      $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:initialize', 'resolved', object);\n\n      return object;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clearCache() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: 'clearCache'\n      };\n\n      _this.cache.clear();\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'notify', response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(AngularJsonAPIAbstractModel, AngularJsonAPISchema, $log) {\n\n    return {\n      modelFactory: createModelFactory\n    };\n\n    function createModelFactory(schemaObj, resource) {\n      var Model = function(data, config, updatedAt) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, config, updatedAt);\n\n        _this.form.parent = _this;\n      };\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.resource = resource;\n      Model.prototype.synchronize = resource.synchronizer.synchronize.bind(resource.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return modelFactory;\n\n      function modelFactory(data, updatedAt, isNew) {\n        return new Model(data, updatedAt, isNew);\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    AngularJsonAPIModelSynchronizationError,\n    AngularJsonAPIModelErrorsManager,\n    $rootScope,\n    $injector,\n    $q\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n    AngularJsonAPICollection.prototype.hasErrors = hasErrors;\n\n    return {\n      create: AngularJsonAPICollectionFactory\n    };\n\n    function AngularJsonAPICollectionFactory(resource, params) {\n      return new AngularJsonAPICollection(resource, params);\n    }\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIResource} resource Factory associated with the collection\n     * @param {object} params  Params associated with this resource (such as filters)\n     */\n    function AngularJsonAPICollection(resource, params) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.type = resource.schema.type;\n      _this.params = params;\n\n      _this.errors = {\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Synchronization',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSynchronizationError\n        )\n      };\n\n      _this.data = _this.resource.cache.index(_this.params);\n\n      _this.loading = false;\n      _this.loadingCount = 0;\n      _this.synchronized = false;\n      _this.pristine = _this.data === undefined;\n\n      var onObjectRemove = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:remove', remove);\n      var onFactoryClear = $rootScope.$on('angularJsonAPI:' + _this.type + ':resource:clearCache', clear);\n      var onObjectAdd = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:add', add);\n\n      $rootScope.$on('$destroy', clearWatchers);\n\n      function remove(event, status, object) {\n        var index;\n\n        if (status === 'resolved' && _this.data !== undefined) {\n          index = _this.data.indexOf(object);\n          if (index > -1) {\n            _this.data.splice(index, 1);\n            _this.resource.cache.setIndexIds(_this.data);\n          }\n        }\n      }\n\n      function clear() {\n        _this.data = undefined;\n        _this.pristine = true;\n      }\n\n      function add(event, status, object) {\n        if (status === 'resolved') {\n          _this.data = _this.data || [];\n          _this.data.push(object);\n        }\n      }\n\n      function clearWatchers() {\n        onObjectRemove();\n        onFactoryClear();\n        onObjectAdd();\n      }\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /**\n     * Shortcut to this.resource.get\n     * @param  {uuid4} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id, params) {\n      var _this = this;\n\n      return _this.resource.get(id, params);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var deferred = $q.defer();\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params\n      };\n\n      __incrementLoadingCounter(_this);\n\n      angular.forEach(_this.data, __incrementLoadingCounter);\n\n      _this.resource.synchronizer.synchronize(config)\n        .then(resolve, reject, notify)\n        .finally(__decrementLoadingCounter.bind(_this, undefined));\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n\n        _this.data = results.data;\n\n        _this.updatedAt = Date.now();\n        _this.synchronized = true;\n\n        _this.resource.cache.setIndexIds(_this.data);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'rejected', _this, response);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider(validateJS) {\n    var memory = {};\n    var names = [];\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPIResource) {\n      return {\n        addResource: addResource,\n        getResource: getResource,\n        clearCache: clearCache,\n        allResources: allResources,\n        listResources: listResources,\n        addValidator: addValidator,\n\n        __proccesResults: __proccesResults\n      };\n\n      function addResource(schema, synchronization) {\n        var resource = AngularJsonAPIResource.create(schema, synchronization);\n\n        memory[schema.type] = resource;\n        names.push(schema.type);\n      }\n\n      function getResource(type) {\n        return memory[type];\n      }\n\n      function allResources() {\n        return memory;\n      }\n\n      function listResources() {\n        return names;\n      }\n\n      function clearCache() {\n        angular.forEach(memory, function(resource) {\n          resource.clearCache();\n        });\n      }\n\n      function addValidator(name, validator) {\n        if (!angular.isString(name)) {\n          $log.error('Validator name is not a string', name);\n          return;\n        } else if (validateJS.validators[name] === undefined) {\n          $log.warn('Redeclaring validator', name);\n        }\n\n        validateJS.validators[name] = validator;\n      }\n\n      function __proccesResults(results) {\n        var objects = {\n          data: [],\n          included: []\n        };\n\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n        }\n\n        var config = {\n          new: false,\n          synchronized: true,\n          stable: true,\n          pristine: false,\n          initialization: false\n        };\n\n        angular.forEach(results.included, function(data) {\n          objects.included.push(getResource(data.type).cache.addOrUpdate(data, config));\n        });\n\n        if (angular.isArray(results.data)) {\n          angular.forEach(results.data, function(data) {\n            objects.data.push(getResource(data.type).cache.addOrUpdate(data, config));\n          });\n        } else {\n          objects.data.push(getResource(results.data.type).cache.addOrUpdate(results.data, config));\n        }\n\n        return objects;\n      }\n    }\n  }\n\n})();\n\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(function($logProvider) {\n    $logProvider.debugEnabled(false);\n  })\n  .run(function(validateJS, $q) {\n    validateJS.Promise = $q;\n  });\n})();\n"],"sourceRoot":"/source/"}