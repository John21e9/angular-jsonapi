{"version":3,"sources":["/source/jsonapi.module.js","/source/model/model-validator/model-validator.js","angular-jsonapi.min.js","/source/model/model-linker/model-linker.js","/source/model/model-form/model-form.js","/source/model/abstract-model/abstract-model.js","/source/factory/factory-cache/factory-cache.factory.js","/source/utils/lazy-property.js","/source/utils/kebab-case.js","/source/utils/all-settled.js","/source/synchronizers/synchronizer-simple.js","/source/synchronizers/synchronizer-prototype.js","/source/synchronizations/synchronization-rest.js","/source/synchronizations/synchronization-prototype.js","/source/synchronizations/synchronization-local.js","/source/schema/schema.js","/source/schema/schema-link.js","/source/model/model.js","/source/factory/factory.js","/source/collection/collection.js","/source/jsonapi.provider.js","/source/jsonapi.config.js"],"names":["angular","module","constant","pluralize","validate","AngularJsonAPIModelValidatorService","$q","validateForm","schema","data","resolve","validateField","key","_this","this","service","$inject","AngularJsonAPIModelLinkerService","$log","toLinkData","object","type","id","link","target","oneWay","undefined","error","relationships","polymorphic","model","__addHasMany","__processAddHasMany","__addHasOne","__processAddHasOne","unlink","__removeHasMany","__processRemove","reflectionSchema","reflectionKey","reflection","__swapResults","__wrapResults","oldReflectionSchema","oldReflection","result","__removeHasOne","push","reset","debug","linkData","isArray","indexOf","index","splice","value","newValue","array","forEach","item","i","AngularJsonAPIModelFormWrapper","AngularJsonAPIModelForm","parent","attributes","toJson","copy","save","auto","slice","validator","errors","validation","reject","erorrs","deferred","defer","then","promise","prototype","factory","AngularJsonAPIAbstractModelWrapper","uuid4","$rootScope","$injector","AngularJsonAPIAbstractModel","config","updatedAt","saved","stable","pristine","removed","loading","saving","Date","now","loadingCount","savingCount","name","synchronization","promises","__setData","form","addToIndex","response","$emit","action","update","cache","indexIds","finish","notify","synchronize","__decrementSavingCounter","bind","__incrementSavingCounter","refresh","synchronizeIncluded","__incrementLoadingCounter","__decrementLoadingCounter","resolveIncluded","includedResponse","operation","success","results","included","$jsonapi","proccesResults","allSettled","map","get","params","status","statusText","remove","unlinkAll","clearRemoved","revertRemove","removeLink","linksObj","removeReflectionLink","isObject","resolveReflection","targets","validatedData","initialization","setAttributes","validators","setRelationships","relationshipData","links","linkOne","length","unlinkOne","getFactory","AngularJsonAPICacheWrapper","AngularJsonAPICache","size","addOrUpdate","Model","fromJson","json","collection","synchronized","objectData","clear","setIndexIds","element","isString","propertyName","callback","done","Object","defineProperty","call","enumerable","configurable","str","replace","toLowerCase","$provide","decorator","$delegate","resolvedCallback","rejectedCallback","wrap","isFunction","reason","wrapped","hasOwnProperty","all","AngularJsonAPISynchronizerSimpleWrapper","AngularJsonAPISynchronizerPrototype","AngularJsonAPISynchronizerSimple","synchronizations","state","synchronizer","step","resolved","afterHooks","hook","finishHooks","rejected","noop","beginHooks","beforeHooks","synchronizationHooks","create","constructor","AngularJsonAPISynchronizerPrototypeWrapper","AngularJsonAPISynchronizationRestWrapper","AngularJsonAPISynchronizationPrototype","toKebabCase","$http","AngularJsonAPISynchronizationRest","url","method","headers","resolveHttp","rejectHttp","add","rejectServerOffline","rejectNoConnection","Accept","Content-Type","AngularJsonAPISynchronizationPrototypeWrapper","allHooks","options","hookName","begin","beforeSynchro","afterSynchro","before","after","AngularJsonAPISynchronizationLocalWrapper","$window","AngularJsonAPISynchronizationLocal","prefix","init","localStorage","getItem","removeItem","updateStorage","setItem","__updateStorage","AngularJsonAPISchemaWrapper","AngularJsonAPISchemaLink","AngularJsonAPISchema","include","linkSchema","linkName","linkSchemaObj","extend","join","AngularJsonAPILinkSchrapperLink","plural","singular","AngularJsonAPIModel","modelFactory","schemaObj","functions","metaFunction","metaFunctionName","apply","arguments","AngularJsonAPIFactoryWrapper","AngularJsonAPICollection","AngularJsonAPIFactory","initialized","fetch","initialize","relationshipSchema","relationshipName","warn","generate","clearCache","AngularJsonAPICollectionWrapper","event","description","$on","jsonapiProvider","jsonapiFactory","allFactories","memory","factoriesNames","names","addFactory","objects","$get","provider","$logProvider","debugEnabled"],"mappings":"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","file":"angular-jsonapi.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false, validate: false */\n  .constant('pluralize', pluralize)\n  .constant('validate', validate);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelValidatorService', AngularJsonAPIModelValidatorService);\n\n  function AngularJsonAPIModelValidatorService(\n    $q\n  ) {\n    var _this = this;\n    _this.validateForm = validateForm;\n    _this.validateField = validateField;\n\n    return this;\n\n    /**\n     * Validates form\n     * @param  {object} data Form data\n     * @return {object} Errors object indexed by keys\n     */\n    function validateForm(schema, data) {\n      var _this = this;\n\n      return $q.resolve({});\n    }\n\n    /**\n     * Validates single field\n     * @param  {string} key Field key\n     * @return {array}     Errors array\n     */\n    function validateField(schema, key) {\n      var _this = this;\n\n      return $q.resolve([]);\n    }\n\n    // function __validate(validator, attributeValue, attributeName) {\n    //   var errors = [];\n    //   if (angular.isArray(validator)) {\n    //     angular.forEach(validator, function(element) {\n    //       errors = errors.concat(__validate(element, attributeValue, attributeName));\n    //     });\n    //   } else if (angular.isFunction(validator)) {\n    //     var err = validator(attributeValue, attributeName);\n    //     if (angular.isArray(err)) {\n    //       errors.concat(err);\n    //     } else {\n    //       $log.error(\n    //         'Wrong validator type it should return array of errors instead of: ' +\n    //           err.toString()\n    //       );\n    //     }\n    //   } else if (angular.isString(validator)) {\n    //     if (validator === 'text' || validator === 'string') {\n    //       if (!angular.isString(attributeValue)) {\n    //         errors.push(attributeName + ' is not a string ');\n    //       }\n    //     } else if (validator === 'number' || validator === 'integer') {\n    //       if (parseInt(attributeValue).toString() !== attributeValue.toString()) {\n    //         errors.push(attributeName + ' is not a number');\n    //       }\n    //     } else if (validator === 'uuid4') {\n    //       if (!uuid4.validate(attributeValue)) {\n    //         errors.push(attributeName + ' is not a uuid4');\n    //       }\n    //     } else if (validator === 'required') {\n    //       if (attributeValue.toString().length === 0) {\n    //         errors.push(attributeName + ' is empty');\n    //       }\n    //     } else {\n    //       $log.error('Wrong validator type: ' + validator.toString());\n    //     }\n    //   } else if (angular.isObject(validator)) {\n    //     if (validator.maxlength !== undefined && attributeValue.length > validator.maxlength) {\n    //       errors.push(attributeName + ' is too long max ' + validator.maxlength);\n    //     }\n\n    //     if (validator.minlength !== undefined && attributeValue.length < validator.minlength) {\n    //       errors.push(attributeName + ' is too short min ' + validator.minlength);\n    //     }\n\n    //     if (validator.maxvalue !== undefined && parseInt(attributeValue) > validator.maxvalue) {\n    //       errors.push(attributeName + ' is too big max ' + validator.maxvalue);\n    //     }\n\n    //     if (validator.minvalue !== undefined && parseInt(attributeValue) < validator.minvalue) {\n    //       errors.push(attributeName + ' is too small min ' + validator.minvalue);\n    //     }\n    //   } else {\n    //     $log.error('Wrong validator type: ' + validator.toString());\n    //   }\n\n    //   return errors;\n    // }\n  }\n})();\n","!function(){\"use strict\";angular.module(\"angular-jsonapi\",[\"uuid4\"]).constant(\"pluralize\",pluralize).constant(\"validate\",validate)}(),function(){\"use strict\";function t(t){function e(e,n){return t.resolve({})}function n(e,n){return t.resolve([])}var a=this;return a.validateForm=e,a.validateField=n,this}angular.module(\"angular-jsonapi\").service(\"AngularJsonAPIModelValidatorService\",t),t.$inject=[\"$q\"]}(),function(){\"use strict\";function t(t){function e(t){return null===t?null:{type:t.data.type,id:t.data.id}}function n(e,n,a,i){var u;return void 0===e?(t.error(\"Can't add link to non existing object\",e,n,a),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),[]):(u=e.schema.relationships[n],void 0===a?(t.error(\"Can't link non existing object\",e,n,a,u),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),t.error(\"Schema:\",u),[]):void 0===u?(t.error(\"Can't add link not present in schema:\",e,n,a,u),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),t.error(\"Schema:\",u),[]):null!==a&&u.polymorphic===!1&&u.model!==a.data.type?(t.error(\"This relation is not polymorphic, expected: \"+u.model+\" instead of \"+a.data.type),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),t.error(\"Schema:\",u),[]):\"hasMany\"===u.type?i===!0?(c(e,n,a,!1),[]):r(e,n,a):\"hasOne\"===u.type?i===!0?(s(e,n,a,!1),[]):o(e,n,a):void 0)}function a(e,n,a,r){var o;return void 0===e?(t.error(\"Can't remove link from non existing object\",e,n,a),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),[]):(o=e.schema.relationships[n],void 0===o?(t.error(\"Can't remove link not present in schema:\",e,n,a,o),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),t.error(\"Schema:\",o),[]):r===!0?(l(e,n,a,!1),[]):i(e,n,a))}function r(t,e,n){var a,r=t.schema.relationships[e].reflection;return r===!1?(c(t,e,n),[]):(a=n.schema.relationships[r],\"hasOne\"===a.type?h(d(t,e,n),d(n,r,t),o(n,r,t)):\"hasMany\"===a.type?(c(t,e,n),c(n,r,t),[d(n,r,t)]):void 0)}function o(t,e,n){var a,r,o=t.schema.relationships[e].reflection,i=t.relationships[e],d=[];return s(t,e,n),void 0!==i&&null!==i&&(r=i.schema.relationships[o],\"hasOne\"===r.type?u(i,o,t):\"hasMany\"===r.type&&l(i,o,t),d.push(i,o,t)),void 0!==n&&null!==n&&o!==!1&&(a=n.schema.relationships[o],\"hasOne\"===a.type?s(n,o,t):\"hasMany\"===a.type&&c(n,o,t),d.push(n,o,t)),d}function i(t,e,n){var a,r=t.schema.relationships[e],o=r.reflection;return\"hasMany\"===r.type?l(t,e,n):\"hasOne\"===r.type&&u(t,e,n),o===!1?[]:(a=n.schema.relationships[o],\"hasOne\"===a.type?u(n,o,t):\"hasMany\"===a.type&&l(n,o,t),[d(n,o,t)])}function s(n,a,r,o){return t.debug(\"addHasOne\",n,a,r),n.relationships[a]=r,n.data.relationships[a].data=e(r),o!==!1&&n.reset(!0),!0}function c(n,a,r,o){var i=e(r);return t.debug(\"addHasMany\",n,a,r),angular.isArray(n.relationships[a])&&n.relationships[a].indexOf(r)>-1?!1:(n.relationships[a]=n.relationships[a]||[],n.data.relationships[a].data=n.data.relationships[a].data||[],n.relationships[a].push(r),n.data.relationships[a].data.push(i),o!==!1&&n.reset(!0),!0)}function u(e,n,a,r){return t.debug(\"removeHasOne\",e,n,a),void 0!==a&&e.relationships[n]!==a?!1:(e.relationships[n]=null,e.data.relationships[n].data=void 0,r!==!1&&e.reset(!0),!0)}function l(e,n,a,r){if(t.debug(\"removeHasMany\",e,n,a),void 0!==e.relationships[n]){if(void 0===a)return e.relationships[n]=[],e.data.relationships[n].data=[],r!==!1&&e.reset(!0),!0;var o=e.relationships[n].indexOf(a);return-1===o?!1:(e.relationships[n].splice(o,1),e.data.relationships[n].data.splice(o,1),r!==!1&&e.reset(!0),!0)}}function d(t,e,n){return{object:t,key:e,target:n}}function h(t,e,n){var a=-1;return angular.forEach(n,function(e,n){e.object===t.object&&e.key===t.key&&e.target===t.target&&(a=n)}),a>-1?n[a]=e:n.push(e),n}var f=this;return f.toLinkData=e,f.link=n,f.unlink=a,this}angular.module(\"angular-jsonapi\").service(\"AngularJsonAPIModelLinkerService\",t),t.$inject=[\"$log\"]}(),function(){\"use strict\";function t(t,e,n){function a(t){var e=this;e.data={id:t.data.id,type:t.data.type,attributes:{},relationships:{}},e.relationships={},e.parent=t,e.schema=t.schema,e.reset()}function r(){var t=this,e=angular.copy(t.data),n={};return angular.forEach(e.relationships,function(t,e){void 0!==t.data&&(n[e]=t)}),e.relationships=n,{data:e}}function o(){var t=this;return t.parent.save()}function i(t){var e=this;angular.forEach(e.schema.relationships,function(t,n){e.data.relationships[n]=angular.copy(e.parent.data.relationships[n])||{},e.relationships[n]=angular.isArray(e.relationships[n])?e.parent.relationships[n].slice():e.parent.relationships[n]}),(t!==!0||e.parent[\"synchronized\"]!==!0)&&(angular.forEach(e.schema.attributes,function(t,n){e.data.attributes[n]=angular.copy(e.parent.data.attributes[n])||\"\"}),e.errors={validation:{}})}function s(){function e(t){a.errors.validation=t,r.reject(t)}var a=this,r=n.defer();return t.validateForm(a.data).then(r.resolve,e),r.promise}function c(e){function a(t){r.errors.validation[e]=t,o.reject(t)}var r=this,o=n.defer();return t.validateForm(r.data[e],e).then(o.resolve,a),o.promise}function u(t,a){var r=this;return n.resolve(e.link(r,t,a,!0))}function l(t,a){var r=this;return n.resolve(e.unlink(r,t,a,!0))}return a.prototype.save=o,a.prototype.reset=i,a.prototype.validate=s,a.prototype.validateField=c,a.prototype.link=u,a.prototype.unlink=l,a.prototype.toJson=r,a}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelForm\",t),t.$inject=[\"AngularJsonAPIModelValidatorService\",\"AngularJsonAPIModelLinkerService\",\"$q\"]}(),function(){\"use strict\";function t(t,o,i,s,c,u,l){function d(e,n,a){var r=this;e.relationships=e.relationships||{},r.saved=void 0===n.saved?!0:n.saved,r.stable=void 0===n.stable?!0:n.stable,r[\"synchronized\"]=void 0===n[\"synchronized\"]?!0:n[\"synchronized\"],r.pristine=void 0===n.pristine?!0:n.pristine,r.removed=!1,r.error=!1,r.loading=!1,r.saving=!1,r.updatedAt=r[\"synchronized\"]===!0?Date.now():a,r.loadingCount=0,r.savingCount=0,r.data={relationships:{},attributes:{}},r.relationships={},angular.forEach(r.schema.relationships,function(t,e){r.relationships[e]=void 0}),r.errors={validation:{},synchronization:{}},r.promises={},A(r,e),r.form=new t(r)}function h(t){function e(e){s.$emit(\"angularJsonAPI:\"+i.data.type+\":object:\"+u.action,\"resolved\",i,e,t),i.update(i.form.data),i.saved===!1&&t===!0&&(i.factory.cache.indexIds=i.factory.cache.indexIds||[],i.factory.cache.indexIds.push(i.data.id)),i[\"synchronized\"]=!0,i.saved=!0,i.stable=!0,e.finish(),c.resolve(i)}function n(t){s.$emit(\"angularJsonAPI:\"+i.data.type+\":object:save\",\"rejected\",i,t),t.finish(),c.reject(t)}function o(t){s.$emit(\"angularJsonAPI:\"+i.data.type+\":object:save\",\"notify\",i,t),c.notify(t)}var i=this,c=l.defer(),u={action:i.saved===!1?\"add\":\"update\",object:i};return t=void 0===t?!0:t,i.form.validate().then(i.synchronize(u).then(e,n,o)[\"finally\"](r.bind(i)),c.reject),a(i),c.promise}function f(){var t=this;void 0!==t.form&&t.form.reset()}function p(){function t(t){function a(t){return e.bind(t),t.synchronize({action:\"include\",object:t})[\"finally\"](n.bind(t))}function r(e){angular.forEach(e,function(t,e){t.success===!0&&(s.$emit(\"angularJsonAPI:\"+c.included[e].data.type+\":object:include\",\"resolved\",c.included[e],t),t.value.finish())}),i.resolve(t)}var c=o.proccesResults(t.data);s.$emit(\"angularJsonAPI:\"+u.data.type+\":object:refresh\",\"resolved\",u,t),l.allSettled(c.included.map(a)).then(r,i.reject),t.finish(),u[\"synchronized\"]=!0,u.stable=!0}function a(t){s.$emit(\"angularJsonAPI:\"+u.data.type+\":object:refresh\",\"rejected\",u,t),t.finish(),i.reject(t)}function r(t){s.$emit(\"angularJsonAPI:\"+u.data.type+\":object:refresh\",\"notify\",u,t),i.notify(t)}var o=c.get(\"$jsonapi\"),i=l.defer(),u=this,d={action:\"refresh\",object:u,params:u.schema.params.get};return u.saved===!1?i.reject({errors:[{status:0,statusText:\"Can't refresh new object\"}]}):(e(u),u.synchronize(d).then(t,a,r)[\"finally\"](n.bind(u))),i.promise}function y(){var t=this,e=angular.copy(t.data),n={};return angular.forEach(e.relationships,function(t,e){void 0!==t.data&&(n[e]=t)}),e.relationships=n,{data:e,updatedAt:t.updatedAt}}function g(){function t(t){s.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"resolved\",o,t),o.removed=!0,o.unlinkAll(),o.factory.cache.clearRemoved(o.data.id),t.finish(),i.resolve(t)}function e(t){s.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"rejected\",o,t),o.factory.cache.revertRemove(o.data.id),t.finish(),i.reject(t)}function n(t){s.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"notify\",o,t),i.notify(t)}var o=this,i=l.defer(),c={action:\"remove\",object:o};return o.factory.cache.remove(o.data.id),o.saved===!1?i.resolve():(a.bind(o),o.synchronize(c).then(t,e,n)[\"finally\"](r.bind(o))),i.promise}function v(t){function a(t,e){var n=i.schema.relationships[e],a=n.reflection;angular.isArray(t)?angular.forEach(t,r.bind(void 0,a)):angular.isObject(t)&&r(a,t),\"hasOne\"===n.type?i.relationships[e]=null:\"hasMany\"===n.type&&(i.relationships[e]=[])}function r(t,n){function a(t){s.$emit(\"angularJsonAPI:\"+i.data.type+\":object:unlinkReflection\",\"resolve\",i,t),t.finish(),c.resolve(i)}function r(t){s.$emit(\"angularJsonAPI:\"+i.data.type+\":object:unlinkReflection\",\"rejected\",i,t),t.finish(),c.reject(t)}function u(t){s.$emit(\"angularJsonAPI:\"+i.data.type+\":object:unlinkReflection\",\"notify\",i,t),t.finish(),c.notify(t)}var l=n.schema.relationships[t],d={action:\"unlinkReflection\",object:n,target:i,key:t};e(n),o.unlink(n,t,i,l),n.synchronize(d).then(a,r,u).__decrementLoadingCounter.bind(n)}var i=this,c=l.defer();return e(i),void 0===t?angular.forEach(i.relationships,a):a(i.relationships[t],t),n(i),c.promise}function m(t,i){function c(a){function r(t){return e(i),i.synchronize({action:\"linkReflection\",object:t.object,target:t.target,key:t.key})[\"finally\"](n.bind(i))}function c(e){angular.forEach(e,function(n){n.success===!0&&(s.$emit(\"angularJsonAPI:\"+u[t].data.type+\":object:linkReflection\",\"resolved\",u[t],n),e.value.finish())}),f.resolve(p)}s.$emit(\"angularJsonAPI:\"+p.data.type+\":object:link\",\"resolved\",p,a);var u=o.link(p,t,i);p.stable=!0,a.finish(),l.allSettled(u.map(r)).then(c,f.reject)}function d(t){s.$emit(\"angularJsonAPI:\"+p.data.type+\":object:link\",\"rejected\",p,t),f.reject(t.errors),t.finish(),f.reject(t)}function h(t){s.$emit(\"angularJsonAPI:\"+p.data.type+\":object:link\",\"notify\",p,t),f.notify(t)}var f=l.defer(),p=this,y={action:\"link\",object:p,target:i,key:t};return void 0===i?(u.error(\"Can't link undefined\"),f.reject({errors:[{status:0,statusText:\"Can't link undefined\"}]})):p.saved===!1?(u.error(\"Can't link new object\"),f.reject({errors:[{status:0,statusText:\"Can't link new object\"}]})):(a(p),p.synchronize(y).then(c,d,h)[\"finally\"](r.bind(p))),f.promise}function j(t,i){function c(a){function r(t){return e(i),i.synchronize({action:\"unlinkReflection\",object:t.object,target:t.target,key:t.key})[\"finally\"](n.bind(i))}function c(e){angular.forEach(e,function(n){n.success===!0&&(s.$emit(\"angularJsonAPI:\"+u[t].data.type+\":object:unlinkReflection\",\"resolved\",u[t],n),e.value.finish())}),h.resolve(f)}s.$emit(\"angularJsonAPI:\"+f.data.type+\":object:unlink\",\"resolved\",f,a);var u=o.link(f,t,i);f.stable=!0,a.finish(),l.allSettled(u.map(r)).then(c,h.reject)}function u(t){s.$emit(\"angularJsonAPI:\"+f.data.type+\":object:unlink\",\"rejected\",f,t),h.reject(t.errors),t.finish(),h.reject(t)}function d(t){s.$emit(\"angularJsonAPI:\"+f.data.type+\":object:unlink\",\"notify\",f,t),h.notify(t)}var h=l.defer(),f=this,p={action:\"unlink\",object:f,target:i,key:t};return void 0===i?h.reject({errors:[{status:0,statusText:\"Can't unlink undefined\"}]}):f.saved===!1?h.reject({errors:[{status:0,statusText:\"Can't unlink new object\"}]}):(a(f),f.synchronize(p).then(c,u,d)[\"finally\"](r.bind(f))),h.promise}function b(t,a,r){var o=this;e(o),A(o,t),o.reset(a),o[\"synchronized\"]=r===!0?!1:!0,o.stable=r===!0?!1:!0,o.updatedAt=Date.now(),n(o)}function A(t,e){function n(n,a){t.data.attributes[a]=e.attributes[a]}function a(n,a){var o=e.relationships[a];return void 0===o?void(t.data.relationships[a]={data:void 0}):(t.data.relationships[a]=t.data.relationships[a]||{},t.data.relationships[a].links=o.links,void(\"hasOne\"===n.type?r(t,a,o.data):\"hasMany\"===n.type&&angular.isArray(o.data)&&(0===o.data.length?(t.data.relationships[a].data=[],t.unlinkAll(a)):(angular.forEach(t.relationships[a],s.bind(void 0,t,a,o.data)),angular.forEach(o.data,r.bind(void 0,t,a))))))}function r(t,e,n){var a;if(null===n)return void o.link(t,e,null);if(void 0!==n){if(a=l.getFactory(n.type),void 0===a)return void u.error(\"Factory not found\",n.type,n);var r=a.cache.get(n.id);o.link(t,e,r)}}function s(t,e,n,a){n.indexOf(a.data.id)>-1||o.unlink(t,e,a)}var l=c.get(\"$jsonapi\"),d=t.schema;return t.data.id=e.id,t.data.type=e.type,t.factory.schema.type!==e.type?(u.error(\"Different type then factory\",t.factory.schema.type,e),!1):i.validate(t.data.id)?(e.attributes=e.attributes||{},e.relationships=e.relationships||{},angular.forEach(d.attributes,n),angular.forEach(d.relationships,a),!0):(u.error(\"Invalid id\"),!1)}return d.prototype.refresh=p,d.prototype.remove=g,d.prototype.reset=f,d.prototype.save=h,d.prototype.update=b,d.prototype.link=m,d.prototype.unlink=j,d.prototype.unlinkAll=v,d.prototype.toJson=y,d}function e(t){t=void 0===t?this:t,t.loadingCount+=1,t.loading=!0}function n(t){t=void 0===t?this:t,t.loadingCount-=1,t.loading=t.loadingCount>0}function a(t){t=void 0===t?this:t,t.savingCount+=1,t.saving=!0}function r(t){t=void 0===t?this:t,t.savingCount-=1,t.saving=t.savingCount>0}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractModel\",t),t.$inject=[\"AngularJsonAPIModelForm\",\"AngularJsonAPIModelLinkerService\",\"uuid4\",\"$rootScope\",\"$injector\",\"$log\",\"$q\"]}(),function(){\"use strict\";function t(t,e){function n(t){var e=this;e.factory=t,e.data={},e.removed={},e.size=0,e.indexIds=void 0}function a(t,n){var a=this,r=t.id;return void 0===r?void e.error(\"Can't add data without id!\",t):(void 0===a.data[r]?(a.data[r]=new a.factory.Model(t,n),a.size+=1):a.data[r].update(t,n.saved,n.initialization),a.data[r])}function r(t){var e=this,n=angular.fromJson(t),a={saved:!0,\"synchronized\":!1,stable:!1,pristine:!1,initialization:!0};angular.isObject(n)&&void 0!==n.data&&(e.updatedAt=n.updatedAt,e.indexIds=n.indexIds,angular.forEach(n.data,function(t){var n=t.data;e.addOrUpdate(n,a,t.updatedAt)}))}function o(){var t=this,e={data:[],updatedAt:t.updatedAt,indexIds:t.indexIds};return angular.forEach(t.data,function(t){t.error===!1&&e.data.push(t.toJson())}),angular.toJson(e)}function i(){var t=this;t.indexIds=void 0,t.data={},t.removed={}}function s(t){var e=this,n={id:t,type:e.factory.Model.prototype.schema.type},a={saved:!0,\"synchronized\":!1,stable:!1,pristine:!0};return void 0===e.data[t]&&(e.data[t]=new e.factory.Model(n,a)),e.data[t]}function c(t){var n=this;return e.debug(\"Unused params\",t),void 0===n.indexIds?n.indexIds:n.indexIds.map(n.get.bind(n))}function u(e){var n=this;n.indexIds=[],angular.forEach(e,function(e){angular.isString(e)&&t.validate(e)?n.indexIds.push(e):angular.isObject(e)&&t.validate(e.data.id)&&n.indexIds.push(e.data.id)})}function l(t){var e=this;return void 0!==e.data[t]&&(e.removed[t]=e.data[t],delete e.data[t],e.size-=1),e.removed[t]}function d(t){var e=this;return void 0!==e.removed[t]&&(e.data[t]=e.removed[t],delete e.removed[t],e.size+=1),e.data[t]}function h(t){var e=this;delete e.removed[t]}return n.prototype.get=s,n.prototype.index=c,n.prototype.setIndexIds=u,n.prototype.addOrUpdate=a,n.prototype.fromJson=r,n.prototype.toJson=o,n.prototype.clear=i,n.prototype.remove=l,n.prototype.revertRemove=d,n.prototype.clearRemoved=h,n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICache\",t),t.$inject=[\"uuid4\",\"$log\"]}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"lazyProperty\",function(t,e,n){var a,r;Object.defineProperty(t,e,{get:function(){return r||(r=!0,a=n.call(t)),a},enumerable:!0,configurable:!0})})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"toKebabCase\",function(t){return t.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase()})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$provide\",function(t){t.decorator(\"$q\",[\"$delegate\",function(t){var e=t;return e.allSettled=e.allSettled||function(t,n,a){function r(t){return e.resolve(t).then(function(t){return angular.isFunction(n)&&n(t),{success:!0,value:t}},function(t){return angular.isFunction(a)&&a(t),{success:!1,reason:t}})}var o=angular.isArray(t)?[]:{};return angular.forEach(t,function(t,e){o.hasOwnProperty(e)||(o[e]=r(t))}),e.all(o)},e}])}])}(),function(){\"use strict\";function t(t,e,n){function a(e){var n=this;n.state={},t.call(n,e),angular.forEach(e,function(t){t.synchronizer=n})}function r(a){function r(t){d.notify({step:\"synchronization\",data:t})}function o(t){d.notify({step:\"synchronization\",errors:t})}function i(t){u.state[h]=u.state[h]||{},u.state[h].success=!0,angular.forEach(t,function(t){t.success===!1&&(u.state[h].success=!1)}),angular.forEach(u.synchronizations,function(e){angular.forEach(e.afterHooks[h],function(e){d.notify({step:\"after\",errors:e.call(u,a,t)})})});var e,n=[];angular.forEach(t,function(t){t.success===!0?e=t.value:n.push(t.reason)}),n.length>0?d.reject({data:e,finish:s,errors:n}):d.resolve({data:e,finish:s,errors:n})}function s(){angular.forEach(u.synchronizations,function(t){angular.forEach(t.finishHooks[h],function(t){d.notify({step:\"finish\",errors:t.call(u,a)})})})}function c(t){n.error(\"All settled rejected! Something went wrong\"),d.reject({finish:angular.noop,errors:t})}var u=this,l=[],d=e.defer(),h=a.action;return t.prototype.synchronize.call(u,a),angular.forEach(u.synchronizations,function(t){angular.forEach(t.beginHooks[h],function(t){d.notify({step:\"begin\",data:t.call(u,a)})})}),angular.forEach(u.synchronizations,function(t){angular.forEach(t.beforeHooks[h],function(t){d.notify({step:\"before\",data:t.call(u,a)})})}),angular.forEach(u.synchronizations,function(t){angular.forEach(t.synchronizationHooks[h],function(t){l.push(t.call(u,a))})}),e.allSettled(l,r,o).then(i,c),d.promise}return a.prototype=Object.create(t.prototype),a.prototype.constructor=a,a.prototype.synchronize=r,a}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerSimple\",t),t.$inject=[\"AngularJsonAPISynchronizerPrototype\",\"$q\",\"$log\"]}(),function(){\"use strict\";function t(t){function e(t){var e=this;e.synchronizations=t}function n(e){var n=this;t.debug(\"Synchro Collection\",n.factory.Model.prototype.schema.type,e),void 0===e.action&&t.error(\"Can't synchronize undefined action\",e)}return e.prototype.synchronize=n,e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerPrototype\",t),t.$inject=[\"$log\"]}(),function(){\"use strict\";function t(t,e,n,a,r){function o(n){function o(t){return r({method:\"GET\",headers:y,url:n,params:t.params||{}}).then(h,f)}function i(t){return r({method:\"GET\",headers:y,url:n+\"/\"+t.object.data.id,params:t.params||{}}).then(h,f)}function s(t){return r({method:\"DELETE\",headers:y,url:n+\"/\"+t.object.data.id}).then(h,f)}function c(t){var e=a.defer(),o=t.object.schema.relationships[t.key];return t.object.removed===!0?e.reject({errors:[{status:0,statusText:\"Object has been removed\"}]}):void 0!==t.target&&void 0===t.target.data.id?e.reject({errors:[{status:0,statusText:\"Can't unlink object without id through rest call\"}]}):\"hasOne\"===o.type?r({method:\"DELETE\",headers:y,url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(h,f).then(e.resolve,e.reject):\"hasMany\"===o.type&&(void 0===t.target?r({method:\"PUT\",headers:y,data:{data:[]},url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(h,f).then(e.resolve,e.reject):r({method:\"DELETE\",headers:y,url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key+\"/\"+t.target.data.id}).then(h,f).then(e.resolve,e.reject)),e.promise}function u(t){var o=a.defer(),i=t.object.schema.relationships[t.key];return t.object.removed===!0?o.reject({errors:[{status:0,statusText:\"Object has been removed\"}]}):void 0===t.target||void 0===t.target.data.id?o.reject({errors:[{status:0,statusText:\"Can't link object without id through rest call\"}]}):\"hasOne\"===i.type?r({method:\"PUT\",headers:y,data:{data:e.toLinkData(t.target)},url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(h,f).then(o.resolve,o.reject):\"hasMany\"===i.type&&r({method:\"POST\",headers:y,data:{data:[e.toLinkData(t.target)]},url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(h,f).then(o.resolve,o.reject),o.promise}function l(t){return r({method:\"PUT\",headers:y,url:n+\"/\"+t.object.data.id,data:t.object.form.toJson()}).then(h,f)}function d(t){return r({method:\"POST\",headers:y,url:n+\"/\",data:t.object.form.toJson()}).then(h,f)}function h(t){return a.resolve(t.data)}function f(t){function e(){o.reject({status:t.status,statusText:\"Server is offline\"})}function n(){o.reject({status:t.status,statusText:\"No internet connection\"})}var o=a.defer();return 0===t.status?r({method:\"GET\",url:\"https://status.cloud.google.com/incidents.schema.json\"}).then(e,n):o.reject({status:t.status,statusText:t.statusText}),o.promise}var p=this,y={Accept:\"application/vnd.api+json\",\"Content-Type\":\"application/vnd.api+json\"};t.call(p),p.synchronization(\"remove\",s),p.synchronization(\"unlink\",c),p.synchronization(\"link\",u),p.synchronization(\"update\",l),p.synchronization(\"add\",d),p.synchronization(\"all\",o),p.synchronization(\"get\",i),p.synchronization(\"refresh\",i)}return o.prototype=Object.create(t.prototype),o.prototype.constructor=o,o}angular.module(\"angular-jsonapi-rest\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationRest\",t),t.$inject=[\"AngularJsonAPISynchronizationPrototype\",\"AngularJsonAPIModelLinkerService\",\"toKebabCase\",\"$q\",\"$http\"]}(),function(){\"use strict\";function t(){function t(){var t=this,e=[\"add\",\"init\",\"get\",\"all\",\"clearCache\",\"remove\",\"unlink\",\"unlinkReflection\",\"link\",\"linkReflection\",\"update\",\"refresh\",\"include\"];t.state={},t.beginHooks={},t.beforeHooks={},t.synchronizationHooks={},t.afterHooks={},t.finishHooks={},t.options={},angular.forEach(e,function(e){t.beginHooks[e]=[],t.beforeHooks[e]=[],t.synchronizationHooks[e]=[],t.afterHooks[e]=[],t.finishHooks[e]=[],t.state[e]={loading:!1,success:!0}})}function e(t,e){var n=this;n.beginHooks[t].push(e)}function n(t,e){var n=this;n.finishHooks[t].push(e)}function a(t,e){var n=this;n.beforeHooks[t].push(e)}function r(t,e){var n=this;n.afterHooks[t].push(e)}function o(t,e){var n=this;n.synchronizationHooks[t].push(e)}return t.prototype.before=a,t.prototype.after=r,t.prototype.begin=e,t.prototype.finish=n,t.prototype.synchronization=o,t}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizationPrototype\",t)}(),function(){\"use strict\";function t(t,e,n){function a(a){function r(){var t=s.synchronizer.factory.schema.type;return n.resolve(e.localStorage.getItem(a+\".\"+t))}function o(){var t=s.synchronizer.factory.schema.type;e.localStorage.removeItem(a+\".\"+t)}function i(){var t=s.synchronizer.factory.schema.type,n=s.synchronizer.factory.cache;e.localStorage.setItem(a+\".\"+t,n.toJson())}var s=this;a=a||\"AngularJsonAPI\",s.__updateStorage=i,t.call(s),s.synchronization(\"init\",r),s.begin(\"clearCache\",o),s.begin(\"remove\",i),s.begin(\"refresh\",i),s.begin(\"unlink\",i),s.begin(\"unlinkReflection\",i),s.begin(\"link\",i),s.begin(\"linkReflection\",i),s.begin(\"update\",i),s.begin(\"add\",i),s.begin(\"get\",i),s.begin(\"all\",i),s.begin(\"include\",i),s.finish(\"init\",i),s.finish(\"clearCache\",i),s.finish(\"remove\",i),s.finish(\"refresh\",i),s.finish(\"unlink\",i),s.finish(\"unlinkReflection\",i),s.finish(\"link\",i),s.finish(\"linkReflection\",i),s.finish(\"update\",i),s.finish(\"add\",i),s.finish(\"get\",i),s.finish(\"all\",i),s.finish(\"include\",i)}return a.prototype=Object.create(t.prototype),a.prototype.constructor=a,a}angular.module(\"angular-jsonapi-local\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationLocal\",t),t.$inject=[\"AngularJsonAPISynchronizationPrototype\",\"$window\",\"$q\"]}(),function(){\"use strict\";function t(t,e,n){function a(t){var e=this,a=t.include||{};t.include=a,a.get=t.include.get||[],a.all=t.include.all||[],e.params={get:{},all:{}},angular.forEach(t.relationships,function(e,r){var o=new n(e,r,t.type);t.relationships[r]=o,o.included===!0&&(a.get.push(r),\"hasOne\"===o.type&&a.all.push(r))}),angular.extend(e,t),a.get.length>0&&(e.params.get.include=a.get.join(\",\")),a.all.length>0&&(e.params.all.include=a.all.join(\",\"))}return a}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchema\",t),t.$inject=[\"$log\",\"pluralize\",\"AngularJsonAPISchemaLink\"]}(),function(){\"use strict\";function t(t,e){function n(n,a,r){var o=this;angular.isString(n)?(o.model=e.plural(a),o.type=n,o.polymorphic=!1,o.reflection=r):(void 0===n.type&&t.error(\"Schema of link without a type: \",n,a),\"hasMany\"!==n.type&&\"hasOne\"!==n.type&&t.error(\"Schema of link with wrong type: \",n.type,\"available: hasOne, hasMany\"),o.model=n.model||e.plural(a),o.type=n.type,o.polymorphic=n.polymorphic||!1,o.reflection=void 0===n.reflection?\"hasMany\"===o.type?e.singular(r):r:n.reflection,o.included=n.included||!1)}return n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchemaLink\",t),t.$inject=[\"$log\",\"pluralize\"]}(),function(){\"use strict\";function t(t,e,n){function a(e,a){var r=function(e,a,r){var o=this;e.type!==o.schema.type&&n.error(\"Data type other then declared in schema: \",e.type,\" instead of \",o.schema.type),t.call(o,e,a,r),o.form.parent=o};return r.prototype=Object.create(t.prototype),r.prototype.constructor=r,r.prototype.schema=e,r.prototype.factory=a,r.prototype.synchronize=a.synchronizer.synchronize.bind(a.synchronizer),angular.forEach(e.functions,function(t,e){r.prototype[e]=function(){return t.apply(this,arguments)}}),r}return{model:a}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModel\",t),t.$inject=[\"AngularJsonAPIAbstractModel\",\"AngularJsonAPISchema\",\"$log\"]}(),function(){\"use strict\";function t(t,e,n,a,r,o,i,s){function c(a,r){function i(t){o.$emit(\"angularJsonAPI:\"+u.type+\":factory:init\",\"resolved\",t),u.cache.fromJson(t.data),u.initialized=!0,t.finish()}function s(t){o.$emit(\"angularJsonAPI:\"+u.type+\":factory:init\",\"rejected\",t),t.finish(),u.initialized=!0}function c(t){o.$emit(\"angularJsonAPI:\"+u.type+\":factory:init\",\"notify\",t)}var u=this,l={action:\"init\"};u.schema=new e(a),u.cache=new n(u),u.synchronizer=r,u.synchronizer.factory=u,u.Model=t.model(u.schema,u),u.initialized=!1,u.type=u.schema.type,r.factory=u,u.synchronizer.synchronize(l).then(i,s,c)}function u(t){var e=this;if(!r.validate(t))return s.reject({errors:[{status:0,statusText:\"Invalid id not uuid4\"}]});var n=e.cache.get(t);return n.refresh(),n}function l(t){var e=this;t=t||{};var n=new a(e,angular.extend(t,e.schema.params.all));return n.fetch(),n}function d(t){var e=this,n=e.cache.remove(t);return n.remove()}function h(t,e){var n=this,a={};if(angular.forEach(n.schema.relationships,function(t,e){\"hasOne\"===t.type?a[e]={data:null}:\"hasMany\"===t.type&&(a[e]={data:[]})}),void 0!==t&&void 0!==e){var s=n.schema[t];\"hasOne\"===s.type?a[t]={data:e.data.id}:\"hasMany\"===s.type&&i.warn(\"Initialize with relationship disallowed for hasMany relationships\")}var c={type:n.type,id:r.generate(),attributes:{},relationships:a},u={saved:!1,\"synchronized\":!1,stable:!1,pristine:!1,initialization:!1},l=n.cache.addOrUpdate(c,u);return o.$emit(\"angularJsonAPI:\"+n.type+\":factory:initialize\",\"resolved\",l),l}function f(){function t(t){o.$emit(\"angularJsonAPI:\"+a.type+\":factory:clearCache\",\"resolved\",t),t.finish(),r.resolve(t)}function e(t){o.$emit(\"angularJsonAPI:\"+a.type+\":factory:clearCache\",\"resolved\",t),t.finish(),r.reject(t)}function n(t){o.$emit(\"angularJsonAPI:\"+a.type+\":factory:clearCache\",\"notify\",t),r.notify(t)}var a=this,r=s.defer(),i={action:\"clearCache\"};return a.cache.clear(),a.synchronizer.synchronize(i).then(t,e,n),r}return c.prototype.get=u,c.prototype.all=l,c.prototype.remove=d,c.prototype.initialize=h,c.prototype.clearCache=f,c}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIFactory\",t),t.$inject=[\"AngularJsonAPIModel\",\"AngularJsonAPISchema\",\"AngularJsonAPICache\",\"AngularJsonAPICollection\",\"uuid4\",\"$rootScope\",\"$log\",\"$q\"]}(),function(){\"use strict\";function t(t,a,r){function o(e,n){function a(t,e,n){var a;\"resolved\"===e&&void 0!==i.data&&(a=i.data.indexOf(n),a>-1&&(i.data.splice(a,1),i.factory.cache.setIndexIds(i.data)))}function r(){i.data=void 0,i.pristine=!0}function o(t,e,n,a,r){r===!0&&\"resolved\"===e&&(i.data=i.data||[],i.data.push(n))}var i=this;i.factory=e,i.type=e.schema.type,i.params=n,i.errors={synchronization:{name:\"Synchronization\",description:\"Errors during synchronization\",errors:[]}},i.data=i.factory.cache.index(i.params),i.error=!1,i.loading=!1,i.loadingCount=0,i[\"synchronized\"]=!1,i.pristine=void 0===i.data,t.$on(\"angularJsonAPI:\"+i.type+\":object:remove\",a),t.$on(\"angularJsonAPI:\"+i.type+\":factory:clearCache\",r),t.$on(\"angularJsonAPI:\"+i.type+\":factory:add\",o)}function i(t){var e=this;return e.factory.get(t)}function s(){function o(a){function o(t){return e.bind(t),t.synchronize({action:\"include\",object:t})[\"finally\"](n.bind(t))}function i(e){angular.forEach(e,function(e,n){e.success===!0&&(t.$emit(\"angularJsonAPI:\"+s.included[n].data.type+\":object:include\",\"resolved\",s.included[n],e),e.value.finish())}),u.resolve(a)}var s=l.proccesResults(a.data);t.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"resolved\",c,a),r.allSettled(s.included.map(o)).then(i,u.reject),angular.forEach(c.data,n),c.data=s.data,c.errors.synchronization.errors=[],c.error=!1,c.updatedAt=Date.now(),c[\"synchronized\"]=!0,c.factory.cache.setIndexIds(c.data),a.finish(),u.resolve(c)}function i(e){t.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"rejected\",c,e),angular.forEach(c.data,n),c.errors.synchronization.errors=e.errors,c.error=!0,e.finish(),u.reject(e)}function s(e){t.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"notify\",c,e),u.notify(e)}var c=this,u=r.defer(),l=a.get(\"$jsonapi\"),d={action:\"all\",params:c.params};return e(this),angular.forEach(c.data,e),c.factory.synchronizer.synchronize(d).then(o,i,s)[\"finally\"](n.bind(c)),u.promise}return o.prototype.fetch=s,o.prototype.refresh=s,o.prototype.get=i,o}function e(t){t=void 0===t?this:t,t.loadingCount+=1,t.loading=!0}function n(t){t=void 0===t?this:t,t.loadingCount-=1,t.loading=t.loadingCount>0}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICollection\",t),t.$inject=[\"$rootScope\",\"$injector\",\"$q\"]}(),function(){\"use strict\";function t(){function t(t,a){function r(){return e}function o(){return n}function i(t,r){var o=new a(t,r);e[t.type]=o,n.push(t.type)}function s(t){return e[t]}function c(n){return void 0===e[n]&&t.error(\"Can\t add not existing object type: \"+n+\". Use initialize(Model, datas).\"),e[n].saved.form}function u(n,a){return void 0===e[n]&&t.error(\"Can\t get not existing object type: \"+n+\". Use initialize(Model, datas).\"),e[n].get(a)}function l(n,a){return void 0===e[n]&&t.error(\"Can\t remove not existing object type: \"+n+\". Use initialize(Model, datas).\"),e[n].remove(a)}function d(n){return void 0===e[n]&&t.error(\"Can\t get all of not existing object type: \"+n+\". Use initialize(Model, datas).\"),e[n].all()}function h(){angular.forEach(e,function(t){t.clearCache()})}function f(e){var n={data:[],included:[]};void 0===e&&t.error(\"Can't proccess results:\",e);var a={saved:!0,\"synchronized\":!0,stable:!0,pristine:!1,initialization:!1};return angular.forEach(e.included,function(t){n.included.push(s(t.type).cache.addOrUpdate(t,a))}),angular.isArray(e.data)?angular.forEach(e.data,function(t){n.data.push(s(t.type).cache.addOrUpdate(t,a))}):n.data.push(s(e.data.type).cache.addOrUpdate(e.data,a)),n}return{form:c,get:u,remove:l,all:d,addFactory:i,getFactory:s,clearCache:h,proccesResults:f,allFactories:r,factoriesNames:o}}var e={},n=[];this.$get=t,t.$inject=[\"$log\",\"AngularJsonAPIFactory\"]}angular.module(\"angular-jsonapi\").provider(\"$jsonapi\",t)}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$logProvider\",function(t){\nt.debugEnabled(!1)}])}();\n//# sourceMappingURL=angular-jsonapi.min.js.map","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, oneWay) {\n      var schema;\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema.type === 'hasMany') {\n        if (oneWay === true) {\n          __addHasMany(object, key, target, false);\n          return [];\n        } else {\n          return __processAddHasMany(object, key, target);\n        }\n      } else if (schema.type === 'hasOne') {\n        if (oneWay === true) {\n          __addHasOne(object, key, target, false);\n          return [];\n        } else {\n          return __processAddHasOne(object, key, target);\n        }\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, oneWay) {\n      var schema;\n\n      if (object === undefined) {\n        $log.error('Can\\'t remove link from non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (oneWay === true) {\n        __removeHasMany(object, key, target, false);\n        return [];\n      } else {\n        return __processRemove(object, key, target);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __processAddHasMany(object, key, target) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var reflectionSchema;\n\n      if (reflectionKey === false) {\n        __addHasMany(object, key, target);\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        return __swapResults(\n          __wrapResults(object, key, target),\n          __wrapResults(target, reflectionKey, object),\n          __processAddHasOne(target, reflectionKey, object)\n        );\n      } else if (reflectionSchema.type === 'hasMany') {\n        __addHasMany(object, key, target);\n        __addHasMany(target, reflectionKey, object);\n        return [__wrapResults(target, reflectionKey, object)];\n      }\n    }\n\n    function __processAddHasOne(object, key, target) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var oldReflection = object.relationships[key];\n      var reflectionSchema;\n      var oldReflectionSchema;\n      var result = [];\n\n      __addHasOne(object, key, target);\n\n      if (oldReflection !== undefined && oldReflection !== null) {\n        oldReflectionSchema = oldReflection.schema.relationships[reflectionKey];\n\n        if (oldReflectionSchema.type === 'hasOne') {\n          __removeHasOne(oldReflection, reflectionKey, object);\n        } else if (oldReflectionSchema.type === 'hasMany') {\n          __removeHasMany(oldReflection, reflectionKey, object);\n        }\n\n        result.push(oldReflection, reflectionKey, object);\n      }\n\n      if (target !== undefined && target !== null && reflectionKey !== false) {\n        reflectionSchema = target.schema.relationships[reflectionKey];\n\n        if (reflectionSchema.type === 'hasOne') {\n          __addHasOne(target, reflectionKey, object);\n        } else if (reflectionSchema.type === 'hasMany') {\n          __addHasMany(target, reflectionKey, object);\n        }\n\n        result.push(target, reflectionKey, object);\n      }\n\n      return result;\n    }\n\n    function __processRemove(object, key, target) {\n      var schema = object.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema;\n\n      if (schema.type === 'hasMany') {\n        __removeHasMany(object, key, target);\n      } else if (schema.type === 'hasOne') {\n        __removeHasOne(object, key, target);\n      }\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        __removeHasOne(target, reflectionKey, object);\n      } else if (reflectionSchema.type === 'hasMany') {\n        __removeHasMany(target, reflectionKey, object);\n      }\n\n      return [__wrapResults(target, reflectionKey, object)];\n    }\n\n    function __addHasOne(object, key, target, reset) {\n      $log.debug('addHasOne', object, key, target);\n\n      object.relationships[key] = target;\n      object.data.relationships[key].data = toLinkData(target);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, reset) {\n      var linkData = toLinkData(target);\n      $log.debug('addHasMany', object, key, target);\n\n      if (angular.isArray(object.relationships[key]) && object.relationships[key].indexOf(target) > -1) {\n        return false;\n      }\n\n      object.relationships[key] = object.relationships[key] || [];\n      object.data.relationships[key].data = object.data.relationships[key].data || [];\n\n      object.relationships[key].push(target);\n      object.data.relationships[key].data.push(linkData);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, reset) {\n      $log.debug('removeHasOne', object, key, target);\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        return false;\n      }\n\n      object.relationships[key] = null;\n      object.data.relationships[key].data = undefined;\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, reset) {\n      $log.debug('removeHasMany', object, key, target);\n\n      if (object.relationships[key] === undefined) {\n        return;\n      }\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n        if (reset !== false) {\n          object.reset(true);\n        }\n\n        return true;\n      }\n\n      var index = object.relationships[key].indexOf(target);\n\n      if (index === -1) {\n        return false;\n      }\n\n      object.relationships[key].splice(index, 1);\n      object.data.relationships[key].data.splice(index, 1);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __wrapResults(object, key, target) {\n      return {\n        object: object,\n        key: key,\n        target: target\n      };\n    }\n\n    function __swapResults(value, newValue, array) {\n      var index = -1;\n      angular.forEach(array, function(item, i) {\n        if (item.object === value.object && item.key === value.key && item.target === value.target) {\n          index = i;\n        }\n      });\n\n      if (index > -1) {\n        array[index] = newValue;\n      } else {\n        array.push(newValue);\n      }\n\n      return array;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidatorService,\n    AngularJsonAPIModelLinkerService,\n    $q\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n    AngularJsonAPIModelForm.prototype.validateField = validateField;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return AngularJsonAPIModelForm;\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        id: parent.data.id,\n        type: parent.data.type,\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset(auto) {\n      var _this = this;\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = angular.copy(_this.parent.data.relationships[key]) || {};\n        if (angular.isArray(_this.relationships[key])) {\n          _this.relationships[key] = _this.parent.relationships[key].slice();\n        } else {\n          _this.relationships[key] = _this.parent.relationships[key];\n        }\n      });\n\n      if (auto === true && _this.parent.synchronized === true) {\n        return;\n      }\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        _this.data.attributes[key] = angular.copy(_this.parent.data.attributes[key]) || '';\n      });\n\n      _this.errors = {\n        validation: {}\n      };\n    }\n\n    /**\n     * Validates form\n     * @return {promise} Promise rejected to errors object indexed by keys\n     */\n    function validate() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      AngularJsonAPIModelValidatorService.validateForm(_this.data).then(deferred.resolve, reject);\n\n      function reject(erorrs) {\n        _this.errors.validation = erorrs;\n\n        deferred.reject(erorrs);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Validates single field\n     * @param  {string} key Field key\n     * @return {promise} Promise rejected to errors array\n     */\n    function validateField(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      AngularJsonAPIModelValidatorService.validateForm(_this.data[key], key).then(deferred.resolve, reject);\n\n      function reject(erorrs) {\n        _this.errors.validation[key] = erorrs;\n\n        deferred.reject(erorrs);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target) {\n      var _this = this;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.link(_this, key, target, true));\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target) {\n      var _this = this;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.unlink(_this, key, target, true));\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelForm,\n    AngularJsonAPIModelLinkerService,\n    uuid4,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {object} config   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, config, updatedAt) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      /**\n       * Is not a new record\n       * @type {Boolean}\n       */\n      _this.saved = config.saved === undefined ? true : config.saved;\n\n      /**\n       * Is present on the server\n       * @type {Boolean}\n       */\n      _this.stable = config.stable === undefined ? true : config.stable;\n\n      /**\n       * Has been synchronized with the server\n       * @type {Boolean}\n       */\n      _this.synchronized = config.synchronized === undefined ? true : config.synchronized;\n\n      /**\n       * Has just been created by request and may not exist on the server\n       * @type {Boolean}\n       */\n      _this.pristine = config.pristine === undefined ? true : config.pristine;\n\n      _this.removed = false;\n      _this.error = false;\n      _this.loading = false;\n      _this.saving = false;\n      _this.updatedAt = _this.synchronized === true ? Date.now() : updatedAt;\n\n      _this.loadingCount = 0;\n      _this.savingCount = 0;\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(schema, name) {\n        _this.relationships[name] = undefined;\n      });\n\n      _this.errors = {\n        validation: {},\n        synchronization: {}\n      };\n\n      _this.promises = {};\n\n      __setData(_this, data);\n\n      _this.form = new AngularJsonAPIModelForm(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save(addToIndex) {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: _this.saved === false ? 'add' : 'update',\n        object: _this\n      };\n\n      addToIndex = addToIndex === undefined ? true : addToIndex;\n\n      _this.form.validate().then(\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this)),\n        deferred.reject\n      );\n\n      __incrementSavingCounter(_this);\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:' + config.action, 'resolved', _this, response, addToIndex);\n        _this.update(_this.form.data);\n\n        if (_this.saved === false && addToIndex === true) {\n          _this.factory.cache.indexIds = _this.factory.cache.indexIds || [];\n          _this.factory.cache.indexIds.push(_this.data.id);\n        }\n\n        _this.synchronized = true;\n        _this.saved = true;\n        _this.stable = true;\n\n        response.finish();\n\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'rejected', _this, response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      if (_this.form !== undefined) {\n        _this.form.reset();\n      }\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh() {\n      var $jsonapi = $injector.get('$jsonapi');\n      var deferred = $q.defer();\n      var _this = this;\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: _this.schema.params.get\n      };\n\n      if (_this.saved === false) {\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t refresh new object'}]});\n      } else {\n        __incrementLoadingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(_this));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        response.finish();\n        _this.synchronized = true;\n        _this.stable = true;\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter.bind(object);\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'rejected', _this, response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      var config = {\n        action: 'remove',\n        object: _this\n      };\n\n      _this.factory.cache.remove(_this.data.id);\n\n      if (_this.saved === false) {\n        deferred.resolve();\n      } else {\n        __incrementSavingCounter.bind(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'resolved', _this, response);\n        _this.removed = true;\n        _this.unlinkAll();\n        _this.factory.cache.clearRemoved(_this.data.id);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'rejected', _this, response);\n        _this.factory.cache.revertRemove(_this.data.id);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlink all reflection relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      __incrementLoadingCounter(_this);\n\n      if (key === undefined) {\n        angular.forEach(_this.relationships, removeLink);\n      } else {\n        removeLink(_this.relationships[key], key);\n      }\n\n      __decrementLoadingCounter(_this);\n\n      return deferred.promise;\n\n      function removeLink(linksObj, key) {\n        var schema = _this.schema.relationships[key];\n        var reflectionKey = schema.reflection;\n\n        if (angular.isArray(linksObj)) {\n          angular.forEach(linksObj, removeReflectionLink.bind(undefined, reflectionKey));\n        } else if (angular.isObject(linksObj)) {\n          removeReflectionLink(reflectionKey, linksObj);\n        }\n\n        if (schema.type === 'hasOne') {\n          _this.relationships[key] = null;\n        } else if (schema.type === 'hasMany') {\n          _this.relationships[key] = [];\n        }\n      }\n\n      function removeReflectionLink(reflectionKey, target) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n        var config = {\n          action: 'unlinkReflection',\n          object: target,\n          target: _this,\n          key: reflectionKey\n        };\n\n        __incrementLoadingCounter(target);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        target.synchronize(config)\n          .then(resolve, reject, notify)\n          .__decrementLoadingCounter.bind(target);\n\n        function resolve(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'resolve', _this, response);\n\n          response.finish();\n          deferred.resolve(_this);\n        }\n\n        function reject(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'rejected', _this, response);\n\n          response.finish();\n          deferred.reject(response);\n        }\n\n        function notify(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var config = {\n        action: 'link',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        $log.error('Can\\'t link undefined');\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link undefined'}]});\n      } else if (_this.saved === false) {\n        $log.error('Can\\'t link new object');\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link new object'}]});\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        response.finish();\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'linkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:linkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked if undefined unlinks all\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var config = {\n        action: 'unlink',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t unlink undefined'}]});\n      } else if (_this.saved === false) {\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t unlink new object'}]});\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        response.finish();\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'unlinkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:unlinkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData, auto, initialization) {\n      var _this = this;\n\n      __incrementLoadingCounter(_this);\n\n      __setData(_this, validatedData);\n      _this.reset(auto);\n      _this.synchronized = initialization === true ? false : true;\n      _this.stable = initialization === true ? false : true;\n      _this.updatedAt = Date.now();\n\n      __decrementLoadingCounter(_this);\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData) {\n\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.factory.schema.type !== validatedData.type) {\n        $log.error('Different type then factory', object.factory.schema.type, validatedData);\n        return false;\n      }\n\n      if (!uuid4.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        var relationshipData = validatedData.relationships[key];\n\n        if (relationshipData === undefined) {\n          object.data.relationships[key] = {data: undefined};\n          return;\n        }\n\n        object.data.relationships[key] = object.data.relationships[key] || {};\n        object.data.relationships[key].links = relationshipData.links;\n\n        if (schema.type === 'hasOne') {\n          linkOne(object, key, relationshipData.data);\n        } else if (schema.type === 'hasMany') {\n          if (angular.isArray(relationshipData.data)) {\n            if (relationshipData.data.length === 0) {\n              object.data.relationships[key].data = [];\n              object.unlinkAll(key);\n            } else {\n              angular.forEach(\n                object.relationships[key],\n                unlinkOne.bind(undefined, object, key, relationshipData.data)\n              );\n              angular.forEach(\n                relationshipData.data,\n                linkOne.bind(undefined, object, key)\n              );\n            }\n          }\n        }\n      }\n\n      function linkOne(object, key, data) {\n        var factory;\n\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        factory = $jsonapi.getFactory(data.type);\n\n        if (factory === undefined) {\n          $log.error('Factory not found', data.type, data);\n          return;\n        }\n\n        var target = factory.cache.get(data.id);\n\n        AngularJsonAPIModelLinkerService.link(object, key, target);\n      }\n\n      function unlinkOne(object, key, relationshipData, target) {\n        if (relationshipData.indexOf(target.data.id) > -1) {\n          return;\n        }\n\n        AngularJsonAPIModelLinkerService.unlink(object, key, target);\n      }\n    }\n  }\n\n  /////////////\n  // Private //\n  /////////////\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n\n  function __incrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount += 1;\n    object.saving = true;\n  }\n\n  function __decrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount -= 1;\n    object.saving = object.savingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICache', AngularJsonAPICacheWrapper);\n\n  function AngularJsonAPICacheWrapper(\n    uuid4,\n    $log\n  ) {\n\n    AngularJsonAPICache.prototype.get = get;\n    AngularJsonAPICache.prototype.index = index;\n    AngularJsonAPICache.prototype.setIndexIds = setIndexIds;\n    AngularJsonAPICache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPICache.prototype.fromJson = fromJson;\n    AngularJsonAPICache.prototype.toJson = toJson;\n    AngularJsonAPICache.prototype.clear = clear;\n\n    AngularJsonAPICache.prototype.remove = remove;\n    AngularJsonAPICache.prototype.revertRemove = revertRemove;\n    AngularJsonAPICache.prototype.clearRemoved = clearRemoved;\n\n    return AngularJsonAPICache;\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPICache(factory) {\n      var _this = this;\n\n      _this.factory = factory;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n\n      _this.indexIds = undefined;\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData, config) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.factory.Model(validatedData, config);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData, config.saved, config.initialization);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      var config = {\n        saved: true,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: true\n      };\n\n      if (angular.isObject(collection) && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n        _this.indexIds = collection.indexIds;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, config, objectData.updatedAt);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: [],\n        updatedAt: _this.updatedAt,\n        indexIds: _this.indexIds\n      };\n\n      angular.forEach(_this.data, function(object) {\n        if (object.error === false) {\n          json.data.push(object.toJson());\n        }\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.indexIds = undefined;\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      var data = {\n        id: id,\n        type: _this.factory.Model.prototype.schema.type\n      };\n\n      var config = {\n        saved: true,\n        synchronized: false,\n        stable: false,\n        pristine: true\n      };\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.factory.Model(data, config);\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization, used for index requests\n     * @param  {objec} params\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function index(params) {\n      var _this = this;\n\n      $log.debug('Unused params', params);\n\n      if (_this.indexIds === undefined) {\n        return _this.indexIds;\n      }\n\n      return _this.indexIds.map(_this.get.bind(_this));\n    }\n\n    /**\n     * Cache ids of objects returned by index request\n     * @param {ids array or AngularJsonAPIModel array} array Objects or ids to be cached\n     */\n    function setIndexIds(array) {\n      var _this = this;\n\n      _this.indexIds = [];\n\n      angular.forEach(array, function(element) {\n        if (angular.isString(element) && uuid4.validate(element)) {\n          _this.indexIds.push(element);\n        } else if (angular.isObject(element) && uuid4.validate(element.data.id)) {\n          _this.indexIds.push(element.data.id);\n        }\n      });\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises, resolvedCallback, rejectedCallback) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.resolve(promise)\n            .then(function(value) {\n              if (angular.isFunction(resolvedCallback)) {\n                resolvedCallback(value);\n              }\n\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              if (angular.isFunction(rejectedCallback)) {\n                rejectedCallback(reason);\n              }\n\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerSimple;\n\n    function AngularJsonAPISynchronizerSimple(synchronizations) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, synchronizations);\n\n      angular.forEach(synchronizations, function(synchronization) {\n        synchronization.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push(result.reason);\n          }\n        });\n\n        if (errors.length > 0) {\n          deferred.reject({data: data, finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(synchronizations) {\n      var _this = this;\n\n      _this.synchronizations = synchronizations;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.factory.Model.prototype.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationRest', AngularJsonAPISynchronizationRestWrapper);\n\n  function AngularJsonAPISynchronizationRestWrapper(\n    AngularJsonAPISynchronizationPrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISynchronizationRest.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationRest.prototype.constructor = AngularJsonAPISynchronizationRest;\n\n    return AngularJsonAPISynchronizationRest;\n\n    function AngularJsonAPISynchronizationRest(url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISynchronizationPrototype.call(_this);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target !== undefined && config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t unlink object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          if (config.target === undefined) {\n            $http({\n              method: 'PUT',\n              headers: headers,\n              data: {data: []},\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key\n            }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n          } else {\n            $http({\n              method: 'DELETE',\n              headers: headers,\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key + '/' + config.target.data.id\n            }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n          }\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target === undefined || config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'PUT',\n            headers: headers,\n            data: {data: AngularJsonAPIModelLinkerService.toLinkData(config.target)},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          $http({\n            method: 'POST',\n            headers: headers,\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        return $http({\n          method: 'PUT',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url + '/',\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function resolveHttp(response) {\n        return $q.resolve(response.data);\n      }\n\n      function rejectHttp(response) {\n        var deferred = $q.defer();\n\n        if (response.status === 0) {\n          $http({\n            method: 'GET',\n            url: 'https://status.cloud.google.com/incidents.schema.json'\n          }).then(rejectServerOffline, rejectNoConnection);\n        } else {\n          deferred.reject({status: response.status, statusText: response.statusText});\n        }\n\n        return deferred.promise;\n\n        function rejectServerOffline() {\n          deferred.reject({status: response.status, statusText: 'Server is offline'});\n        }\n\n        function rejectNoConnection() {\n          deferred.reject({status: response.status, statusText: 'No internet connection'});\n        }\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizationPrototype', AngularJsonAPISynchronizationPrototypeWrapper);\n\n  function AngularJsonAPISynchronizationPrototypeWrapper() {\n    AngularJsonAPISynchronizationPrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.after = afterSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.begin = begin;\n    AngularJsonAPISynchronizationPrototype.prototype.finish = finish;\n    AngularJsonAPISynchronizationPrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISynchronizationPrototype;\n\n    function AngularJsonAPISynchronizationPrototype() {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clearCache',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh',\n        'include'\n      ];\n\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationLocal', AngularJsonAPISynchronizationLocalWrapper);\n\n  function AngularJsonAPISynchronizationLocalWrapper(\n    AngularJsonAPISynchronizationPrototype,\n    $window,\n    $q\n  ) {\n\n    AngularJsonAPISynchronizationLocal.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationLocal.prototype.constructor = AngularJsonAPISynchronizationLocal;\n\n    return AngularJsonAPISynchronizationLocal;\n\n    function AngularJsonAPISynchronizationLocal(prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISynchronizationPrototype.call(_this);\n\n      _this.synchronization('init', init);\n\n      _this.begin('clearCache', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('refresh', updateStorage);\n      _this.begin('unlink', updateStorage);\n      _this.begin('unlinkReflection', updateStorage);\n      _this.begin('link', updateStorage);\n      _this.begin('linkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.begin('get', updateStorage);\n      _this.begin('all', updateStorage);\n      _this.begin('include', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clearCache', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('refresh', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n      _this.finish('include', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.factory.schema.type;\n        return $q.resolve($window.localStorage.getItem(prefix + '.' + type));\n      }\n\n      function clear() {\n        var type = _this.synchronizer.factory.schema.type;\n        $window.localStorage.removeItem(prefix + '.' + type);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.factory.schema.type;\n        var cache = _this.synchronizer.factory.cache;\n        $window.localStorage.setItem(prefix + '.' + type, cache.toJson());\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper($log, pluralize, AngularJsonAPISchemaLink) {\n\n    return AngularJsonAPISchema;\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = new AngularJsonAPISchemaLink(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get.join(',');\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all.join(',');\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchemaLink', AngularJsonAPILinkSchrapperLink);\n\n  function AngularJsonAPILinkSchrapperLink($log, pluralize) {\n\n    return AngularJsonAPISchemaLink;\n\n    function AngularJsonAPISchemaLink(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        if (linkSchema.type !== 'hasMany' && linkSchema.type !== 'hasOne') {\n          $log.error('Schema of link with wrong type: ', linkSchema.type, 'available: hasOne, hasMany');\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n\n        if (linkSchema.reflection === undefined) {\n          _this.reflection = _this.type === 'hasMany' ? pluralize.singular(type) : type;\n        } else {\n          _this.reflection = linkSchema.reflection;\n        }\n\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(AngularJsonAPIAbstractModel, AngularJsonAPISchema, $log) {\n\n    return {\n      model: modelFactory\n    };\n\n    function modelFactory(schemaObj, factory) {\n      var Model = function(data, updatedAt, saved) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, updatedAt, saved);\n\n        _this.form.parent = _this;\n      };\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.factory = factory;\n      Model.prototype.synchronize = factory.synchronizer.synchronize.bind(factory.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return Model;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIFactory', AngularJsonAPIFactoryWrapper);\n\n  function AngularJsonAPIFactoryWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPICache,\n    AngularJsonAPICollection,\n    uuid4,\n    $rootScope,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIFactory.prototype.get = get;\n    AngularJsonAPIFactory.prototype.all = all;\n    AngularJsonAPIFactory.prototype.remove = remove;\n    AngularJsonAPIFactory.prototype.initialize = initialize;\n\n    AngularJsonAPIFactory.prototype.clearCache = clearCache;\n\n    return AngularJsonAPIFactory;\n\n    /**\n     * AngularJsonAPIFactory constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the factory\n     */\n    function AngularJsonAPIFactory(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = new AngularJsonAPISchema(schema);\n      _this.cache = new AngularJsonAPICache(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.factory = _this;\n\n      _this.Model = AngularJsonAPIModel.model(\n        _this.schema,\n        _this\n      );\n\n      _this.initialized = false;\n      _this.type = _this.schema.type;\n\n      synchronizer.factory = _this;\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'resolved', response);\n        _this.cache.fromJson(response.data);\n        _this.initialized = true;\n\n        response.finish();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'rejected', response);\n        response.finish();\n        _this.initialized = true;\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'notify', response);\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id) {\n      var _this = this;\n\n      if (!uuid4.validate(id)) {\n        return $q.reject({errors: [{status: 0, statusText: 'Invalid id not uuid4'}]});\n      }\n\n      var object = _this.cache.get(id);\n\n      object.refresh();\n\n      return object;\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = params || {};\n\n      var collection = new AngularJsonAPICollection(\n        _this,\n        angular.extend(params, _this.schema.params.all)\n      );\n\n      collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n\n      return object.remove();\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize(key, target) {\n      var _this = this;\n      var relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(relationshipSchema, relationshipName) {\n        if (relationshipSchema.type === 'hasOne') {\n          relationships[relationshipName] = {\n            data: null\n          };\n        } else if (relationshipSchema.type === 'hasMany') {\n          relationships[relationshipName] = {\n            data: []\n          };\n        }\n      });\n\n      if (key !== undefined && target !== undefined) {\n        var schema = _this.schema[key];\n\n        if (schema.type === 'hasOne') {\n          relationships[key] = {\n            data: target.data.id\n          };\n        } else if (schema.type === 'hasMany') {\n          $log.warn('Initialize with relationship disallowed for hasMany relationships');\n        }\n      }\n\n      var data = {\n        type: _this.type,\n        id: uuid4.generate(),\n        attributes: {},\n        relationships: relationships\n      };\n\n      var config = {\n        saved: false,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: false\n      };\n\n      var object = _this.cache.addOrUpdate(data, config);\n\n      $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:initialize', 'resolved', object);\n\n      return object;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clearCache() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: 'clearCache'\n      };\n\n      _this.cache.clear();\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clearCache', 'notify', response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    $rootScope,\n    $injector,\n    $q\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n\n    return AngularJsonAPICollection;\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIFactory} factory Factory associated with the collection\n     * @param {object} params  Params associated with this factory (such as filters)\n     */\n    function AngularJsonAPICollection(factory, params) {\n      var _this = this;\n\n      _this.factory = factory;\n      _this.type = factory.schema.type;\n      _this.params = params;\n\n      _this.errors = {\n        synchronization: {\n          name: 'Synchronization',\n          description: 'Errors during synchronization',\n          errors: []\n        }\n      };\n\n      _this.data = _this.factory.cache.index(_this.params);\n\n      _this.error = false;\n      _this.loading = false;\n      _this.loadingCount = 0;\n      _this.synchronized = false;\n      _this.pristine = _this.data === undefined;\n\n      $rootScope.$on('angularJsonAPI:' + _this.type + ':object:remove', remove);\n      $rootScope.$on('angularJsonAPI:' + _this.type + ':factory:clearCache', clear);\n      $rootScope.$on('angularJsonAPI:' + _this.type + ':factory:add', add);\n\n      function remove(event, status, object) {\n        var index;\n\n        if (status === 'resolved' && _this.data !== undefined) {\n          index = _this.data.indexOf(object);\n          if (index > -1) {\n            _this.data.splice(index, 1);\n            _this.factory.cache.setIndexIds(_this.data);\n          }\n        }\n      }\n\n      function clear() {\n        _this.data = undefined;\n        _this.pristine = true;\n      }\n\n      function add(event, status, object, response, addToIndex) {\n        if (addToIndex === true && status === 'resolved') {\n          _this.data = _this.data || [];\n          _this.data.push(object);\n        }\n      }\n    }\n\n    /**\n     * Shortcut to this.factory.get\n     * @param  {uuid4} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id) {\n      var _this = this;\n\n      return _this.factory.get(id);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var deferred = $q.defer();\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params\n      };\n\n      __incrementLoadingCounter(this);\n\n      angular.forEach(_this.data, __incrementLoadingCounter);\n\n      _this.factory.synchronizer.synchronize(config)\n        .then(resolve, reject, notify)\n        .finally(__decrementLoadingCounter.bind(_this));\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n\n        _this.data = results.data;\n        _this.errors.synchronization.errors = [];\n        _this.error = false;\n\n        _this.updatedAt = Date.now();\n        _this.synchronized = true;\n\n        _this.factory.cache.setIndexIds(_this.data);\n        response.finish();\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter.bind(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response);\n        }\n\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'rejected', _this, response);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n        _this.errors.synchronization.errors = response.errors;\n        _this.error = true;\n\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider() {\n    var memory = {};\n    var names = [];\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPIFactory) {\n      return {\n        form: form,\n        get: get,\n        remove: remove,\n        all: all,\n        addFactory: addFactory,\n        getFactory: getFactory,\n        clearCache: clearCache,\n        proccesResults: proccesResults,\n\n        allFactories: allFactories,\n        factoriesNames: factoriesNames\n      };\n\n      function allFactories() {\n        return memory;\n      }\n\n      function factoriesNames() {\n        return names;\n      }\n\n      function addFactory(schema, synchronization) {\n        var factory = new AngularJsonAPIFactory(schema, synchronization);\n\n        memory[schema.type] = factory;\n        names.push(schema.type);\n      }\n\n      function getFactory(type) {\n        return memory[type];\n      }\n\n      function form(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t add not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].saved.form;\n      }\n\n      function get(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].get(id);\n      }\n\n      function remove(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t remove not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].remove(id);\n      }\n\n      function all(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get all of not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].all();\n      }\n\n      function clearCache() {\n        angular.forEach(memory, function(factory) {\n          factory.clearCache();\n        });\n      }\n\n      function proccesResults(results) {\n        var objects = {\n          data: [],\n          included: []\n        };\n\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n        }\n\n        var config = {\n          saved: true,\n          synchronized: true,\n          stable: true,\n          pristine: false,\n          initialization: false\n        };\n\n        angular.forEach(results.included, function(data) {\n          objects.included.push(getFactory(data.type).cache.addOrUpdate(data, config));\n        });\n\n        if (angular.isArray(results.data)) {\n          angular.forEach(results.data, function(data) {\n            objects.data.push(getFactory(data.type).cache.addOrUpdate(data, config));\n          });\n        } else {\n          objects.data.push(getFactory(results.data.type).cache.addOrUpdate(results.data, config));\n        }\n\n        return objects;\n      }\n    }\n  }\n\n})();\n\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(function($logProvider) {\n    $logProvider.debugEnabled(false);\n  });\n})();\n"],"sourceRoot":"/source/"}