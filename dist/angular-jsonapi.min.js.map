{"version":3,"sources":["/source/jsonapi.module.js","/source/utils/lazy-property.js","/source/utils/all-settled.js","/source/synchronization/synchronization.js","angular-jsonapi.min.js","/source/synchronization/synchronization-rest.js","/source/synchronization/synchronization-local.js","/source/collection/collection.factory.spec.js","/source/collection/collection.factory.js","/source/abstract-data/schema.js","/source/abstract-data/model.factory.spec.js","/source/abstract-data/model.factory.js","/source/abstract-data/abstract-data.spec.js","/source/abstract-data/abstract-data.js","/source/abstract-data/abstract-data-form.spec.js","/source/abstract-data/abstract-data-form.js","/source/jsonapi.provider.spec.js","/source/jsonapi.provider.js"],"names":["angular","module","constant","target","propertyName","callback","result","done","Object","defineProperty","get","call","enumerable","configurable","config","$provide","decorator","$delegate","$q","allSettled","promises","wrap","promise","when","then","value","success","reason","wrapped","isArray","forEach","key","hasOwnProperty","all","AngularJsonAPISynchronizationWrapper","AngularJsonAPISynchronization","_this","this","allHooks","state","beginHooks","beforeHooks","synchronizationHooks","afterHooks","finishHooks","options","hookName","loading","extend","synchronization","extendHooks","hooksKey","hooks","concat","begin","action","push","finish","beforeSynchro","afterSynchro","synchronize","collection","object","linkSchema","linkedObject","params","undefined","loadingCount","hook","results","prototype","before","after","factory","$inject","AngularJsonAPISynchronizationRestWrapper","$http","AngularJsonAPISynchronizationRest","url","wrapResp","data","status","headers","afterAll","rawData","included","indexedData","id","addOrUpdate","__remove","allCollections","type","afterGet","error","deferred","defer","method","resolve","reject","ids","toString","remove","removeLink","linkKey","removed","toLink","addLink","update","toPatchData","add","toJson","create","constructor","AngularJsonAPISynchronizationLocalWrapper","$window","AngularJsonAPISynchronizationLocal","prefix","init","datas","localStorage","getItem","Model","schema","fromJson","clear","removeItem","updateStorage","setItem","__updateStorage","describe","beforeEach","it","inject","AngularJsonAPICollection","expect","to","be","ok","AngularJsonAPICollectionWrapper","$log","uuid4","JsonAPIModelFactory","AngularJsonAPISchema","schemaObj","model","dummy","form","save","__saveDummy","bind","__synchronize","json","updatedAt","objectData","validatedData","__setData","__setLinks","links","__setUpdated","__get","Date","now","newModel","errors","validate","equals","copy","generate","parentCollection","reset","log","AngularJsonAPISchemaWrapper","include","linkName","linkSchemaObj","AngularJsonAPILinkSchema","length","join","isString","polymorphic","reflection","title","part","author","dieties","linkGetters","name","self","related","linkage","Novel","validNovel","invalidNovel","_JsonAPIModelFactory_","invalidData","deep","equal","empty","validation","have","fulfilled","rejected","AngularJsonAPIAbstractData","modelFactory","linkedCollections","parent","functions","metaFunction","metaFunctionName","AngularJsonAPIAbstractDataWrapper","lazyProperty","AngularJsonAPIAbstractDataForm","attributes","refresh","removeAllLinks","res","val","addLinkById","linkModelName","linkType","reflectionKey","linkAttributes","warn","duplicate","link","__setLinkInternal","index","splice","__updateAttributes","validatedAttributes","__setAttributes","getAll","getSingle","__setLink","indexedLinks","__validateField","__validate","__validateData","validator","attributeName","safeData","attributeValue","element","isFunction","err","parseInt","isObject","maxlength","minlength","maxvalue","minvalue","AngularJsonAPIAbstractDataFormWrapper","validateField","$jsonapi","jsonapiProvider","jsonapiFactory","addModel","memory","getModel","$get","provider"],"mappings":"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","file":"angular-jsonapi.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angularJsonapi', ['uuid4']);\n\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angularJsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angularJsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.when(promise)\n            .then(function(value) {\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angularJsonapi')\n  .factory('AngularJsonAPISynchronization', AngularJsonAPISynchronizationWrapper);\n\n  function AngularJsonAPISynchronizationWrapper($q) {\n    AngularJsonAPISynchronization.prototype.before = beforeSynchro;\n    AngularJsonAPISynchronization.prototype.after = afterSynchro;\n    AngularJsonAPISynchronization.prototype.begin = begin;\n    AngularJsonAPISynchronization.prototype.finish = finish;\n    AngularJsonAPISynchronization.prototype.synchronization = synchronization;\n    AngularJsonAPISynchronization.prototype.synchronize = synchronize;\n    AngularJsonAPISynchronization.prototype.extend = extend;\n\n    return AngularJsonAPISynchronization;\n\n    function AngularJsonAPISynchronization() {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clear',\n        'remove',\n        'removeLink',\n        'removeLinkReflection',\n        'addLink',\n        'addLinkReflection',\n        'update',\n        'refresh'\n      ];\n\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function extend(synchronization) {\n      var _this = this;\n\n      extendHooks('beginHooks');\n      extendHooks('beforeHooks');\n      extendHooks('synchronizationHooks');\n      extendHooks('afterHooks');\n      extendHooks('finishHooks');\n\n      function extendHooks(hooksKey) {\n        angular.forEach(synchronization[hooksKey], function(hooks, key) {\n          _this[hooksKey][key] = _this[hooksKey][key].concat(hooks);\n        });\n      }\n\n      angular.extend(_this.options, synchronization.options);\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n    function synchronize(action, collection, object, linkSchema, linkedObject, params) {\n      var _this = this;\n      var promises = [];\n\n      _this.state[action].loading = true;\n\n      if (object !== undefined) {\n        object.loadingCount += 1;\n      }\n\n      if (collection !== undefined) {\n        collection.loadingCount += 1;\n      }\n\n      angular.forEach(_this.beginHooks[action], function(hook) {\n        hook.call(_this, collection, object, linkSchema, linkedObject, params);\n      });\n\n      angular.forEach(_this.beforeHooks[action], function(hook) {\n        hook.call(_this, collection, object, linkSchema, linkedObject, params);\n      });\n\n      angular.forEach(_this.synchronizationHooks[action], function(hook) {\n        promises.push(hook.call(_this, collection, object, linkSchema, linkedObject, params));\n      });\n\n      $q.allSettled(promises).then(function(results) {\n        _this.state[action].success = true;\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.afterHooks[action], function(hook) {\n          hook.call(_this, collection, object, linkSchema, linkedObject, params, results);\n        });\n\n        angular.forEach(_this.finishHooks[action], function(hook) {\n          hook.call(_this, collection, object, linkSchema, linkedObject, params);\n        });\n\n        _this.state[action].loading = false;\n\n        if (object !== undefined) {\n          object.loadingCount -= 1;\n        }\n\n        if (collection !== undefined) {\n          collection.loadingCount -= 1;\n        }\n      });\n    }\n\n  }\n})();\n",null,"(function() {\n  'use strict';\n\n  angular.module('angularJsonapiRest', ['angularJsonapi'])\n  .factory('AngularJsonAPISynchronizationRest', AngularJsonAPISynchronizationRestWrapper);\n\n  function AngularJsonAPISynchronizationRestWrapper(AngularJsonAPISynchronization, $q, $http) {\n\n    AngularJsonAPISynchronizationRest.prototype = Object.create(AngularJsonAPISynchronization.prototype);\n    AngularJsonAPISynchronizationRest.prototype.constructor = AngularJsonAPISynchronizationRest;\n\n    return AngularJsonAPISynchronizationRest;\n\n    function AngularJsonAPISynchronizationRest(url) {\n      var _this = this;\n\n      AngularJsonAPISynchronization.call(_this);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('removeLink', removeLink);\n      _this.synchronization('addLink', addLink);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n      _this.after('all', afterAll);\n      _this.after('get', afterGet);\n      _this.after('refresh', afterGet);\n\n      function wrapResp(data, status, headers, config) {\n        return {\n          data: data,\n          status: status,\n          headers: headers,\n          config: config\n        };\n      }\n\n      function afterAll(collection, object, linkSchema, linkedObject, params, results) {\n        var rawData = results[0].value.data.data;\n        var included = results[0].value.data.included;\n\n        if (results[0].success === true && rawData !== undefined) {\n          var indexedData = {};\n          angular.forEach(rawData, function(data) {\n            indexedData[data.id] = data;\n            collection.addOrUpdate(data);\n          });\n\n          angular.forEach(collection.data, function(data) {\n            if (indexedData[data.id] === undefined) {\n              collection.__remove(data.id);\n            }\n          });\n\n          angular.forEach(included, function(object) {\n            collection.allCollections[object.type].addOrUpdate(object);\n          });\n        }\n      }\n\n      function afterGet(collection, object, linkSchema, linkedObject, params, results) {\n        var data;\n        var included;\n\n        if (results[0].success === true) {\n          data = results[0].value.data.data;\n          included = results[0].value.data.included;\n          collection.addOrUpdate(data);\n\n          angular.forEach(included, function(object) {\n            collection.allCollections[object.type].addOrUpdate(object);\n          });\n        } else {\n          object.error = true;\n          object.__remove();\n          collection.__remove(object.data.id);\n        }\n      }\n\n      function all(collection, object, params) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'GET',\n          url: url,\n          params: params || {}\n        };\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function get(collection, object, linkSchema, linkedObject, params) {\n        var deferred = $q.defer();\n        var config;\n        var ids;\n\n        if (angular.isArray(object)) {\n          ids = [];\n          angular.forEach(object, function(object) {\n            ids.push(object.data.id);\n          });\n        } else {\n          ids = object.data.id;\n        }\n\n        config = {\n          method: 'GET',\n          url: url + '/' + ids.toString(),\n          params: params || {}\n        };\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function remove(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'DELETE',\n          url: url + '/' + object.data.id\n        };\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function removeLink(collection, object, linkKey, linkedObject) {\n        var deferred = $q.defer();\n        var config;\n\n        if (object.removed === true || linkedObject === undefined) {\n          deferred.resolve();\n        } else {\n          config = {\n            method: 'DELETE',\n            url: url + '/' + object.data.id + '/links/' + linkKey,\n            data: {data: linkedObject.toLink()}\n          };\n\n          $http(config).\n          success(function(data, status, headers, config) {\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n        }\n\n        return deferred.promise;\n      }\n\n      function addLink(collection, object, linkKey, linkedObject) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'POST',\n          url: url + '/' + object.data.id + '/links/' + linkKey,\n          data: {data: linkedObject.toLink()}\n        };\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n\n      }\n\n      function update(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'PATCH',\n          url: url + '/' + object.data.id,\n          data: {data: object.toPatchData()}\n        };\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function add(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'POST',\n          url: url + '/' + object.data.id,\n          data: {data: object.toJson()}\n        };\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angularJsonapiLocal', ['angularJsonapi'])\n  .factory('AngularJsonAPISynchronizationLocal', AngularJsonAPISynchronizationLocalWrapper);\n\n  function AngularJsonAPISynchronizationLocalWrapper(AngularJsonAPISynchronization, $window) {\n\n    AngularJsonAPISynchronizationLocal.prototype = Object.create(AngularJsonAPISynchronization.prototype);\n    AngularJsonAPISynchronizationLocal.prototype.constructor = AngularJsonAPISynchronizationLocal;\n\n    return AngularJsonAPISynchronizationLocal;\n\n    function AngularJsonAPISynchronizationLocal(prefix) {\n      var _this = this;\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISynchronization.call(_this);\n\n      _this.begin('init', init);\n      _this.begin('clear', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('removeLink', updateStorage);\n      _this.begin('removeLinkReflection', updateStorage);\n      _this.begin('addLink', updateStorage);\n      _this.begin('addLinkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clear', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('removeLink', updateStorage);\n      _this.finish('removeLinkReflection', updateStorage);\n      _this.finish('addLink', updateStorage);\n      _this.finish('addLinkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      function init(collection) {\n        var datas = $window.localStorage.getItem(prefix + '.' + collection.Model.prototype.schema.type);\n        collection.fromJson(datas);\n      }\n\n      function clear(collection) {\n        $window.localStorage.removeItem(prefix + '.' + collection.Model.prototype.schema.type);\n      }\n\n      function updateStorage(collection) {\n        $window.localStorage.setItem(prefix + '.' + collection.Model.prototype.schema.type, collection.toJson());\n      }\n    }\n  }\n})();\n","/*jshint expr: true*/\n'use strict';\n\ndescribe('AngularJsonAPICollection factory', function() {\n\n  beforeEach(module('angularJsonapi'));\n\n  it('returns valid model', inject(function(AngularJsonAPICollection) {\n    expect(AngularJsonAPICollection).to.be.ok;\n  }));\n\n});\n","(function() {\n  'use strict';\n\n  angular.module('angularJsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    $log,\n    uuid4,\n    JsonAPIModelFactory,\n    AngularJsonAPISchema\n  ) {\n    AngularJsonAPICollection.prototype.allCollections = {};\n\n    AngularJsonAPICollection.prototype.__synchronize = __synchronize;\n    AngularJsonAPICollection.prototype.__get = __get;\n    AngularJsonAPICollection.prototype.__remove = __remove;\n\n    AngularJsonAPICollection.prototype.get = get;\n    AngularJsonAPICollection.prototype.all = all;\n    AngularJsonAPICollection.prototype.remove = remove;\n    AngularJsonAPICollection.prototype.clear = clear;\n    AngularJsonAPICollection.prototype.fromJson = fromJson;\n    AngularJsonAPICollection.prototype.toJson = toJson;\n    AngularJsonAPICollection.prototype.addOrUpdate = addOrUpdate;\n\n    return AngularJsonAPICollection;\n\n    function AngularJsonAPICollection(schema, synchronization) {\n      var _this = this;\n\n      var schemaObj = new AngularJsonAPISchema(schema);\n\n      _this.Model = JsonAPIModelFactory.model(\n        schemaObj,\n        _this.allCollections,\n        _this\n      );\n\n      _this.synchronization = synchronization;\n\n      _this.loadingCount = 0;\n      _this.data = {};\n      _this.removed = {};\n      _this.schema = schemaObj;\n\n      _this.dummy = new _this.Model({type: schema.type}, undefined, true);\n      _this.dummy.form.save = __saveDummy.bind(_this.dummy);\n      _this.allCollections[schema.type] = _this;\n\n      _this.__synchronize('init');\n    }\n\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      if (collection !== null && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, objectData.updatedAt);\n        });\n      }\n    }\n\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: {},\n        updatedAt: _this.updatedAt\n      };\n\n      angular.forEach(_this.data, function(object, key) {\n        json.data[key] = object.toJson();\n      });\n\n      return angular.toJson(json);\n    }\n\n    function addOrUpdate(validatedData, updatedAt) {\n      var _this = this;\n      if (validatedData.id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[validatedData.id] === undefined) {\n        _this.data[validatedData.id] = new this.Model(validatedData, updatedAt);\n      } else {\n        _this.data[validatedData.id].__setData(validatedData, updatedAt);\n        _this.data[validatedData.id].__setLinks(validatedData.links);\n      }\n\n      _this.data[validatedData.id].__setUpdated(updatedAt);\n\n      return _this.data[validatedData.id];\n    }\n\n    function __get(id) {\n      var _this = this;\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.Model({id: id, type: _this.Model.prototype.schema.type}, undefined, true);\n      }\n\n      return _this.data[id];\n    }\n\n    function get(id) {\n      var _this = this;\n      var result;\n\n      if (angular.isArray(id)) {\n        result = [];\n        angular.forEach(id, function(id) {\n          result.push(_this.__get(id));\n        });\n      } else {\n        result = _this.__get(id);\n      }\n\n      _this.__synchronize('get', result, undefined, undefined, _this.schema.params.get);\n\n      return result;\n    }\n\n    function all() {\n      var _this = this;\n\n      _this.__synchronize('all', undefined, undefined, undefined, _this.schema.params.all);\n\n      return _this.data;\n    }\n\n    function clear() {\n      var _this = this;\n      _this.updatedAt = Date.now();\n      _this.data = {};\n\n      _this.__synchronize('clear');\n    }\n\n    function __remove(id) {\n      var _this = this;\n      var object = _this.data[id];\n\n      _this.removed[id] = object;\n      _this.updatedAt = Date.now();\n\n      delete _this.data[id];\n    }\n\n    function remove(id) {\n      var _this = this;\n      var object = _this.data[id];\n\n      if (object !== undefined) {\n        _this.__remove(id);\n        object.__remove(id);\n      } else {\n        $log.error('Object with this id does not exist');\n      }\n\n      _this.__synchronize('remove', object);\n    }\n\n    function __saveDummy() {\n      var _this = this;\n      var errors = _this.form.validate();\n      var newModel;\n\n      if (angular.equals(errors, {})) {\n        var data = angular.copy(_this.form.data);\n        if (data.id === undefined) {\n          data.id = uuid4.generate();\n        } else if (!uuid4.validate(data.id)) {\n          $log.error('Wrong id of dummy data!');\n          return;\n        }\n\n        data.links = {};\n\n        data.type = _this.schema.type;\n        newModel = _this.parentCollection.addOrUpdate(data);\n        _this.form.reset();\n        _this.parentCollection.__synchronize('add', _this);\n      }\n    }\n\n    function __synchronize(action, object, linkKey, linkedObject, params) {\n      var _this = this;\n\n      $log.log('Synchro Collection', this.Model.prototype.schema.type, {action: action, object: object, linkKey: linkKey, linkedObject: linkedObject, params: params});\n\n      _this.synchronization.synchronize(action, _this, object, linkKey, linkedObject, params);\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angularJsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper($log) {\n\n    return AngularJsonAPISchema;\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      angular.forEach(schema.links, function(linkSchema, linkName) {\n        var linkSchemaObj = new AngularJsonAPILinkSchema(linkSchema, linkName, schema.type);\n        schema.links[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.push(linkName);\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.length > 0) {\n        _this.params.get.include = include.join(',');\n      }\n    }\n\n    function AngularJsonAPILinkSchema(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = linkName;\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        _this.model = linkSchema.model || linkName;\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n        _this.reflection = linkSchema.reflection || type;\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","/*jshint expr: true*/\n'use strict';\n\ndescribe('JsonAPIModelFactory factory', function() {\n  var schema = {\n    type: 'novels',\n    id: 'uuid4',\n    title: 'string',\n    part: 'integer',\n    links: {\n      author: 'hasOne',\n      dieties: 'hasMany'\n    }\n  };\n  var linkGetters = {\n    author: function(id) {\n      return {id: id, name: 'Howard Phillips Lovecraft'};\n    },\n\n    dieties: function(ids) {\n      return [{id: ids[0], name: 'Shub-Niggurath'}, {id: ids[1], name: 'Evil twins Nug and Yeb'}];\n    }\n  };\n  var data = {\n    type: 'novels',\n    id: '975fe66c-43c6-46cb-98fe-1cac46370de2',\n    title: 'An Epicure in the Terrible',\n    part: 1,\n    links: {\n      self: 'http://example.com/novels/1',\n      author: {\n        self: 'http://example.com/novels/1/links/author',\n        related: 'http://example.com/novels/1/author',\n        linkage: { type: 'people', id: '873edec0-5266-463f-9fd4-24365637b4f4' }\n      },\n      dieties: {\n        self: 'http://example.com/novels/1/links/dieties',\n        related: 'http://example.com/novels/1/dieties',\n        linkage: [\n          { type: 'dieties', id: '0214cffb-3269-47df-a910-13088d3344cb' },\n          { type: 'dieties', id: '1d75c7bc-4c4f-4923-98d4-a53caa137c09' }\n        ]\n      }\n    }\n  };\n\n  beforeEach(module('angularJsonapi'));\n\n  var Novel;\n  var validNovel;\n  var invalidNovel;\n\n  beforeEach(inject(function(_JsonAPIModelFactory_) {\n    var invalidData = angular.copy(data);\n    Novel = _JsonAPIModelFactory_.model(schema, linkGetters).model;\n    validNovel = new Novel(data);\n\n    invalidData.id = 'adsad';\n    invalidData.title = 34;\n    invalidData.part = 'asdasd';\n    invalidNovel = new Novel(invalidData);\n  }));\n\n  it('is ok', inject(function(JsonAPIModelFactory) {\n    expect(JsonAPIModelFactory).to.be.ok;\n    expect(Novel).to.be.ok;\n    expect(Novel.prototype.schema).to.deep.equal(schema);\n    expect(Novel.prototype.linkGetters).to.deep.equal(linkGetters);\n  }));\n\n  it('validates validNovel', function() {\n    expect(validNovel.errors.title).to.be.empty;\n    expect(validNovel.errors.part).to.be.empty;\n  });\n\n  it('produces errors for invalidNovel', function() {\n    expect(invalidNovel.errors.validation.title).to.have.length(1);\n    expect(invalidNovel.errors.validation.part).to.have.length(1);\n    expect(invalidNovel.errors.validation.id).to.have.length(1);\n  });\n\n  it('set links for hasOne', function() {\n    expect(validNovel.links.author('id')).to.deep.equal(linkGetters.author('873edec0-5266-463f-9fd4-24365637b4f4'));\n  });\n\n  it('set links for hasMany', function() {\n    expect(validNovel.links.dieties()).to.deep.equal(linkGetters.dieties(['0214cffb-3269-47df-a910-13088d3344cb', '1d75c7bc-4c4f-4923-98d4-a53caa137c09']));\n  });\n\n  it('can be updated by valid form', function() {\n    validNovel.form.data.title = 'New title';\n    expect(validNovel.form.save()).to.be.fulfilled;\n    expect(validNovel.data.title).to.equal('New title');\n  });\n\n  it('cannot be updated by invalid form', function() {\n    validNovel.form.data.part = 'wrong';\n    var promise = validNovel.form.save();\n    expect(promise).to.be.rejected;\n    expect(validNovel.data.part).to.equal(1);\n  });\n});\n","(function() {\n  'use strict';\n\n  angular.module('angularJsonapi')\n  .factory('JsonAPIModelFactory', JsonAPIModelFactory);\n\n  function JsonAPIModelFactory(AngularJsonAPIAbstractData, AngularJsonAPISchema, $log) {\n\n    return {\n      model: modelFactory\n    };\n\n    function modelFactory(schemaObj, linkedCollections, parentCollection) {\n      var Model = function(data, updatedAt, dummy) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractData.call(_this, data, updatedAt, dummy);\n\n        _this.form.parent = _this;\n      };\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractData.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.linkedCollections = linkedCollections;\n      Model.prototype.parentCollection = parentCollection;\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.call(this);\n        };\n      });\n\n      return Model;\n    }\n\n  }\n})();\n","/*jshint expr: true*/\n'use strict';\n\ndescribe('AngularJsonAPIAbstractData factory', function() {\n\n});\n","(function() {\n  'use strict';\n\n  angular.module('angularJsonapi')\n  .factory('AngularJsonAPIAbstractData', AngularJsonAPIAbstractDataWrapper);\n\n  function AngularJsonAPIAbstractDataWrapper(\n    $log,\n    uuid4,\n    lazyProperty,\n    AngularJsonAPIAbstractDataForm\n  ) {\n\n    AngularJsonAPIAbstractData.prototype.__setData = __setData;\n    AngularJsonAPIAbstractData.prototype.__setLinks   = __setLinks;\n    AngularJsonAPIAbstractData.prototype.__setLink = __setLink;\n    AngularJsonAPIAbstractData.prototype.__setAttributes = __setAttributes;\n    AngularJsonAPIAbstractData.prototype.__validateData = __validateData;\n    AngularJsonAPIAbstractData.prototype.__validateField = __validateField;\n    AngularJsonAPIAbstractData.prototype.__updateAttributes = __updateAttributes;\n    AngularJsonAPIAbstractData.prototype.__remove = __remove;\n    AngularJsonAPIAbstractData.prototype.__setUpdated = __setUpdated;\n    AngularJsonAPIAbstractData.prototype.__setLinkInternal = __setLinkInternal;\n\n    AngularJsonAPIAbstractData.prototype.refresh = refresh;\n    AngularJsonAPIAbstractData.prototype.remove = remove;\n    AngularJsonAPIAbstractData.prototype.addLinkById = addLinkById;\n    AngularJsonAPIAbstractData.prototype.addLink = addLink;\n    AngularJsonAPIAbstractData.prototype.removeLink = removeLink;\n    AngularJsonAPIAbstractData.prototype.toLink = toLink;\n    AngularJsonAPIAbstractData.prototype.toPatchData = toPatchData;\n    AngularJsonAPIAbstractData.prototype.removeAllLinks = removeAllLinks;\n\n    AngularJsonAPIAbstractData.prototype.toJson = toJson;\n\n    return AngularJsonAPIAbstractData;\n\n    function AngularJsonAPIAbstractData(data, updatedAt, dummy) {\n      var _this = this;\n\n      data.links = data.links || {};\n\n      _this.removed = false;\n      _this.loadingCount = 0;\n      _this.data = {\n        links: {},\n        attributes: {}\n      };\n      _this.links = {};\n\n      _this.errors = {\n        validation: {}\n      };\n\n      _this.dummy = dummy || false;\n      _this.error = false;\n\n      _this.__setUpdated(updatedAt);\n      _this.__setData(data, updatedAt);\n\n      _this.form = new AngularJsonAPIAbstractDataForm(_this);\n    }\n\n    function refresh() {\n      var _this = this;\n\n      _this.parentCollection.__synchronize('refresh', _this);\n    }\n\n    function toJson() {\n      var _this = this;\n\n      return {\n        data: _this.data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    function __setUpdated(updatedAt) {\n      var _this = this;\n\n      _this.updatedAt = updatedAt || Date.now();\n      _this.parentCollection.updatedAt = _this.updatedAt;\n    }\n\n    function __remove() {\n      var _this = this;\n\n      _this.__setUpdated();\n      _this.removed = true;\n      _this.removeAllLinks();\n    }\n\n    function remove() {\n      var _this = this;\n\n      _this.__remove();\n      _this.parentCollection.remove(_this.data.id);\n    }\n\n    function toLink() {\n      return {type: this.data.type, id: this.data.id};\n    }\n\n    function toPatchData() {\n      var _this = this;\n      var res = {data: {}};\n      angular.forEach(_this.data, function(val, key) {\n        if (key !== 'links') {\n          res.data[key] = val;\n        }\n      });\n\n      return res;\n    }\n\n    function addLinkById(linkKey, linkModelName, id) {\n      var _this = this;\n      var linkedObject = _this.linkedCollections[linkModelName].__get(id);\n\n      if (_this.schema.links[linkKey] === undefined) {\n        $log.error('Cannot add link not specified in schema: ' + linkKey);\n        return;\n      }\n\n      if (_this.linkedCollections[linkModelName] === undefined) {\n        $log.error('Cannot add link of not existing type: ' + linkModelName);\n        return;\n      }\n\n      if (!uuid4.validate(id)) {\n        $log.error('Wrong link id, not uuid4: ' + id);\n        return;\n      }\n\n      if (linkedObject === undefined) {\n        $log.error('Cant find', linkModelName, 'with', id);\n        return;\n      }\n\n      _this.addLink(\n        linkKey,\n        linkedObject\n      );\n\n    }\n\n    function addLink(linkKey, linkedObject, reflection) {\n      var _this = this;\n      var linkSchema = _this.schema.links[linkKey];\n      var linkType;\n      var reflectionKey;\n      var linkAttributes;\n\n      if (linkedObject === undefined) {\n        $log.error('Can\\'t add non existing object');\n        return;\n      }\n\n      if (linkSchema === undefined) {\n        $log.error('Can\\'t add link not present in schema: ', linkKey, _this, reflection);\n        return;\n      }\n\n      if (linkSchema.polymorphic === false && linkSchema.model !== linkedObject.schema.type) {\n        $log.error('This relation is not polymorphic, expected: ' + linkSchema.model + ' instead of ' + linkedObject.schema.type);\n        return;\n      }\n\n      linkType = linkSchema.type;\n      reflectionKey = linkSchema.reflection;\n      linkAttributes = _this.data.links[linkKey].linkage;\n\n      if (linkType === 'hasOne') {\n        if (_this.data.links[linkKey].linkage.id === linkedObject.data.id) {\n          return;\n        }\n\n        if (linkAttributes !== undefined && linkAttributes !== null) {\n          $log.warn('Swaping hasOne', linkKey, 'of', _this.toString());\n          _this.removeLink(linkKey);\n        }\n\n        _this.data.links[linkKey].linkage = linkedObject.toLink();\n        linkAttributes = linkedObject.toLink();\n      } else {\n        var duplicate = false;\n        angular.forEach(_this.data.links[linkKey].linkage, function(link) {\n          if (link.id === linkedObject.data.id) {\n            duplicate = true;\n          }\n        });\n\n        if (duplicate === true) {\n          return;\n        }\n\n        _this.data.links[linkKey].linkage.push(linkedObject.toLink());\n      }\n\n      if (reflection === true) {\n        _this.parentCollection.__synchronize('addLinkReflection', _this, linkKey, linkedObject);\n      } else {\n        linkedObject.addLink(reflectionKey, _this, true);\n        _this.parentCollection.__synchronize('addLink', _this, linkKey, linkedObject);\n      }\n\n      _this.__setUpdated();\n      _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n    }\n\n    function removeAllLinks() {\n      var _this = this;\n\n      angular.forEach(_this.links, function(link, key) {\n        _this.removeLink(key);\n      });\n    }\n\n    function removeLink(linkKey, linkedObject, reflection) {\n      var _this = this;\n      var linkSchema = _this.schema.links[linkKey];\n      var linkType;\n      var linkAttributes;\n      var reflectionKey;\n      var removed = false;\n\n      if (_this.schema.links[linkKey] === undefined) {\n        $log.error('Can\\'t remove link not present in schema');\n        return;\n      }\n\n      linkType = linkSchema.type;\n      reflectionKey = linkSchema.reflection;\n      linkAttributes = _this.data.links[linkKey].linkage;\n\n      if (linkType === 'hasOne') {\n        if (linkedObject === undefined || linkedObject.data.id === linkAttributes.id) {\n          _this.data.links[linkKey].linkage = null;\n          linkAttributes = null;\n          removed = true;\n          if (reflection !== true && _this.links[linkKey] !== undefined) {\n            _this.links[linkKey].removeLink(reflectionKey, _this, true);\n          }\n        }\n      } else {\n        if (linkedObject === undefined) {\n          _this.data.links[linkKey].linkage = [];\n          linkAttributes = [];\n          removed = true;\n          if (reflection !== true) {\n            angular.forEach(_this.links[linkKey], function(link) {\n              link.removeLink(reflectionKey, _this, true);\n            });\n          }\n        } else {\n          angular.forEach(linkAttributes, function(link, index) {\n            if (link.id === linkedObject.data.id) {\n              if (reflection !== true) {\n                linkedObject.removeLink(reflectionKey, _this, true);\n              }\n\n              linkAttributes.splice(index, 1);\n              removed = true;\n            }\n          });\n        }\n      }\n\n      if (removed === true) {\n        _this.__setUpdated();\n\n        if (reflection !== true) {\n          _this.parentCollection.__synchronize('removeLink', _this, linkKey, linkedObject);\n        } else {\n          _this.parentCollection.__synchronize('removeLinkReflection',  _this, linkKey, linkedObject);\n        }\n\n        _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n      }\n    }\n\n    function __updateAttributes(validatedAttributes) {\n      var _this = this;\n\n      _this.__setUpdated();\n      _this.__setAttributes(validatedAttributes);\n      _this.parentCollection.__synchronize('update', _this);\n    }\n\n    function __setLinkInternal(linkAttributes, linkKey, linkSchema) {\n      var _this = this;\n      var linkType = linkSchema.type;\n      var reflectionKey = linkSchema.reflection;\n\n      if (linkAttributes === null) {\n        delete _this.links[linkKey];\n        _this.links[linkKey] = undefined;\n      } else if (linkType === 'hasMany' && angular.isArray(linkAttributes)) {\n        var getAll = function() {\n          var result = [];\n          angular.forEach(linkAttributes, function(link) {\n            var linkedObject = _this.linkedCollections[link.type].__get(link.id);\n            linkedObject.addLink(reflectionKey, _this, true);\n\n            result.push(linkedObject);\n          });\n\n          return result;\n        };\n\n        lazyProperty(_this.links, linkKey, getAll);\n      } else if (linkType === 'hasOne' && linkAttributes.id) {\n\n        var getSingle = function() {\n          var linkedObject = _this.linkedCollections[linkAttributes.type].__get(linkAttributes.id);\n          linkedObject.addLink(reflectionKey, _this, true);\n\n          return linkedObject;\n        };\n\n        lazyProperty(_this.links, linkKey, getSingle);\n      }\n    }\n\n    function __setLink(linkAttributes, linkKey, linkSchema) {\n      var _this = this;\n      var linkType = linkSchema.type;\n      var reflectionKey = linkSchema.reflection;\n\n      if (linkType === 'hasMany' && angular.isArray(linkAttributes)) {\n        var indexedLinks = {};\n        angular.forEach(linkAttributes, function(link) {\n          indexedLinks[link.id] = link;\n        });\n\n        angular.forEach(_this.links[linkKey], function(link) {\n          if (indexedLinks[link.data.id] === undefined) {\n            link.removeLink(reflectionKey, _this, true);\n          }\n        });\n      } else if (linkType === 'hasOne' && linkAttributes.id) {\n        if (_this.links[linkKey] !== undefined && _this.links[linkKey].data.id !== linkAttributes.id) {\n          _this.links[linkKey].removeLink(reflectionKey, _this, true);\n        }\n      }\n\n      _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n    }\n\n    function __setLinks(links) {\n      var _this = this;\n\n      angular.forEach(_this.schema.links, function(linkSchema, linkName) {\n        if (linkSchema.type === 'hasOne') {\n          _this.data.links[linkName] = links[linkName] || {linkage: null};\n        } else {\n          _this.data.links[linkName] = links[linkName] || {linkage: []};\n        }\n      });\n\n      angular.forEach(_this.schema.links, function(linkSchema, linkKey) {\n        if (links[linkKey] !== undefined) {\n          _this.__setLink(links[linkKey].linkage, linkKey, linkSchema);\n        }\n      });\n    }\n\n    function __validateField(data, key) {\n      var _this = this;\n      var error = [];\n\n      if (data !== undefined) {\n        error = __validate(_this.schema.attributes[key], data, key);\n      }\n\n      return error;\n    }\n\n    function __validateData(data) {\n      var _this = this;\n      var errors = {};\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        var error = _this.__validateField(data[key], key);\n        if (error.length > 0) {\n          errors[key] = error;\n          $log.warn('Erorrs when validating ', data[key], errors);\n        }\n      });\n\n      return errors;\n    }\n\n    function __setAttributes(attributes) {\n      var _this = this;\n\n      angular.forEach(_this.schema.attributes, function(validator, attributeName) {\n        if (attributes[attributeName]) {\n          _this.data.attributes[attributeName] = attributes[attributeName];\n        }\n      });\n    }\n\n    function __setData(data) {\n      var _this = this;\n      var safeData = angular.copy(data);\n\n      _this.errors.validation = _this.__validateData(safeData);\n\n      safeData.links = safeData.links || {};\n      safeData.attributes = safeData.attributes || {};\n\n      _this.data.id = safeData.id;\n      _this.data.type = safeData.type;\n\n      _this.__setAttributes(safeData.attributes);\n      _this.__setLinks(safeData.links);\n    }\n\n    function __validate(validator, attributeValue, attributeName) {\n      var errors = [];\n      if (angular.isArray(validator)) {\n        angular.forEach(validator, function(element) {\n          errors = errors.concat(__validate(element, attributeValue, attributeName));\n        });\n      } else if (angular.isFunction(validator)) {\n        var err = validator(attributeValue);\n        if (angular.isArray(err)) {\n          errors.concat(err);\n        } else {\n          $log.error(\n            'Wrong validator type it should return array of errors instead of: ' +\n              err.toString()\n          );\n        }\n      } else if (angular.isString(validator)) {\n        if (validator === 'text' || validator === 'string') {\n          if (!angular.isString(attributeValue)) {\n            errors.push(attributeName + ' is not a string ');\n          }\n        } else if (validator === 'number' || validator === 'integer') {\n          if (parseInt(attributeValue).toString() !== attributeValue.toString()) {\n            errors.push(attributeName + ' is not a number');\n          }\n        } else if (validator === 'uuid4') {\n          if (!uuid4.validate(attributeValue)) {\n            errors.push(attributeName + ' is not a uuid4');\n          }\n        } else if (validator === 'required') {\n          if (attributeValue.toString().length === 0) {\n            errors.push(attributeName + ' is empty');\n          }\n        } else {\n          $log.error('Wrong validator type: ' + validator.toString());\n        }\n      } else if (angular.isObject(validator)) {\n        if (validator.maxlength !== undefined && attributeValue.length > validator.maxlength) {\n          errors.push(attributeName + ' is too long max ' + validator.maxlength);\n        }\n\n        if (validator.minlength !== undefined && attributeValue.length < validator.minlength) {\n          errors.push(attributeName + ' is too short min ' + validator.minlength);\n        }\n\n        if (validator.maxvalue !== undefined && parseInt(attributeValue) > validator.maxvalue) {\n          errors.push(attributeName + ' is too big max ' + validator.maxvalue);\n        }\n\n        if (validator.minvalue !== undefined && parseInt(attributeValue) < validator.minvalue) {\n          errors.push(attributeName + ' is too small min ' + validator.minvalue);\n        }\n      } else {\n        $log.error('Wrong validator type: ' + validator.toString());\n      }\n\n      return errors;\n    }\n\n  }\n})();\n","/*jshint expr: true*/\n'use strict';\n\ndescribe('AngularJsonAPIAbstractDataForm factory', function() {\n\n});\n","(function() {\n  'use strict';\n\n  angular.module('angularJsonapi')\n  .factory('AngularJsonAPIAbstractDataForm', AngularJsonAPIAbstractDataFormWrapper);\n\n  function AngularJsonAPIAbstractDataFormWrapper($log) {\n\n    AngularJsonAPIAbstractDataForm.prototype.save = save;\n    AngularJsonAPIAbstractDataForm.prototype.reset = reset;\n    AngularJsonAPIAbstractDataForm.prototype.validate = validate;\n    AngularJsonAPIAbstractDataForm.prototype.validateField = validateField;\n\n    AngularJsonAPIAbstractDataForm.prototype.__synchronize = __synchronize;\n\n    return AngularJsonAPIAbstractDataForm;\n\n    function AngularJsonAPIAbstractDataForm(parent) {\n      var _this = this;\n\n      _this.data = {};\n      _this.parent = parent;\n      _this.reset();\n    }\n\n    function save() {\n      var _this = this;\n      var errors = _this.validate();\n\n      if (angular.equals(errors, {}) === false) {\n        $log.error('Errors in form: ', errors);\n        return;\n      }\n\n      _this.parent.__updateAttributes(_this.data);\n    }\n\n    function reset() {\n      var _this = this;\n\n      angular.forEach(_this.parent.schema.attributes, function(data, key) {\n        _this.data[key] = _this.parent.data.attributes[key] || '';\n      });\n\n      _this.errors = {\n        validation: {}\n      };\n    }\n\n    function validate() {\n      var _this = this;\n      var errors;\n\n      errors = _this.parent.__validateData(_this.data);\n\n      _this.errors.validation = errors;\n\n      return errors;\n    }\n\n    function validateField(key) {\n      var _this = this;\n      var errors;\n      errors = _this.parent.__validateField(\n        _this.data[key],\n        key\n      );\n\n      _this.errors.validation[key] = errors;\n\n      return errors;\n    }\n\n    function __synchronize(key) {\n      $log.log('Synchro Collection ' + this.Model.prototype.schema.type, key);\n    }\n\n  }\n})();\n","/*jshint expr: true*/\n'use strict';\n\ndescribe('$jsonapi provider', function() {\n\n  beforeEach(module('angularJsonapi'));\n\n  it('returns valid model', inject(function($jsonapi) {\n    expect($jsonapi).to.be.ok;\n  }));\n\n});\n","(function() {\n  'use strict';\n\n  angular.module('angularJsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider() {\n    var memory = {};\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPICollection) {\n      return {\n        form: form,\n        get: get,\n        remove: remove,\n        all: all,\n        addModel: addModel,\n        getModel: getModel\n      };\n\n      function addModel(schema, synchronization) {\n        var collection = new AngularJsonAPICollection(schema, synchronization);\n\n        memory[schema.type] = collection;\n      }\n\n      function getModel(type) {\n        return memory[type];\n      }\n\n      function form(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t add not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].dummy.form;\n      }\n\n      function get(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].get(id);\n      }\n\n      function remove(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t remove not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].remove(id);\n      }\n\n      function all(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get all of not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].all();\n      }\n    }\n  }\n\n})();\n\n"],"sourceRoot":"/source/"}