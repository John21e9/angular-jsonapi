{"version":3,"sources":["/source/jsonapi.module.js","/source/model/model-relationship/model-relationship-has-one.factory.js","angular-jsonapi.min.js","/source/model/model-relationship/model-relationship-has-many.factory.js","/source/model/model-linker/model-linker.js","/source/model/model-form/model-form.factory.js","/source/model/abstract-model/abstract-model.js","/source/factory/factory-cache/factory-cache.factory.js","/source/errors/validation-error/validation-error.factory.js","/source/errors/synchronization-error/synchronization-error.factory.js","/source/errors/errors-manager/errors-manager.factory.js","/source/utils/lazy-property.js","/source/utils/kebab-case.js","/source/utils/all-settled.js","/source/synchronizers/synchronizer-simple.factory.js","/source/synchronizers/synchronizer-prototype.js","/source/synchronizations/synchronization-rest.factory.js","/source/synchronizations/synchronization-prototype.js","/source/synchronizations/synchronization-local.factory.js","/source/schema/schema.factory.js","/source/schema/schema-link.factory.js","/source/model/model-factory.factory.js","/source/factory/factory.factory.js","/source/collection/collection.factory.js","/source/jsonapi.provider.js","/source/jsonapi.config.js"],"names":["angular","module","constant","pluralize","validate","AngularJsonAPIModelRelationshipHasOne","$jsonapi","$log","ModelRelationshipHasOneFactory","parent","key","object","ModelRelationshipHasOne","_this","this","schema","relationships","undefined","remove","target","unlink","initialize","type","polymorphic","error","model","getFactory","form","link","reflection","set","targets","length","push","apply","prototype","constructor","add","create","factory","$inject","AngularJsonAPIModelRelationshipHasMany","ModelRelationshipHasManyFactory","ModelRelationshipHasMany","__push","__pop","index","indexOf","splice","Object","Array","AngularJsonAPIModelLinkerService","toLinkData","data","id","oneWay","__addHasMany","__processAddHasMany","__addHasOne","__processAddHasOne","__removeHasMany","__processRemove","reflectionSchema","reflectionKey","__swapResults","__wrapResults","oldReflectionSchema","oldReflection","result","__removeHasOne","reset","debug","linkData","isArray","value","newValue","array","forEach","item","i","service","AngularJsonAPIModelFormWrapper","AngularJsonAPIModelValidationError","validateJS","$q","AngularJsonAPIModelFormFactory","AngularJsonAPIModelForm","attributes","toJson","copy","save","auto","slice","validator","errors","validation","clear","resolve","deferred","reject","errorsMap","attribute","attributesWrapper","constraintsWrapper","defer","async","then","promise","AngularJsonAPIAbstractModelWrapper","AngularJsonAPIModelSynchronizationError","AngularJsonAPIModelErrorsManager","uuid4","$rootScope","$injector","AngularJsonAPIAbstractModel","config","updatedAt","saved","stable","pristine","removed","loading","saving","Date","now","loadingCount","savingCount","synchronization","promises","__setData","synchronize","notify","response","$emit","action","update","cache","indexIds","finish","concat","__decrementSavingCounter","bind","__incrementSavingCounter","refresh","synchronizeIncluded","__incrementLoadingCounter","__decrementLoadingCounter","resolveIncluded","includedResponse","operation","success","results","included","proccesResults","allSettled","map","get","params","unlinkAll","clearRemoved","revertRemove","removeLink","linksObj","removeReflectionLink","isObject","resolveReflection","validatedData","initialization","hasErrors","answer","setAttributes","validators","setRelationships","relationshipData","links","linkOne","unlinkOne","AngularJsonAPICacheWrapper","AngularJsonAPICacheFactory","AngularJsonAPICache","size","addOrUpdate","modelFactory","fromJson","json","collection","synchronized","objectData","setIndexIds","element","isString","AngularJsonAPIModelValidationErrorWrapper","ValidationErrorFactory","message","ValidationError","Error","captureStackTrace","context","name","AngularJsonAPIModelSynchronizationErrorWrapper","SynchronizationErrorFactory","code","SynchronizationError","AngularJsonAPIModelErrorsManagerWrapper","ErrorsManagerFactory","description","ErrorConstructor","defaultFilter","ErrorsManager","obj","propertyName","callback","done","defineProperty","call","enumerable","configurable","str","replace","toLowerCase","$provide","decorator","$delegate","resolvedCallback","rejectedCallback","wrap","isFunction","reason","wrapped","hasOwnProperty","all","AngularJsonAPISynchronizerSimpleWrapper","AngularJsonAPISynchronizerPrototype","AngularJsonAPISynchronizerSimpleFactory","synchronizations","AngularJsonAPISynchronizerSimple","state","synchronizer","step","resolved","afterHooks","hook","finishHooks","rejected","noop","beginHooks","beforeHooks","synchronizationHooks","AngularJsonAPISynchronizerPrototypeWrapper","AngularJsonAPISynchronizationRestWrapper","AngularJsonAPISynchronizationPrototype","toKebabCase","$http","AngularJsonAPISynchronizationRestFactory","url","AngularJsonAPISynchronizationRest","method","headers","resolveHttp","rejectHttp","status","statusText","rejectServerOffline","console","log","rejectNoConnection","Accept","Content-Type","arguments","AngularJsonAPISynchronizationPrototypeWrapper","allHooks","options","hookName","begin","beforeSynchro","afterSynchro","before","after","AngularJsonAPISynchronizationLocalWrapper","$window","AngularJsonAPISynchronizationLocalFactory","prefix","AngularJsonAPISynchronizationLocal","init","localStorage","getItem","removeItem","updateStorage","setItem","__updateStorage","AngularJsonAPISchemaWrapper","AngularJsonAPISchemaLink","AngularJsonAPISchemaFactory","AngularJsonAPISchema","include","linkSchema","linkName","linkSchemaObj","extend","join","AngularJsonAPILinkSchrapperLink","AngularJsonAPISchemaLinkFactory","plural","singular","AngularJsonAPIModel","createModelFactory","schemaObj","Model","functions","metaFunction","metaFunctionName","AngularJsonAPIFactoryWrapper","AngularJsonAPICollection","AngularJsonAPIFactoryFactory","AngularJsonAPIFactory","initialized","fetch","relationshipSchema","relationshipName","generate","clearCache","AngularJsonAPICollectionWrapper","AngularJsonAPICollectionFactory","event","$on","jsonapiProvider","jsonapiFactory","allFactories","memory","factoriesNames","names","addFactory","objects","$get","provider","$logProvider","debugEnabled","run","Promise"],"mappings":"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","file":"angular-jsonapi.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false, validate: false */\n  .constant('pluralize', pluralize)\n  .constant('validateJS', validate);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelRelationshipHasOne', AngularJsonAPIModelRelationshipHasOne);\n\n  function AngularJsonAPIModelRelationshipHasOne(\n    $jsonapi,\n    $log\n  ) {\n\n    return {\n      create: ModelRelationshipHasOneFactory\n    };\n\n    function ModelRelationshipHasOneFactory(parent, key, object) {\n      ModelRelationshipHasOne.prototype = object;\n      ModelRelationshipHasOne.prototype.constructor = ModelRelationshipHasOne;\n\n      ModelRelationshipHasOne.prototype.add = set;\n      ModelRelationshipHasOne.prototype.set = set;\n      ModelRelationshipHasOne.prototype.remove = remove;\n      ModelRelationshipHasOne.prototype.initialize = initialize;\n\n      return new ModelRelationshipHasOne(parent, key);\n\n      function ModelRelationshipHasOne(parent, key) {\n        var _this = this;\n\n        _this.parent = parent;\n        _this.key = key;\n        _this.schema = parent.schema.relationships[key];\n        _this.undefined = true;\n        _this.null = false;\n      }\n\n      /**\n       * Removes target to relationship\n       * @param {AngularJsonAPIModel} target model to be removed from relationship\n       */\n      function remove(target) {\n        var _this = this;\n        return _this.parent.unlink(_this.key, target);\n      }\n\n      /**\n       * Initialize new model linked to the object by form, you can edit and save it later\n       * @param  {String} type type neme for polymorphic associations\n       * @return {AngularJsonAPIModel}      Newly initialized object\n       */\n      function initialize(type) {\n        var _this = this;\n\n        if (_this.schema.polymorphic === true) {\n          if (type === undefined) {\n            $log.error('Run initialize with type for polymorphic asscoiation');\n\n            return;\n          }\n        } else {\n          type = _this.schema.model;\n        }\n\n        var object = $jsonapi.getFactory(type).initialize();\n\n        object.form.link(_this.schema.reflection, _this);\n\n        return object;\n      }\n\n      /**\n       * Clears and sets relationship data according to the argument\n       * @param  {[AngularJsonAPIModel]} targets Array of models to replace\n       * current relationship\n       * @return {ModelRelationshipHasMany}     this\n       */\n      function set(targets) {\n        var _this = this;\n\n        _this.length = 0;\n        _this.undefined = false;\n        _this.push.apply(_this, targets);\n\n        _this.null = _this.length === 0;\n\n        return _this;\n      }\n    }\n  }\n})();\n","!function(){\"use strict\";angular.module(\"angular-jsonapi\",[\"uuid4\"]).constant(\"pluralize\",pluralize).constant(\"validateJS\",validate)}(),function(){\"use strict\";function n(n,t){function e(e,r,a){function o(n,t){var e=this;e.parent=n,e.key=t,e.schema=n.schema.relationships[t],e.undefined=!0,e[\"null\"]=!1}function i(n){var t=this;return t.parent.unlink(t.key,n)}function s(e){var r=this;if(r.schema.polymorphic===!0){if(void 0===e)return void t.error(\"Run initialize with type for polymorphic asscoiation\")}else e=r.schema.model;var a=n.getFactory(e).initialize();return a.form.link(r.schema.reflection,r),a}function c(n){var t=this;return t.length=0,t.undefined=!1,t.push.apply(t,n),t[\"null\"]=0===t.length,t}return o.prototype=a,o.prototype.constructor=o,o.prototype.add=c,o.prototype.set=c,o.prototype.remove=i,o.prototype.initialize=s,new o(e,r)}return{create:e}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelRelationshipHasOne\",n),n.$inject=[\"$jsonapi\",\"$log\"]}(),function(){\"use strict\";function n(n,t){function e(n,t){return new r(n,t)}function r(n,t){var e=this;e.parent=n,e.key=t,e.schema=n.schema.relationships[t],e.undefined=!0,e[\"null\"]=!1}function a(n){var t=this;return t.parent.link(t.key,n)}function o(n){var t=this;return t.parent.unlink(t.key,n)}function i(e){var r=this;if(r.schema.polymorphic===!0){if(void 0===e)return void t.error(\"Run initialize with type for polymorphic asscoiation\")}else e=r.schema.model;var a=n.getFactory(e).initialize();return a.form.link(r.schema.reflection,r),a}function s(n){var t=this;return t.length=0,t.undefined=!1,t.push.apply(t,n),t[\"null\"]=0===t.length,t}function c(n){var t=this;return t.undefined=!1,t.undefined=null,t.push(n)}function u(n){var t=this,e=t.indexOf(n);return e>-1?null:(t.splice(e,1),t[\"null\"]=0===t.length,n)}function l(){t.error(\"User add or __push instead\")}function d(){t.error(\"User remove or __pop instead\")}return r.prototype=Object.create(Array.prototype),r.prototype.constructor=r,r.prototype.add=a,r.prototype.remove=o,r.prototype.set=s,r.prototype.initialize=i,r.prototype.push=l,r.prototype.splice=d,r.prototype.__push=c,r.prototype.__pop=u,{create:e}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelRelationshipHasMany\",n),n.$inject=[\"$jsonapi\",\"$log\"]}(),function(){\"use strict\";function n(n){function t(n){return null===n?null:{type:n.data.type,id:n.data.id}}function e(t,e,r,i){var u;return void 0===t?(n.error(\"Can't add link to non existing object\",t,e,r),n.error(\"Object:\",t.data.type,t),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",e),[]):(u=t.schema.relationships[e],void 0===r?(n.error(\"Can't link non existing object\",t,e,r,u),n.error(\"Object:\",t.data.type,t),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",e),n.error(\"Schema:\",u),[]):void 0===u?(n.error(\"Can't add link not present in schema:\",t,e,r,u),n.error(\"Object:\",t.data.type,t),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",e),n.error(\"Schema:\",u),[]):null!==r&&u.polymorphic===!1&&u.model!==r.data.type?(n.error(\"This relation is not polymorphic, expected: \"+u.model+\" instead of \"+r.data.type),n.error(\"Object:\",t.data.type,t),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",e),n.error(\"Schema:\",u),[]):\"hasMany\"===u.type?i===!0?(c(t,e,r,!1),[]):a(t,e,r):\"hasOne\"===u.type?i===!0?(s(t,e,r,!1),[]):o(t,e,r):void 0)}function r(t,e,r,a){var o;return void 0===t?(n.error(\"Can't remove link from non existing object\",t,e,r),n.error(\"Object:\",t.data.type,t),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",e),[]):(o=t.schema.relationships[e],void 0===o?(n.error(\"Can't remove link not present in schema:\",t,e,r,o),n.error(\"Object:\",t.data.type,t),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",e),n.error(\"Schema:\",o),[]):a===!0?(l(t,e,r,!1),[]):i(t,e,r))}function a(n,t,e){var r,a=n.schema.relationships[t].reflection;return a===!1?(c(n,t,e),[]):(r=e.schema.relationships[a],\"hasOne\"===r.type?h(d(n,t,e),d(e,a,n),o(e,a,n)):\"hasMany\"===r.type?(c(n,t,e),c(e,a,n),[d(e,a,n)]):void 0)}function o(n,t,e){var r,a,o=n.schema.relationships[t].reflection,i=n.relationships[t],d=[];return s(n,t,e),void 0!==i&&null!==i&&(a=i.schema.relationships[o],\"hasOne\"===a.type?u(i,o,n):\"hasMany\"===a.type&&l(i,o,n),d.push(i,o,n)),void 0!==e&&null!==e&&o!==!1&&(r=e.schema.relationships[o],\"hasOne\"===r.type?s(e,o,n):\"hasMany\"===r.type&&c(e,o,n),d.push(e,o,n)),d}function i(n,t,e){var r,a=n.schema.relationships[t],o=a.reflection;return\"hasMany\"===a.type?l(n,t,e):\"hasOne\"===a.type&&u(n,t,e),o===!1?[]:(r=e.schema.relationships[o],\"hasOne\"===r.type?u(e,o,n):\"hasMany\"===r.type&&l(e,o,n),[d(e,o,n)])}function s(e,r,a,o){return n.debug(\"addHasOne\",e,r,a),e.relationships[r]=a,e.data.relationships[r].data=t(a),o!==!1&&e.reset(!0),!0}function c(e,r,a,o){var i=t(a);return n.debug(\"addHasMany\",e,r,a),angular.isArray(e.relationships[r])&&e.relationships[r].indexOf(a)>-1?!1:(e.relationships[r]=e.relationships[r]||[],e.data.relationships[r].data=e.data.relationships[r].data||[],e.relationships[r].push(a),e.data.relationships[r].data.push(i),o!==!1&&e.reset(!0),!0)}function u(t,e,r,a){return n.debug(\"removeHasOne\",t,e,r),void 0!==r&&t.relationships[e]!==r?!1:(t.relationships[e]=null,t.data.relationships[e].data=void 0,a!==!1&&t.reset(!0),!0)}function l(t,e,r,a){if(n.debug(\"removeHasMany\",t,e,r),void 0!==t.relationships[e]){if(void 0===r)return t.relationships[e]=[],t.data.relationships[e].data=[],a!==!1&&t.reset(!0),!0;var o=t.relationships[e].indexOf(r);return-1===o?!1:(t.relationships[e].splice(o,1),t.data.relationships[e].data.splice(o,1),a!==!1&&t.reset(!0),!0)}}function d(n,t,e){return{object:n,key:t,target:e}}function h(n,t,e){var r=-1;return angular.forEach(e,function(t,e){t.object===n.object&&t.key===n.key&&t.target===n.target&&(r=e)}),r>-1?e[r]=t:e.push(t),e}var p=this;return p.toLinkData=t,p.link=e,p.unlink=r,this}angular.module(\"angular-jsonapi\").service(\"AngularJsonAPIModelLinkerService\",n),n.$inject=[\"$log\"]}(),function(){\"use strict\";function n(n,t,e,r){function a(n){return new o(n)}function o(n){var t=this;t.data={id:n.data.id,type:n.data.type,attributes:{},relationships:{}},t.relationships={},t.parent=n,t.schema=n.schema,t.reset()}function i(){var n=this,t=angular.copy(n.data),e={};return angular.forEach(t.relationships,function(n,t){void 0!==n.data&&(e[t]=n)}),t.relationships=e,{data:t}}function s(){var n=this;return n.parent.save()}function c(n){var t=this;angular.forEach(t.schema.relationships,function(n,e){t.data.relationships[e]=angular.copy(t.parent.data.relationships[e])||{},t.relationships[e]=angular.isArray(t.relationships[e])?t.parent.relationships[e].slice():t.parent.relationships[e]}),(n!==!0||t.parent[\"synchronized\"]!==!0)&&(angular.forEach(t.schema.attributes,function(n,e){t.data.attributes[e]=angular.copy(t.parent.data.attributes[e])}),t.parent.errors.validation.clear())}function u(t){function a(){void 0===t?c.parent.errors.validation.clear():c.parent.errors.validation.clear(t),u.resolve()}function o(e){c.parent.error=!0,void 0===t?c.parent.errors.validation.clear():c.parent.errors.validation.clear(t),angular.forEach(e,function(t,e){angular.forEach(t,function(t){c.parent.errors.validation.add(e,n.create(t,e))})}),u.reject(c.parent.errors.validation)}var i,s,c=this,u=r.defer();return void 0===t?(i=c.data.attributes,s=c.schema.attributes):(i={},s={},i[t]=c.data.attributes[t],s[t]=c.schema.attributes[t]),e.async(i,s).then(a,o),u.promise}function l(n,e){var a=this;return r.resolve(t.link(a,n,e,!0))}function d(n,e){var a=this;return r.resolve(t.unlink(a,n,e,!0))}return o.prototype.save=s,o.prototype.reset=c,o.prototype.validate=u,o.prototype.link=l,o.prototype.unlink=d,o.prototype.toJson=i,{create:a}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelForm\",n),n.$inject=[\"AngularJsonAPIModelValidationError\",\"AngularJsonAPIModelLinkerService\",\"validateJS\",\"$q\"]}(),function(){\"use strict\";function n(n,o,i,s,c,u,l,d,h,p){function f(t,e,r){var a=this;t.relationships=t.relationships||{},a.saved=void 0===e.saved?!0:e.saved,a.stable=void 0===e.stable?!0:e.stable,a[\"synchronized\"]=void 0===e[\"synchronized\"]?!0:e[\"synchronized\"],a.pristine=void 0===e.pristine?!0:e.pristine,a.removed=!1,a.loading=!1,a.saving=!1,a.updatedAt=a[\"synchronized\"]===!0?Date.now():r,a.loadingCount=0,a.savingCount=0,a.data={relationships:{},attributes:{}},a.relationships={},angular.forEach(a.schema.relationships,function(n,t){a.relationships[t]=void 0}),a.errors={validation:i.create(\"Validation\",\"Errors of attributes validation\",o),synchronization:i.create(\"Synchronization\",\"Errors of synchronizations\",n)},a.promises={},P(a,t),a.form=c.create(a)}function y(){function n(){i.synchronize(c).then(t,e,o)}function t(n){l.$emit(\"angularJsonAPI:\"+i.data.type+\":object:\"+c.action,\"resolved\",i,n),i.update(i.form.data),i.saved===!1&&(i.factory.cache.indexIds=i.factory.cache.indexIds||[],i.factory.cache.indexIds.push(i.data.id)),i[\"synchronized\"]=!0,i.saved=!0,i.stable=!0,n.finish(),i.errors.synchronization.concat(n.errors),s.resolve(i)}function e(n){l.$emit(\"angularJsonAPI:\"+i.data.type+\":object:save\",\"rejected\",i,n),n.finish(),i.errors.synchronization.concat(n.errors),s.reject(n)}function o(n){l.$emit(\"angularJsonAPI:\"+i.data.type+\":object:save\",\"notify\",i,n),s.notify(n)}var i=this,s=p.defer(),c={action:i.saved===!1?\"add\":\"update\",object:i};return i.form.validate().then(n,s.reject)[\"finally\"](a.bind(i,void 0)),r(i),s.promise}function g(){var n=this;void 0!==n.form&&n.form.reset()}function v(){function r(n){function r(n){return t(n),n.synchronize({action:\"include\",object:n})[\"finally\"](e.bind(n,void 0))}function a(t){angular.forEach(t,function(n,t){n.success===!0&&(l.$emit(\"angularJsonAPI:\"+o.included[t].data.type+\":object:include\",\"resolved\",o.included[t],n),n.value.finish())}),s.resolve(n)}var o=i.proccesResults(n.data);l.$emit(\"angularJsonAPI:\"+c.data.type+\":object:refresh\",\"resolved\",c,n),p.allSettled(o.included.map(r)).then(a,s.reject),c[\"synchronized\"]=!0,c.stable=!0,n.finish(),c.errors.synchronization.concat(n.errors)}function a(n){l.$emit(\"angularJsonAPI:\"+c.data.type+\":object:refresh\",\"rejected\",c,n),n.finish(),c.errors.synchronization.concat(n.errors),s.reject(n)}function o(n){l.$emit(\"angularJsonAPI:\"+c.data.type+\":object:refresh\",\"notify\",c,n),s.notify(n)}var i=d.get(\"$jsonapi\"),s=p.defer(),c=this,u={action:\"refresh\",object:c,params:c.schema.params.get};if(c.saved===!1){var h=n.create(\"Can't refresh new object\",null,0,\"refresh\");c.errors.synchronization.add(\"refresh\",h),s.reject(h)}else t(c),c.synchronize(u).then(r,a,o)[\"finally\"](e.bind(c,void 0));return s.promise}function m(){var n=this,t=angular.copy(n.data),e={};return angular.forEach(t.relationships,function(n,t){void 0!==n.data&&(e[t]=n)}),t.relationships=e,{data:t,updatedAt:n.updatedAt}}function j(){function n(n){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"resolved\",o,n),o.removed=!0,o.unlinkAll(),o.factory.cache.clearRemoved(o.data.id),n.finish(),o.errors.synchronization.concat(n.errors),i.resolve(n)}function t(n){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"rejected\",o,n),o.factory.cache.revertRemove(o.data.id),n.finish(),o.errors.synchronization.concat(n.errors),i.reject(n)}function e(n){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"notify\",o,n),i.notify(n)}var o=this,i=p.defer(),s={action:\"remove\",object:o};return o.factory.cache.remove(o.data.id),o.saved===!1?i.resolve():(r(o),o.synchronize(s).then(n,t,e)[\"finally\"](a.bind(o,void 0))),i.promise}function b(n){function r(n,t){var e=o.schema.relationships[t],r=e.reflection;angular.isArray(n)?angular.forEach(n,a.bind(void 0,r)):angular.isObject(n)&&a(r,n),\"hasOne\"===e.type?o.relationships[t]=null:\"hasMany\"===e.type&&(o.relationships[t]=[])}function a(n,r){function a(n){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"resolve\",o,n),n.finish(),o.errors.synchronization.concat(n.errors),i.resolve(o)}function c(n){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"rejected\",o,n),n.finish(),o.errors.synchronization.concat(n.errors),i.reject(n)}function u(n){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"notify\",o,n),n.finish(),i.notify(n)}var d=r.schema.relationships[n],h={action:\"unlinkReflection\",object:r,target:o,key:n};t(r),s.unlink(r,n,o,d),r.synchronize(h).then(a,c,u)[\"finally\"](e.bind(r,void 0))}var o=this,i=p.defer();return t(o),void 0===n?angular.forEach(o.relationships,r):r(o.relationships[n],n),e(o),i.promise}function A(o,i){function c(n){function r(n){return t(i),i.synchronize({action:\"linkReflection\",object:n.object,target:n.target,key:n.key})[\"finally\"](e.bind(i,void 0))}function a(n){angular.forEach(n,function(t){t.success===!0&&(l.$emit(\"angularJsonAPI:\"+c[o].data.type+\":object:linkReflection\",\"resolved\",c[o],t),n.value.finish())}),f.resolve(y)}l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:link\",\"resolved\",y,n);var c=s.link(y,o,i);y.stable=!0,n.finish(),y.errors.synchronization.concat(n.errors),p.allSettled(c.map(r)).then(a,f.reject)}function u(n){l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:link\",\"rejected\",y,n),f.reject(n.errors),n.finish(),y.errors.synchronization.concat(n.errors),f.reject(n)}function d(n){l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:link\",\"notify\",y,n),f.notify(n)}var h,f=p.defer(),y=this,g={action:\"link\",object:y,target:i,key:o};return void 0===i?(h=n.create(\"Can't link undefined\",null,0,\"link\"),y.errors.synchronization.add(\"link\",h),f.reject(h)):y.saved===!1?(h=n.create(\"Can't link new object\",null,0,\"link\"),y.errors.synchronization.add(\"link\",h),f.reject(h)):(r(y),y.synchronize(g).then(c,u,d)[\"finally\"](a.bind(y,void 0))),f.promise}function k(o,i){function c(n){function r(n){return t(i),i.synchronize({action:\"unlinkReflection\",object:n.object,target:n.target,key:n.key})[\"finally\"](e.bind(i,void 0))}function a(n){angular.forEach(n,function(t){t.success===!0&&(l.$emit(\"angularJsonAPI:\"+c[o].data.type+\":object:unlinkReflection\",\"resolved\",c[o],t),n.value.finish())}),f.resolve(y)}l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:unlink\",\"resolved\",y,n);var c=s.link(y,o,i);y.stable=!0,n.finish(),y.errors.synchronization.concat(n.errors),p.allSettled(c.map(r)).then(a,f.reject)}function u(n){l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:unlink\",\"rejected\",y,n),f.reject(n.errors),n.finish(),y.errors.synchronization.concat(n.errors),f.reject(n)}function d(n){l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:unlink\",\"notify\",y,n),f.notify(n)}var h,f=p.defer(),y=this,g={action:\"unlink\",object:y,target:i,key:o};return void 0===i?(h=n.create(\"Can't unlink undefined\",null,0,\"link\"),y.errors.synchronization.add(\"link\",h),f.reject(h)):y.saved===!1?(h=n.create(\"Can't unlink new object\",null,0,\"link\"),y.errors.synchronization.add(\"link\",h),f.reject(h)):(r(y),y.synchronize(g).then(c,u,d)[\"finally\"](a.bind(y,void 0))),f.promise}function z(n,r,a){var o=this;t(o),P(o,n),o.reset(r),o[\"synchronized\"]=a===!0?!1:!0,o.stable=a===!0?!1:!0,o.updatedAt=Date.now(),e(o)}function I(){var n=this,t=!1;return angular.forEach(n.errors,function(n){t=n.hasErrors()||t}),t}function P(n,t){function e(e,r){n.data.attributes[r]=t.attributes[r]}function r(e,r){var i=t.relationships[r];return void 0===i?void(n.data.relationships[r]={data:void 0}):(n.data.relationships[r]=n.data.relationships[r]||{},n.data.relationships[r].links=i.links,void(\"hasOne\"===e.type?a(n,r,i.data):\"hasMany\"===e.type&&angular.isArray(i.data)&&(0===i.data.length?(n.data.relationships[r].data=[],n.unlinkAll(r)):(angular.forEach(n.relationships[r],o.bind(void 0,n,r,i.data)),angular.forEach(i.data,a.bind(void 0,n,r))))))}function a(n,t,e){var r;if(null===e)return void s.link(n,t,null);if(void 0!==e){if(r=i.getFactory(e.type),void 0===r)return void h.error(\"Factory not found\",e.type,e);var a=r.cache.get(e.id);s.link(n,t,a)}}function o(n,t,e,r){e.indexOf(r.data.id)>-1||s.unlink(n,t,r)}var i=d.get(\"$jsonapi\"),c=n.schema;return n.data.id=t.id,n.data.type=t.type,n.factory.schema.type!==t.type?(h.error(\"Different type then factory\",n.factory.schema.type,t),!1):u.validate(n.data.id)?(t.attributes=t.attributes||{},t.relationships=t.relationships||{},angular.forEach(c.attributes,e),angular.forEach(c.relationships,r),!0):(h.error(\"Invalid id\"),!1)}return f.prototype.refresh=v,f.prototype.remove=j,f.prototype.reset=g,f.prototype.save=y,f.prototype.update=z,f.prototype.link=A,f.prototype.unlink=k,f.prototype.unlinkAll=b,f.prototype.toJson=m,f.prototype.hasErrors=I,f}function t(n){n=void 0===n?this:n,n.loadingCount+=1,n.loading=!0}function e(n){n=void 0===n?this:n,n.loadingCount-=1,n.loading=n.loadingCount>0}function r(n){n=void 0===n?this:n,n.savingCount+=1,n.saving=!0}function a(n){n=void 0===n?this:n,n.savingCount-=1,n.saving=n.savingCount>0}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractModel\",n),n.$inject=[\"AngularJsonAPIModelSynchronizationError\",\"AngularJsonAPIModelValidationError\",\"AngularJsonAPIModelErrorsManager\",\"AngularJsonAPIModelLinkerService\",\"AngularJsonAPIModelForm\",\"uuid4\",\"$rootScope\",\"$injector\",\"$log\",\"$q\"]}(),function(){\"use strict\";function n(n,t){function e(n){return new r(n)}function r(n){var t=this;t.factory=n,t.data={},t.removed={},t.size=0,t.indexIds=void 0}function a(n,e){var r=this,a=n.id;return void 0===a?void t.error(\"Can't add data without id!\",n):(void 0===r.data[a]?(r.data[a]=r.factory.modelFactory(n,e),r.size+=1):r.data[a].update(n,e.saved,e.initialization),r.data[a])}function o(n){var t=this,e=angular.fromJson(n),r={saved:!0,\"synchronized\":!1,stable:!1,pristine:!1,initialization:!0};angular.isObject(e)&&void 0!==e.data&&(t.updatedAt=e.updatedAt,t.indexIds=e.indexIds,angular.forEach(e.data,function(n){var e=n.data;t.addOrUpdate(e,r,n.updatedAt)}))}function i(){var n=this,t={data:[],updatedAt:n.updatedAt,indexIds:n.indexIds};return angular.forEach(n.data,function(n){n.error===!1&&t.data.push(n.toJson())}),angular.toJson(t)}function s(){var n=this;n.indexIds=void 0,n.data={},n.removed={}}function c(n){var t=this,e={id:n,type:t.factory.schema.type},r={saved:!0,\"synchronized\":!1,stable:!1,pristine:!0};return void 0===t.data[n]&&(t.data[n]=t.factory.modelFactory(e,r)),t.data[n]}function u(n){var e=this;return t.debug(\"Unused params\",n),void 0===e.indexIds?e.indexIds:e.indexIds.map(e.get.bind(e))}function l(t){var e=this;e.indexIds=[],angular.forEach(t,function(t){angular.isString(t)&&n.validate(t)?e.indexIds.push(t):angular.isObject(t)&&n.validate(t.data.id)&&e.indexIds.push(t.data.id)})}function d(n){var t=this;return void 0!==t.data[n]&&(t.removed[n]=t.data[n],delete t.data[n],t.size-=1),t.removed[n]}function h(n){var t=this;return void 0!==t.removed[n]&&(t.data[n]=t.removed[n],delete t.removed[n],t.size+=1),t.data[n]}function p(n){var t=this;delete t.removed[n]}return r.prototype.get=c,r.prototype.index=u,r.prototype.setIndexIds=l,r.prototype.addOrUpdate=a,r.prototype.fromJson=o,r.prototype.toJson=i,r.prototype.clear=s,r.prototype.remove=d,r.prototype.revertRemove=h,r.prototype.clearRemoved=p,{create:e}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICache\",n),n.$inject=[\"uuid4\",\"$log\"]}(),function(){\"use strict\";function n(){function n(n,e){return new t(n,e)}function t(n,t){var e=this;Error.captureStackTrace(e,e.constructor),e.message=n,e.context={attribute:t}}return t.prototype=Object.create(Error.prototype),t.prototype.constructor=t,t.prototype.name=\"ValidationError\",{create:n}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelValidationError\",n)}(),function(){\"use strict\";function n(){function n(n,e,r,a){return new t(n,e,r,a)}function t(n,t,e,r){var a=this;Error.captureStackTrace(a,a.constructor),a.message=n,a.context={synchronization:t,code:e,action:r}}return t.prototype=Object.create(Error.prototype),t.prototype.constructor=t,t.prototype.name=\"SynchronizationError\",{create:n}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelSynchronizationError\",n)}(),function(){\"use strict\";function n(){function n(n,e,r,a){return new t(n,e,r,a)}function t(n,t,e,r){var a=this;a.name=n,a.description=t,a.ErrorConstructor=e,a.errors={},a.defaultFilter=r||function(){return!0}}function e(n){var t=this;void 0===n?angular.forEach(t.errors,function(n,e){t.errors[e]=[]}):t.errors[n]=[]}function r(n,t){var e=this;e.errors[n]=e.errors[n]||[],e.errors[n].push(t)}function a(n){var t=this;angular.forEach(n,function(n){t.errors[n.key]=[]}),angular.forEach(n,function(n){t.errors[n.key].push(n.object)})}function o(n){var t=this;if(void 0===n){var e=!1;return angular.forEach(t.errors,function(n){e=e||n.length>0}),e}return void 0!==t.errors[n]&&t.errors[n].length>0}return t.prototype.constructor=t,t.prototype.concat=a,t.prototype.clear=e,t.prototype.add=r,t.prototype.hasErrors=o,{create:n}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelErrorsManager\",n)}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"lazyProperty\",function(n,t,e){var r,a;Object.defineProperty(n,t,{get:function(){return a||(a=!0,r=e.call(n)),r},enumerable:!0,configurable:!0})})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"toKebabCase\",function(n){return n.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase()})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$provide\",function(n){n.decorator(\"$q\",[\"$delegate\",function(n){var t=n;return t.allSettled=t.allSettled||function(n,e,r){function a(n){return t.resolve(n).then(function(n){return angular.isFunction(e)&&e(n),{success:!0,value:n}},function(n){return angular.isFunction(r)&&r(n),{success:!1,reason:n}})}var o=angular.isArray(n)?[]:{};return angular.forEach(n,function(n,t){o.hasOwnProperty(t)||(o[t]=a(n))}),t.all(o)},t}])}])}(),function(){\"use strict\";function n(n,t,e){function r(n){return new a(n)}function a(t){var e=this;e.state={},n.call(e,t),angular.forEach(t,function(n){n.synchronizer=e})}function o(r){function a(n){d.notify({step:\"synchronization\",data:n})}function o(n){d.notify({step:\"synchronization\",errors:n})}function i(n){u.state[h]=u.state[h]||{},u.state[h].success=!0,angular.forEach(n,function(n){n.success===!1&&(u.state[h].success=!1)}),angular.forEach(u.synchronizations,function(t){angular.forEach(t.afterHooks[h],function(t){d.notify({step:\"after\",errors:t.call(u,r,n)})})});var t,e=[];angular.forEach(n,function(n){n.success===!0?t=n.value:e.push({key:h,object:n.reason})}),e.length>0?d.reject({data:t,finish:s,errors:e}):d.resolve({data:t,finish:s,errors:e})}function s(){angular.forEach(u.synchronizations,function(n){angular.forEach(n.finishHooks[h],function(n){d.notify({step:\"finish\",errors:n.call(u,r)})})})}function c(n){e.error(\"All settled rejected! Something went wrong\"),d.reject({finish:angular.noop,errors:n})}var u=this,l=[],d=t.defer(),h=r.action;return n.prototype.synchronize.call(u,r),angular.forEach(u.synchronizations,function(n){angular.forEach(n.beginHooks[h],function(n){d.notify({step:\"begin\",data:n.call(u,r)})})}),angular.forEach(u.synchronizations,function(n){angular.forEach(n.beforeHooks[h],function(n){d.notify({step:\"before\",data:n.call(u,r)})})}),angular.forEach(u.synchronizations,function(n){angular.forEach(n.synchronizationHooks[h],function(n){l.push(n.call(u,r))})}),t.allSettled(l,a,o).then(i,c),d.promise}return a.prototype=Object.create(n.prototype),a.prototype.constructor=a,a.prototype.synchronize=o,{create:r}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerSimple\",n),n.$inject=[\"AngularJsonAPISynchronizerPrototype\",\"$q\",\"$log\"]}(),function(){\"use strict\";function n(n){function t(n){var t=this;t.synchronizations=n}function e(t){var e=this;n.debug(\"Synchro Collection\",e.factory.schema.type,t),void 0===t.action&&n.error(\"Can't synchronize undefined action\",t)}return t.prototype.synchronize=e,t}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerPrototype\",n),n.$inject=[\"$log\"]}(),function(){\"use strict\";function n(n,t,e,r,a,o){function i(n,t){return new s(n,t)}function s(r,i){function s(n){return o({method:\"GET\",headers:v,url:i,params:n.params||{}}).then(f,y.bind(null,\"all\"))}function c(n){return o({method:\"GET\",headers:v,url:i+\"/\"+n.object.data.id,params:n.params||{}}).then(f,y.bind(null,\"get\"))}function u(n){return o({method:\"DELETE\",headers:v,url:i+\"/\"+n.object.data.id}).then(f,y.bind(null,\"remove\"))}function l(t){var e=a.defer(),r=t.object.schema.relationships[t.key];return t.object.removed===!0?e.reject(n.create(\"Object has been removed\",g,0,\"unlink\")):void 0!==t.target&&void 0===t.target.data.id?e.reject(n.create(\"Can't unlink object without id through rest call\",g,0,\"unlink\")):\"hasOne\"===r.type?o({method:\"DELETE\",headers:v,url:i+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(f,y.bind(null,\"get\")).then(e.resolve,e.reject):\"hasMany\"===r.type&&(void 0===t.target?o({method:\"PUT\",headers:v,data:{data:[]},url:i+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(f,y.bind(null,\"unlink\")).then(e.resolve,e.reject):o({method:\"DELETE\",headers:v,url:i+\"/\"+t.object.data.id+\"/relationships/\"+t.key+\"/\"+t.target.data.id}).then(f,y.bind(null,\"unlink\")).then(e.resolve,e.reject)),e.promise}function d(n){var t=a.defer(),r=n.object.schema.relationships[n.key];return n.object.removed===!0?t.reject({errors:[{status:0,statusText:\"Object has been removed\"}]}):void 0===n.target||void 0===n.target.data.id?t.reject({errors:[{status:0,statusText:\"Can't link object without id through rest call\"}]}):\"hasOne\"===r.type?o({method:\"PUT\",headers:v,data:{data:e.toLinkData(n.target)},url:i+\"/\"+n.object.data.id+\"/relationships/\"+n.key}).then(f,y.bind(null,\"link\")).then(t.resolve,t.reject):\"hasMany\"===r.type&&o({method:\"POST\",headers:v,data:{data:[e.toLinkData(n.target)]},url:i+\"/\"+n.object.data.id+\"/relationships/\"+n.key}).then(f,y.bind(null,\"link\")).then(t.resolve,t.reject),t.promise}function h(n){return o({method:\"PUT\",headers:v,url:i+\"/\"+n.object.data.id,data:n.object.form.toJson()}).then(f,y.bind(null,\"update\"))}function p(n){return o({method:\"POST\",headers:v,url:i+\"/\",data:n.object.form.toJson()}).then(f,y.bind(null,\"add\"))}function f(n){return a.resolve(n.data)}function y(t,e){function r(e){console.log(\"offline\"),console.log(e),s.reject(n.create(\"Server is offline\",g,e.status,t))}function i(){console.log(\"no internet\"),s.reject(n.create(\"No internet connection\",g,e.status,t))}var s=a.defer();return 0===e.status?o({method:\"GET\",url:\"https://status.cloud.google.com/incidents.schema.json\"}).then(r,i):s.reject(n.create(e.statusText,g,e.status,t)),s.promise}var g=this,v={Accept:\"application/vnd.api+json\",\"Content-Type\":\"application/vnd.api+json\"};t.apply(g,arguments),g.synchronization(\"remove\",u),g.synchronization(\"unlink\",l),g.synchronization(\"link\",d),g.synchronization(\"update\",h),g.synchronization(\"add\",p),g.synchronization(\"all\",s),g.synchronization(\"get\",c),g.synchronization(\"refresh\",c)}return s.prototype=Object.create(t.prototype),s.prototype.constructor=s,{create:i}}angular.module(\"angular-jsonapi-rest\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationRest\",n),n.$inject=[\"AngularJsonAPIModelSynchronizationError\",\"AngularJsonAPISynchronizationPrototype\",\"AngularJsonAPIModelLinkerService\",\"toKebabCase\",\"$q\",\"$http\"]}(),function(){\"use strict\";function n(){function n(n){var t=this,e=[\"add\",\"init\",\"get\",\"all\",\"clearCache\",\"remove\",\"unlink\",\"unlinkReflection\",\"link\",\"linkReflection\",\"update\",\"refresh\",\"include\"];t.name=n,t.state={},t.beginHooks={},t.beforeHooks={},t.synchronizationHooks={},t.afterHooks={},t.finishHooks={},t.options={},angular.forEach(e,function(n){t.beginHooks[n]=[],t.beforeHooks[n]=[],t.synchronizationHooks[n]=[],t.afterHooks[n]=[],t.finishHooks[n]=[],t.state[n]={loading:!1,success:!0}})}function t(n,t){var e=this;e.beginHooks[n].push(t)}function e(n,t){var e=this;e.finishHooks[n].push(t)}function r(n,t){var e=this;e.beforeHooks[n].push(t)}function a(n,t){var e=this;e.afterHooks[n].push(t)}function o(n,t){var e=this;e.synchronizationHooks[n].push(t)}return n.prototype.before=r,n.prototype.after=a,n.prototype.begin=t,n.prototype.finish=e,n.prototype.synchronization=o,n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizationPrototype\",n)}(),function(){\"use strict\";function n(n,t,e){function r(n,t){return new a(n,t)}function a(r,a){function o(){var n=c.synchronizer.factory.schema.type;return e.resolve(t.localStorage.getItem(a+\".\"+n))}function i(){var n=c.synchronizer.factory.schema.type;t.localStorage.removeItem(a+\".\"+n)}function s(){var n=c.synchronizer.factory.schema.type,e=c.synchronizer.factory.cache;t.localStorage.setItem(a+\".\"+n,e.toJson())}var c=this;a=a||\"AngularJsonAPI\",c.__updateStorage=s,n.apply(c,arguments),c.synchronization(\"init\",o),c.begin(\"clearCache\",i),c.begin(\"remove\",s),c.begin(\"refresh\",s),c.begin(\"unlink\",s),c.begin(\"unlinkReflection\",s),c.begin(\"link\",s),c.begin(\"linkReflection\",s),c.begin(\"update\",s),c.begin(\"add\",s),c.begin(\"get\",s),c.begin(\"all\",s),c.begin(\"include\",s),c.finish(\"init\",s),c.finish(\"clearCache\",s),c.finish(\"remove\",s),c.finish(\"refresh\",s),c.finish(\"unlink\",s),c.finish(\"unlinkReflection\",s),c.finish(\"link\",s),c.finish(\"linkReflection\",s),c.finish(\"update\",s),c.finish(\"add\",s),c.finish(\"get\",s),c.finish(\"all\",s),c.finish(\"include\",s)}return a.prototype=Object.create(n.prototype),a.prototype.constructor=a,{create:r}}angular.module(\"angular-jsonapi-local\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationLocal\",n),n.$inject=[\"AngularJsonAPISynchronizationPrototype\",\"$window\",\"$q\"]}(),function(){\"use strict\";function n(n,t,e){function r(n){return new a(n)}function a(n){var t=this,r=n.include||{};n.include=r,r.get=n.include.get||[],r.all=n.include.all||[],t.params={get:{},all:{}},angular.forEach(n.relationships,function(t,a){var o=e.create(t,a,n.type);n.relationships[a]=o,o.included===!0&&(r.get.push(a),\"hasOne\"===o.type&&r.all.push(a))}),angular.extend(t,n),r.get.length>0&&(t.params.get.include=r.get.join(\",\")),r.all.length>0&&(t.params.all.include=r.all.join(\",\"))}return{create:r}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchema\",n),n.$inject=[\"$log\",\"pluralize\",\"AngularJsonAPISchemaLink\"]}(),function(){\"use strict\";function n(n,t){function e(n,t,e){return new r(n,t,e)}function r(e,r,a){var o=this;angular.isString(e)?(o.model=t.plural(r),o.type=e,o.polymorphic=!1,o.reflection=a):(void 0===e.type&&n.error(\"Schema of link without a type: \",e,r),\"hasMany\"!==e.type&&\"hasOne\"!==e.type&&n.error(\"Schema of link with wrong type: \",e.type,\"available: hasOne, hasMany\"),o.model=e.model||t.plural(r),o.type=e.type,o.polymorphic=e.polymorphic||!1,o.reflection=void 0===e.reflection?\"hasMany\"===o.type?t.singular(a):a:e.reflection,o.included=e.included||!1)}return{create:e}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchemaLink\",n),n.$inject=[\"$log\",\"pluralize\"]}(),function(){\"use strict\";function n(n,t,e){function r(t,r){function a(n,t,e){return new o(n,t,e)}var o=function(t,r,a){var o=this;t.type!==o.schema.type&&e.error(\"Data type other then declared in schema: \",t.type,\" instead of \",o.schema.type),n.call(o,t,r,a),o.form.parent=o};return o.prototype=Object.create(n.prototype),o.prototype.constructor=o,o.prototype.schema=t,o.prototype.factory=r,o.prototype.synchronize=r.synchronizer.synchronize.bind(r.synchronizer),angular.forEach(t.functions,function(n,t){o.prototype[t]=function(){return n.apply(this,arguments)}}),a}return{modelFactory:r}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModel\",n),n.$inject=[\"AngularJsonAPIAbstractModel\",\"AngularJsonAPISchema\",\"$log\"]}(),function(){\"use strict\";function n(n,t,e,r,a,o,i,s){function c(n,t){return new u(n,t)}function u(r,a){function i(n){o.$emit(\"angularJsonAPI:\"+u.type+\":factory:init\",\"resolved\",n),u.cache.fromJson(n.data),u.initialized=!0,n.finish()}function s(n){o.$emit(\"angularJsonAPI:\"+u.type+\":factory:init\",\"rejected\",n),n.finish(),u.initialized=!0}function c(n){o.$emit(\"angularJsonAPI:\"+u.type+\":factory:init\",\"notify\",n)}var u=this,l={action:\"init\"};u.schema=t.create(r),u.cache=e.create(u),u.synchronizer=a,u.synchronizer.factory=u,u.modelFactory=n.modelFactory(u.schema,u),u.initialized=!1,u.type=u.schema.type,a.factory=u,\nu.synchronizer.synchronize(l).then(i,s,c)}function l(n){var t=this;if(!a.validate(n))return s.reject({errors:[{status:0,statusText:\"Invalid id not uuid4\"}]});var e=t.cache.get(n);return e.refresh(),e}function d(n){var t=this;n=n||{};var e=r.create(t,angular.extend(n,t.schema.params.all));return e.fetch(),e}function h(n){var t=this,e=t.cache.remove(n);return e.remove()}function p(){var n=this,t={};angular.forEach(n.schema.relationships,function(n,e){\"hasOne\"===n.type?t[e]={data:null}:\"hasMany\"===n.type&&(t[e]={data:[]})});var e={type:n.type,id:a.generate(),attributes:{},relationships:t},r={saved:!1,\"synchronized\":!1,stable:!1,pristine:!1,initialization:!1},i=n.cache.addOrUpdate(e,r);return o.$emit(\"angularJsonAPI:\"+n.type+\":factory:initialize\",\"resolved\",i),i}function f(){function n(n){o.$emit(\"angularJsonAPI:\"+r.type+\":factory:clearCache\",\"resolved\",n),n.finish(),a.resolve(n)}function t(n){o.$emit(\"angularJsonAPI:\"+r.type+\":factory:clearCache\",\"resolved\",n),n.finish(),a.reject(n)}function e(n){o.$emit(\"angularJsonAPI:\"+r.type+\":factory:clearCache\",\"notify\",n),a.notify(n)}var r=this,a=s.defer(),i={action:\"clearCache\"};return r.cache.clear(),r.synchronizer.synchronize(i).then(n,t,e),a}return u.prototype.get=l,u.prototype.all=d,u.prototype.remove=h,u.prototype.initialize=p,u.prototype.clearCache=f,{create:c}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIFactory\",n),n.$inject=[\"AngularJsonAPIModel\",\"AngularJsonAPISchema\",\"AngularJsonAPICache\",\"AngularJsonAPICollection\",\"uuid4\",\"$rootScope\",\"$log\",\"$q\"]}(),function(){\"use strict\";function n(n,r,a,o,i){function s(n,t){return new c(n,t)}function c(t,e){function o(n,t,e){var r;\"resolved\"===t&&void 0!==c.data&&(r=c.data.indexOf(e),r>-1&&(c.data.splice(r,1),c.factory.cache.setIndexIds(c.data)))}function i(){c.data=void 0,c.pristine=!0}function s(n,t,e){\"resolved\"===t&&(c.data=c.data||[],c.data.push(e))}var c=this;c.factory=t,c.type=t.schema.type,c.params=e,c.errors={synchronization:r.create(\"Synchronization\",\"Errors of synchronizations\",n)},c.data=c.factory.cache.index(c.params),c.loading=!1,c.loadingCount=0,c[\"synchronized\"]=!1,c.pristine=void 0===c.data,a.$on(\"angularJsonAPI:\"+c.type+\":object:remove\",o),a.$on(\"angularJsonAPI:\"+c.type+\":factory:clearCache\",i),a.$on(\"angularJsonAPI:\"+c.type+\":object:add\",s)}function u(){var n=this,t=!1;return angular.forEach(n.errors,function(n){t=n.hasErrors()||t}),t}function l(n){var t=this;return t.factory.get(n)}function d(){function n(n){function r(n){return t(n),n.synchronize({action:\"include\",object:n})[\"finally\"](e.bind(n,void 0))}function o(t){angular.forEach(t,function(n,t){n.success===!0&&(a.$emit(\"angularJsonAPI:\"+s.included[t].data.type+\":object:include\",\"resolved\",s.included[t],n),n.value.finish())}),u.resolve(n)}var s=l.proccesResults(n.data);a.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"resolved\",c,n),i.allSettled(s.included.map(r)).then(o,u.reject),angular.forEach(c.data,e),c.data=s.data,c.updatedAt=Date.now(),c[\"synchronized\"]=!0,c.factory.cache.setIndexIds(c.data),n.finish(),c.errors.synchronization.concat(n.errors),u.resolve(c)}function r(n){a.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"rejected\",c,n),console.log(n),angular.forEach(c.data,e),n.finish(),c.errors.synchronization.concat(n.errors),u.reject(n)}function s(n){a.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"notify\",c,n),u.notify(n)}var c=this,u=i.defer(),l=o.get(\"$jsonapi\"),d={action:\"all\",params:c.params};return t(c),angular.forEach(c.data,t),c.factory.synchronizer.synchronize(d).then(n,r,s)[\"finally\"](e.bind(c,void 0)),u.promise}return c.prototype.fetch=d,c.prototype.refresh=d,c.prototype.get=l,c.prototype.hasErrors=u,{create:s}}function t(n){n=void 0===n?this:n,n.loadingCount+=1,n.loading=!0}function e(n){n=void 0===n?this:n,n.loadingCount-=1,n.loading=n.loadingCount>0}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICollection\",n),n.$inject=[\"AngularJsonAPIModelSynchronizationError\",\"AngularJsonAPIModelErrorsManager\",\"$rootScope\",\"$injector\",\"$q\"]}(),function(){\"use strict\";function n(){function n(n,r){function a(){return t}function o(){return e}function i(n,a){var o=r.create(n,a);t[n.type]=o,e.push(n.type)}function s(n){return t[n]}function c(e){return void 0===t[e]&&n.error(\"Can\t add not existing object type: \"+e+\". Use initialize.\"),t[e].saved.form}function u(e,r){return void 0===t[e]&&n.error(\"Can\t get not existing object type: \"+e+\". Use initialize.\"),t[e].get(r)}function l(e,r){return void 0===t[e]&&n.error(\"Can\t remove not existing object type: \"+e+\". Use initialize.\"),t[e].remove(r)}function d(e){return void 0===t[e]&&n.error(\"Can\t get all of not existing object type: \"+e+\". Use initialize.\"),t[e].all()}function h(){angular.forEach(t,function(n){n.clearCache()})}function p(t){var e={data:[],included:[]};void 0===t&&n.error(\"Can't proccess results:\",t);var r={saved:!0,\"synchronized\":!0,stable:!0,pristine:!1,initialization:!1};return angular.forEach(t.included,function(n){e.included.push(s(n.type).cache.addOrUpdate(n,r))}),angular.isArray(t.data)?angular.forEach(t.data,function(n){e.data.push(s(n.type).cache.addOrUpdate(n,r))}):e.data.push(s(t.data.type).cache.addOrUpdate(t.data,r)),e}return{form:c,get:u,remove:l,all:d,addFactory:i,getFactory:s,clearCache:h,proccesResults:p,allFactories:a,factoriesNames:o}}var t={},e=[];this.$get=n,n.$inject=[\"$log\",\"AngularJsonAPIFactory\"]}angular.module(\"angular-jsonapi\").provider(\"$jsonapi\",n)}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$logProvider\",function(n){n.debugEnabled(!1)}]).run([\"validateJS\",\"$q\",function(n,t){n.Promise=t}])}();\n//# sourceMappingURL=angular-jsonapi.min.js.map","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelRelationshipHasMany', AngularJsonAPIModelRelationshipHasMany);\n\n  function AngularJsonAPIModelRelationshipHasMany(\n    $jsonapi,\n    $log\n  ) {\n    ModelRelationshipHasMany.prototype = Object.create(Array.prototype);\n    ModelRelationshipHasMany.prototype.constructor = ModelRelationshipHasMany;\n\n    ModelRelationshipHasMany.prototype.add = add;\n    ModelRelationshipHasMany.prototype.remove = remove;\n    ModelRelationshipHasMany.prototype.set = set;\n    ModelRelationshipHasMany.prototype.initialize = initialize;\n\n    ModelRelationshipHasMany.prototype.push = push;\n    ModelRelationshipHasMany.prototype.splice = splice;\n\n    ModelRelationshipHasMany.prototype.__push = __push;\n    ModelRelationshipHasMany.prototype.__pop = __pop;\n\n    return {\n      create: ModelRelationshipHasManyFactory\n    };\n\n    function ModelRelationshipHasManyFactory(parent, key) {\n      return new ModelRelationshipHasMany(parent, key);\n    }\n\n    function ModelRelationshipHasMany(parent, key) {\n      var _this = this;\n\n      _this.parent = parent;\n      _this.key = key;\n      _this.schema = parent.schema.relationships[key];\n      _this.undefined = true;\n      _this.null = false;\n    }\n\n    /**\n     * Adds target to relationship\n     * @param {AngularJsonAPIModel} target model to be added to relationship\n     */\n    function add(target) {\n      var _this = this;\n      return _this.parent.link(_this.key, target);\n    }\n\n    /**\n     * Removes target to relationship\n     * @param {AngularJsonAPIModel} target model to be removed from relationship\n     */\n    function remove(target) {\n      var _this = this;\n      return _this.parent.unlink(_this.key, target);\n    }\n\n    /**\n     * Initialize new model linked to the object by form, you can edit and save it later\n     * @param  {String} type type neme for polymorphic associations\n     * @return {AngularJsonAPIModel}      Newly initialized object\n     */\n    function initialize(type) {\n      var _this = this;\n\n      if (_this.schema.polymorphic === true) {\n        if (type === undefined) {\n          $log.error('Run initialize with type for polymorphic asscoiation');\n\n          return;\n        }\n      } else {\n        type = _this.schema.model;\n      }\n\n      var object = $jsonapi.getFactory(type).initialize();\n\n      object.form.link(_this.schema.reflection, _this);\n\n      return object;\n    }\n\n    /**\n     * Clears and sets relationship data according to the argument\n     * @param  {[AngularJsonAPIModel]} targets Array of models to replace\n     * current relationship\n     * @return {ModelRelationshipHasMany}     this\n     */\n    function set(targets) {\n      var _this = this;\n\n      _this.length = 0;\n      _this.undefined = false;\n      _this.push.apply(_this, targets);\n\n      _this.null = _this.length === 0;\n\n      return _this;\n    }\n\n    /**\n     * Internal method used to add object to relationship\n     * @param  {AngularJsonAPIModel} target Object to be added\n     * @return {AngularJsonAPIModel}        Added object\n     */\n    function __push(target) {\n      var _this = this;\n      _this.undefined = false;\n      _this.undefined = null;\n\n      return _this.push(target);\n    }\n\n    /**\n     * Internal method used to remove object from relationship\n     * @param  {AngularJsonAPIModel} target Object to be removed\n     * @return {AngularJsonAPIModel or null}        Removed object\n     */\n    function __pop(target) {\n      var _this = this;\n\n      var index = _this.indexOf(target);\n      if (index > -1) {\n        return null;\n      } else {\n        _this.splice(index, 1);\n        _this.null = _this.length === 0;\n        return target;\n      }\n    }\n\n    function push() {\n      $log.error('User add or __push instead');\n    }\n\n    function splice() {\n      $log.error('User remove or __pop instead');\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, oneWay) {\n      var schema;\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema.type === 'hasMany') {\n        if (oneWay === true) {\n          __addHasMany(object, key, target, false);\n          return [];\n        } else {\n          return __processAddHasMany(object, key, target);\n        }\n      } else if (schema.type === 'hasOne') {\n        if (oneWay === true) {\n          __addHasOne(object, key, target, false);\n          return [];\n        } else {\n          return __processAddHasOne(object, key, target);\n        }\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, oneWay) {\n      var schema;\n\n      if (object === undefined) {\n        $log.error('Can\\'t remove link from non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (oneWay === true) {\n        __removeHasMany(object, key, target, false);\n        return [];\n      } else {\n        return __processRemove(object, key, target);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __processAddHasMany(object, key, target) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var reflectionSchema;\n\n      if (reflectionKey === false) {\n        __addHasMany(object, key, target);\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        return __swapResults(\n          __wrapResults(object, key, target),\n          __wrapResults(target, reflectionKey, object),\n          __processAddHasOne(target, reflectionKey, object)\n        );\n      } else if (reflectionSchema.type === 'hasMany') {\n        __addHasMany(object, key, target);\n        __addHasMany(target, reflectionKey, object);\n        return [__wrapResults(target, reflectionKey, object)];\n      }\n    }\n\n    function __processAddHasOne(object, key, target) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var oldReflection = object.relationships[key];\n      var reflectionSchema;\n      var oldReflectionSchema;\n      var result = [];\n\n      __addHasOne(object, key, target);\n\n      if (oldReflection !== undefined && oldReflection !== null) {\n        oldReflectionSchema = oldReflection.schema.relationships[reflectionKey];\n\n        if (oldReflectionSchema.type === 'hasOne') {\n          __removeHasOne(oldReflection, reflectionKey, object);\n        } else if (oldReflectionSchema.type === 'hasMany') {\n          __removeHasMany(oldReflection, reflectionKey, object);\n        }\n\n        result.push(oldReflection, reflectionKey, object);\n      }\n\n      if (target !== undefined && target !== null && reflectionKey !== false) {\n        reflectionSchema = target.schema.relationships[reflectionKey];\n\n        if (reflectionSchema.type === 'hasOne') {\n          __addHasOne(target, reflectionKey, object);\n        } else if (reflectionSchema.type === 'hasMany') {\n          __addHasMany(target, reflectionKey, object);\n        }\n\n        result.push(target, reflectionKey, object);\n      }\n\n      return result;\n    }\n\n    function __processRemove(object, key, target) {\n      var schema = object.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema;\n\n      if (schema.type === 'hasMany') {\n        __removeHasMany(object, key, target);\n      } else if (schema.type === 'hasOne') {\n        __removeHasOne(object, key, target);\n      }\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        __removeHasOne(target, reflectionKey, object);\n      } else if (reflectionSchema.type === 'hasMany') {\n        __removeHasMany(target, reflectionKey, object);\n      }\n\n      return [__wrapResults(target, reflectionKey, object)];\n    }\n\n    function __addHasOne(object, key, target, reset) {\n      $log.debug('addHasOne', object, key, target);\n\n      object.relationships[key] = target;\n      object.data.relationships[key].data = toLinkData(target);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, reset) {\n      var linkData = toLinkData(target);\n      $log.debug('addHasMany', object, key, target);\n\n      if (angular.isArray(object.relationships[key]) && object.relationships[key].indexOf(target) > -1) {\n        return false;\n      }\n\n      object.relationships[key] = object.relationships[key] || [];\n      object.data.relationships[key].data = object.data.relationships[key].data || [];\n\n      object.relationships[key].push(target);\n      object.data.relationships[key].data.push(linkData);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, reset) {\n      $log.debug('removeHasOne', object, key, target);\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        return false;\n      }\n\n      object.relationships[key] = null;\n      object.data.relationships[key].data = undefined;\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, reset) {\n      $log.debug('removeHasMany', object, key, target);\n\n      if (object.relationships[key] === undefined) {\n        return;\n      }\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n        if (reset !== false) {\n          object.reset(true);\n        }\n\n        return true;\n      }\n\n      var index = object.relationships[key].indexOf(target);\n\n      if (index === -1) {\n        return false;\n      }\n\n      object.relationships[key].splice(index, 1);\n      object.data.relationships[key].data.splice(index, 1);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __wrapResults(object, key, target) {\n      return {\n        object: object,\n        key: key,\n        target: target\n      };\n    }\n\n    function __swapResults(value, newValue, array) {\n      var index = -1;\n      angular.forEach(array, function(item, i) {\n        if (item.object === value.object && item.key === value.key && item.target === value.target) {\n          index = i;\n        }\n      });\n\n      if (index > -1) {\n        array[index] = newValue;\n      } else {\n        array.push(newValue);\n      }\n\n      return array;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelLinkerService,\n    validateJS,\n    $q\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return {\n      create: AngularJsonAPIModelFormFactory\n    };\n\n    function AngularJsonAPIModelFormFactory(parent) {\n      return new AngularJsonAPIModelForm(parent);\n    }\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        id: parent.data.id,\n        type: parent.data.type,\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset(auto) {\n      var _this = this;\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = angular.copy(_this.parent.data.relationships[key]) || {};\n        if (angular.isArray(_this.relationships[key])) {\n          _this.relationships[key] = _this.parent.relationships[key].slice();\n        } else {\n          _this.relationships[key] = _this.parent.relationships[key];\n        }\n      });\n\n      if (auto === true && _this.parent.synchronized === true) {\n        return;\n      }\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        _this.data.attributes[key] = angular.copy(_this.parent.data.attributes[key]);\n      });\n\n      _this.parent.errors.validation.clear();\n    }\n\n    /**\n     * Validates form\n     * @return {promise} Promise rejected to errors object indexed by keys. If the\n     * key param i stated it only validates an attribute, else all attributes.\n     */\n    function validate(key) {\n      var _this = this;\n      var attributesWrapper;\n      var constraintsWrapper;\n      var deferred = $q.defer();\n\n      if (key === undefined) {\n        attributesWrapper = _this.data.attributes;\n        constraintsWrapper = _this.schema.attributes;\n      } else {\n        attributesWrapper = {};\n        constraintsWrapper = {};\n\n        attributesWrapper[key] = _this.data.attributes[key];\n        constraintsWrapper[key] = _this.schema.attributes[key];\n      }\n\n      validateJS.async(\n        attributesWrapper,\n        constraintsWrapper\n      ).then(resolve, reject);\n\n      function resolve() {\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        deferred.resolve();\n      }\n\n      function reject(errorsMap) {\n        _this.parent.error = true;\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        angular.forEach(errorsMap, function(errors, attribute) {\n          angular.forEach(errors, function(error) {\n            _this.parent.errors.validation.add(attribute, AngularJsonAPIModelValidationError.create(error, attribute));\n          });\n        });\n\n        deferred.reject(_this.parent.errors.validation);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target) {\n      var _this = this;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.link(_this, key, target, true));\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target) {\n      var _this = this;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.unlink(_this, key, target, true));\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelSynchronizationError,\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelErrorsManager,\n    AngularJsonAPIModelLinkerService,\n    AngularJsonAPIModelForm,\n    uuid4,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    AngularJsonAPIAbstractModel.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {object} config   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, config, updatedAt) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      /**\n       * Is not a new record\n       * @type {Boolean}\n       */\n      _this.saved = config.saved === undefined ? true : config.saved;\n\n      /**\n       * Is present on the server\n       * @type {Boolean}\n       */\n      _this.stable = config.stable === undefined ? true : config.stable;\n\n      /**\n       * Has been synchronized with the server\n       * @type {Boolean}\n       */\n      _this.synchronized = config.synchronized === undefined ? true : config.synchronized;\n\n      /**\n       * Has just been created by request and may not exist on the server\n       * @type {Boolean}\n       */\n      _this.pristine = config.pristine === undefined ? true : config.pristine;\n\n      _this.removed = false;\n      _this.loading = false;\n      _this.saving = false;\n      _this.updatedAt = _this.synchronized === true ? Date.now() : updatedAt;\n\n      _this.loadingCount = 0;\n      _this.savingCount = 0;\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(schema, key) {\n        _this.relationships[key] = undefined;\n      });\n\n      _this.errors = {\n        validation: AngularJsonAPIModelErrorsManager.create(\n          'Validation',\n          'Errors of attributes validation',\n          AngularJsonAPIModelValidationError\n        ),\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Synchronization',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSynchronizationError\n        )\n      };\n\n      _this.promises = {};\n\n      __setData(_this, data);\n\n      _this.form = AngularJsonAPIModelForm.create(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: _this.saved === false ? 'add' : 'update',\n        object: _this\n      };\n\n      _this.form.validate().then(\n        synchronize,\n        deferred.reject\n      ).finally(__decrementSavingCounter.bind(_this, undefined));\n\n      __incrementSavingCounter(_this);\n\n      return deferred.promise;\n\n      function synchronize() {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:' + config.action, 'resolved', _this, response);\n        _this.update(_this.form.data);\n\n        if (_this.saved === false) {\n          _this.factory.cache.indexIds = _this.factory.cache.indexIds || [];\n          _this.factory.cache.indexIds.push(_this.data.id);\n        }\n\n        _this.synchronized = true;\n        _this.saved = true;\n        _this.stable = true;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      if (_this.form !== undefined) {\n        _this.form.reset();\n      }\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh() {\n      var $jsonapi = $injector.get('$jsonapi');\n      var deferred = $q.defer();\n      var _this = this;\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: _this.schema.params.get\n      };\n\n      if (_this.saved === false) {\n        var error = AngularJsonAPIModelSynchronizationError.create('Can\\'t refresh new object', null, 0, 'refresh');\n        _this.errors.synchronization.add('refresh', error);\n        deferred.reject(error);\n      } else {\n        __incrementLoadingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        _this.synchronized = true;\n        _this.stable = true;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      var config = {\n        action: 'remove',\n        object: _this\n      };\n\n      _this.factory.cache.remove(_this.data.id);\n\n      if (_this.saved === false) {\n        deferred.resolve();\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'resolved', _this, response);\n        _this.removed = true;\n        _this.unlinkAll();\n        _this.factory.cache.clearRemoved(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'rejected', _this, response);\n        _this.factory.cache.revertRemove(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlink all reflection relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      __incrementLoadingCounter(_this);\n\n      if (key === undefined) {\n        angular.forEach(_this.relationships, removeLink);\n      } else {\n        removeLink(_this.relationships[key], key);\n      }\n\n      __decrementLoadingCounter(_this);\n\n      return deferred.promise;\n\n      function removeLink(linksObj, key) {\n        var schema = _this.schema.relationships[key];\n        var reflectionKey = schema.reflection;\n\n        if (angular.isArray(linksObj)) {\n          angular.forEach(linksObj, removeReflectionLink.bind(undefined, reflectionKey));\n        } else if (angular.isObject(linksObj)) {\n          removeReflectionLink(reflectionKey, linksObj);\n        }\n\n        if (schema.type === 'hasOne') {\n          _this.relationships[key] = null;\n        } else if (schema.type === 'hasMany') {\n          _this.relationships[key] = [];\n        }\n      }\n\n      function removeReflectionLink(reflectionKey, target) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n        var config = {\n          action: 'unlinkReflection',\n          object: target,\n          target: _this,\n          key: reflectionKey\n        };\n\n        __incrementLoadingCounter(target);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        target.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(target, undefined));\n\n        function resolve(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'resolve', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.resolve(_this);\n        }\n\n        function reject(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'rejected', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.reject(response);\n        }\n\n        function notify(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'link',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSynchronizationError.create('Can\\'t link undefined', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else if (_this.saved === false) {\n        error = AngularJsonAPIModelSynchronizationError.create('Can\\'t link new object', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'linkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:linkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked if undefined unlinks all\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'unlink',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSynchronizationError.create('Can\\'t unlink undefined', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else if (_this.saved === false) {\n        error = AngularJsonAPIModelSynchronizationError.create('Can\\'t unlink new object', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'unlinkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:unlinkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData, auto, initialization) {\n      var _this = this;\n\n      __incrementLoadingCounter(_this);\n\n      __setData(_this, validatedData);\n      _this.reset(auto);\n      _this.synchronized = initialization === true ? false : true;\n      _this.stable = initialization === true ? false : true;\n      _this.updatedAt = Date.now();\n\n      __decrementLoadingCounter(_this);\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData) {\n\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.factory.schema.type !== validatedData.type) {\n        $log.error('Different type then factory', object.factory.schema.type, validatedData);\n        return false;\n      }\n\n      if (!uuid4.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        var relationshipData = validatedData.relationships[key];\n\n        if (relationshipData === undefined) {\n          object.data.relationships[key] = {data: undefined};\n          return;\n        }\n\n        object.data.relationships[key] = object.data.relationships[key] || {};\n        object.data.relationships[key].links = relationshipData.links;\n\n        if (schema.type === 'hasOne') {\n          linkOne(object, key, relationshipData.data);\n        } else if (schema.type === 'hasMany') {\n          if (angular.isArray(relationshipData.data)) {\n            if (relationshipData.data.length === 0) {\n              object.data.relationships[key].data = [];\n              object.unlinkAll(key);\n            } else {\n              angular.forEach(\n                object.relationships[key],\n                unlinkOne.bind(undefined, object, key, relationshipData.data)\n              );\n              angular.forEach(\n                relationshipData.data,\n                linkOne.bind(undefined, object, key)\n              );\n            }\n          }\n        }\n      }\n\n      function linkOne(object, key, data) {\n        var factory;\n\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        factory = $jsonapi.getFactory(data.type);\n\n        if (factory === undefined) {\n          $log.error('Factory not found', data.type, data);\n          return;\n        }\n\n        var target = factory.cache.get(data.id);\n\n        AngularJsonAPIModelLinkerService.link(object, key, target);\n      }\n\n      function unlinkOne(object, key, relationshipData, target) {\n        if (relationshipData.indexOf(target.data.id) > -1) {\n          return;\n        }\n\n        AngularJsonAPIModelLinkerService.unlink(object, key, target);\n      }\n    }\n  }\n\n  /////////////\n  // Private //\n  /////////////\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n\n  function __incrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount += 1;\n    object.saving = true;\n  }\n\n  function __decrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount -= 1;\n    object.saving = object.savingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICache', AngularJsonAPICacheWrapper);\n\n  function AngularJsonAPICacheWrapper(\n    uuid4,\n    $log\n  ) {\n\n    AngularJsonAPICache.prototype.get = get;\n    AngularJsonAPICache.prototype.index = index;\n    AngularJsonAPICache.prototype.setIndexIds = setIndexIds;\n    AngularJsonAPICache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPICache.prototype.fromJson = fromJson;\n    AngularJsonAPICache.prototype.toJson = toJson;\n    AngularJsonAPICache.prototype.clear = clear;\n\n    AngularJsonAPICache.prototype.remove = remove;\n    AngularJsonAPICache.prototype.revertRemove = revertRemove;\n    AngularJsonAPICache.prototype.clearRemoved = clearRemoved;\n\n    return {\n      create: AngularJsonAPICacheFactory\n    };\n\n    function AngularJsonAPICacheFactory(factory) {\n      return new AngularJsonAPICache(factory);\n    }\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPICache(factory) {\n      var _this = this;\n\n      _this.factory = factory;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n\n      _this.indexIds = undefined;\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData, config) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.factory.modelFactory(validatedData, config);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData, config.saved, config.initialization);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      var config = {\n        saved: true,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: true\n      };\n\n      if (angular.isObject(collection) && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n        _this.indexIds = collection.indexIds;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, config, objectData.updatedAt);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: [],\n        updatedAt: _this.updatedAt,\n        indexIds: _this.indexIds\n      };\n\n      angular.forEach(_this.data, function(object) {\n        if (object.error === false) {\n          json.data.push(object.toJson());\n        }\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.indexIds = undefined;\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      var data = {\n        id: id,\n        type: _this.factory.schema.type\n      };\n\n      var config = {\n        saved: true,\n        synchronized: false,\n        stable: false,\n        pristine: true\n      };\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.factory.modelFactory(data, config);\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization, used for index requests\n     * @param  {objec} params\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function index(params) {\n      var _this = this;\n\n      $log.debug('Unused params', params);\n\n      if (_this.indexIds === undefined) {\n        return _this.indexIds;\n      }\n\n      return _this.indexIds.map(_this.get.bind(_this));\n    }\n\n    /**\n     * Cache ids of objects returned by index request\n     * @param {ids array or AngularJsonAPIModel array} array Objects or ids to be cached\n     */\n    function setIndexIds(array) {\n      var _this = this;\n\n      _this.indexIds = [];\n\n      angular.forEach(array, function(element) {\n        if (angular.isString(element) && uuid4.validate(element)) {\n          _this.indexIds.push(element);\n        } else if (angular.isObject(element) && uuid4.validate(element.data.id)) {\n          _this.indexIds.push(element.data.id);\n        }\n      });\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelValidationError', AngularJsonAPIModelValidationErrorWrapper);\n\n  function AngularJsonAPIModelValidationErrorWrapper() {\n    ValidationError.prototype = Object.create(Error.prototype);\n    ValidationError.prototype.constructor = ValidationError;\n    ValidationError.prototype.name = 'ValidationError';\n\n    return {\n      create: ValidationErrorFactory\n    };\n\n    function ValidationErrorFactory(message, attribute) {\n      return new ValidationError(message, attribute);\n    }\n\n    function ValidationError(message, attribute) {\n      var _this = this;\n      Error.captureStackTrace(_this, _this.constructor);\n\n      _this.message = message;\n      _this.context = {\n        attribute: attribute\n      };\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelSynchronizationError', AngularJsonAPIModelSynchronizationErrorWrapper);\n\n  function AngularJsonAPIModelSynchronizationErrorWrapper() {\n    SynchronizationError.prototype = Object.create(Error.prototype);\n    SynchronizationError.prototype.constructor = SynchronizationError;\n    SynchronizationError.prototype.name = 'SynchronizationError';\n\n    return {\n      create: SynchronizationErrorFactory\n    };\n\n    function SynchronizationErrorFactory(message, synchronization, code, action) {\n      return new SynchronizationError(message, synchronization, code, action);\n    }\n\n    function SynchronizationError(message, synchronization, code, action) {\n      var _this = this;\n      Error.captureStackTrace(_this, _this.constructor);\n\n      _this.message = message;\n      _this.context = {\n        synchronization: synchronization,\n        code: code,\n        action: action\n      };\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelErrorsManager', AngularJsonAPIModelErrorsManagerWrapper);\n\n  function AngularJsonAPIModelErrorsManagerWrapper() {\n    ErrorsManager.prototype.constructor = ErrorsManager;\n    ErrorsManager.prototype.concat = concat;\n    ErrorsManager.prototype.clear = clear;\n    ErrorsManager.prototype.add = add;\n    ErrorsManager.prototype.hasErrors = hasErrors;\n\n    return {\n      create: ErrorsManagerFactory\n    };\n\n    function ErrorsManagerFactory(name, description, ErrorConstructor, defaultFilter) {\n      return new ErrorsManager(name, description, ErrorConstructor, defaultFilter);\n    }\n\n    function ErrorsManager(name, description, ErrorConstructor, defaultFilter) {\n      var _this = this;\n      _this.name = name;\n      _this.description = description;\n\n      _this.ErrorConstructor = ErrorConstructor;\n      _this.errors = {};\n      _this.defaultFilter = defaultFilter || function() { return true; };\n    }\n\n    function clear(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        angular.forEach(_this.errors, function(obj, key) {\n          _this.errors[key] = [];\n        });\n      } else {\n        _this.errors[key] = [];\n      }\n    }\n\n    function add(key, error) {\n      var _this = this;\n\n      _this.errors[key] = _this.errors[key] || [];\n      _this.errors[key].push(error);\n    }\n\n    function concat(errors) {\n      var _this = this;\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key] = [];\n      });\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key].push(error.object);\n      });\n\n    }\n\n    function hasErrors(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        var answer = false;\n\n        angular.forEach(_this.errors, function(error) {\n          answer = answer || error.length > 0;\n        });\n\n        return answer;\n      } else {\n        return _this.errors[key] !== undefined && _this.errors[key].length > 0;\n      }\n    }\n  }\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises, resolvedCallback, rejectedCallback) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.resolve(promise)\n            .then(function(value) {\n              if (angular.isFunction(resolvedCallback)) {\n                resolvedCallback(value);\n              }\n\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              if (angular.isFunction(rejectedCallback)) {\n                rejectedCallback(reason);\n              }\n\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return {\n      create: AngularJsonAPISynchronizerSimpleFactory\n    };\n\n    function AngularJsonAPISynchronizerSimpleFactory(synchronizations) {\n      return new AngularJsonAPISynchronizerSimple(synchronizations);\n    }\n\n    function AngularJsonAPISynchronizerSimple(synchronizations) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, synchronizations);\n\n      angular.forEach(synchronizations, function(synchronization) {\n        synchronization.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push({\n              key: action,\n              object: result.reason\n            });\n          }\n        });\n\n        if (errors.length > 0) {\n          deferred.reject({data: data, finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(synchronizations) {\n      var _this = this;\n\n      _this.synchronizations = synchronizations;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.factory.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationRest', AngularJsonAPISynchronizationRestWrapper);\n\n  function AngularJsonAPISynchronizationRestWrapper(\n    AngularJsonAPIModelSynchronizationError,\n    AngularJsonAPISynchronizationPrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISynchronizationRest.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationRest.prototype.constructor = AngularJsonAPISynchronizationRest;\n\n    return {\n      create: AngularJsonAPISynchronizationRestFactory\n    };\n\n    function AngularJsonAPISynchronizationRestFactory(name, url) {\n      return new AngularJsonAPISynchronizationRest(name, url);\n    }\n\n    function AngularJsonAPISynchronizationRest(name, url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISynchronizationPrototype.apply(_this, arguments);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp.bind(null, 'all'));\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp.bind(null, 'get'));\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp.bind(null, 'remove'));\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject(AngularJsonAPIModelSynchronizationError.create('Object has been removed', _this, 0, 'unlink'));\n        } else if (config.target !== undefined && config.target.data.id === undefined) {\n          deferred.reject(AngularJsonAPIModelSynchronizationError.create('Can\\'t unlink object without id through rest call', _this, 0, 'unlink'));\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'get')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          if (config.target === undefined) {\n            $http({\n              method: 'PUT',\n              headers: headers,\n              data: {data: []},\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          } else {\n            $http({\n              method: 'DELETE',\n              headers: headers,\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key + '/' + config.target.data.id\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          }\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target === undefined || config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'PUT',\n            headers: headers,\n            data: {data: AngularJsonAPIModelLinkerService.toLinkData(config.target)},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          $http({\n            method: 'POST',\n            headers: headers,\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        return $http({\n          method: 'PUT',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'update'));\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url + '/',\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'add'));\n      }\n\n      function resolveHttp(response) {\n        return $q.resolve(response.data);\n      }\n\n      function rejectHttp(action, response) {\n        var deferred = $q.defer();\n\n        if (response.status === 0) {\n          $http({\n            method: 'GET',\n            url: 'https://status.cloud.google.com/incidents.schema.json'\n          }).then(rejectServerOffline, rejectNoConnection);\n        } else {\n          deferred.reject(AngularJsonAPIModelSynchronizationError.create(response.statusText, _this, response.status, action));\n        }\n\n        return deferred.promise;\n\n        function rejectServerOffline(response) {\n          console.log('offline');\n          console.log(response);\n          deferred.reject(AngularJsonAPIModelSynchronizationError.create('Server is offline', _this, response.status, action));\n        }\n\n        function rejectNoConnection() {\n          console.log('no internet');\n          deferred.reject(AngularJsonAPIModelSynchronizationError.create('No internet connection', _this, response.status, action));\n        }\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizationPrototype', AngularJsonAPISynchronizationPrototypeWrapper);\n\n  function AngularJsonAPISynchronizationPrototypeWrapper() {\n    AngularJsonAPISynchronizationPrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.after = afterSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.begin = begin;\n    AngularJsonAPISynchronizationPrototype.prototype.finish = finish;\n    AngularJsonAPISynchronizationPrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISynchronizationPrototype;\n\n    function AngularJsonAPISynchronizationPrototype(name) {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clearCache',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh',\n        'include'\n      ];\n\n      _this.name = name;\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationLocal', AngularJsonAPISynchronizationLocalWrapper);\n\n  function AngularJsonAPISynchronizationLocalWrapper(\n    AngularJsonAPISynchronizationPrototype,\n    $window,\n    $q\n  ) {\n\n    AngularJsonAPISynchronizationLocal.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationLocal.prototype.constructor = AngularJsonAPISynchronizationLocal;\n\n    return {\n      create: AngularJsonAPISynchronizationLocalFactory\n    };\n\n    function AngularJsonAPISynchronizationLocalFactory(name, prefix) {\n      return new AngularJsonAPISynchronizationLocal(name, prefix);\n    }\n\n    function AngularJsonAPISynchronizationLocal(name, prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISynchronizationPrototype.apply(_this, arguments);\n\n      _this.synchronization('init', init);\n\n      _this.begin('clearCache', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('refresh', updateStorage);\n      _this.begin('unlink', updateStorage);\n      _this.begin('unlinkReflection', updateStorage);\n      _this.begin('link', updateStorage);\n      _this.begin('linkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.begin('get', updateStorage);\n      _this.begin('all', updateStorage);\n      _this.begin('include', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clearCache', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('refresh', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n      _this.finish('include', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.factory.schema.type;\n        return $q.resolve($window.localStorage.getItem(prefix + '.' + type));\n      }\n\n      function clear() {\n        var type = _this.synchronizer.factory.schema.type;\n        $window.localStorage.removeItem(prefix + '.' + type);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.factory.schema.type;\n        var cache = _this.synchronizer.factory.cache;\n        $window.localStorage.setItem(prefix + '.' + type, cache.toJson());\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper($log, pluralize, AngularJsonAPISchemaLink) {\n\n    return {\n      create: AngularJsonAPISchemaFactory\n    };\n\n    function AngularJsonAPISchemaFactory(schema) {\n      return new AngularJsonAPISchema(schema);\n    }\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = AngularJsonAPISchemaLink.create(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get.join(',');\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all.join(',');\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchemaLink', AngularJsonAPILinkSchrapperLink);\n\n  function AngularJsonAPILinkSchrapperLink($log, pluralize) {\n\n    return {\n      create: AngularJsonAPISchemaLinkFactory\n    };\n\n    function AngularJsonAPISchemaLinkFactory(linkSchema, linkName, type) {\n      return new AngularJsonAPISchemaLink(linkSchema, linkName, type);\n    }\n\n    function AngularJsonAPISchemaLink(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        if (linkSchema.type !== 'hasMany' && linkSchema.type !== 'hasOne') {\n          $log.error('Schema of link with wrong type: ', linkSchema.type, 'available: hasOne, hasMany');\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n\n        if (linkSchema.reflection === undefined) {\n          _this.reflection = _this.type === 'hasMany' ? pluralize.singular(type) : type;\n        } else {\n          _this.reflection = linkSchema.reflection;\n        }\n\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(AngularJsonAPIAbstractModel, AngularJsonAPISchema, $log) {\n\n    return {\n      modelFactory: createModelFactory\n    };\n\n    function createModelFactory(schemaObj, factory) {\n      var Model = function(data, updatedAt, saved) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, updatedAt, saved);\n\n        _this.form.parent = _this;\n      };\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.factory = factory;\n      Model.prototype.synchronize = factory.synchronizer.synchronize.bind(factory.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return modelFactory;\n\n      function modelFactory(data, updatedAt, saved) {\n        return new Model(data, updatedAt, saved);\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIFactory', AngularJsonAPIFactoryWrapper);\n\n  function AngularJsonAPIFactoryWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPICache,\n    AngularJsonAPICollection,\n    uuid4,\n    $rootScope,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIFactory.prototype.get = get;\n    AngularJsonAPIFactory.prototype.all = all;\n    AngularJsonAPIFactory.prototype.remove = remove;\n    AngularJsonAPIFactory.prototype.initialize = initialize;\n\n    AngularJsonAPIFactory.prototype.clearCache = clearCache;\n\n    return {\n      create: AngularJsonAPIFactoryFactory\n    };\n\n    function AngularJsonAPIFactoryFactory(schema, synchronizer) {\n      return new AngularJsonAPIFactory(schema, synchronizer);\n    }\n\n    /**\n     * AngularJsonAPIFactory constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the factory\n     */\n    function AngularJsonAPIFactory(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = AngularJsonAPISchema.create(schema);\n      _this.cache = AngularJsonAPICache.create(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.factory = _this;\n\n      _this.modelFactory = AngularJsonAPIModel.modelFactory(\n        _this.schema,\n        _this\n      );\n\n      _this.initialized = false;\n      _this.type = _this.schema.type;\n\n      synchronizer.factory = _this;\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'resolved', response);\n        _this.cache.fromJson(response.data);\n        _this.initialized = true;\n\n        response.finish();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'rejected', response);\n        response.finish();\n        _this.initialized = true;\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'notify', response);\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id) {\n      var _this = this;\n\n      if (!uuid4.validate(id)) {\n        return $q.reject({errors: [{status: 0, statusText: 'Invalid id not uuid4'}]});\n      }\n\n      var object = _this.cache.get(id);\n\n      object.refresh();\n\n      return object;\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = params || {};\n\n      var collection = AngularJsonAPICollection.create(\n        _this,\n        angular.extend(params, _this.schema.params.all)\n      );\n\n      collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n\n      return object.remove();\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize() {\n      var _this = this;\n      var relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(relationshipSchema, relationshipName) {\n        if (relationshipSchema.type === 'hasOne') {\n          relationships[relationshipName] = {\n            data: null\n          };\n        } else if (relationshipSchema.type === 'hasMany') {\n          relationships[relationshipName] = {\n            data: []\n          };\n        }\n      });\n\n      var data = {\n        type: _this.type,\n        id: uuid4.generate(),\n        attributes: {},\n        relationships: relationships\n      };\n\n      var config = {\n        saved: false,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: false\n      };\n\n      var object = _this.cache.addOrUpdate(data, config);\n\n      $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:initialize', 'resolved', object);\n\n      return object;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clearCache() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: 'clearCache'\n      };\n\n      _this.cache.clear();\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clearCache', 'notify', response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    AngularJsonAPIModelSynchronizationError,\n    AngularJsonAPIModelErrorsManager,\n    $rootScope,\n    $injector,\n    $q\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n    AngularJsonAPICollection.prototype.hasErrors = hasErrors;\n\n    return {\n      create: AngularJsonAPICollectionFactory\n    };\n\n    function AngularJsonAPICollectionFactory(factory, params) {\n      return new AngularJsonAPICollection(factory, params);\n    }\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIFactory} factory Factory associated with the collection\n     * @param {object} params  Params associated with this factory (such as filters)\n     */\n    function AngularJsonAPICollection(factory, params) {\n      var _this = this;\n\n      _this.factory = factory;\n      _this.type = factory.schema.type;\n      _this.params = params;\n\n      _this.errors = {\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Synchronization',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSynchronizationError\n        )\n      };\n\n      _this.data = _this.factory.cache.index(_this.params);\n\n      _this.loading = false;\n      _this.loadingCount = 0;\n      _this.synchronized = false;\n      _this.pristine = _this.data === undefined;\n\n      $rootScope.$on('angularJsonAPI:' + _this.type + ':object:remove', remove);\n      $rootScope.$on('angularJsonAPI:' + _this.type + ':factory:clearCache', clear);\n      $rootScope.$on('angularJsonAPI:' + _this.type + ':object:add', add);\n\n      function remove(event, status, object) {\n        var index;\n\n        if (status === 'resolved' && _this.data !== undefined) {\n          index = _this.data.indexOf(object);\n          if (index > -1) {\n            _this.data.splice(index, 1);\n            _this.factory.cache.setIndexIds(_this.data);\n          }\n        }\n      }\n\n      function clear() {\n        _this.data = undefined;\n        _this.pristine = true;\n      }\n\n      function add(event, status, object) {\n        if (status === 'resolved') {\n          _this.data = _this.data || [];\n          _this.data.push(object);\n        }\n      }\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /**\n     * Shortcut to this.factory.get\n     * @param  {uuid4} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id) {\n      var _this = this;\n\n      return _this.factory.get(id);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var deferred = $q.defer();\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params\n      };\n\n      __incrementLoadingCounter(_this);\n\n      angular.forEach(_this.data, __incrementLoadingCounter);\n\n      _this.factory.synchronizer.synchronize(config)\n        .then(resolve, reject, notify)\n        .finally(__decrementLoadingCounter.bind(_this, undefined));\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n\n        _this.data = results.data;\n\n        _this.updatedAt = Date.now();\n        _this.synchronized = true;\n\n        _this.factory.cache.setIndexIds(_this.data);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response);\n        }\n\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'rejected', _this, response);\n        console.log(response);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider() {\n    var memory = {};\n    var names = [];\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPIFactory) {\n      return {\n        form: form,\n        get: get,\n        remove: remove,\n        all: all,\n        addFactory: addFactory,\n        getFactory: getFactory,\n        clearCache: clearCache,\n        proccesResults: proccesResults,\n\n        allFactories: allFactories,\n        factoriesNames: factoriesNames\n      };\n\n      function allFactories() {\n        return memory;\n      }\n\n      function factoriesNames() {\n        return names;\n      }\n\n      function addFactory(schema, synchronization) {\n        var factory = AngularJsonAPIFactory.create(schema, synchronization);\n\n        memory[schema.type] = factory;\n        names.push(schema.type);\n      }\n\n      function getFactory(type) {\n        return memory[type];\n      }\n\n      function form(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t add not existing object type: ' + type + '. Use initialize.');\n        }\n\n        return memory[type].saved.form;\n      }\n\n      function get(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get not existing object type: ' + type + '. Use initialize.');\n        }\n\n        return memory[type].get(id);\n      }\n\n      function remove(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t remove not existing object type: ' + type + '. Use initialize.');\n        }\n\n        return memory[type].remove(id);\n      }\n\n      function all(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get all of not existing object type: ' + type + '. Use initialize.');\n        }\n\n        return memory[type].all();\n      }\n\n      function clearCache() {\n        angular.forEach(memory, function(factory) {\n          factory.clearCache();\n        });\n      }\n\n      function proccesResults(results) {\n        var objects = {\n          data: [],\n          included: []\n        };\n\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n        }\n\n        var config = {\n          saved: true,\n          synchronized: true,\n          stable: true,\n          pristine: false,\n          initialization: false\n        };\n\n        angular.forEach(results.included, function(data) {\n          objects.included.push(getFactory(data.type).cache.addOrUpdate(data, config));\n        });\n\n        if (angular.isArray(results.data)) {\n          angular.forEach(results.data, function(data) {\n            objects.data.push(getFactory(data.type).cache.addOrUpdate(data, config));\n          });\n        } else {\n          objects.data.push(getFactory(results.data.type).cache.addOrUpdate(results.data, config));\n        }\n\n        return objects;\n      }\n    }\n  }\n\n})();\n\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(function($logProvider) {\n    $logProvider.debugEnabled(false);\n  })\n  .run(function(validateJS, $q) {\n    validateJS.Promise = $q;\n  });\n})();\n"],"sourceRoot":"/source/"}