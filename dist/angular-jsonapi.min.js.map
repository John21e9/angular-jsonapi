{"version":3,"sources":["/source/jsonapi.module.js","/source/model/model-linker/model-linker.js","angular-jsonapi.min.js","/source/model/model-form/model-form.js","/source/model/abstract-model/abstract-model.js","/source/factory/factory-cache/factory-cache.factory.js","/source/errors/validation-error/validation-error.js","/source/errors/synchronization-error/synchronization-error.js","/source/errors/errors-manager/errors-manager.js","/source/utils/lazy-property.js","/source/utils/kebab-case.js","/source/utils/all-settled.js","/source/synchronizers/synchronizer-simple.js","/source/synchronizers/synchronizer-prototype.js","/source/synchronizations/synchronization-rest.js","/source/synchronizations/synchronization-prototype.js","/source/synchronizations/synchronization-local.js","/source/schema/schema.js","/source/schema/schema-link.js","/source/model/model.js","/source/factory/factory.js","/source/collection/collection.js","/source/jsonapi.provider.js","/source/jsonapi.config.js"],"names":["angular","module","constant","pluralize","validate","AngularJsonAPIModelLinkerService","$log","toLinkData","object","type","data","id","link","key","target","oneWay","schema","undefined","error","relationships","polymorphic","model","__addHasMany","__processAddHasMany","__addHasOne","__processAddHasOne","unlink","__removeHasMany","__processRemove","reflectionSchema","reflectionKey","reflection","__swapResults","__wrapResults","oldReflectionSchema","oldReflection","result","__removeHasOne","push","reset","debug","linkData","isArray","indexOf","index","splice","value","newValue","array","forEach","item","i","_this","this","service","$inject","AngularJsonAPIModelFormWrapper","AngularJsonAPIModelValidationError","validateJS","$q","AngularJsonAPIModelForm","parent","attributes","toJson","copy","save","auto","slice","validator","errors","validation","clear","resolve","deferred","reject","errorsMap","attribute","add","attributesWrapper","constraintsWrapper","defer","async","then","promise","prototype","factory","AngularJsonAPIAbstractModelWrapper","AngularJsonAPIModelSynchronizationError","AngularJsonAPIModelErrorsManager","uuid4","$rootScope","$injector","AngularJsonAPIAbstractModel","config","updatedAt","saved","stable","pristine","removed","loading","saving","Date","now","loadingCount","savingCount","name","synchronization","promises","__setData","form","invalidate","__decrementSavingCounter","response","$emit","action","update","cache","indexIds","finish","notify","synchronize","bind","__incrementSavingCounter","refresh","synchronizeIncluded","__incrementLoadingCounter","__decrementLoadingCounter","resolveIncluded","includedResponse","operation","success","results","included","$jsonapi","proccesResults","allSettled","map","get","params","status","statusText","remove","unlinkAll","clearRemoved","revertRemove","removeLink","linksObj","removeReflectionLink","isObject","resolveReflection","targets","validatedData","initialization","hasErrors","answer","setAttributes","validators","setRelationships","relationshipData","links","linkOne","length","unlinkOne","getFactory","AngularJsonAPICacheWrapper","AngularJsonAPICache","size","addOrUpdate","Model","fromJson","json","collection","synchronized","objectData","setIndexIds","element","isString","AngularJsonAPIModelValidationErrorWrapper","ValidationError","message","Error","captureStackTrace","constructor","context","Object","create","AngularJsonAPIModelSynchronizationErrorWrapper","SynchronizationError","AngularJsonAPIModelErrorsManagerWrapper","ErrorsManager","description","ErrorConstructor","defaultFilter","obj","apply","arguments","propertyName","callback","done","defineProperty","call","enumerable","configurable","str","replace","toLowerCase","$provide","decorator","$delegate","resolvedCallback","rejectedCallback","wrap","isFunction","reason","wrapped","hasOwnProperty","all","AngularJsonAPISynchronizerSimpleWrapper","AngularJsonAPISynchronizerPrototype","AngularJsonAPISynchronizerSimple","synchronizations","state","synchronizer","step","resolved","afterHooks","hook","finishHooks","rejected","noop","beginHooks","beforeHooks","synchronizationHooks","AngularJsonAPISynchronizerPrototypeWrapper","AngularJsonAPISynchronizationRestWrapper","AngularJsonAPISynchronizationPrototype","toKebabCase","$http","AngularJsonAPISynchronizationRest","url","method","headers","resolveHttp","rejectHttp","rejectServerOffline","rejectNoConnection","Accept","Content-Type","AngularJsonAPISynchronizationPrototypeWrapper","allHooks","options","hookName","begin","beforeSynchro","afterSynchro","before","after","AngularJsonAPISynchronizationLocalWrapper","$window","AngularJsonAPISynchronizationLocal","prefix","init","localStorage","getItem","removeItem","updateStorage","setItem","__updateStorage","AngularJsonAPISchemaWrapper","AngularJsonAPISchemaLink","AngularJsonAPISchema","include","linkSchema","linkName","linkSchemaObj","extend","join","AngularJsonAPILinkSchrapperLink","plural","singular","AngularJsonAPIModel","modelFactory","schemaObj","functions","metaFunction","metaFunctionName","AngularJsonAPIFactoryWrapper","AngularJsonAPICollection","AngularJsonAPIFactory","initialized","fetch","initialize","relationshipSchema","relationshipName","warn","generate","clearCache","AngularJsonAPICollectionWrapper","event","$on","jsonapiProvider","jsonapiFactory","allFactories","memory","factoriesNames","names","addFactory","objects","$get","provider","$logProvider","debugEnabled","run","Promise"],"mappings":"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","file":"angular-jsonapi.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false, validate: false */\n  .constant('pluralize', pluralize)\n  .constant('validateJS', validate);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, oneWay) {\n      var schema;\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema.type === 'hasMany') {\n        if (oneWay === true) {\n          __addHasMany(object, key, target, false);\n          return [];\n        } else {\n          return __processAddHasMany(object, key, target);\n        }\n      } else if (schema.type === 'hasOne') {\n        if (oneWay === true) {\n          __addHasOne(object, key, target, false);\n          return [];\n        } else {\n          return __processAddHasOne(object, key, target);\n        }\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, oneWay) {\n      var schema;\n\n      if (object === undefined) {\n        $log.error('Can\\'t remove link from non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (oneWay === true) {\n        __removeHasMany(object, key, target, false);\n        return [];\n      } else {\n        return __processRemove(object, key, target);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __processAddHasMany(object, key, target) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var reflectionSchema;\n\n      if (reflectionKey === false) {\n        __addHasMany(object, key, target);\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        return __swapResults(\n          __wrapResults(object, key, target),\n          __wrapResults(target, reflectionKey, object),\n          __processAddHasOne(target, reflectionKey, object)\n        );\n      } else if (reflectionSchema.type === 'hasMany') {\n        __addHasMany(object, key, target);\n        __addHasMany(target, reflectionKey, object);\n        return [__wrapResults(target, reflectionKey, object)];\n      }\n    }\n\n    function __processAddHasOne(object, key, target) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var oldReflection = object.relationships[key];\n      var reflectionSchema;\n      var oldReflectionSchema;\n      var result = [];\n\n      __addHasOne(object, key, target);\n\n      if (oldReflection !== undefined && oldReflection !== null) {\n        oldReflectionSchema = oldReflection.schema.relationships[reflectionKey];\n\n        if (oldReflectionSchema.type === 'hasOne') {\n          __removeHasOne(oldReflection, reflectionKey, object);\n        } else if (oldReflectionSchema.type === 'hasMany') {\n          __removeHasMany(oldReflection, reflectionKey, object);\n        }\n\n        result.push(oldReflection, reflectionKey, object);\n      }\n\n      if (target !== undefined && target !== null && reflectionKey !== false) {\n        reflectionSchema = target.schema.relationships[reflectionKey];\n\n        if (reflectionSchema.type === 'hasOne') {\n          __addHasOne(target, reflectionKey, object);\n        } else if (reflectionSchema.type === 'hasMany') {\n          __addHasMany(target, reflectionKey, object);\n        }\n\n        result.push(target, reflectionKey, object);\n      }\n\n      return result;\n    }\n\n    function __processRemove(object, key, target) {\n      var schema = object.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema;\n\n      if (schema.type === 'hasMany') {\n        __removeHasMany(object, key, target);\n      } else if (schema.type === 'hasOne') {\n        __removeHasOne(object, key, target);\n      }\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        __removeHasOne(target, reflectionKey, object);\n      } else if (reflectionSchema.type === 'hasMany') {\n        __removeHasMany(target, reflectionKey, object);\n      }\n\n      return [__wrapResults(target, reflectionKey, object)];\n    }\n\n    function __addHasOne(object, key, target, reset) {\n      $log.debug('addHasOne', object, key, target);\n\n      object.relationships[key] = target;\n      object.data.relationships[key].data = toLinkData(target);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, reset) {\n      var linkData = toLinkData(target);\n      $log.debug('addHasMany', object, key, target);\n\n      if (angular.isArray(object.relationships[key]) && object.relationships[key].indexOf(target) > -1) {\n        return false;\n      }\n\n      object.relationships[key] = object.relationships[key] || [];\n      object.data.relationships[key].data = object.data.relationships[key].data || [];\n\n      object.relationships[key].push(target);\n      object.data.relationships[key].data.push(linkData);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, reset) {\n      $log.debug('removeHasOne', object, key, target);\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        return false;\n      }\n\n      object.relationships[key] = null;\n      object.data.relationships[key].data = undefined;\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, reset) {\n      $log.debug('removeHasMany', object, key, target);\n\n      if (object.relationships[key] === undefined) {\n        return;\n      }\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n        if (reset !== false) {\n          object.reset(true);\n        }\n\n        return true;\n      }\n\n      var index = object.relationships[key].indexOf(target);\n\n      if (index === -1) {\n        return false;\n      }\n\n      object.relationships[key].splice(index, 1);\n      object.data.relationships[key].data.splice(index, 1);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __wrapResults(object, key, target) {\n      return {\n        object: object,\n        key: key,\n        target: target\n      };\n    }\n\n    function __swapResults(value, newValue, array) {\n      var index = -1;\n      angular.forEach(array, function(item, i) {\n        if (item.object === value.object && item.key === value.key && item.target === value.target) {\n          index = i;\n        }\n      });\n\n      if (index > -1) {\n        array[index] = newValue;\n      } else {\n        array.push(newValue);\n      }\n\n      return array;\n    }\n  }\n})();\n","!function(){\"use strict\";angular.module(\"angular-jsonapi\",[\"uuid4\"]).constant(\"pluralize\",pluralize).constant(\"validateJS\",validate)}(),function(){\"use strict\";function t(t){function e(t){return null===t?null:{type:t.data.type,id:t.data.id}}function n(e,n,a,i){var u;return void 0===e?(t.error(\"Can't add link to non existing object\",e,n,a),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),[]):(u=e.schema.relationships[n],void 0===a?(t.error(\"Can't link non existing object\",e,n,a,u),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),t.error(\"Schema:\",u),[]):void 0===u?(t.error(\"Can't add link not present in schema:\",e,n,a,u),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),t.error(\"Schema:\",u),[]):null!==a&&u.polymorphic===!1&&u.model!==a.data.type?(t.error(\"This relation is not polymorphic, expected: \"+u.model+\" instead of \"+a.data.type),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),t.error(\"Schema:\",u),[]):\"hasMany\"===u.type?i===!0?(c(e,n,a,!1),[]):r(e,n,a):\"hasOne\"===u.type?i===!0?(s(e,n,a,!1),[]):o(e,n,a):void 0)}function a(e,n,a,r){var o;return void 0===e?(t.error(\"Can't remove link from non existing object\",e,n,a),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),[]):(o=e.schema.relationships[n],void 0===o?(t.error(\"Can't remove link not present in schema:\",e,n,a,o),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),t.error(\"Schema:\",o),[]):r===!0?(l(e,n,a,!1),[]):i(e,n,a))}function r(t,e,n){var a,r=t.schema.relationships[e].reflection;return r===!1?(c(t,e,n),[]):(a=n.schema.relationships[r],\"hasOne\"===a.type?h(d(t,e,n),d(n,r,t),o(n,r,t)):\"hasMany\"===a.type?(c(t,e,n),c(n,r,t),[d(n,r,t)]):void 0)}function o(t,e,n){var a,r,o=t.schema.relationships[e].reflection,i=t.relationships[e],d=[];return s(t,e,n),void 0!==i&&null!==i&&(r=i.schema.relationships[o],\"hasOne\"===r.type?u(i,o,t):\"hasMany\"===r.type&&l(i,o,t),d.push(i,o,t)),void 0!==n&&null!==n&&o!==!1&&(a=n.schema.relationships[o],\"hasOne\"===a.type?s(n,o,t):\"hasMany\"===a.type&&c(n,o,t),d.push(n,o,t)),d}function i(t,e,n){var a,r=t.schema.relationships[e],o=r.reflection;return\"hasMany\"===r.type?l(t,e,n):\"hasOne\"===r.type&&u(t,e,n),o===!1?[]:(a=n.schema.relationships[o],\"hasOne\"===a.type?u(n,o,t):\"hasMany\"===a.type&&l(n,o,t),[d(n,o,t)])}function s(n,a,r,o){return t.debug(\"addHasOne\",n,a,r),n.relationships[a]=r,n.data.relationships[a].data=e(r),o!==!1&&n.reset(!0),!0}function c(n,a,r,o){var i=e(r);return t.debug(\"addHasMany\",n,a,r),angular.isArray(n.relationships[a])&&n.relationships[a].indexOf(r)>-1?!1:(n.relationships[a]=n.relationships[a]||[],n.data.relationships[a].data=n.data.relationships[a].data||[],n.relationships[a].push(r),n.data.relationships[a].data.push(i),o!==!1&&n.reset(!0),!0)}function u(e,n,a,r){return t.debug(\"removeHasOne\",e,n,a),void 0!==a&&e.relationships[n]!==a?!1:(e.relationships[n]=null,e.data.relationships[n].data=void 0,r!==!1&&e.reset(!0),!0)}function l(e,n,a,r){if(t.debug(\"removeHasMany\",e,n,a),void 0!==e.relationships[n]){if(void 0===a)return e.relationships[n]=[],e.data.relationships[n].data=[],r!==!1&&e.reset(!0),!0;var o=e.relationships[n].indexOf(a);return-1===o?!1:(e.relationships[n].splice(o,1),e.data.relationships[n].data.splice(o,1),r!==!1&&e.reset(!0),!0)}}function d(t,e,n){return{object:t,key:e,target:n}}function h(t,e,n){var a=-1;return angular.forEach(n,function(e,n){e.object===t.object&&e.key===t.key&&e.target===t.target&&(a=n)}),a>-1?n[a]=e:n.push(e),n}var p=this;return p.toLinkData=e,p.link=n,p.unlink=a,this}angular.module(\"angular-jsonapi\").service(\"AngularJsonAPIModelLinkerService\",t),t.$inject=[\"$log\"]}(),function(){\"use strict\";function t(t,e,n,a){function r(t){var e=this;e.data={id:t.data.id,type:t.data.type,attributes:{},relationships:{}},e.relationships={},e.parent=t,e.schema=t.schema,e.reset()}function o(){var t=this,e=angular.copy(t.data),n={};return angular.forEach(e.relationships,function(t,e){void 0!==t.data&&(n[e]=t)}),e.relationships=n,{data:e}}function i(){var t=this;return t.parent.save()}function s(t){var e=this;angular.forEach(e.schema.relationships,function(t,n){e.data.relationships[n]=angular.copy(e.parent.data.relationships[n])||{},e.relationships[n]=angular.isArray(e.relationships[n])?e.parent.relationships[n].slice():e.parent.relationships[n]}),(t!==!0||e.parent[\"synchronized\"]!==!0)&&(angular.forEach(e.schema.attributes,function(t,n){e.data.attributes[n]=angular.copy(e.parent.data.attributes[n])}),e.parent.errors.validation.clear())}function c(t){function e(){void 0===t?s.parent.errors.validation.clear():s.parent.errors.validation.clear(t),c.resolve()}function r(e){s.parent.error=!0,void 0===t?s.parent.errors.validation.clear():s.parent.errors.validation.clear(t),angular.forEach(e,function(t,e){angular.forEach(t,function(t){s.parent.errors.validation.add(e,t,e)})}),c.reject(s.parent.errors.validation)}var o,i,s=this,c=a.defer();return void 0===t?(o=s.data.attributes,i=s.schema.attributes):(o={},i={},o[t]=s.data.attributes[t],i[t]=s.schema.attributes[t]),n.async(o,i).then(e,r),c.promise}function u(t,n){var r=this;return a.resolve(e.link(r,t,n,!0))}function l(t,n){var r=this;return a.resolve(e.unlink(r,t,n,!0))}return r.prototype.save=i,r.prototype.reset=s,r.prototype.validate=c,r.prototype.link=u,r.prototype.unlink=l,r.prototype.toJson=o,r}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelForm\",t),t.$inject=[\"AngularJsonAPIModelValidationError\",\"AngularJsonAPIModelLinkerService\",\"validateJS\",\"$q\"]}(),function(){\"use strict\";function t(t,o,i,s,c,u,l,d,h,p){function f(e,n,a){var r=this;e.relationships=e.relationships||{},r.saved=void 0===n.saved?!0:n.saved,r.stable=void 0===n.stable?!0:n.stable,r[\"synchronized\"]=void 0===n[\"synchronized\"]?!0:n[\"synchronized\"],r.pristine=void 0===n.pristine?!0:n.pristine,r.removed=!1,r.loading=!1,r.saving=!1,r.updatedAt=r[\"synchronized\"]===!0?Date.now():a,r.loadingCount=0,r.savingCount=0,r.data={relationships:{},attributes:{}},r.relationships={},angular.forEach(r.schema.relationships,function(t,e){r.relationships[e]=void 0}),r.errors={validation:new i(\"Validation\",\"Errors of attributes validation\",o),synchronization:new i(\"Synchronization\",\"Errors of synchronizations\",t)},r.promises={},P(r,e),r.form=new c(r)}function y(){function t(){r(i),s.reject()}function e(t){l.$emit(\"angularJsonAPI:\"+i.data.type+\":object:\"+c.action,\"resolved\",i,t),i.update(i.form.data),i.saved===!1&&(i.factory.cache.indexIds=i.factory.cache.indexIds||[],i.factory.cache.indexIds.push(i.data.id)),i[\"synchronized\"]=!0,i.saved=!0,i.stable=!0,t.finish(),s.resolve(i)}function n(t){l.$emit(\"angularJsonAPI:\"+i.data.type+\":object:save\",\"rejected\",i,t),t.finish(),s.reject(t)}function o(t){l.$emit(\"angularJsonAPI:\"+i.data.type+\":object:save\",\"notify\",i,t),s.notify(t)}var i=this,s=p.defer(),c={action:i.saved===!1?\"add\":\"update\",object:i};return i.form.validate().then(i.synchronize(c).then(e,n,o)[\"finally\"](r.bind(i)),t),a(i),s.promise}function g(){var t=this;void 0!==t.form&&t.form.reset()}function v(){function t(t){function a(t){return e.bind(t),t.synchronize({action:\"include\",object:t})[\"finally\"](n.bind(t))}function r(e){angular.forEach(e,function(t,e){t.success===!0&&(l.$emit(\"angularJsonAPI:\"+c.included[e].data.type+\":object:include\",\"resolved\",c.included[e],t),t.value.finish())}),i.resolve(t)}var c=o.proccesResults(t.data);l.$emit(\"angularJsonAPI:\"+s.data.type+\":object:refresh\",\"resolved\",s,t),p.allSettled(c.included.map(a)).then(r,i.reject),t.finish(),s[\"synchronized\"]=!0,s.stable=!0}function a(t){l.$emit(\"angularJsonAPI:\"+s.data.type+\":object:refresh\",\"rejected\",s,t),t.finish(),i.reject(t)}function r(t){l.$emit(\"angularJsonAPI:\"+s.data.type+\":object:refresh\",\"notify\",s,t),i.notify(t)}var o=d.get(\"$jsonapi\"),i=p.defer(),s=this,c={action:\"refresh\",object:s,params:s.schema.params.get};return s.saved===!1?i.reject({errors:[{status:0,statusText:\"Can't refresh new object\"}]}):(e(s),s.synchronize(c).then(t,a,r)[\"finally\"](n.bind(s))),i.promise}function m(){var t=this,e=angular.copy(t.data),n={};return angular.forEach(e.relationships,function(t,e){void 0!==t.data&&(n[e]=t)}),e.relationships=n,{data:e,updatedAt:t.updatedAt}}function j(){function t(t){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"resolved\",o,t),o.removed=!0,o.unlinkAll(),o.factory.cache.clearRemoved(o.data.id),t.finish(),i.resolve(t)}function e(t){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"rejected\",o,t),o.factory.cache.revertRemove(o.data.id),t.finish(),i.reject(t)}function n(t){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"notify\",o,t),i.notify(t)}var o=this,i=p.defer(),s={action:\"remove\",object:o};return o.factory.cache.remove(o.data.id),o.saved===!1?i.resolve():(a.bind(o),o.synchronize(s).then(t,e,n)[\"finally\"](r.bind(o))),i.promise}function b(t){function a(t,e){var n=o.schema.relationships[e],a=n.reflection;angular.isArray(t)?angular.forEach(t,r.bind(void 0,a)):angular.isObject(t)&&r(a,t),\"hasOne\"===n.type?o.relationships[e]=null:\"hasMany\"===n.type&&(o.relationships[e]=[])}function r(t,a){function r(t){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"resolve\",o,t),t.finish(),i.resolve(o)}function c(t){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"rejected\",o,t),t.finish(),i.reject(t)}function u(t){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"notify\",o,t),t.finish(),i.notify(t)}var d=a.schema.relationships[t],h={action:\"unlinkReflection\",object:a,target:o,key:t};e(a),s.unlink(a,t,o,d),a.synchronize(h).then(r,c,u)[\"finally\"](n.bind(a))}var o=this,i=p.defer();return e(o),void 0===t?angular.forEach(o.relationships,a):a(o.relationships[t],t),n(o),i.promise}function A(t,o){function i(a){function r(t){return e(o),o.synchronize({action:\"linkReflection\",object:t.object,target:t.target,key:t.key})[\"finally\"](n.bind(o))}function i(e){angular.forEach(e,function(n){n.success===!0&&(l.$emit(\"angularJsonAPI:\"+c[t].data.type+\":object:linkReflection\",\"resolved\",c[t],n),e.value.finish())}),d.resolve(f)}l.$emit(\"angularJsonAPI:\"+f.data.type+\":object:link\",\"resolved\",f,a);var c=s.link(f,t,o);f.stable=!0,a.finish(),p.allSettled(c.map(r)).then(i,d.reject)}function c(t){l.$emit(\"angularJsonAPI:\"+f.data.type+\":object:link\",\"rejected\",f,t),d.reject(t.errors),t.finish(),d.reject(t)}function u(t){l.$emit(\"angularJsonAPI:\"+f.data.type+\":object:link\",\"notify\",f,t),d.notify(t)}var d=p.defer(),f=this,y={action:\"link\",object:f,target:o,key:t};return void 0===o?(h.error(\"Can't link undefined\"),d.reject({errors:[{status:0,statusText:\"Can't link undefined\"}]})):f.saved===!1?(h.error(\"Can't link new object\"),d.reject({errors:[{status:0,statusText:\"Can't link new object\"}]})):(a(f),f.synchronize(y).then(i,c,u)[\"finally\"](r.bind(f))),d.promise}function k(t,o){function i(a){function r(t){return e(o),o.synchronize({action:\"unlinkReflection\",object:t.object,target:t.target,key:t.key})[\"finally\"](n.bind(o))}function i(e){angular.forEach(e,function(n){n.success===!0&&(l.$emit(\"angularJsonAPI:\"+c[t].data.type+\":object:unlinkReflection\",\"resolved\",c[t],n),e.value.finish())}),d.resolve(h)}l.$emit(\"angularJsonAPI:\"+h.data.type+\":object:unlink\",\"resolved\",h,a);var c=s.link(h,t,o);h.stable=!0,a.finish(),p.allSettled(c.map(r)).then(i,d.reject)}function c(t){l.$emit(\"angularJsonAPI:\"+h.data.type+\":object:unlink\",\"rejected\",h,t),d.reject(t.errors),t.finish(),d.reject(t)}function u(t){l.$emit(\"angularJsonAPI:\"+h.data.type+\":object:unlink\",\"notify\",h,t),d.notify(t)}var d=p.defer(),h=this,f={action:\"unlink\",object:h,target:o,key:t};return void 0===o?d.reject({errors:[{status:0,statusText:\"Can't unlink undefined\"}]}):h.saved===!1?d.reject({errors:[{status:0,statusText:\"Can't unlink new object\"}]}):(a(h),h.synchronize(f).then(i,c,u)[\"finally\"](r.bind(h))),d.promise}function z(t,a,r){var o=this;e(o),P(o,t),o.reset(a),o[\"synchronized\"]=r===!0?!1:!0,o.stable=r===!0?!1:!0,o.updatedAt=Date.now(),n(o)}function I(){var t=this,e=!1;return angular.forEach(t.errors,function(t){e=t.hasErrors()||e}),e}function P(t,e){function n(n,a){t.data.attributes[a]=e.attributes[a]}function a(n,a){var i=e.relationships[a];return void 0===i?void(t.data.relationships[a]={data:void 0}):(t.data.relationships[a]=t.data.relationships[a]||{},t.data.relationships[a].links=i.links,void(\"hasOne\"===n.type?r(t,a,i.data):\"hasMany\"===n.type&&angular.isArray(i.data)&&(0===i.data.length?(t.data.relationships[a].data=[],t.unlinkAll(a)):(angular.forEach(t.relationships[a],o.bind(void 0,t,a,i.data)),angular.forEach(i.data,r.bind(void 0,t,a))))))}function r(t,e,n){var a;if(null===n)return void s.link(t,e,null);if(void 0!==n){if(a=i.getFactory(n.type),void 0===a)return void h.error(\"Factory not found\",n.type,n);var r=a.cache.get(n.id);s.link(t,e,r)}}function o(t,e,n,a){n.indexOf(a.data.id)>-1||s.unlink(t,e,a)}var i=d.get(\"$jsonapi\"),c=t.schema;return t.data.id=e.id,t.data.type=e.type,t.factory.schema.type!==e.type?(h.error(\"Different type then factory\",t.factory.schema.type,e),!1):u.validate(t.data.id)?(e.attributes=e.attributes||{},e.relationships=e.relationships||{},angular.forEach(c.attributes,n),angular.forEach(c.relationships,a),!0):(h.error(\"Invalid id\"),!1)}return f.prototype.refresh=v,f.prototype.remove=j,f.prototype.reset=g,f.prototype.save=y,f.prototype.update=z,f.prototype.link=A,f.prototype.unlink=k,f.prototype.unlinkAll=b,f.prototype.toJson=m,f.prototype.hasErrors=I,f}function e(t){t=void 0===t?this:t,t.loadingCount+=1,t.loading=!0}function n(t){t=void 0===t?this:t,t.loadingCount-=1,t.loading=t.loadingCount>0}function a(t){t=void 0===t?this:t,t.savingCount+=1,t.saving=!0}function r(t){t=void 0===t?this:t,t.savingCount-=1,t.saving=t.savingCount>0}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractModel\",t),t.$inject=[\"AngularJsonAPIModelSynchronizationError\",\"AngularJsonAPIModelValidationError\",\"AngularJsonAPIModelErrorsManager\",\"AngularJsonAPIModelLinkerService\",\"AngularJsonAPIModelForm\",\"uuid4\",\"$rootScope\",\"$injector\",\"$log\",\"$q\"]}(),function(){\"use strict\";function t(t,e){function n(t){var e=this;e.factory=t,e.data={},e.removed={},e.size=0,e.indexIds=void 0}function a(t,n){var a=this,r=t.id;return void 0===r?void e.error(\"Can't add data without id!\",t):(void 0===a.data[r]?(a.data[r]=new a.factory.Model(t,n),a.size+=1):a.data[r].update(t,n.saved,n.initialization),a.data[r])}function r(t){var e=this,n=angular.fromJson(t),a={saved:!0,\"synchronized\":!1,stable:!1,pristine:!1,initialization:!0};angular.isObject(n)&&void 0!==n.data&&(e.updatedAt=n.updatedAt,e.indexIds=n.indexIds,angular.forEach(n.data,function(t){var n=t.data;e.addOrUpdate(n,a,t.updatedAt)}))}function o(){var t=this,e={data:[],updatedAt:t.updatedAt,indexIds:t.indexIds};return angular.forEach(t.data,function(t){t.error===!1&&e.data.push(t.toJson())}),angular.toJson(e)}function i(){var t=this;t.indexIds=void 0,t.data={},t.removed={}}function s(t){var e=this,n={id:t,type:e.factory.Model.prototype.schema.type},a={saved:!0,\"synchronized\":!1,stable:!1,pristine:!0};return void 0===e.data[t]&&(e.data[t]=new e.factory.Model(n,a)),e.data[t]}function c(t){var n=this;return e.debug(\"Unused params\",t),void 0===n.indexIds?n.indexIds:n.indexIds.map(n.get.bind(n))}function u(e){var n=this;n.indexIds=[],angular.forEach(e,function(e){angular.isString(e)&&t.validate(e)?n.indexIds.push(e):angular.isObject(e)&&t.validate(e.data.id)&&n.indexIds.push(e.data.id)})}function l(t){var e=this;return void 0!==e.data[t]&&(e.removed[t]=e.data[t],delete e.data[t],e.size-=1),e.removed[t]}function d(t){var e=this;return void 0!==e.removed[t]&&(e.data[t]=e.removed[t],delete e.removed[t],e.size+=1),e.data[t]}function h(t){var e=this;delete e.removed[t]}return n.prototype.get=s,n.prototype.index=c,n.prototype.setIndexIds=u,n.prototype.addOrUpdate=a,n.prototype.fromJson=r,n.prototype.toJson=o,n.prototype.clear=i,n.prototype.remove=l,n.prototype.revertRemove=d,n.prototype.clearRemoved=h,n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICache\",t),t.$inject=[\"uuid4\",\"$log\"]}(),function(){\"use strict\";function t(){function t(t,e){var n=this;Error.captureStackTrace(n,n.constructor),n.message=t,n.context={attribute:e}}return t.prototype=Object.create(Error.prototype),t.prototype.constructor=t,t.prototype.name=\"ValidationError\",t}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelValidationError\",t)}(),function(){\"use strict\";function t(){function t(t,e,n){var a=this;Error.captureStackTrace(a,a.constructor),a.message=t,a.context={synchronization:e,action:n}}return t.prototype=Object.create(Error.prototype),t.prototype.constructor=t,t.prototype.name=\"SynchronizationError\",t}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelSynchronizationError\",t)}(),function(){\"use strict\";function t(){function t(t,e,n,a){var r=this;r.name=t,r.description=e,r.ErrorConstructor=n,r.errors={},r.defaultFilter=a||function(){return!0}}function e(t){var e=this;void 0===t?angular.forEach(e.errors,function(t,n){e.errors[n]=[]}):e.errors[t]=[]}function n(t){var e=this;e.errors[t]=e.errors[t]||[],e.errors[t].push(new(e.ErrorConstructor.bind.apply(e.ErrorConstructor,arguments)))}function a(t){var e=this;if(void 0===t){var n=!1;return angular.forEach(e.errors,function(t){n=n||t.length>0}),n}return void 0!==e.errors[t]&&e.errors[t].length>0}return t.prototype.constructor=t,t.prototype.clear=e,t.prototype.add=n,t.prototype.hasErrors=a,t}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelErrorsManager\",t)}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"lazyProperty\",function(t,e,n){var a,r;Object.defineProperty(t,e,{get:function(){return r||(r=!0,a=n.call(t)),a},enumerable:!0,configurable:!0})})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"toKebabCase\",function(t){return t.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase()})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$provide\",function(t){t.decorator(\"$q\",[\"$delegate\",function(t){var e=t;return e.allSettled=e.allSettled||function(t,n,a){function r(t){return e.resolve(t).then(function(t){return angular.isFunction(n)&&n(t),{success:!0,value:t}},function(t){return angular.isFunction(a)&&a(t),{success:!1,reason:t}})}var o=angular.isArray(t)?[]:{};return angular.forEach(t,function(t,e){o.hasOwnProperty(e)||(o[e]=r(t))}),e.all(o)},e}])}])}(),function(){\"use strict\";function t(t,e,n){function a(e){var n=this;n.state={},t.call(n,e),angular.forEach(e,function(t){t.synchronizer=n})}function r(a){function r(t){d.notify({step:\"synchronization\",data:t})}function o(t){d.notify({step:\"synchronization\",errors:t})}function i(t){u.state[h]=u.state[h]||{},u.state[h].success=!0,angular.forEach(t,function(t){t.success===!1&&(u.state[h].success=!1)}),angular.forEach(u.synchronizations,function(e){angular.forEach(e.afterHooks[h],function(e){d.notify({step:\"after\",errors:e.call(u,a,t)})})});var e,n=[];angular.forEach(t,function(t){t.success===!0?e=t.value:n.push(t.reason)}),n.length>0?d.reject({data:e,finish:s,errors:n}):d.resolve({data:e,finish:s,errors:n})}function s(){angular.forEach(u.synchronizations,function(t){angular.forEach(t.finishHooks[h],function(t){d.notify({step:\"finish\",errors:t.call(u,a)})})})}function c(t){n.error(\"All settled rejected! Something went wrong\"),d.reject({finish:angular.noop,errors:t})}var u=this,l=[],d=e.defer(),h=a.action;return t.prototype.synchronize.call(u,a),angular.forEach(u.synchronizations,function(t){angular.forEach(t.beginHooks[h],function(t){d.notify({step:\"begin\",data:t.call(u,a)})})}),angular.forEach(u.synchronizations,function(t){angular.forEach(t.beforeHooks[h],function(t){d.notify({step:\"before\",data:t.call(u,a)})})}),angular.forEach(u.synchronizations,function(t){angular.forEach(t.synchronizationHooks[h],function(t){l.push(t.call(u,a))})}),e.allSettled(l,r,o).then(i,c),d.promise}return a.prototype=Object.create(t.prototype),a.prototype.constructor=a,a.prototype.synchronize=r,a}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerSimple\",t),t.$inject=[\"AngularJsonAPISynchronizerPrototype\",\"$q\",\"$log\"]}(),function(){\"use strict\";function t(t){function e(t){var e=this;e.synchronizations=t}function n(e){var n=this;t.debug(\"Synchro Collection\",n.factory.Model.prototype.schema.type,e),void 0===e.action&&t.error(\"Can't synchronize undefined action\",e)}return e.prototype.synchronize=n,e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerPrototype\",t),t.$inject=[\"$log\"]}(),function(){\"use strict\";function t(t,e,n,a,r){function o(n){function o(t){return r({method:\"GET\",headers:y,url:n,params:t.params||{}}).then(h,p)}function i(t){return r({method:\"GET\",headers:y,url:n+\"/\"+t.object.data.id,params:t.params||{}}).then(h,p)}function s(t){return r({method:\"DELETE\",headers:y,url:n+\"/\"+t.object.data.id}).then(h,p)}function c(t){var e=a.defer(),o=t.object.schema.relationships[t.key];return t.object.removed===!0?e.reject({errors:[{status:0,statusText:\"Object has been removed\"}]}):void 0!==t.target&&void 0===t.target.data.id?e.reject({errors:[{status:0,statusText:\"Can't unlink object without id through rest call\"}]}):\"hasOne\"===o.type?r({method:\"DELETE\",headers:y,url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(h,p).then(e.resolve,e.reject):\"hasMany\"===o.type&&(void 0===t.target?r({method:\"PUT\",headers:y,data:{data:[]},url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(h,p).then(e.resolve,e.reject):r({method:\"DELETE\",headers:y,url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key+\"/\"+t.target.data.id}).then(h,p).then(e.resolve,e.reject)),e.promise}function u(t){var o=a.defer(),i=t.object.schema.relationships[t.key];return t.object.removed===!0?o.reject({errors:[{status:0,statusText:\"Object has been removed\"}]}):void 0===t.target||void 0===t.target.data.id?o.reject({errors:[{status:0,statusText:\"Can't link object without id through rest call\"}]}):\"hasOne\"===i.type?r({method:\"PUT\",headers:y,data:{data:e.toLinkData(t.target)},url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(h,p).then(o.resolve,o.reject):\"hasMany\"===i.type&&r({method:\"POST\",headers:y,data:{data:[e.toLinkData(t.target)]},url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(h,p).then(o.resolve,o.reject),o.promise}function l(t){return r({method:\"PUT\",headers:y,url:n+\"/\"+t.object.data.id,data:t.object.form.toJson()}).then(h,p)}function d(t){return r({method:\"POST\",headers:y,url:n+\"/\",data:t.object.form.toJson()}).then(h,p)}function h(t){return a.resolve(t.data)}function p(t){function e(){o.reject({status:t.status,statusText:\"Server is offline\"})}function n(){o.reject({status:t.status,statusText:\"No internet connection\"})}var o=a.defer();return 0===t.status?r({method:\"GET\",url:\"https://status.cloud.google.com/incidents.schema.json\"}).then(e,n):o.reject({status:t.status,statusText:t.statusText}),o.promise}var f=this,y={Accept:\"application/vnd.api+json\",\"Content-Type\":\"application/vnd.api+json\"};t.call(f),f.synchronization(\"remove\",s),f.synchronization(\"unlink\",c),f.synchronization(\"link\",u),f.synchronization(\"update\",l),f.synchronization(\"add\",d),f.synchronization(\"all\",o),f.synchronization(\"get\",i),f.synchronization(\"refresh\",i)}return o.prototype=Object.create(t.prototype),o.prototype.constructor=o,o}angular.module(\"angular-jsonapi-rest\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationRest\",t),t.$inject=[\"AngularJsonAPISynchronizationPrototype\",\"AngularJsonAPIModelLinkerService\",\"toKebabCase\",\"$q\",\"$http\"]}(),function(){\"use strict\";function t(){function t(){var t=this,e=[\"add\",\"init\",\"get\",\"all\",\"clearCache\",\"remove\",\"unlink\",\"unlinkReflection\",\"link\",\"linkReflection\",\"update\",\"refresh\",\"include\"];t.state={},t.beginHooks={},t.beforeHooks={},t.synchronizationHooks={},t.afterHooks={},t.finishHooks={},t.options={},angular.forEach(e,function(e){t.beginHooks[e]=[],t.beforeHooks[e]=[],t.synchronizationHooks[e]=[],t.afterHooks[e]=[],t.finishHooks[e]=[],t.state[e]={loading:!1,success:!0}})}function e(t,e){var n=this;n.beginHooks[t].push(e)}function n(t,e){var n=this;n.finishHooks[t].push(e)}function a(t,e){var n=this;n.beforeHooks[t].push(e)}function r(t,e){var n=this;n.afterHooks[t].push(e)}function o(t,e){var n=this;n.synchronizationHooks[t].push(e)}return t.prototype.before=a,t.prototype.after=r,t.prototype.begin=e,t.prototype.finish=n,t.prototype.synchronization=o,t}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizationPrototype\",t)}(),function(){\"use strict\";function t(t,e,n){function a(a){function r(){var t=s.synchronizer.factory.schema.type;return n.resolve(e.localStorage.getItem(a+\".\"+t))}function o(){var t=s.synchronizer.factory.schema.type;e.localStorage.removeItem(a+\".\"+t)}function i(){var t=s.synchronizer.factory.schema.type,n=s.synchronizer.factory.cache;e.localStorage.setItem(a+\".\"+t,n.toJson())}var s=this;a=a||\"AngularJsonAPI\",s.__updateStorage=i,t.call(s),s.synchronization(\"init\",r),s.begin(\"clearCache\",o),s.begin(\"remove\",i),s.begin(\"refresh\",i),s.begin(\"unlink\",i),s.begin(\"unlinkReflection\",i),s.begin(\"link\",i),s.begin(\"linkReflection\",i),s.begin(\"update\",i),s.begin(\"add\",i),s.begin(\"get\",i),s.begin(\"all\",i),s.begin(\"include\",i),s.finish(\"init\",i),s.finish(\"clearCache\",i),s.finish(\"remove\",i),s.finish(\"refresh\",i),s.finish(\"unlink\",i),s.finish(\"unlinkReflection\",i),s.finish(\"link\",i),s.finish(\"linkReflection\",i),s.finish(\"update\",i),s.finish(\"add\",i),s.finish(\"get\",i),s.finish(\"all\",i),s.finish(\"include\",i)}return a.prototype=Object.create(t.prototype),a.prototype.constructor=a,a}angular.module(\"angular-jsonapi-local\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationLocal\",t),t.$inject=[\"AngularJsonAPISynchronizationPrototype\",\"$window\",\"$q\"]}(),function(){\"use strict\";function t(t,e,n){function a(t){var e=this,a=t.include||{};t.include=a,a.get=t.include.get||[],a.all=t.include.all||[],e.params={get:{},all:{}},angular.forEach(t.relationships,function(e,r){var o=new n(e,r,t.type);t.relationships[r]=o,o.included===!0&&(a.get.push(r),\"hasOne\"===o.type&&a.all.push(r))}),angular.extend(e,t),a.get.length>0&&(e.params.get.include=a.get.join(\",\")),a.all.length>0&&(e.params.all.include=a.all.join(\",\"))}return a}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchema\",t),t.$inject=[\"$log\",\"pluralize\",\"AngularJsonAPISchemaLink\"]}(),function(){\"use strict\";function t(t,e){function n(n,a,r){var o=this;angular.isString(n)?(o.model=e.plural(a),o.type=n,o.polymorphic=!1,o.reflection=r):(void 0===n.type&&t.error(\"Schema of link without a type: \",n,a),\"hasMany\"!==n.type&&\"hasOne\"!==n.type&&t.error(\"Schema of link with wrong type: \",n.type,\"available: hasOne, hasMany\"),o.model=n.model||e.plural(a),o.type=n.type,o.polymorphic=n.polymorphic||!1,o.reflection=void 0===n.reflection?\"hasMany\"===o.type?e.singular(r):r:n.reflection,o.included=n.included||!1)}return n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchemaLink\",t),t.$inject=[\"$log\",\"pluralize\"]}(),function(){\"use strict\";function t(t,e,n){function a(e,a){var r=function(e,a,r){var o=this;e.type!==o.schema.type&&n.error(\"Data type other then declared in schema: \",e.type,\" instead of \",o.schema.type),t.call(o,e,a,r),o.form.parent=o};return r.prototype=Object.create(t.prototype),r.prototype.constructor=r,r.prototype.schema=e,r.prototype.factory=a,r.prototype.synchronize=a.synchronizer.synchronize.bind(a.synchronizer),angular.forEach(e.functions,function(t,e){r.prototype[e]=function(){return t.apply(this,arguments)}}),r}return{model:a}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModel\",t),t.$inject=[\"AngularJsonAPIAbstractModel\",\"AngularJsonAPISchema\",\"$log\"]}(),function(){\"use strict\";function t(t,e,n,a,r,o,i,s){function c(a,r){function i(t){o.$emit(\"angularJsonAPI:\"+u.type+\":factory:init\",\"resolved\",t),u.cache.fromJson(t.data),u.initialized=!0,t.finish()}function s(t){o.$emit(\"angularJsonAPI:\"+u.type+\":factory:init\",\"rejected\",t),t.finish(),u.initialized=!0}function c(t){o.$emit(\"angularJsonAPI:\"+u.type+\":factory:init\",\"notify\",t)}var u=this,l={action:\"init\"};u.schema=new e(a),u.cache=new n(u),u.synchronizer=r,u.synchronizer.factory=u,u.Model=t.model(u.schema,u),u.initialized=!1,u.type=u.schema.type,r.factory=u,u.synchronizer.synchronize(l).then(i,s,c)}function u(t){var e=this;if(!r.validate(t))return s.reject({errors:[{status:0,statusText:\"Invalid id not uuid4\"}]});var n=e.cache.get(t);return n.refresh(),n}function l(t){var e=this;t=t||{};var n=new a(e,angular.extend(t,e.schema.params.all));return n.fetch(),n}function d(t){var e=this,n=e.cache.remove(t);return n.remove()}function h(t,e){var n=this,a={};if(angular.forEach(n.schema.relationships,function(t,e){\"hasOne\"===t.type?a[e]={data:null}:\"hasMany\"===t.type&&(a[e]={data:[]})}),void 0!==t&&void 0!==e){var s=n.schema[t];\"hasOne\"===s.type?a[t]={data:e.data.id}:\"hasMany\"===s.type&&i.warn(\"Initialize with relationship disallowed for hasMany relationships\")}var c={type:n.type,id:r.generate(),attributes:{},relationships:a},u={saved:!1,\"synchronized\":!1,stable:!1,pristine:!1,initialization:!1},l=n.cache.addOrUpdate(c,u);return o.$emit(\"angularJsonAPI:\"+n.type+\":factory:initialize\",\"resolved\",l),l}function p(){function t(t){o.$emit(\"angularJsonAPI:\"+a.type+\":factory:clearCache\",\"resolved\",t),t.finish(),r.resolve(t)}function e(t){o.$emit(\"angularJsonAPI:\"+a.type+\":factory:clearCache\",\"resolved\",t),t.finish(),r.reject(t)}function n(t){o.$emit(\"angularJsonAPI:\"+a.type+\":factory:clearCache\",\"notify\",t),r.notify(t)}var a=this,r=s.defer(),i={action:\"clearCache\"};return a.cache.clear(),a.synchronizer.synchronize(i).then(t,e,n),r}return c.prototype.get=u,c.prototype.all=l,c.prototype.remove=d,c.prototype.initialize=h,c.prototype.clearCache=p,c}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIFactory\",t),t.$inject=[\"AngularJsonAPIModel\",\"AngularJsonAPISchema\",\"AngularJsonAPICache\",\"AngularJsonAPICollection\",\"uuid4\",\"$rootScope\",\"$log\",\"$q\"]}(),function(){\"use strict\";function t(t,a,r,o){function i(e,n){function r(t,e,n){var a;\"resolved\"===e&&void 0!==s.data&&(a=s.data.indexOf(n),a>-1&&(s.data.splice(a,1),s.factory.cache.setIndexIds(s.data)))}function o(){s.data=void 0,s.pristine=!0}function i(t,e,n){\"resolved\"===e&&(s.data=s.data||[],s.data.push(n))}var s=this;s.factory=e,s.type=e.schema.type,s.params=n,s.errors={synchronization:new AngularJsonAPIModelErrorsManager(\"Synchronization\",\"Errors of synchronizations\",t)},s.data=s.factory.cache.index(s.params),s.loading=!1,s.loadingCount=0,s[\"synchronized\"]=!1,s.pristine=void 0===s.data,a.$on(\"angularJsonAPI:\"+s.type+\":object:remove\",r),a.$on(\"angularJsonAPI:\"+s.type+\":factory:clearCache\",o),a.$on(\"angularJsonAPI:\"+s.type+\":object:add\",i)}function s(t){var e=this;return e.factory.get(t)}function c(){function t(t){function r(t){return e.bind(t),t.synchronize({action:\"include\",object:t})[\"finally\"](n.bind(t))}function i(e){angular.forEach(e,function(t,e){t.success===!0&&(a.$emit(\"angularJsonAPI:\"+s.included[e].data.type+\":object:include\",\"resolved\",s.included[e],t),t.value.finish())}),u.resolve(t)}var s=l.proccesResults(t.data);a.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"resolved\",c,t),o.allSettled(s.included.map(r)).then(i,u.reject),angular.forEach(c.data,n),c.data=s.data,c.updatedAt=Date.now(),c[\"synchronized\"]=!0,c.factory.cache.setIndexIds(c.data),t.finish(),u.resolve(c)}function i(t){a.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"rejected\",c,t),angular.forEach(c.data,n),t.finish(),u.reject(t)}function s(t){a.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"notify\",c,t),u.notify(t)}var c=this,u=o.defer(),l=r.get(\"$jsonapi\"),d={action:\"all\",params:c.params};return e(this),angular.forEach(c.data,e),c.factory.synchronizer.synchronize(d).then(t,i,s)[\"finally\"](n.bind(c)),u.promise}return i.prototype.fetch=c,i.prototype.refresh=c,i.prototype.get=s,i}function e(t){t=void 0===t?this:t,t.loadingCount+=1,t.loading=!0}function n(t){t=void 0===t?this:t,t.loadingCount-=1,t.loading=t.loadingCount>0;\n\n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICollection\",t),t.$inject=[\"AngularJsonAPIModelSynchronizationError\",\"$rootScope\",\"$injector\",\"$q\"]}(),function(){\"use strict\";function t(){function t(t,a){function r(){return e}function o(){return n}function i(t,r){var o=new a(t,r);e[t.type]=o,n.push(t.type)}function s(t){return e[t]}function c(n){return void 0===e[n]&&t.error(\"Can\t add not existing object type: \"+n+\". Use initialize(Model, datas).\"),e[n].saved.form}function u(n,a){return void 0===e[n]&&t.error(\"Can\t get not existing object type: \"+n+\". Use initialize(Model, datas).\"),e[n].get(a)}function l(n,a){return void 0===e[n]&&t.error(\"Can\t remove not existing object type: \"+n+\". Use initialize(Model, datas).\"),e[n].remove(a)}function d(n){return void 0===e[n]&&t.error(\"Can\t get all of not existing object type: \"+n+\". Use initialize(Model, datas).\"),e[n].all()}function h(){angular.forEach(e,function(t){t.clearCache()})}function p(e){var n={data:[],included:[]};void 0===e&&t.error(\"Can't proccess results:\",e);var a={saved:!0,\"synchronized\":!0,stable:!0,pristine:!1,initialization:!1};return angular.forEach(e.included,function(t){n.included.push(s(t.type).cache.addOrUpdate(t,a))}),angular.isArray(e.data)?angular.forEach(e.data,function(t){n.data.push(s(t.type).cache.addOrUpdate(t,a))}):n.data.push(s(e.data.type).cache.addOrUpdate(e.data,a)),n}return{form:c,get:u,remove:l,all:d,addFactory:i,getFactory:s,clearCache:h,proccesResults:p,allFactories:r,factoriesNames:o}}var e={},n=[];this.$get=t,t.$inject=[\"$log\",\"AngularJsonAPIFactory\"]}angular.module(\"angular-jsonapi\").provider(\"$jsonapi\",t)}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$logProvider\",function(t){t.debugEnabled(!1)}]).run([\"validateJS\",\"$q\",function(t,e){t.Promise=e}])}();\n//# sourceMappingURL=angular-jsonapi.min.js.map","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelLinkerService,\n    validateJS,\n    $q\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return AngularJsonAPIModelForm;\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        id: parent.data.id,\n        type: parent.data.type,\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset(auto) {\n      var _this = this;\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = angular.copy(_this.parent.data.relationships[key]) || {};\n        if (angular.isArray(_this.relationships[key])) {\n          _this.relationships[key] = _this.parent.relationships[key].slice();\n        } else {\n          _this.relationships[key] = _this.parent.relationships[key];\n        }\n      });\n\n      if (auto === true && _this.parent.synchronized === true) {\n        return;\n      }\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        _this.data.attributes[key] = angular.copy(_this.parent.data.attributes[key]);\n      });\n\n      _this.parent.errors.validation.clear();\n    }\n\n    /**\n     * Validates form\n     * @return {promise} Promise rejected to errors object indexed by keys. If the\n     * key param i stated it only validates an attribute, else all attributes.\n     */\n    function validate(key) {\n      var _this = this;\n      var attributesWrapper;\n      var constraintsWrapper;\n      var deferred = $q.defer();\n\n      if (key === undefined) {\n        attributesWrapper = _this.data.attributes;\n        constraintsWrapper = _this.schema.attributes;\n      } else {\n        attributesWrapper = {};\n        constraintsWrapper = {};\n\n        attributesWrapper[key] = _this.data.attributes[key];\n        constraintsWrapper[key] = _this.schema.attributes[key];\n      }\n\n      validateJS.async(\n        attributesWrapper,\n        constraintsWrapper\n      ).then(resolve, reject);\n\n      function resolve() {\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        deferred.resolve();\n      }\n\n      function reject(errorsMap) {\n        _this.parent.error = true;\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        angular.forEach(errorsMap, function(errors, attribute) {\n          angular.forEach(errors, function(error) {\n            _this.parent.errors.validation.add(attribute, error, attribute);\n          });\n        });\n\n        deferred.reject(_this.parent.errors.validation);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target) {\n      var _this = this;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.link(_this, key, target, true));\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target) {\n      var _this = this;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.unlink(_this, key, target, true));\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelSynchronizationError,\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelErrorsManager,\n    AngularJsonAPIModelLinkerService,\n    AngularJsonAPIModelForm,\n    uuid4,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    AngularJsonAPIAbstractModel.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {object} config   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, config, updatedAt) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      /**\n       * Is not a new record\n       * @type {Boolean}\n       */\n      _this.saved = config.saved === undefined ? true : config.saved;\n\n      /**\n       * Is present on the server\n       * @type {Boolean}\n       */\n      _this.stable = config.stable === undefined ? true : config.stable;\n\n      /**\n       * Has been synchronized with the server\n       * @type {Boolean}\n       */\n      _this.synchronized = config.synchronized === undefined ? true : config.synchronized;\n\n      /**\n       * Has just been created by request and may not exist on the server\n       * @type {Boolean}\n       */\n      _this.pristine = config.pristine === undefined ? true : config.pristine;\n\n      _this.removed = false;\n      _this.loading = false;\n      _this.saving = false;\n      _this.updatedAt = _this.synchronized === true ? Date.now() : updatedAt;\n\n      _this.loadingCount = 0;\n      _this.savingCount = 0;\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(schema, name) {\n        _this.relationships[name] = undefined;\n      });\n\n      _this.errors = {\n        validation: new AngularJsonAPIModelErrorsManager(\n          'Validation',\n          'Errors of attributes validation',\n          AngularJsonAPIModelValidationError\n        ),\n        synchronization: new AngularJsonAPIModelErrorsManager(\n          'Synchronization',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSynchronizationError\n        )\n      };\n\n      _this.promises = {};\n\n      __setData(_this, data);\n\n      _this.form = new AngularJsonAPIModelForm(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: _this.saved === false ? 'add' : 'update',\n        object: _this\n      };\n\n      _this.form.validate().then(\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this)),\n        invalidate\n      );\n\n      __incrementSavingCounter(_this);\n\n      return deferred.promise;\n\n      function invalidate() {\n        __decrementSavingCounter(_this);\n        deferred.reject();\n      }\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:' + config.action, 'resolved', _this, response);\n        _this.update(_this.form.data);\n\n        if (_this.saved === false) {\n          _this.factory.cache.indexIds = _this.factory.cache.indexIds || [];\n          _this.factory.cache.indexIds.push(_this.data.id);\n        }\n\n        _this.synchronized = true;\n        _this.saved = true;\n        _this.stable = true;\n\n        response.finish();\n\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'rejected', _this, response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      if (_this.form !== undefined) {\n        _this.form.reset();\n      }\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh() {\n      var $jsonapi = $injector.get('$jsonapi');\n      var deferred = $q.defer();\n      var _this = this;\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: _this.schema.params.get\n      };\n\n      if (_this.saved === false) {\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t refresh new object'}]});\n      } else {\n        __incrementLoadingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(_this));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        response.finish();\n        _this.synchronized = true;\n        _this.stable = true;\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter.bind(object);\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'rejected', _this, response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      var config = {\n        action: 'remove',\n        object: _this\n      };\n\n      _this.factory.cache.remove(_this.data.id);\n\n      if (_this.saved === false) {\n        deferred.resolve();\n      } else {\n        __incrementSavingCounter.bind(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'resolved', _this, response);\n        _this.removed = true;\n        _this.unlinkAll();\n        _this.factory.cache.clearRemoved(_this.data.id);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'rejected', _this, response);\n        _this.factory.cache.revertRemove(_this.data.id);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlink all reflection relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      __incrementLoadingCounter(_this);\n\n      if (key === undefined) {\n        angular.forEach(_this.relationships, removeLink);\n      } else {\n        removeLink(_this.relationships[key], key);\n      }\n\n      __decrementLoadingCounter(_this);\n\n      return deferred.promise;\n\n      function removeLink(linksObj, key) {\n        var schema = _this.schema.relationships[key];\n        var reflectionKey = schema.reflection;\n\n        if (angular.isArray(linksObj)) {\n          angular.forEach(linksObj, removeReflectionLink.bind(undefined, reflectionKey));\n        } else if (angular.isObject(linksObj)) {\n          removeReflectionLink(reflectionKey, linksObj);\n        }\n\n        if (schema.type === 'hasOne') {\n          _this.relationships[key] = null;\n        } else if (schema.type === 'hasMany') {\n          _this.relationships[key] = [];\n        }\n      }\n\n      function removeReflectionLink(reflectionKey, target) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n        var config = {\n          action: 'unlinkReflection',\n          object: target,\n          target: _this,\n          key: reflectionKey\n        };\n\n        __incrementLoadingCounter(target);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        target.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(target));\n\n        function resolve(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'resolve', _this, response);\n\n          response.finish();\n          deferred.resolve(_this);\n        }\n\n        function reject(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'rejected', _this, response);\n\n          response.finish();\n          deferred.reject(response);\n        }\n\n        function notify(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var config = {\n        action: 'link',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        $log.error('Can\\'t link undefined');\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link undefined'}]});\n      } else if (_this.saved === false) {\n        $log.error('Can\\'t link new object');\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link new object'}]});\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        response.finish();\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'linkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:linkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked if undefined unlinks all\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var config = {\n        action: 'unlink',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t unlink undefined'}]});\n      } else if (_this.saved === false) {\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t unlink new object'}]});\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        response.finish();\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'unlinkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:unlinkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData, auto, initialization) {\n      var _this = this;\n\n      __incrementLoadingCounter(_this);\n\n      __setData(_this, validatedData);\n      _this.reset(auto);\n      _this.synchronized = initialization === true ? false : true;\n      _this.stable = initialization === true ? false : true;\n      _this.updatedAt = Date.now();\n\n      __decrementLoadingCounter(_this);\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData) {\n\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.factory.schema.type !== validatedData.type) {\n        $log.error('Different type then factory', object.factory.schema.type, validatedData);\n        return false;\n      }\n\n      if (!uuid4.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        var relationshipData = validatedData.relationships[key];\n\n        if (relationshipData === undefined) {\n          object.data.relationships[key] = {data: undefined};\n          return;\n        }\n\n        object.data.relationships[key] = object.data.relationships[key] || {};\n        object.data.relationships[key].links = relationshipData.links;\n\n        if (schema.type === 'hasOne') {\n          linkOne(object, key, relationshipData.data);\n        } else if (schema.type === 'hasMany') {\n          if (angular.isArray(relationshipData.data)) {\n            if (relationshipData.data.length === 0) {\n              object.data.relationships[key].data = [];\n              object.unlinkAll(key);\n            } else {\n              angular.forEach(\n                object.relationships[key],\n                unlinkOne.bind(undefined, object, key, relationshipData.data)\n              );\n              angular.forEach(\n                relationshipData.data,\n                linkOne.bind(undefined, object, key)\n              );\n            }\n          }\n        }\n      }\n\n      function linkOne(object, key, data) {\n        var factory;\n\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        factory = $jsonapi.getFactory(data.type);\n\n        if (factory === undefined) {\n          $log.error('Factory not found', data.type, data);\n          return;\n        }\n\n        var target = factory.cache.get(data.id);\n\n        AngularJsonAPIModelLinkerService.link(object, key, target);\n      }\n\n      function unlinkOne(object, key, relationshipData, target) {\n        if (relationshipData.indexOf(target.data.id) > -1) {\n          return;\n        }\n\n        AngularJsonAPIModelLinkerService.unlink(object, key, target);\n      }\n    }\n  }\n\n  /////////////\n  // Private //\n  /////////////\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n\n  function __incrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount += 1;\n    object.saving = true;\n  }\n\n  function __decrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount -= 1;\n    object.saving = object.savingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICache', AngularJsonAPICacheWrapper);\n\n  function AngularJsonAPICacheWrapper(\n    uuid4,\n    $log\n  ) {\n\n    AngularJsonAPICache.prototype.get = get;\n    AngularJsonAPICache.prototype.index = index;\n    AngularJsonAPICache.prototype.setIndexIds = setIndexIds;\n    AngularJsonAPICache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPICache.prototype.fromJson = fromJson;\n    AngularJsonAPICache.prototype.toJson = toJson;\n    AngularJsonAPICache.prototype.clear = clear;\n\n    AngularJsonAPICache.prototype.remove = remove;\n    AngularJsonAPICache.prototype.revertRemove = revertRemove;\n    AngularJsonAPICache.prototype.clearRemoved = clearRemoved;\n\n    return AngularJsonAPICache;\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPICache(factory) {\n      var _this = this;\n\n      _this.factory = factory;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n\n      _this.indexIds = undefined;\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData, config) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.factory.Model(validatedData, config);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData, config.saved, config.initialization);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      var config = {\n        saved: true,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: true\n      };\n\n      if (angular.isObject(collection) && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n        _this.indexIds = collection.indexIds;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, config, objectData.updatedAt);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: [],\n        updatedAt: _this.updatedAt,\n        indexIds: _this.indexIds\n      };\n\n      angular.forEach(_this.data, function(object) {\n        if (object.error === false) {\n          json.data.push(object.toJson());\n        }\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.indexIds = undefined;\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      var data = {\n        id: id,\n        type: _this.factory.Model.prototype.schema.type\n      };\n\n      var config = {\n        saved: true,\n        synchronized: false,\n        stable: false,\n        pristine: true\n      };\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.factory.Model(data, config);\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization, used for index requests\n     * @param  {objec} params\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function index(params) {\n      var _this = this;\n\n      $log.debug('Unused params', params);\n\n      if (_this.indexIds === undefined) {\n        return _this.indexIds;\n      }\n\n      return _this.indexIds.map(_this.get.bind(_this));\n    }\n\n    /**\n     * Cache ids of objects returned by index request\n     * @param {ids array or AngularJsonAPIModel array} array Objects or ids to be cached\n     */\n    function setIndexIds(array) {\n      var _this = this;\n\n      _this.indexIds = [];\n\n      angular.forEach(array, function(element) {\n        if (angular.isString(element) && uuid4.validate(element)) {\n          _this.indexIds.push(element);\n        } else if (angular.isObject(element) && uuid4.validate(element.data.id)) {\n          _this.indexIds.push(element.data.id);\n        }\n      });\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelValidationError', AngularJsonAPIModelValidationErrorWrapper);\n\n  function AngularJsonAPIModelValidationErrorWrapper() {\n    ValidationError.prototype = Object.create(Error.prototype);\n    ValidationError.prototype.constructor = ValidationError;\n    ValidationError.prototype.name = 'ValidationError';\n\n    return ValidationError;\n\n    function ValidationError(message, attribute) {\n      var _this = this;\n      Error.captureStackTrace(_this, _this.constructor);\n\n      _this.message = message;\n      _this.context = {\n        attribute: attribute\n      };\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelSynchronizationError', AngularJsonAPIModelSynchronizationErrorWrapper);\n\n  function AngularJsonAPIModelSynchronizationErrorWrapper() {\n    SynchronizationError.prototype = Object.create(Error.prototype);\n    SynchronizationError.prototype.constructor = SynchronizationError;\n    SynchronizationError.prototype.name = 'SynchronizationError';\n\n    return SynchronizationError;\n\n    function SynchronizationError(message, synchronization, action) {\n      var _this = this;\n      Error.captureStackTrace(_this, _this.constructor);\n\n      _this.message = message;\n      _this.context = {\n        synchronization: synchronization,\n        action: action\n      };\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelErrorsManager', AngularJsonAPIModelErrorsManagerWrapper);\n\n  function AngularJsonAPIModelErrorsManagerWrapper() {\n    ErrorsManager.prototype.constructor = ErrorsManager;\n    ErrorsManager.prototype.clear = clear;\n    ErrorsManager.prototype.add = add;\n    ErrorsManager.prototype.hasErrors = hasErrors;\n\n    return ErrorsManager;\n\n    function ErrorsManager(name, description, ErrorConstructor, defaultFilter) {\n      var _this = this;\n      _this.name = name;\n      _this.description = description;\n\n      _this.ErrorConstructor = ErrorConstructor;\n      _this.errors = {};\n      _this.defaultFilter = defaultFilter || function() { return true; };\n    }\n\n    function clear(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        angular.forEach(_this.errors, function(obj, key) {\n          _this.errors[key] = [];\n        });\n      } else {\n        _this.errors[key] = [];\n      }\n    }\n\n    function add(key) {\n      var _this = this;\n\n      _this.errors[key] = _this.errors[key] || [];\n      _this.errors[key].push(new (_this.ErrorConstructor.bind.apply(_this.ErrorConstructor, arguments))());\n    }\n\n    function hasErrors(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        var answer = false;\n\n        angular.forEach(_this.errors, function(error) {\n          answer = answer || error.length > 0;\n        });\n\n        return answer;\n      } else {\n        return _this.errors[key] !== undefined && _this.errors[key].length > 0;\n      }\n    }\n  }\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises, resolvedCallback, rejectedCallback) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.resolve(promise)\n            .then(function(value) {\n              if (angular.isFunction(resolvedCallback)) {\n                resolvedCallback(value);\n              }\n\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              if (angular.isFunction(rejectedCallback)) {\n                rejectedCallback(reason);\n              }\n\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerSimple;\n\n    function AngularJsonAPISynchronizerSimple(synchronizations) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, synchronizations);\n\n      angular.forEach(synchronizations, function(synchronization) {\n        synchronization.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push(result.reason);\n          }\n        });\n\n        if (errors.length > 0) {\n          deferred.reject({data: data, finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(synchronizations) {\n      var _this = this;\n\n      _this.synchronizations = synchronizations;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.factory.Model.prototype.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationRest', AngularJsonAPISynchronizationRestWrapper);\n\n  function AngularJsonAPISynchronizationRestWrapper(\n    AngularJsonAPISynchronizationPrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISynchronizationRest.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationRest.prototype.constructor = AngularJsonAPISynchronizationRest;\n\n    return AngularJsonAPISynchronizationRest;\n\n    function AngularJsonAPISynchronizationRest(url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISynchronizationPrototype.call(_this);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target !== undefined && config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t unlink object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          if (config.target === undefined) {\n            $http({\n              method: 'PUT',\n              headers: headers,\n              data: {data: []},\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key\n            }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n          } else {\n            $http({\n              method: 'DELETE',\n              headers: headers,\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key + '/' + config.target.data.id\n            }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n          }\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target === undefined || config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'PUT',\n            headers: headers,\n            data: {data: AngularJsonAPIModelLinkerService.toLinkData(config.target)},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          $http({\n            method: 'POST',\n            headers: headers,\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        return $http({\n          method: 'PUT',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url + '/',\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function resolveHttp(response) {\n        return $q.resolve(response.data);\n      }\n\n      function rejectHttp(response) {\n        var deferred = $q.defer();\n\n        if (response.status === 0) {\n          $http({\n            method: 'GET',\n            url: 'https://status.cloud.google.com/incidents.schema.json'\n          }).then(rejectServerOffline, rejectNoConnection);\n        } else {\n          deferred.reject({status: response.status, statusText: response.statusText});\n        }\n\n        return deferred.promise;\n\n        function rejectServerOffline() {\n          deferred.reject({status: response.status, statusText: 'Server is offline'});\n        }\n\n        function rejectNoConnection() {\n          deferred.reject({status: response.status, statusText: 'No internet connection'});\n        }\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizationPrototype', AngularJsonAPISynchronizationPrototypeWrapper);\n\n  function AngularJsonAPISynchronizationPrototypeWrapper() {\n    AngularJsonAPISynchronizationPrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.after = afterSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.begin = begin;\n    AngularJsonAPISynchronizationPrototype.prototype.finish = finish;\n    AngularJsonAPISynchronizationPrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISynchronizationPrototype;\n\n    function AngularJsonAPISynchronizationPrototype() {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clearCache',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh',\n        'include'\n      ];\n\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationLocal', AngularJsonAPISynchronizationLocalWrapper);\n\n  function AngularJsonAPISynchronizationLocalWrapper(\n    AngularJsonAPISynchronizationPrototype,\n    $window,\n    $q\n  ) {\n\n    AngularJsonAPISynchronizationLocal.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationLocal.prototype.constructor = AngularJsonAPISynchronizationLocal;\n\n    return AngularJsonAPISynchronizationLocal;\n\n    function AngularJsonAPISynchronizationLocal(prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISynchronizationPrototype.call(_this);\n\n      _this.synchronization('init', init);\n\n      _this.begin('clearCache', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('refresh', updateStorage);\n      _this.begin('unlink', updateStorage);\n      _this.begin('unlinkReflection', updateStorage);\n      _this.begin('link', updateStorage);\n      _this.begin('linkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.begin('get', updateStorage);\n      _this.begin('all', updateStorage);\n      _this.begin('include', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clearCache', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('refresh', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n      _this.finish('include', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.factory.schema.type;\n        return $q.resolve($window.localStorage.getItem(prefix + '.' + type));\n      }\n\n      function clear() {\n        var type = _this.synchronizer.factory.schema.type;\n        $window.localStorage.removeItem(prefix + '.' + type);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.factory.schema.type;\n        var cache = _this.synchronizer.factory.cache;\n        $window.localStorage.setItem(prefix + '.' + type, cache.toJson());\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper($log, pluralize, AngularJsonAPISchemaLink) {\n\n    return AngularJsonAPISchema;\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = new AngularJsonAPISchemaLink(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get.join(',');\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all.join(',');\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchemaLink', AngularJsonAPILinkSchrapperLink);\n\n  function AngularJsonAPILinkSchrapperLink($log, pluralize) {\n\n    return AngularJsonAPISchemaLink;\n\n    function AngularJsonAPISchemaLink(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        if (linkSchema.type !== 'hasMany' && linkSchema.type !== 'hasOne') {\n          $log.error('Schema of link with wrong type: ', linkSchema.type, 'available: hasOne, hasMany');\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n\n        if (linkSchema.reflection === undefined) {\n          _this.reflection = _this.type === 'hasMany' ? pluralize.singular(type) : type;\n        } else {\n          _this.reflection = linkSchema.reflection;\n        }\n\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(AngularJsonAPIAbstractModel, AngularJsonAPISchema, $log) {\n\n    return {\n      model: modelFactory\n    };\n\n    function modelFactory(schemaObj, factory) {\n      var Model = function(data, updatedAt, saved) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, updatedAt, saved);\n\n        _this.form.parent = _this;\n      };\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.factory = factory;\n      Model.prototype.synchronize = factory.synchronizer.synchronize.bind(factory.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return Model;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIFactory', AngularJsonAPIFactoryWrapper);\n\n  function AngularJsonAPIFactoryWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPICache,\n    AngularJsonAPICollection,\n    uuid4,\n    $rootScope,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIFactory.prototype.get = get;\n    AngularJsonAPIFactory.prototype.all = all;\n    AngularJsonAPIFactory.prototype.remove = remove;\n    AngularJsonAPIFactory.prototype.initialize = initialize;\n\n    AngularJsonAPIFactory.prototype.clearCache = clearCache;\n\n    return AngularJsonAPIFactory;\n\n    /**\n     * AngularJsonAPIFactory constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the factory\n     */\n    function AngularJsonAPIFactory(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = new AngularJsonAPISchema(schema);\n      _this.cache = new AngularJsonAPICache(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.factory = _this;\n\n      _this.Model = AngularJsonAPIModel.model(\n        _this.schema,\n        _this\n      );\n\n      _this.initialized = false;\n      _this.type = _this.schema.type;\n\n      synchronizer.factory = _this;\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'resolved', response);\n        _this.cache.fromJson(response.data);\n        _this.initialized = true;\n\n        response.finish();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'rejected', response);\n        response.finish();\n        _this.initialized = true;\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'notify', response);\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id) {\n      var _this = this;\n\n      if (!uuid4.validate(id)) {\n        return $q.reject({errors: [{status: 0, statusText: 'Invalid id not uuid4'}]});\n      }\n\n      var object = _this.cache.get(id);\n\n      object.refresh();\n\n      return object;\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = params || {};\n\n      var collection = new AngularJsonAPICollection(\n        _this,\n        angular.extend(params, _this.schema.params.all)\n      );\n\n      collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n\n      return object.remove();\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize(key, target) {\n      var _this = this;\n      var relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(relationshipSchema, relationshipName) {\n        if (relationshipSchema.type === 'hasOne') {\n          relationships[relationshipName] = {\n            data: null\n          };\n        } else if (relationshipSchema.type === 'hasMany') {\n          relationships[relationshipName] = {\n            data: []\n          };\n        }\n      });\n\n      if (key !== undefined && target !== undefined) {\n        var schema = _this.schema[key];\n\n        if (schema.type === 'hasOne') {\n          relationships[key] = {\n            data: target.data.id\n          };\n        } else if (schema.type === 'hasMany') {\n          $log.warn('Initialize with relationship disallowed for hasMany relationships');\n        }\n      }\n\n      var data = {\n        type: _this.type,\n        id: uuid4.generate(),\n        attributes: {},\n        relationships: relationships\n      };\n\n      var config = {\n        saved: false,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: false\n      };\n\n      var object = _this.cache.addOrUpdate(data, config);\n\n      $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:initialize', 'resolved', object);\n\n      return object;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clearCache() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: 'clearCache'\n      };\n\n      _this.cache.clear();\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clearCache', 'notify', response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    AngularJsonAPIModelSynchronizationError,\n    AngularJsonAPIModelErrorsManager,\n    $rootScope,\n    $injector,\n    $q\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n\n    return AngularJsonAPICollection;\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIFactory} factory Factory associated with the collection\n     * @param {object} params  Params associated with this factory (such as filters)\n     */\n    function AngularJsonAPICollection(factory, params) {\n      var _this = this;\n\n      _this.factory = factory;\n      _this.type = factory.schema.type;\n      _this.params = params;\n\n      _this.errors = {\n        synchronization: new AngularJsonAPIModelErrorsManager(\n          'Synchronization',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSynchronizationError\n        )\n      };\n\n      _this.data = _this.factory.cache.index(_this.params);\n\n      _this.loading = false;\n      _this.loadingCount = 0;\n      _this.synchronized = false;\n      _this.pristine = _this.data === undefined;\n\n      $rootScope.$on('angularJsonAPI:' + _this.type + ':object:remove', remove);\n      $rootScope.$on('angularJsonAPI:' + _this.type + ':factory:clearCache', clear);\n      $rootScope.$on('angularJsonAPI:' + _this.type + ':object:add', add);\n\n      function remove(event, status, object) {\n        var index;\n\n        if (status === 'resolved' && _this.data !== undefined) {\n          index = _this.data.indexOf(object);\n          if (index > -1) {\n            _this.data.splice(index, 1);\n            _this.factory.cache.setIndexIds(_this.data);\n          }\n        }\n      }\n\n      function clear() {\n        _this.data = undefined;\n        _this.pristine = true;\n      }\n\n      function add(event, status, object) {\n        if (status === 'resolved') {\n          _this.data = _this.data || [];\n          _this.data.push(object);\n        }\n      }\n    }\n\n    /**\n     * Shortcut to this.factory.get\n     * @param  {uuid4} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id) {\n      var _this = this;\n\n      return _this.factory.get(id);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var deferred = $q.defer();\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params\n      };\n\n      __incrementLoadingCounter(this);\n\n      angular.forEach(_this.data, __incrementLoadingCounter);\n\n      _this.factory.synchronizer.synchronize(config)\n        .then(resolve, reject, notify)\n        .finally(__decrementLoadingCounter.bind(_this));\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n\n        _this.data = results.data;\n\n        _this.updatedAt = Date.now();\n        _this.synchronized = true;\n\n        _this.factory.cache.setIndexIds(_this.data);\n        response.finish();\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter.bind(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response);\n        }\n\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'rejected', _this, response);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider() {\n    var memory = {};\n    var names = [];\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPIFactory) {\n      return {\n        form: form,\n        get: get,\n        remove: remove,\n        all: all,\n        addFactory: addFactory,\n        getFactory: getFactory,\n        clearCache: clearCache,\n        proccesResults: proccesResults,\n\n        allFactories: allFactories,\n        factoriesNames: factoriesNames\n      };\n\n      function allFactories() {\n        return memory;\n      }\n\n      function factoriesNames() {\n        return names;\n      }\n\n      function addFactory(schema, synchronization) {\n        var factory = new AngularJsonAPIFactory(schema, synchronization);\n\n        memory[schema.type] = factory;\n        names.push(schema.type);\n      }\n\n      function getFactory(type) {\n        return memory[type];\n      }\n\n      function form(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t add not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].saved.form;\n      }\n\n      function get(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].get(id);\n      }\n\n      function remove(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t remove not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].remove(id);\n      }\n\n      function all(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get all of not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].all();\n      }\n\n      function clearCache() {\n        angular.forEach(memory, function(factory) {\n          factory.clearCache();\n        });\n      }\n\n      function proccesResults(results) {\n        var objects = {\n          data: [],\n          included: []\n        };\n\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n        }\n\n        var config = {\n          saved: true,\n          synchronized: true,\n          stable: true,\n          pristine: false,\n          initialization: false\n        };\n\n        angular.forEach(results.included, function(data) {\n          objects.included.push(getFactory(data.type).cache.addOrUpdate(data, config));\n        });\n\n        if (angular.isArray(results.data)) {\n          angular.forEach(results.data, function(data) {\n            objects.data.push(getFactory(data.type).cache.addOrUpdate(data, config));\n          });\n        } else {\n          objects.data.push(getFactory(results.data.type).cache.addOrUpdate(results.data, config));\n        }\n\n        return objects;\n      }\n    }\n  }\n\n})();\n\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(function($logProvider) {\n    $logProvider.debugEnabled(false);\n  })\n  .run(function(validateJS, $q) {\n    validateJS.Promise = $q;\n  });\n})();\n"],"sourceRoot":"/source/"}