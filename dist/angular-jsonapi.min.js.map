{"version":3,"sources":["/source/jsonapi.module.js","/source/model/model-linker/model-linker.js","angular-jsonapi.min.js","/source/model/model-form/model-form.js","/source/model/abstract-model/abstract-model.js","/source/errors/synchronization-error/synchronization-error.js","/source/factory/factory-cache/factory-cache.factory.js","/source/errors/validation-error/validation-error.js","/source/errors/errors-manager/errors-manager.js","/source/utils/lazy-property.js","/source/utils/kebab-case.js","/source/utils/all-settled.js","/source/synchronizers/synchronizer-simple.js","/source/synchronizers/synchronizer-prototype.js","/source/synchronizations/synchronization-rest.js","/source/synchronizations/synchronization-prototype.js","/source/synchronizations/synchronization-local.js","/source/schema/schema.js","/source/schema/schema-link.js","/source/model/model.js","/source/factory/factory.js","/source/collection/collection.js","/source/jsonapi.provider.js","/source/jsonapi.config.js"],"names":["angular","module","constant","pluralize","validate","AngularJsonAPIModelLinkerService","$log","toLinkData","object","type","data","id","link","key","target","oneWay","schema","undefined","error","relationships","polymorphic","model","__addHasMany","__processAddHasMany","__addHasOne","__processAddHasOne","unlink","__removeHasMany","__processRemove","reflectionSchema","reflectionKey","reflection","__swapResults","__wrapResults","oldReflectionSchema","oldReflection","result","__removeHasOne","push","reset","debug","linkData","isArray","indexOf","index","splice","value","newValue","array","forEach","item","i","_this","this","service","$inject","AngularJsonAPIModelFormWrapper","AngularJsonAPIModelValidationError","validateJS","$q","AngularJsonAPIModelForm","parent","attributes","toJson","copy","save","auto","slice","validator","errors","validation","clear","resolve","deferred","reject","errorsMap","attribute","add","attributesWrapper","constraintsWrapper","defer","async","then","promise","prototype","factory","AngularJsonAPIAbstractModelWrapper","AngularJsonAPIModelSynchronizationError","AngularJsonAPIModelErrorsManager","uuid4","$rootScope","$injector","AngularJsonAPIAbstractModel","config","updatedAt","saved","stable","pristine","removed","loading","saving","Date","now","loadingCount","savingCount","name","synchronization","promises","__setData","form","synchronize","notify","response","$emit","action","update","cache","indexIds","finish","concat","__decrementSavingCounter","bind","__incrementSavingCounter","refresh","synchronizeIncluded","__incrementLoadingCounter","__decrementLoadingCounter","resolveIncluded","includedResponse","operation","success","results","included","$jsonapi","proccesResults","allSettled","map","get","params","remove","unlinkAll","clearRemoved","revertRemove","removeLink","linksObj","removeReflectionLink","isObject","resolveReflection","targets","validatedData","initialization","hasErrors","answer","setAttributes","validators","setRelationships","relationshipData","links","linkOne","length","unlinkOne","getFactory","AngularJsonAPIModelSynchronizationErrorWrapper","SynchronizationError","message","code","Error","captureStackTrace","constructor","context","Object","create","AngularJsonAPICacheWrapper","AngularJsonAPICache","size","addOrUpdate","Model","fromJson","json","collection","synchronized","objectData","setIndexIds","element","isString","AngularJsonAPIModelValidationErrorWrapper","ValidationError","AngularJsonAPIModelErrorsManagerWrapper","ErrorsManager","description","ErrorConstructor","defaultFilter","obj","propertyName","callback","done","defineProperty","call","enumerable","configurable","str","replace","toLowerCase","$provide","decorator","$delegate","resolvedCallback","rejectedCallback","wrap","isFunction","reason","wrapped","hasOwnProperty","all","AngularJsonAPISynchronizerSimpleWrapper","AngularJsonAPISynchronizerPrototype","AngularJsonAPISynchronizerSimple","synchronizations","state","synchronizer","step","resolved","afterHooks","hook","finishHooks","rejected","noop","beginHooks","beforeHooks","synchronizationHooks","AngularJsonAPISynchronizerPrototypeWrapper","AngularJsonAPISynchronizationRestWrapper","AngularJsonAPISynchronizationPrototype","toKebabCase","$http","AngularJsonAPISynchronizationRest","url","method","headers","resolveHttp","rejectHttp","status","statusText","rejectServerOffline","console","log","rejectNoConnection","Accept","Content-Type","apply","arguments","AngularJsonAPISynchronizationPrototypeWrapper","allHooks","options","hookName","begin","beforeSynchro","afterSynchro","before","after","AngularJsonAPISynchronizationLocalWrapper","$window","AngularJsonAPISynchronizationLocal","prefix","init","localStorage","getItem","removeItem","updateStorage","setItem","__updateStorage","AngularJsonAPISchemaWrapper","AngularJsonAPISchemaLink","AngularJsonAPISchema","include","linkSchema","linkName","linkSchemaObj","extend","join","AngularJsonAPILinkSchrapperLink","plural","singular","AngularJsonAPIModel","modelFactory","schemaObj","functions","metaFunction","metaFunctionName","AngularJsonAPIFactoryWrapper","AngularJsonAPICollection","AngularJsonAPIFactory","initialized","fetch","initialize","relationshipSchema","relationshipName","warn","generate","clearCache","AngularJsonAPICollectionWrapper","event","$on","jsonapiProvider","jsonapiFactory","allFactories","memory","factoriesNames","names","addFactory","objects","$get","provider","$logProvider","debugEnabled","run","Promise"],"mappings":"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","file":"angular-jsonapi.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false, validate: false */\n  .constant('pluralize', pluralize)\n  .constant('validateJS', validate);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, oneWay) {\n      var schema;\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema.type === 'hasMany') {\n        if (oneWay === true) {\n          __addHasMany(object, key, target, false);\n          return [];\n        } else {\n          return __processAddHasMany(object, key, target);\n        }\n      } else if (schema.type === 'hasOne') {\n        if (oneWay === true) {\n          __addHasOne(object, key, target, false);\n          return [];\n        } else {\n          return __processAddHasOne(object, key, target);\n        }\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, oneWay) {\n      var schema;\n\n      if (object === undefined) {\n        $log.error('Can\\'t remove link from non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (oneWay === true) {\n        __removeHasMany(object, key, target, false);\n        return [];\n      } else {\n        return __processRemove(object, key, target);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __processAddHasMany(object, key, target) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var reflectionSchema;\n\n      if (reflectionKey === false) {\n        __addHasMany(object, key, target);\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        return __swapResults(\n          __wrapResults(object, key, target),\n          __wrapResults(target, reflectionKey, object),\n          __processAddHasOne(target, reflectionKey, object)\n        );\n      } else if (reflectionSchema.type === 'hasMany') {\n        __addHasMany(object, key, target);\n        __addHasMany(target, reflectionKey, object);\n        return [__wrapResults(target, reflectionKey, object)];\n      }\n    }\n\n    function __processAddHasOne(object, key, target) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var oldReflection = object.relationships[key];\n      var reflectionSchema;\n      var oldReflectionSchema;\n      var result = [];\n\n      __addHasOne(object, key, target);\n\n      if (oldReflection !== undefined && oldReflection !== null) {\n        oldReflectionSchema = oldReflection.schema.relationships[reflectionKey];\n\n        if (oldReflectionSchema.type === 'hasOne') {\n          __removeHasOne(oldReflection, reflectionKey, object);\n        } else if (oldReflectionSchema.type === 'hasMany') {\n          __removeHasMany(oldReflection, reflectionKey, object);\n        }\n\n        result.push(oldReflection, reflectionKey, object);\n      }\n\n      if (target !== undefined && target !== null && reflectionKey !== false) {\n        reflectionSchema = target.schema.relationships[reflectionKey];\n\n        if (reflectionSchema.type === 'hasOne') {\n          __addHasOne(target, reflectionKey, object);\n        } else if (reflectionSchema.type === 'hasMany') {\n          __addHasMany(target, reflectionKey, object);\n        }\n\n        result.push(target, reflectionKey, object);\n      }\n\n      return result;\n    }\n\n    function __processRemove(object, key, target) {\n      var schema = object.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema;\n\n      if (schema.type === 'hasMany') {\n        __removeHasMany(object, key, target);\n      } else if (schema.type === 'hasOne') {\n        __removeHasOne(object, key, target);\n      }\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        __removeHasOne(target, reflectionKey, object);\n      } else if (reflectionSchema.type === 'hasMany') {\n        __removeHasMany(target, reflectionKey, object);\n      }\n\n      return [__wrapResults(target, reflectionKey, object)];\n    }\n\n    function __addHasOne(object, key, target, reset) {\n      $log.debug('addHasOne', object, key, target);\n\n      object.relationships[key] = target;\n      object.data.relationships[key].data = toLinkData(target);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, reset) {\n      var linkData = toLinkData(target);\n      $log.debug('addHasMany', object, key, target);\n\n      if (angular.isArray(object.relationships[key]) && object.relationships[key].indexOf(target) > -1) {\n        return false;\n      }\n\n      object.relationships[key] = object.relationships[key] || [];\n      object.data.relationships[key].data = object.data.relationships[key].data || [];\n\n      object.relationships[key].push(target);\n      object.data.relationships[key].data.push(linkData);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, reset) {\n      $log.debug('removeHasOne', object, key, target);\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        return false;\n      }\n\n      object.relationships[key] = null;\n      object.data.relationships[key].data = undefined;\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, reset) {\n      $log.debug('removeHasMany', object, key, target);\n\n      if (object.relationships[key] === undefined) {\n        return;\n      }\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n        if (reset !== false) {\n          object.reset(true);\n        }\n\n        return true;\n      }\n\n      var index = object.relationships[key].indexOf(target);\n\n      if (index === -1) {\n        return false;\n      }\n\n      object.relationships[key].splice(index, 1);\n      object.data.relationships[key].data.splice(index, 1);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __wrapResults(object, key, target) {\n      return {\n        object: object,\n        key: key,\n        target: target\n      };\n    }\n\n    function __swapResults(value, newValue, array) {\n      var index = -1;\n      angular.forEach(array, function(item, i) {\n        if (item.object === value.object && item.key === value.key && item.target === value.target) {\n          index = i;\n        }\n      });\n\n      if (index > -1) {\n        array[index] = newValue;\n      } else {\n        array.push(newValue);\n      }\n\n      return array;\n    }\n  }\n})();\n","!function(){\"use strict\";angular.module(\"angular-jsonapi\",[\"uuid4\"]).constant(\"pluralize\",pluralize).constant(\"validateJS\",validate)}(),function(){\"use strict\";function n(n){function t(n){return null===n?null:{type:n.data.type,id:n.data.id}}function e(t,e,r,i){var l;return void 0===t?(n.error(\"Can't add link to non existing object\",t,e,r),n.error(\"Object:\",t.data.type,t),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",e),[]):(l=t.schema.relationships[e],void 0===r?(n.error(\"Can't link non existing object\",t,e,r,l),n.error(\"Object:\",t.data.type,t),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",e),n.error(\"Schema:\",l),[]):void 0===l?(n.error(\"Can't add link not present in schema:\",t,e,r,l),n.error(\"Object:\",t.data.type,t),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",e),n.error(\"Schema:\",l),[]):null!==r&&l.polymorphic===!1&&l.model!==r.data.type?(n.error(\"This relation is not polymorphic, expected: \"+l.model+\" instead of \"+r.data.type),n.error(\"Object:\",t.data.type,t),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",e),n.error(\"Schema:\",l),[]):\"hasMany\"===l.type?i===!0?(c(t,e,r,!1),[]):a(t,e,r):\"hasOne\"===l.type?i===!0?(s(t,e,r,!1),[]):o(t,e,r):void 0)}function r(t,e,r,a){var o;return void 0===t?(n.error(\"Can't remove link from non existing object\",t,e,r),n.error(\"Object:\",t.data.type,t),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",e),[]):(o=t.schema.relationships[e],void 0===o?(n.error(\"Can't remove link not present in schema:\",t,e,r,o),n.error(\"Object:\",t.data.type,t),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",e),n.error(\"Schema:\",o),[]):a===!0?(u(t,e,r,!1),[]):i(t,e,r))}function a(n,t,e){var r,a=n.schema.relationships[t].reflection;return a===!1?(c(n,t,e),[]):(r=e.schema.relationships[a],\"hasOne\"===r.type?h(d(n,t,e),d(e,a,n),o(e,a,n)):\"hasMany\"===r.type?(c(n,t,e),c(e,a,n),[d(e,a,n)]):void 0)}function o(n,t,e){var r,a,o=n.schema.relationships[t].reflection,i=n.relationships[t],d=[];return s(n,t,e),void 0!==i&&null!==i&&(a=i.schema.relationships[o],\"hasOne\"===a.type?l(i,o,n):\"hasMany\"===a.type&&u(i,o,n),d.push(i,o,n)),void 0!==e&&null!==e&&o!==!1&&(r=e.schema.relationships[o],\"hasOne\"===r.type?s(e,o,n):\"hasMany\"===r.type&&c(e,o,n),d.push(e,o,n)),d}function i(n,t,e){var r,a=n.schema.relationships[t],o=a.reflection;return\"hasMany\"===a.type?u(n,t,e):\"hasOne\"===a.type&&l(n,t,e),o===!1?[]:(r=e.schema.relationships[o],\"hasOne\"===r.type?l(e,o,n):\"hasMany\"===r.type&&u(e,o,n),[d(e,o,n)])}function s(e,r,a,o){return n.debug(\"addHasOne\",e,r,a),e.relationships[r]=a,e.data.relationships[r].data=t(a),o!==!1&&e.reset(!0),!0}function c(e,r,a,o){var i=t(a);return n.debug(\"addHasMany\",e,r,a),angular.isArray(e.relationships[r])&&e.relationships[r].indexOf(a)>-1?!1:(e.relationships[r]=e.relationships[r]||[],e.data.relationships[r].data=e.data.relationships[r].data||[],e.relationships[r].push(a),e.data.relationships[r].data.push(i),o!==!1&&e.reset(!0),!0)}function l(t,e,r,a){return n.debug(\"removeHasOne\",t,e,r),void 0!==r&&t.relationships[e]!==r?!1:(t.relationships[e]=null,t.data.relationships[e].data=void 0,a!==!1&&t.reset(!0),!0)}function u(t,e,r,a){if(n.debug(\"removeHasMany\",t,e,r),void 0!==t.relationships[e]){if(void 0===r)return t.relationships[e]=[],t.data.relationships[e].data=[],a!==!1&&t.reset(!0),!0;var o=t.relationships[e].indexOf(r);return-1===o?!1:(t.relationships[e].splice(o,1),t.data.relationships[e].data.splice(o,1),a!==!1&&t.reset(!0),!0)}}function d(n,t,e){return{object:n,key:t,target:e}}function h(n,t,e){var r=-1;return angular.forEach(e,function(t,e){t.object===n.object&&t.key===n.key&&t.target===n.target&&(r=e)}),r>-1?e[r]=t:e.push(t),e}var p=this;return p.toLinkData=t,p.link=e,p.unlink=r,this}angular.module(\"angular-jsonapi\").service(\"AngularJsonAPIModelLinkerService\",n),n.$inject=[\"$log\"]}(),function(){\"use strict\";function n(n,t,e,r){function a(n){var t=this;t.data={id:n.data.id,type:n.data.type,attributes:{},relationships:{}},t.relationships={},t.parent=n,t.schema=n.schema,t.reset()}function o(){var n=this,t=angular.copy(n.data),e={};return angular.forEach(t.relationships,function(n,t){void 0!==n.data&&(e[t]=n)}),t.relationships=e,{data:t}}function i(){var n=this;return n.parent.save()}function s(n){var t=this;angular.forEach(t.schema.relationships,function(n,e){t.data.relationships[e]=angular.copy(t.parent.data.relationships[e])||{},t.relationships[e]=angular.isArray(t.relationships[e])?t.parent.relationships[e].slice():t.parent.relationships[e]}),(n!==!0||t.parent[\"synchronized\"]!==!0)&&(angular.forEach(t.schema.attributes,function(n,e){t.data.attributes[e]=angular.copy(t.parent.data.attributes[e])}),t.parent.errors.validation.clear())}function c(t){function a(){void 0===t?c.parent.errors.validation.clear():c.parent.errors.validation.clear(t),l.resolve()}function o(e){c.parent.error=!0,void 0===t?c.parent.errors.validation.clear():c.parent.errors.validation.clear(t),angular.forEach(e,function(t,e){angular.forEach(t,function(t){c.parent.errors.validation.add(e,new n(t,e))})}),l.reject(c.parent.errors.validation)}var i,s,c=this,l=r.defer();return void 0===t?(i=c.data.attributes,s=c.schema.attributes):(i={},s={},i[t]=c.data.attributes[t],s[t]=c.schema.attributes[t]),e.async(i,s).then(a,o),l.promise}function l(n,e){var a=this;return r.resolve(t.link(a,n,e,!0))}function u(n,e){var a=this;return r.resolve(t.unlink(a,n,e,!0))}return a.prototype.save=i,a.prototype.reset=s,a.prototype.validate=c,a.prototype.link=l,a.prototype.unlink=u,a.prototype.toJson=o,a}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelForm\",n),n.$inject=[\"AngularJsonAPIModelValidationError\",\"AngularJsonAPIModelLinkerService\",\"validateJS\",\"$q\"]}(),function(){\"use strict\";function n(n,o,i,s,c,l,u,d,h,p){function f(t,e,r){var a=this;t.relationships=t.relationships||{},a.saved=void 0===e.saved?!0:e.saved,a.stable=void 0===e.stable?!0:e.stable,a[\"synchronized\"]=void 0===e[\"synchronized\"]?!0:e[\"synchronized\"],a.pristine=void 0===e.pristine?!0:e.pristine,a.removed=!1,a.loading=!1,a.saving=!1,a.updatedAt=a[\"synchronized\"]===!0?Date.now():r,a.loadingCount=0,a.savingCount=0,a.data={relationships:{},attributes:{}},a.relationships={},angular.forEach(a.schema.relationships,function(n,t){a.relationships[t]=void 0}),a.errors={validation:new i(\"Validation\",\"Errors of attributes validation\",o),synchronization:new i(\"Synchronization\",\"Errors of synchronizations\",n)},a.promises={},P(a,t),a.form=new c(a)}function y(){function n(){i.synchronize(c).then(t,e,o)}function t(n){u.$emit(\"angularJsonAPI:\"+i.data.type+\":object:\"+c.action,\"resolved\",i,n),i.update(i.form.data),i.saved===!1&&(i.factory.cache.indexIds=i.factory.cache.indexIds||[],i.factory.cache.indexIds.push(i.data.id)),i[\"synchronized\"]=!0,i.saved=!0,i.stable=!0,n.finish(),i.errors.synchronization.concat(n.errors),s.resolve(i)}function e(n){u.$emit(\"angularJsonAPI:\"+i.data.type+\":object:save\",\"rejected\",i,n),n.finish(),i.errors.synchronization.concat(n.errors),s.reject(n)}function o(n){u.$emit(\"angularJsonAPI:\"+i.data.type+\":object:save\",\"notify\",i,n),s.notify(n)}var i=this,s=p.defer(),c={action:i.saved===!1?\"add\":\"update\",object:i};return i.form.validate().then(n,s.reject)[\"finally\"](a.bind(i,void 0)),r(i),s.promise}function g(){var n=this;void 0!==n.form&&n.form.reset()}function v(){function r(n){function r(n){return t(n),n.synchronize({action:\"include\",object:n})[\"finally\"](e.bind(n,void 0))}function a(t){angular.forEach(t,function(n,t){n.success===!0&&(u.$emit(\"angularJsonAPI:\"+o.included[t].data.type+\":object:include\",\"resolved\",o.included[t],n),n.value.finish())}),s.resolve(n)}var o=i.proccesResults(n.data);u.$emit(\"angularJsonAPI:\"+c.data.type+\":object:refresh\",\"resolved\",c,n),p.allSettled(o.included.map(r)).then(a,s.reject),c[\"synchronized\"]=!0,c.stable=!0,n.finish(),c.errors.synchronization.concat(n.errors)}function a(n){u.$emit(\"angularJsonAPI:\"+c.data.type+\":object:refresh\",\"rejected\",c,n),n.finish(),c.errors.synchronization.concat(n.errors),s.reject(n)}function o(n){u.$emit(\"angularJsonAPI:\"+c.data.type+\":object:refresh\",\"notify\",c,n),s.notify(n)}var i=d.get(\"$jsonapi\"),s=p.defer(),c=this,l={action:\"refresh\",object:c,params:c.schema.params.get};if(c.saved===!1){var h=new n(\"Can't refresh new object\",null,0,\"refresh\");c.errors.synchronization.add(\"refresh\",h),s.reject(h)}else t(c),c.synchronize(l).then(r,a,o)[\"finally\"](e.bind(c,void 0));return s.promise}function m(){var n=this,t=angular.copy(n.data),e={};return angular.forEach(t.relationships,function(n,t){void 0!==n.data&&(e[t]=n)}),t.relationships=e,{data:t,updatedAt:n.updatedAt}}function b(){function n(n){u.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"resolved\",o,n),o.removed=!0,o.unlinkAll(),o.factory.cache.clearRemoved(o.data.id),n.finish(),o.errors.synchronization.concat(n.errors),i.resolve(n)}function t(n){u.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"rejected\",o,n),o.factory.cache.revertRemove(o.data.id),n.finish(),o.errors.synchronization.concat(n.errors),i.reject(n)}function e(n){u.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"notify\",o,n),i.notify(n)}var o=this,i=p.defer(),s={action:\"remove\",object:o};return o.factory.cache.remove(o.data.id),o.saved===!1?i.resolve():(r(o),o.synchronize(s).then(n,t,e)[\"finally\"](a.bind(o,void 0))),i.promise}function j(n){function r(n,t){var e=o.schema.relationships[t],r=e.reflection;angular.isArray(n)?angular.forEach(n,a.bind(void 0,r)):angular.isObject(n)&&a(r,n),\"hasOne\"===e.type?o.relationships[t]=null:\"hasMany\"===e.type&&(o.relationships[t]=[])}function a(n,r){function a(n){u.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"resolve\",o,n),n.finish(),o.errors.synchronization.concat(n.errors),i.resolve(o)}function c(n){u.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"rejected\",o,n),n.finish(),o.errors.synchronization.concat(n.errors),i.reject(n)}function l(n){u.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"notify\",o,n),n.finish(),i.notify(n)}var d=r.schema.relationships[n],h={action:\"unlinkReflection\",object:r,target:o,key:n};t(r),s.unlink(r,n,o,d),r.synchronize(h).then(a,c,l)[\"finally\"](e.bind(r,void 0))}var o=this,i=p.defer();return t(o),void 0===n?angular.forEach(o.relationships,r):r(o.relationships[n],n),e(o),i.promise}function A(o,i){function c(n){function r(n){return t(i),i.synchronize({action:\"linkReflection\",object:n.object,target:n.target,key:n.key})[\"finally\"](e.bind(i,void 0))}function a(n){angular.forEach(n,function(t){t.success===!0&&(u.$emit(\"angularJsonAPI:\"+c[o].data.type+\":object:linkReflection\",\"resolved\",c[o],t),n.value.finish())}),f.resolve(y)}u.$emit(\"angularJsonAPI:\"+y.data.type+\":object:link\",\"resolved\",y,n);var c=s.link(y,o,i);y.stable=!0,n.finish(),y.errors.synchronization.concat(n.errors),p.allSettled(c.map(r)).then(a,f.reject)}function l(n){u.$emit(\"angularJsonAPI:\"+y.data.type+\":object:link\",\"rejected\",y,n),f.reject(n.errors),n.finish(),y.errors.synchronization.concat(n.errors),f.reject(n)}function d(n){u.$emit(\"angularJsonAPI:\"+y.data.type+\":object:link\",\"notify\",y,n),f.notify(n)}var h,f=p.defer(),y=this,g={action:\"link\",object:y,target:i,key:o};return void 0===i?(h=new n(\"Can't link undefined\",null,0,\"link\"),y.errors.synchronization.add(\"link\",h),f.reject(h)):y.saved===!1?(h=new n(\"Can't link new object\",null,0,\"link\"),y.errors.synchronization.add(\"link\",h),f.reject(h)):(r(y),y.synchronize(g).then(c,l,d)[\"finally\"](a.bind(y,void 0))),f.promise}function z(o,i){function c(n){function r(n){return t(i),i.synchronize({action:\"unlinkReflection\",object:n.object,target:n.target,key:n.key})[\"finally\"](e.bind(i,void 0))}function a(n){angular.forEach(n,function(t){t.success===!0&&(u.$emit(\"angularJsonAPI:\"+c[o].data.type+\":object:unlinkReflection\",\"resolved\",c[o],t),n.value.finish())}),f.resolve(y)}u.$emit(\"angularJsonAPI:\"+y.data.type+\":object:unlink\",\"resolved\",y,n);var c=s.link(y,o,i);y.stable=!0,n.finish(),y.errors.synchronization.concat(n.errors),p.allSettled(c.map(r)).then(a,f.reject)}function l(n){u.$emit(\"angularJsonAPI:\"+y.data.type+\":object:unlink\",\"rejected\",y,n),f.reject(n.errors),n.finish(),y.errors.synchronization.concat(n.errors),f.reject(n)}function d(n){u.$emit(\"angularJsonAPI:\"+y.data.type+\":object:unlink\",\"notify\",y,n),f.notify(n)}var h,f=p.defer(),y=this,g={action:\"unlink\",object:y,target:i,key:o};return void 0===i?(h=new n(\"Can't unlink undefined\",null,0,\"link\"),y.errors.synchronization.add(\"link\",h),f.reject(h)):y.saved===!1?(h=new n(\"Can't unlink new object\",null,0,\"link\"),y.errors.synchronization.add(\"link\",h),f.reject(h)):(r(y),y.synchronize(g).then(c,l,d)[\"finally\"](a.bind(y,void 0))),f.promise}function k(n,r,a){var o=this;t(o),P(o,n),o.reset(r),o[\"synchronized\"]=a===!0?!1:!0,o.stable=a===!0?!1:!0,o.updatedAt=Date.now(),e(o)}function I(){var n=this,t=!1;return angular.forEach(n.errors,function(n){t=n.hasErrors()||t}),t}function P(n,t){function e(e,r){n.data.attributes[r]=t.attributes[r]}function r(e,r){var i=t.relationships[r];return void 0===i?void(n.data.relationships[r]={data:void 0}):(n.data.relationships[r]=n.data.relationships[r]||{},n.data.relationships[r].links=i.links,void(\"hasOne\"===e.type?a(n,r,i.data):\"hasMany\"===e.type&&angular.isArray(i.data)&&(0===i.data.length?(n.data.relationships[r].data=[],n.unlinkAll(r)):(angular.forEach(n.relationships[r],o.bind(void 0,n,r,i.data)),angular.forEach(i.data,a.bind(void 0,n,r))))))}function a(n,t,e){var r;if(null===e)return void s.link(n,t,null);if(void 0!==e){if(r=i.getFactory(e.type),void 0===r)return void h.error(\"Factory not found\",e.type,e);var a=r.cache.get(e.id);s.link(n,t,a)}}function o(n,t,e,r){e.indexOf(r.data.id)>-1||s.unlink(n,t,r)}var i=d.get(\"$jsonapi\"),c=n.schema;return n.data.id=t.id,n.data.type=t.type,n.factory.schema.type!==t.type?(h.error(\"Different type then factory\",n.factory.schema.type,t),!1):l.validate(n.data.id)?(t.attributes=t.attributes||{},t.relationships=t.relationships||{},angular.forEach(c.attributes,e),angular.forEach(c.relationships,r),!0):(h.error(\"Invalid id\"),!1)}return f.prototype.refresh=v,f.prototype.remove=b,f.prototype.reset=g,f.prototype.save=y,f.prototype.update=k,f.prototype.link=A,f.prototype.unlink=z,f.prototype.unlinkAll=j,f.prototype.toJson=m,f.prototype.hasErrors=I,f}function t(n){n=void 0===n?this:n,n.loadingCount+=1,n.loading=!0}function e(n){n=void 0===n?this:n,n.loadingCount-=1,n.loading=n.loadingCount>0}function r(n){n=void 0===n?this:n,n.savingCount+=1,n.saving=!0}function a(n){n=void 0===n?this:n,n.savingCount-=1,n.saving=n.savingCount>0}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractModel\",n),n.$inject=[\"AngularJsonAPIModelSynchronizationError\",\"AngularJsonAPIModelValidationError\",\"AngularJsonAPIModelErrorsManager\",\"AngularJsonAPIModelLinkerService\",\"AngularJsonAPIModelForm\",\"uuid4\",\"$rootScope\",\"$injector\",\"$log\",\"$q\"]}(),function(){\"use strict\";function n(n,t){function e(n){var t=this;t.factory=n,t.data={},t.removed={},t.size=0,t.indexIds=void 0}function r(n,e){var r=this,a=n.id;return void 0===a?void t.error(\"Can't add data without id!\",n):(void 0===r.data[a]?(r.data[a]=new r.factory.Model(n,e),r.size+=1):r.data[a].update(n,e.saved,e.initialization),r.data[a])}function a(n){var t=this,e=angular.fromJson(n),r={saved:!0,\"synchronized\":!1,stable:!1,pristine:!1,initialization:!0};angular.isObject(e)&&void 0!==e.data&&(t.updatedAt=e.updatedAt,t.indexIds=e.indexIds,angular.forEach(e.data,function(n){var e=n.data;t.addOrUpdate(e,r,n.updatedAt)}))}function o(){var n=this,t={data:[],updatedAt:n.updatedAt,indexIds:n.indexIds};return angular.forEach(n.data,function(n){n.error===!1&&t.data.push(n.toJson())}),angular.toJson(t)}function i(){var n=this;n.indexIds=void 0,n.data={},n.removed={}}function s(n){var t=this,e={id:n,type:t.factory.Model.prototype.schema.type},r={saved:!0,\"synchronized\":!1,stable:!1,pristine:!0};return void 0===t.data[n]&&(t.data[n]=new t.factory.Model(e,r)),t.data[n]}function c(n){var e=this;return t.debug(\"Unused params\",n),void 0===e.indexIds?e.indexIds:e.indexIds.map(e.get.bind(e))}function l(t){var e=this;e.indexIds=[],angular.forEach(t,function(t){angular.isString(t)&&n.validate(t)?e.indexIds.push(t):angular.isObject(t)&&n.validate(t.data.id)&&e.indexIds.push(t.data.id)})}function u(n){var t=this;return void 0!==t.data[n]&&(t.removed[n]=t.data[n],delete t.data[n],t.size-=1),t.removed[n]}function d(n){var t=this;return void 0!==t.removed[n]&&(t.data[n]=t.removed[n],delete t.removed[n],t.size+=1),t.data[n]}function h(n){var t=this;delete t.removed[n]}return e.prototype.get=s,e.prototype.index=c,e.prototype.setIndexIds=l,e.prototype.addOrUpdate=r,e.prototype.fromJson=a,e.prototype.toJson=o,e.prototype.clear=i,e.prototype.remove=u,e.prototype.revertRemove=d,e.prototype.clearRemoved=h,e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICache\",n),n.$inject=[\"uuid4\",\"$log\"]}(),function(){\"use strict\";function n(){function n(n,t){var e=this;Error.captureStackTrace(e,e.constructor),e.message=n,e.context={attribute:t}}return n.prototype=Object.create(Error.prototype),n.prototype.constructor=n,n.prototype.name=\"ValidationError\",n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelValidationError\",n)}(),function(){\"use strict\";function n(){function n(n,t,e,r){var a=this;Error.captureStackTrace(a,a.constructor),a.message=n,a.context={synchronization:t,code:e,action:r}}return n.prototype=Object.create(Error.prototype),n.prototype.constructor=n,n.prototype.name=\"SynchronizationError\",n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelSynchronizationError\",n)}(),function(){\"use strict\";function n(){function n(n,t,e,r){var a=this;a.name=n,a.description=t,a.ErrorConstructor=e,a.errors={},a.defaultFilter=r||function(){return!0}}function t(n){var t=this;void 0===n?angular.forEach(t.errors,function(n,e){t.errors[e]=[]}):t.errors[n]=[]}function e(n,t){var e=this;e.errors[n]=e.errors[n]||[],e.errors[n].push(t)}function r(n){var t=this;angular.forEach(n,function(n){t.errors[n.key]=[]}),angular.forEach(n,function(n){t.errors[n.key].push(n.object)})}function a(n){var t=this;if(void 0===n){var e=!1;return angular.forEach(t.errors,function(n){e=e||n.length>0}),e}return void 0!==t.errors[n]&&t.errors[n].length>0}return n.prototype.constructor=n,n.prototype.concat=r,n.prototype.clear=t,n.prototype.add=e,n.prototype.hasErrors=a,n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelErrorsManager\",n)}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"lazyProperty\",function(n,t,e){var r,a;Object.defineProperty(n,t,{get:function(){return a||(a=!0,r=e.call(n)),r},enumerable:!0,configurable:!0})})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"toKebabCase\",function(n){return n.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase()})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$provide\",function(n){n.decorator(\"$q\",[\"$delegate\",function(n){var t=n;return t.allSettled=t.allSettled||function(n,e,r){function a(n){return t.resolve(n).then(function(n){return angular.isFunction(e)&&e(n),{success:!0,value:n}},function(n){return angular.isFunction(r)&&r(n),{success:!1,reason:n}})}var o=angular.isArray(n)?[]:{};return angular.forEach(n,function(n,t){o.hasOwnProperty(t)||(o[t]=a(n))}),t.all(o)},t}])}])}(),function(){\"use strict\";function n(n,t,e){function r(t){var e=this;e.state={},n.call(e,t),angular.forEach(t,function(n){n.synchronizer=e})}function a(r){function a(n){d.notify({step:\"synchronization\",data:n})}function o(n){d.notify({step:\"synchronization\",errors:n})}function i(n){l.state[h]=l.state[h]||{},l.state[h].success=!0,angular.forEach(n,function(n){n.success===!1&&(l.state[h].success=!1)}),angular.forEach(l.synchronizations,function(t){angular.forEach(t.afterHooks[h],function(t){d.notify({step:\"after\",errors:t.call(l,r,n)})})});var t,e=[];angular.forEach(n,function(n){n.success===!0?t=n.value:e.push({key:h,object:n.reason})}),e.length>0?d.reject({data:t,finish:s,errors:e}):d.resolve({data:t,finish:s,errors:e})}function s(){angular.forEach(l.synchronizations,function(n){angular.forEach(n.finishHooks[h],function(n){d.notify({step:\"finish\",errors:n.call(l,r)})})})}function c(n){e.error(\"All settled rejected! Something went wrong\"),d.reject({finish:angular.noop,errors:n})}var l=this,u=[],d=t.defer(),h=r.action;return n.prototype.synchronize.call(l,r),angular.forEach(l.synchronizations,function(n){angular.forEach(n.beginHooks[h],function(n){d.notify({step:\"begin\",data:n.call(l,r)})})}),angular.forEach(l.synchronizations,function(n){angular.forEach(n.beforeHooks[h],function(n){d.notify({step:\"before\",data:n.call(l,r)})})}),angular.forEach(l.synchronizations,function(n){angular.forEach(n.synchronizationHooks[h],function(n){u.push(n.call(l,r))})}),t.allSettled(u,a,o).then(i,c),d.promise}return r.prototype=Object.create(n.prototype),r.prototype.constructor=r,r.prototype.synchronize=a,r}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerSimple\",n),n.$inject=[\"AngularJsonAPISynchronizerPrototype\",\"$q\",\"$log\"]}(),function(){\"use strict\";function n(n){function t(n){var t=this;t.synchronizations=n}function e(t){var e=this;n.debug(\"Synchro Collection\",e.factory.Model.prototype.schema.type,t),void 0===t.action&&n.error(\"Can't synchronize undefined action\",t)}return t.prototype.synchronize=e,t}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerPrototype\",n),n.$inject=[\"$log\"]}(),function(){\"use strict\";function n(n,t,e,r,a,o){function i(r,i){function s(n){return o({method:\"GET\",headers:v,url:i,params:n.params||{}}).then(f,y.bind(null,\"all\"))}function c(n){return o({method:\"GET\",headers:v,url:i+\"/\"+n.object.data.id,params:n.params||{}}).then(f,y.bind(null,\"get\"))}function l(n){return o({method:\"DELETE\",headers:v,url:i+\"/\"+n.object.data.id}).then(f,y.bind(null,\"remove\"))}function u(t){var e=a.defer(),r=t.object.schema.relationships[t.key];return t.object.removed===!0?e.reject(new n(\"Object has been removed\",g,0,\"unlink\")):void 0!==t.target&&void 0===t.target.data.id?e.reject(new n(\"Can't unlink object without id through rest call\",g,0,\"unlink\")):\"hasOne\"===r.type?o({method:\"DELETE\",headers:v,url:i+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(f,y.bind(null,\"get\")).then(e.resolve,e.reject):\"hasMany\"===r.type&&(void 0===t.target?o({method:\"PUT\",headers:v,data:{data:[]},url:i+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(f,y.bind(null,\"unlink\")).then(e.resolve,e.reject):o({method:\"DELETE\",headers:v,url:i+\"/\"+t.object.data.id+\"/relationships/\"+t.key+\"/\"+t.target.data.id}).then(f,y.bind(null,\"unlink\")).then(e.resolve,e.reject)),e.promise}function d(n){var t=a.defer(),r=n.object.schema.relationships[n.key];return n.object.removed===!0?t.reject({errors:[{status:0,statusText:\"Object has been removed\"}]}):void 0===n.target||void 0===n.target.data.id?t.reject({errors:[{status:0,statusText:\"Can't link object without id through rest call\"}]}):\"hasOne\"===r.type?o({method:\"PUT\",headers:v,data:{data:e.toLinkData(n.target)},url:i+\"/\"+n.object.data.id+\"/relationships/\"+n.key}).then(f,y.bind(null,\"link\")).then(t.resolve,t.reject):\"hasMany\"===r.type&&o({method:\"POST\",headers:v,data:{data:[e.toLinkData(n.target)]},url:i+\"/\"+n.object.data.id+\"/relationships/\"+n.key}).then(f,y.bind(null,\"link\")).then(t.resolve,t.reject),t.promise}function h(n){return o({method:\"PUT\",headers:v,url:i+\"/\"+n.object.data.id,data:n.object.form.toJson()}).then(f,y.bind(null,\"update\"))}function p(n){return o({method:\"POST\",headers:v,url:i+\"/\",data:n.object.form.toJson()}).then(f,y.bind(null,\"add\"))}function f(n){return a.resolve(n.data)}function y(t,e){function r(e){console.log(\"offline\"),console.log(e),s.reject(new n(\"Server is offline\",g,e.status,t))}function i(){console.log(\"no internet\"),s.reject(new n(\"No internet connection\",g,e.status,t))}var s=a.defer();return 0===e.status?o({method:\"GET\",url:\"https://status.cloud.google.com/incidents.schema.json\"}).then(r,i):s.reject(new n(e.statusText,g,e.status,t)),s.promise}var g=this,v={Accept:\"application/vnd.api+json\",\"Content-Type\":\"application/vnd.api+json\"};t.apply(g,arguments),g.synchronization(\"remove\",l),g.synchronization(\"unlink\",u),g.synchronization(\"link\",d),g.synchronization(\"update\",h),g.synchronization(\"add\",p),g.synchronization(\"all\",s),g.synchronization(\"get\",c),g.synchronization(\"refresh\",c)}return i.prototype=Object.create(t.prototype),i.prototype.constructor=i,i}angular.module(\"angular-jsonapi-rest\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationRest\",n),n.$inject=[\"AngularJsonAPIModelSynchronizationError\",\"AngularJsonAPISynchronizationPrototype\",\"AngularJsonAPIModelLinkerService\",\"toKebabCase\",\"$q\",\"$http\"]}(),function(){\"use strict\";function n(){function n(n){var t=this,e=[\"add\",\"init\",\"get\",\"all\",\"clearCache\",\"remove\",\"unlink\",\"unlinkReflection\",\"link\",\"linkReflection\",\"update\",\"refresh\",\"include\"];t.name=n,t.state={},t.beginHooks={},t.beforeHooks={},t.synchronizationHooks={},t.afterHooks={},t.finishHooks={},t.options={},angular.forEach(e,function(n){t.beginHooks[n]=[],t.beforeHooks[n]=[],t.synchronizationHooks[n]=[],t.afterHooks[n]=[],t.finishHooks[n]=[],t.state[n]={loading:!1,success:!0}})}function t(n,t){var e=this;e.beginHooks[n].push(t)}function e(n,t){var e=this;e.finishHooks[n].push(t)}function r(n,t){var e=this;e.beforeHooks[n].push(t)}function a(n,t){var e=this;e.afterHooks[n].push(t)}function o(n,t){var e=this;e.synchronizationHooks[n].push(t)}return n.prototype.before=r,n.prototype.after=a,n.prototype.begin=t,n.prototype.finish=e,n.prototype.synchronization=o,n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizationPrototype\",n)}(),function(){\"use strict\";function n(n,t,e){function r(r,a){function o(){var n=c.synchronizer.factory.schema.type;return e.resolve(t.localStorage.getItem(a+\".\"+n))}function i(){var n=c.synchronizer.factory.schema.type;t.localStorage.removeItem(a+\".\"+n)}function s(){var n=c.synchronizer.factory.schema.type,e=c.synchronizer.factory.cache;t.localStorage.setItem(a+\".\"+n,e.toJson())}var c=this;a=a||\"AngularJsonAPI\",c.__updateStorage=s,n.apply(c,arguments),c.synchronization(\"init\",o),c.begin(\"clearCache\",i),c.begin(\"remove\",s),c.begin(\"refresh\",s),c.begin(\"unlink\",s),c.begin(\"unlinkReflection\",s),c.begin(\"link\",s),c.begin(\"linkReflection\",s),c.begin(\"update\",s),c.begin(\"add\",s),c.begin(\"get\",s),c.begin(\"all\",s),c.begin(\"include\",s),c.finish(\"init\",s),c.finish(\"clearCache\",s),c.finish(\"remove\",s),c.finish(\"refresh\",s),c.finish(\"unlink\",s),c.finish(\"unlinkReflection\",s),c.finish(\"link\",s),c.finish(\"linkReflection\",s),c.finish(\"update\",s),c.finish(\"add\",s),c.finish(\"get\",s),c.finish(\"all\",s),c.finish(\"include\",s)}return r.prototype=Object.create(n.prototype),r.prototype.constructor=r,r}angular.module(\"angular-jsonapi-local\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationLocal\",n),n.$inject=[\"AngularJsonAPISynchronizationPrototype\",\"$window\",\"$q\"]}(),function(){\"use strict\";function n(n,t,e){function r(n){var t=this,r=n.include||{};n.include=r,r.get=n.include.get||[],r.all=n.include.all||[],t.params={get:{},all:{}},angular.forEach(n.relationships,function(t,a){var o=new e(t,a,n.type);n.relationships[a]=o,o.included===!0&&(r.get.push(a),\"hasOne\"===o.type&&r.all.push(a))}),angular.extend(t,n),r.get.length>0&&(t.params.get.include=r.get.join(\",\")),r.all.length>0&&(t.params.all.include=r.all.join(\",\"))}return r}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchema\",n),n.$inject=[\"$log\",\"pluralize\",\"AngularJsonAPISchemaLink\"]}(),function(){\"use strict\";function n(n,t){function e(e,r,a){var o=this;angular.isString(e)?(o.model=t.plural(r),o.type=e,o.polymorphic=!1,o.reflection=a):(void 0===e.type&&n.error(\"Schema of link without a type: \",e,r),\"hasMany\"!==e.type&&\"hasOne\"!==e.type&&n.error(\"Schema of link with wrong type: \",e.type,\"available: hasOne, hasMany\"),o.model=e.model||t.plural(r),o.type=e.type,o.polymorphic=e.polymorphic||!1,o.reflection=void 0===e.reflection?\"hasMany\"===o.type?t.singular(a):a:e.reflection,o.included=e.included||!1)}return e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchemaLink\",n),n.$inject=[\"$log\",\"pluralize\"]}(),function(){\"use strict\";function n(n,t,e){function r(t,r){var a=function(t,r,a){var o=this;t.type!==o.schema.type&&e.error(\"Data type other then declared in schema: \",t.type,\" instead of \",o.schema.type),n.call(o,t,r,a),o.form.parent=o};return a.prototype=Object.create(n.prototype),a.prototype.constructor=a,a.prototype.schema=t,a.prototype.factory=r,a.prototype.synchronize=r.synchronizer.synchronize.bind(r.synchronizer),angular.forEach(t.functions,function(n,t){a.prototype[t]=function(){return n.apply(this,arguments)}}),a}return{model:r}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModel\",n),n.$inject=[\"AngularJsonAPIAbstractModel\",\"AngularJsonAPISchema\",\"$log\"]}(),function(){\"use strict\";function n(n,t,e,r,a,o,i,s){function c(r,a){function i(n){o.$emit(\"angularJsonAPI:\"+l.type+\":factory:init\",\"resolved\",n),l.cache.fromJson(n.data),l.initialized=!0,n.finish()}function s(n){o.$emit(\"angularJsonAPI:\"+l.type+\":factory:init\",\"rejected\",n),n.finish(),l.initialized=!0}function c(n){o.$emit(\"angularJsonAPI:\"+l.type+\":factory:init\",\"notify\",n)}var l=this,u={action:\"init\"};l.schema=new t(r),l.cache=new e(l),l.synchronizer=a,l.synchronizer.factory=l,l.Model=n.model(l.schema,l),l.initialized=!1,l.type=l.schema.type,a.factory=l,l.synchronizer.synchronize(u).then(i,s,c)}function l(n){var t=this;if(!a.validate(n))return s.reject({errors:[{status:0,statusText:\"Invalid id not uuid4\"}]});var e=t.cache.get(n);return e.refresh(),e}function u(n){var t=this;n=n||{};var e=new r(t,angular.extend(n,t.schema.params.all));return e.fetch(),e}function d(n){var t=this,e=t.cache.remove(n);return e.remove()}function h(n,t){var e=this,r={};if(angular.forEach(e.schema.relationships,function(n,t){\"hasOne\"===n.type?r[t]={data:null}:\"hasMany\"===n.type&&(r[t]={data:[]})}),void 0!==n&&void 0!==t){var s=e.schema[n];\"hasOne\"===s.type?r[n]={data:t.data.id}:\"hasMany\"===s.type&&i.warn(\"Initialize with relationship disallowed for hasMany relationships\")}var c={type:e.type,id:a.generate(),attributes:{},relationships:r},l={saved:!1,\"synchronized\":!1,stable:!1,pristine:!1,initialization:!1},u=e.cache.addOrUpdate(c,l);return o.$emit(\"angularJsonAPI:\"+e.type+\":factory:initialize\",\"resolved\",u),u}function p(){function n(n){o.$emit(\"angularJsonAPI:\"+r.type+\":factory:clearCache\",\"resolved\",n),n.finish(),a.resolve(n)}function t(n){o.$emit(\"angularJsonAPI:\"+r.type+\":factory:clearCache\",\"resolved\",n),n.finish(),a.reject(n)}function e(n){o.$emit(\"angularJsonAPI:\"+r.type+\":factory:clearCache\",\"notify\",n),a.notify(n)}var r=this,a=s.defer(),i={action:\"clearCache\"};return r.cache.clear(),r.synchronizer.synchronize(i).then(n,t,e),a}return c.prototype.get=l,c.prototype.all=u,c.prototype.remove=d,c.prototype.initialize=h,c.prototype.clearCache=p,c}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIFactory\",n),n.$inject=[\"AngularJsonAPIModel\",\"AngularJsonAPISchema\",\"AngularJsonAPICache\",\"AngularJsonAPICollection\",\"uuid4\",\"$rootScope\",\"$log\",\"$q\"]}(),function(){\"use strict\";function n(n,r,a,o,i){function s(t,e){function o(n,t,e){var r;\"resolved\"===t&&void 0!==c.data&&(r=c.data.indexOf(e),r>-1&&(c.data.splice(r,1),c.factory.cache.setIndexIds(c.data)))}function i(){c.data=void 0,c.pristine=!0}function s(n,t,e){\"resolved\"===t&&(c.data=c.data||[],c.data.push(e))}var c=this;c.factory=t,c.type=t.schema.type,c.params=e,c.errors={synchronization:new r(\"Synchronization\",\"Errors of synchronizations\",n)},c.data=c.factory.cache.index(c.params),c.loading=!1,c.loadingCount=0,c[\"synchronized\"]=!1,c.pristine=void 0===c.data,a.$on(\"angularJsonAPI:\"+c.type+\":object:remove\",o),a.$on(\"angularJsonAPI:\"+c.type+\":factory:clearCache\",i),a.$on(\"angularJsonAPI:\"+c.type+\":object:add\",s)}function c(){var n=this,t=!1;return angular.forEach(n.errors,function(n){t=n.hasErrors()||t}),t}function l(n){var t=this;return t.factory.get(n)}function u(){function n(n){function r(n){return t.bind(n),n.synchronize({action:\"include\",object:n\n})[\"finally\"](e.bind(n,void 0))}function o(t){angular.forEach(t,function(n,t){n.success===!0&&(a.$emit(\"angularJsonAPI:\"+s.included[t].data.type+\":object:include\",\"resolved\",s.included[t],n),n.value.finish())}),l.resolve(n)}var s=u.proccesResults(n.data);a.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"resolved\",c,n),i.allSettled(s.included.map(r)).then(o,l.reject),c.data=s.data,c.updatedAt=Date.now(),c[\"synchronized\"]=!0,c.factory.cache.setIndexIds(c.data),n.finish(),c.errors.synchronization.concat(n.errors),l.resolve(c)}function r(n){a.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"rejected\",c,n),console.log(n),angular.forEach(c.data,e),n.finish(),c.errors.synchronization.concat(n.errors),l.reject(n)}function s(n){a.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"notify\",c,n),l.notify(n)}var c=this,l=i.defer(),u=o.get(\"$jsonapi\"),d={action:\"all\",params:c.params};return t(c),c.factory.synchronizer.synchronize(d).then(n,r,s)[\"finally\"](e.bind(c,void 0)),l.promise}return s.prototype.fetch=u,s.prototype.refresh=u,s.prototype.get=l,s.prototype.hasErrors=c,s}function t(n){n=void 0===n?this:n,n.loadingCount+=1,n.loading=!0}function e(n){n=void 0===n?this:n,n.loadingCount-=1,n.loading=n.loadingCount>0}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICollection\",n),n.$inject=[\"AngularJsonAPIModelSynchronizationError\",\"AngularJsonAPIModelErrorsManager\",\"$rootScope\",\"$injector\",\"$q\"]}(),function(){\"use strict\";function n(){function n(n,r){function a(){return t}function o(){return e}function i(n,a){var o=new r(n,a);t[n.type]=o,e.push(n.type)}function s(n){return t[n]}function c(e){return void 0===t[e]&&n.error(\"Can\t add not existing object type: \"+e+\". Use initialize(Model, datas).\"),t[e].saved.form}function l(e,r){return void 0===t[e]&&n.error(\"Can\t get not existing object type: \"+e+\". Use initialize(Model, datas).\"),t[e].get(r)}function u(e,r){return void 0===t[e]&&n.error(\"Can\t remove not existing object type: \"+e+\". Use initialize(Model, datas).\"),t[e].remove(r)}function d(e){return void 0===t[e]&&n.error(\"Can\t get all of not existing object type: \"+e+\". Use initialize(Model, datas).\"),t[e].all()}function h(){angular.forEach(t,function(n){n.clearCache()})}function p(t){var e={data:[],included:[]};void 0===t&&n.error(\"Can't proccess results:\",t);var r={saved:!0,\"synchronized\":!0,stable:!0,pristine:!1,initialization:!1};return angular.forEach(t.included,function(n){e.included.push(s(n.type).cache.addOrUpdate(n,r))}),angular.isArray(t.data)?angular.forEach(t.data,function(n){e.data.push(s(n.type).cache.addOrUpdate(n,r))}):e.data.push(s(t.data.type).cache.addOrUpdate(t.data,r)),e}return{form:c,get:l,remove:u,all:d,addFactory:i,getFactory:s,clearCache:h,proccesResults:p,allFactories:a,factoriesNames:o}}var t={},e=[];this.$get=n,n.$inject=[\"$log\",\"AngularJsonAPIFactory\"]}angular.module(\"angular-jsonapi\").provider(\"$jsonapi\",n)}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$logProvider\",function(n){n.debugEnabled(!1)}]).run([\"validateJS\",\"$q\",function(n,t){n.Promise=t}])}();\n//# sourceMappingURL=angular-jsonapi.min.js.map","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelLinkerService,\n    validateJS,\n    $q\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return AngularJsonAPIModelForm;\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        id: parent.data.id,\n        type: parent.data.type,\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset(auto) {\n      var _this = this;\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = angular.copy(_this.parent.data.relationships[key]) || {};\n        if (angular.isArray(_this.relationships[key])) {\n          _this.relationships[key] = _this.parent.relationships[key].slice();\n        } else {\n          _this.relationships[key] = _this.parent.relationships[key];\n        }\n      });\n\n      if (auto === true && _this.parent.synchronized === true) {\n        return;\n      }\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        _this.data.attributes[key] = angular.copy(_this.parent.data.attributes[key]);\n      });\n\n      _this.parent.errors.validation.clear();\n    }\n\n    /**\n     * Validates form\n     * @return {promise} Promise rejected to errors object indexed by keys. If the\n     * key param i stated it only validates an attribute, else all attributes.\n     */\n    function validate(key) {\n      var _this = this;\n      var attributesWrapper;\n      var constraintsWrapper;\n      var deferred = $q.defer();\n\n      if (key === undefined) {\n        attributesWrapper = _this.data.attributes;\n        constraintsWrapper = _this.schema.attributes;\n      } else {\n        attributesWrapper = {};\n        constraintsWrapper = {};\n\n        attributesWrapper[key] = _this.data.attributes[key];\n        constraintsWrapper[key] = _this.schema.attributes[key];\n      }\n\n      validateJS.async(\n        attributesWrapper,\n        constraintsWrapper\n      ).then(resolve, reject);\n\n      function resolve() {\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        deferred.resolve();\n      }\n\n      function reject(errorsMap) {\n        _this.parent.error = true;\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        angular.forEach(errorsMap, function(errors, attribute) {\n          angular.forEach(errors, function(error) {\n            _this.parent.errors.validation.add(attribute, new AngularJsonAPIModelValidationError(error, attribute));\n          });\n        });\n\n        deferred.reject(_this.parent.errors.validation);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target) {\n      var _this = this;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.link(_this, key, target, true));\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target) {\n      var _this = this;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.unlink(_this, key, target, true));\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelSynchronizationError,\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelErrorsManager,\n    AngularJsonAPIModelLinkerService,\n    AngularJsonAPIModelForm,\n    uuid4,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    AngularJsonAPIAbstractModel.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {object} config   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, config, updatedAt) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      /**\n       * Is not a new record\n       * @type {Boolean}\n       */\n      _this.saved = config.saved === undefined ? true : config.saved;\n\n      /**\n       * Is present on the server\n       * @type {Boolean}\n       */\n      _this.stable = config.stable === undefined ? true : config.stable;\n\n      /**\n       * Has been synchronized with the server\n       * @type {Boolean}\n       */\n      _this.synchronized = config.synchronized === undefined ? true : config.synchronized;\n\n      /**\n       * Has just been created by request and may not exist on the server\n       * @type {Boolean}\n       */\n      _this.pristine = config.pristine === undefined ? true : config.pristine;\n\n      _this.removed = false;\n      _this.loading = false;\n      _this.saving = false;\n      _this.updatedAt = _this.synchronized === true ? Date.now() : updatedAt;\n\n      _this.loadingCount = 0;\n      _this.savingCount = 0;\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(schema, name) {\n        _this.relationships[name] = undefined;\n      });\n\n      _this.errors = {\n        validation: new AngularJsonAPIModelErrorsManager(\n          'Validation',\n          'Errors of attributes validation',\n          AngularJsonAPIModelValidationError\n        ),\n        synchronization: new AngularJsonAPIModelErrorsManager(\n          'Synchronization',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSynchronizationError\n        )\n      };\n\n      _this.promises = {};\n\n      __setData(_this, data);\n\n      _this.form = new AngularJsonAPIModelForm(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: _this.saved === false ? 'add' : 'update',\n        object: _this\n      };\n\n      _this.form.validate().then(\n        synchronize,\n        deferred.reject\n      ).finally(__decrementSavingCounter.bind(_this, undefined));\n\n      __incrementSavingCounter(_this);\n\n      return deferred.promise;\n\n      function synchronize() {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:' + config.action, 'resolved', _this, response);\n        _this.update(_this.form.data);\n\n        if (_this.saved === false) {\n          _this.factory.cache.indexIds = _this.factory.cache.indexIds || [];\n          _this.factory.cache.indexIds.push(_this.data.id);\n        }\n\n        _this.synchronized = true;\n        _this.saved = true;\n        _this.stable = true;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      if (_this.form !== undefined) {\n        _this.form.reset();\n      }\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh() {\n      var $jsonapi = $injector.get('$jsonapi');\n      var deferred = $q.defer();\n      var _this = this;\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: _this.schema.params.get\n      };\n\n      if (_this.saved === false) {\n        var error = new AngularJsonAPIModelSynchronizationError('Can\\'t refresh new object', null, 0, 'refresh');\n        _this.errors.synchronization.add('refresh', error);\n        deferred.reject(error);\n      } else {\n        __incrementLoadingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        _this.synchronized = true;\n        _this.stable = true;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      var config = {\n        action: 'remove',\n        object: _this\n      };\n\n      _this.factory.cache.remove(_this.data.id);\n\n      if (_this.saved === false) {\n        deferred.resolve();\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'resolved', _this, response);\n        _this.removed = true;\n        _this.unlinkAll();\n        _this.factory.cache.clearRemoved(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'rejected', _this, response);\n        _this.factory.cache.revertRemove(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlink all reflection relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      __incrementLoadingCounter(_this);\n\n      if (key === undefined) {\n        angular.forEach(_this.relationships, removeLink);\n      } else {\n        removeLink(_this.relationships[key], key);\n      }\n\n      __decrementLoadingCounter(_this);\n\n      return deferred.promise;\n\n      function removeLink(linksObj, key) {\n        var schema = _this.schema.relationships[key];\n        var reflectionKey = schema.reflection;\n\n        if (angular.isArray(linksObj)) {\n          angular.forEach(linksObj, removeReflectionLink.bind(undefined, reflectionKey));\n        } else if (angular.isObject(linksObj)) {\n          removeReflectionLink(reflectionKey, linksObj);\n        }\n\n        if (schema.type === 'hasOne') {\n          _this.relationships[key] = null;\n        } else if (schema.type === 'hasMany') {\n          _this.relationships[key] = [];\n        }\n      }\n\n      function removeReflectionLink(reflectionKey, target) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n        var config = {\n          action: 'unlinkReflection',\n          object: target,\n          target: _this,\n          key: reflectionKey\n        };\n\n        __incrementLoadingCounter(target);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        target.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(target, undefined));\n\n        function resolve(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'resolve', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.resolve(_this);\n        }\n\n        function reject(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'rejected', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.reject(response);\n        }\n\n        function notify(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'link',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = new AngularJsonAPIModelSynchronizationError('Can\\'t link undefined', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else if (_this.saved === false) {\n        error = new AngularJsonAPIModelSynchronizationError('Can\\'t link new object', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'linkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:linkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked if undefined unlinks all\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'unlink',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = new AngularJsonAPIModelSynchronizationError('Can\\'t unlink undefined', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else if (_this.saved === false) {\n        error = new AngularJsonAPIModelSynchronizationError('Can\\'t unlink new object', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'unlinkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:unlinkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData, auto, initialization) {\n      var _this = this;\n\n      __incrementLoadingCounter(_this);\n\n      __setData(_this, validatedData);\n      _this.reset(auto);\n      _this.synchronized = initialization === true ? false : true;\n      _this.stable = initialization === true ? false : true;\n      _this.updatedAt = Date.now();\n\n      __decrementLoadingCounter(_this);\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData) {\n\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.factory.schema.type !== validatedData.type) {\n        $log.error('Different type then factory', object.factory.schema.type, validatedData);\n        return false;\n      }\n\n      if (!uuid4.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        var relationshipData = validatedData.relationships[key];\n\n        if (relationshipData === undefined) {\n          object.data.relationships[key] = {data: undefined};\n          return;\n        }\n\n        object.data.relationships[key] = object.data.relationships[key] || {};\n        object.data.relationships[key].links = relationshipData.links;\n\n        if (schema.type === 'hasOne') {\n          linkOne(object, key, relationshipData.data);\n        } else if (schema.type === 'hasMany') {\n          if (angular.isArray(relationshipData.data)) {\n            if (relationshipData.data.length === 0) {\n              object.data.relationships[key].data = [];\n              object.unlinkAll(key);\n            } else {\n              angular.forEach(\n                object.relationships[key],\n                unlinkOne.bind(undefined, object, key, relationshipData.data)\n              );\n              angular.forEach(\n                relationshipData.data,\n                linkOne.bind(undefined, object, key)\n              );\n            }\n          }\n        }\n      }\n\n      function linkOne(object, key, data) {\n        var factory;\n\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        factory = $jsonapi.getFactory(data.type);\n\n        if (factory === undefined) {\n          $log.error('Factory not found', data.type, data);\n          return;\n        }\n\n        var target = factory.cache.get(data.id);\n\n        AngularJsonAPIModelLinkerService.link(object, key, target);\n      }\n\n      function unlinkOne(object, key, relationshipData, target) {\n        if (relationshipData.indexOf(target.data.id) > -1) {\n          return;\n        }\n\n        AngularJsonAPIModelLinkerService.unlink(object, key, target);\n      }\n    }\n  }\n\n  /////////////\n  // Private //\n  /////////////\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n\n  function __incrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount += 1;\n    object.saving = true;\n  }\n\n  function __decrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount -= 1;\n    object.saving = object.savingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelSynchronizationError', AngularJsonAPIModelSynchronizationErrorWrapper);\n\n  function AngularJsonAPIModelSynchronizationErrorWrapper() {\n    SynchronizationError.prototype = Object.create(Error.prototype);\n    SynchronizationError.prototype.constructor = SynchronizationError;\n    SynchronizationError.prototype.name = 'SynchronizationError';\n\n    return SynchronizationError;\n\n    function SynchronizationError(message, synchronization, code, action) {\n      var _this = this;\n      Error.captureStackTrace(_this, _this.constructor);\n\n      _this.message = message;\n      _this.context = {\n        synchronization: synchronization,\n        code: code,\n        action: action\n      };\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICache', AngularJsonAPICacheWrapper);\n\n  function AngularJsonAPICacheWrapper(\n    uuid4,\n    $log\n  ) {\n\n    AngularJsonAPICache.prototype.get = get;\n    AngularJsonAPICache.prototype.index = index;\n    AngularJsonAPICache.prototype.setIndexIds = setIndexIds;\n    AngularJsonAPICache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPICache.prototype.fromJson = fromJson;\n    AngularJsonAPICache.prototype.toJson = toJson;\n    AngularJsonAPICache.prototype.clear = clear;\n\n    AngularJsonAPICache.prototype.remove = remove;\n    AngularJsonAPICache.prototype.revertRemove = revertRemove;\n    AngularJsonAPICache.prototype.clearRemoved = clearRemoved;\n\n    return AngularJsonAPICache;\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPICache(factory) {\n      var _this = this;\n\n      _this.factory = factory;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n\n      _this.indexIds = undefined;\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData, config) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.factory.Model(validatedData, config);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData, config.saved, config.initialization);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      var config = {\n        saved: true,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: true\n      };\n\n      if (angular.isObject(collection) && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n        _this.indexIds = collection.indexIds;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, config, objectData.updatedAt);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: [],\n        updatedAt: _this.updatedAt,\n        indexIds: _this.indexIds\n      };\n\n      angular.forEach(_this.data, function(object) {\n        if (object.error === false) {\n          json.data.push(object.toJson());\n        }\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.indexIds = undefined;\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      var data = {\n        id: id,\n        type: _this.factory.Model.prototype.schema.type\n      };\n\n      var config = {\n        saved: true,\n        synchronized: false,\n        stable: false,\n        pristine: true\n      };\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.factory.Model(data, config);\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization, used for index requests\n     * @param  {objec} params\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function index(params) {\n      var _this = this;\n\n      $log.debug('Unused params', params);\n\n      if (_this.indexIds === undefined) {\n        return _this.indexIds;\n      }\n\n      return _this.indexIds.map(_this.get.bind(_this));\n    }\n\n    /**\n     * Cache ids of objects returned by index request\n     * @param {ids array or AngularJsonAPIModel array} array Objects or ids to be cached\n     */\n    function setIndexIds(array) {\n      var _this = this;\n\n      _this.indexIds = [];\n\n      angular.forEach(array, function(element) {\n        if (angular.isString(element) && uuid4.validate(element)) {\n          _this.indexIds.push(element);\n        } else if (angular.isObject(element) && uuid4.validate(element.data.id)) {\n          _this.indexIds.push(element.data.id);\n        }\n      });\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelValidationError', AngularJsonAPIModelValidationErrorWrapper);\n\n  function AngularJsonAPIModelValidationErrorWrapper() {\n    ValidationError.prototype = Object.create(Error.prototype);\n    ValidationError.prototype.constructor = ValidationError;\n    ValidationError.prototype.name = 'ValidationError';\n\n    return ValidationError;\n\n    function ValidationError(message, attribute) {\n      var _this = this;\n      Error.captureStackTrace(_this, _this.constructor);\n\n      _this.message = message;\n      _this.context = {\n        attribute: attribute\n      };\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelErrorsManager', AngularJsonAPIModelErrorsManagerWrapper);\n\n  function AngularJsonAPIModelErrorsManagerWrapper() {\n    ErrorsManager.prototype.constructor = ErrorsManager;\n    ErrorsManager.prototype.concat = concat;\n    ErrorsManager.prototype.clear = clear;\n    ErrorsManager.prototype.add = add;\n    ErrorsManager.prototype.hasErrors = hasErrors;\n\n    return ErrorsManager;\n\n    function ErrorsManager(name, description, ErrorConstructor, defaultFilter) {\n      var _this = this;\n      _this.name = name;\n      _this.description = description;\n\n      _this.ErrorConstructor = ErrorConstructor;\n      _this.errors = {};\n      _this.defaultFilter = defaultFilter || function() { return true; };\n    }\n\n    function clear(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        angular.forEach(_this.errors, function(obj, key) {\n          _this.errors[key] = [];\n        });\n      } else {\n        _this.errors[key] = [];\n      }\n    }\n\n    function add(key, error) {\n      var _this = this;\n\n      _this.errors[key] = _this.errors[key] || [];\n      _this.errors[key].push(error);\n    }\n\n    function concat(errors) {\n      var _this = this;\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key] = [];\n      });\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key].push(error.object);\n      });\n\n    }\n\n    function hasErrors(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        var answer = false;\n\n        angular.forEach(_this.errors, function(error) {\n          answer = answer || error.length > 0;\n        });\n\n        return answer;\n      } else {\n        return _this.errors[key] !== undefined && _this.errors[key].length > 0;\n      }\n    }\n  }\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises, resolvedCallback, rejectedCallback) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.resolve(promise)\n            .then(function(value) {\n              if (angular.isFunction(resolvedCallback)) {\n                resolvedCallback(value);\n              }\n\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              if (angular.isFunction(rejectedCallback)) {\n                rejectedCallback(reason);\n              }\n\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerSimple;\n\n    function AngularJsonAPISynchronizerSimple(synchronizations) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, synchronizations);\n\n      angular.forEach(synchronizations, function(synchronization) {\n        synchronization.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push({\n              key: action,\n              object: result.reason\n            });\n          }\n        });\n\n        if (errors.length > 0) {\n          deferred.reject({data: data, finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(synchronizations) {\n      var _this = this;\n\n      _this.synchronizations = synchronizations;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.factory.Model.prototype.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationRest', AngularJsonAPISynchronizationRestWrapper);\n\n  function AngularJsonAPISynchronizationRestWrapper(\n    AngularJsonAPIModelSynchronizationError,\n    AngularJsonAPISynchronizationPrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISynchronizationRest.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationRest.prototype.constructor = AngularJsonAPISynchronizationRest;\n\n    return AngularJsonAPISynchronizationRest;\n\n    function AngularJsonAPISynchronizationRest(name, url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISynchronizationPrototype.apply(_this, arguments);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp.bind(null, 'all'));\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp.bind(null, 'get'));\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp.bind(null, 'remove'));\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject(new AngularJsonAPIModelSynchronizationError('Object has been removed', _this, 0, 'unlink'));\n        } else if (config.target !== undefined && config.target.data.id === undefined) {\n          deferred.reject(new AngularJsonAPIModelSynchronizationError('Can\\'t unlink object without id through rest call', _this, 0, 'unlink'));\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'get')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          if (config.target === undefined) {\n            $http({\n              method: 'PUT',\n              headers: headers,\n              data: {data: []},\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          } else {\n            $http({\n              method: 'DELETE',\n              headers: headers,\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key + '/' + config.target.data.id\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          }\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target === undefined || config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'PUT',\n            headers: headers,\n            data: {data: AngularJsonAPIModelLinkerService.toLinkData(config.target)},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          $http({\n            method: 'POST',\n            headers: headers,\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        return $http({\n          method: 'PUT',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'update'));\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url + '/',\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'add'));\n      }\n\n      function resolveHttp(response) {\n        return $q.resolve(response.data);\n      }\n\n      function rejectHttp(action, response) {\n        var deferred = $q.defer();\n\n        if (response.status === 0) {\n          $http({\n            method: 'GET',\n            url: 'https://status.cloud.google.com/incidents.schema.json'\n          }).then(rejectServerOffline, rejectNoConnection);\n        } else {\n          deferred.reject(new AngularJsonAPIModelSynchronizationError(response.statusText, _this, response.status, action));\n        }\n\n        return deferred.promise;\n\n        function rejectServerOffline(response) {\n          console.log('offline');\n          console.log(response);\n          deferred.reject(new AngularJsonAPIModelSynchronizationError('Server is offline', _this, response.status, action));\n        }\n\n        function rejectNoConnection() {\n          console.log('no internet');\n          deferred.reject(new AngularJsonAPIModelSynchronizationError('No internet connection', _this, response.status, action));\n        }\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizationPrototype', AngularJsonAPISynchronizationPrototypeWrapper);\n\n  function AngularJsonAPISynchronizationPrototypeWrapper() {\n    AngularJsonAPISynchronizationPrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.after = afterSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.begin = begin;\n    AngularJsonAPISynchronizationPrototype.prototype.finish = finish;\n    AngularJsonAPISynchronizationPrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISynchronizationPrototype;\n\n    function AngularJsonAPISynchronizationPrototype(name) {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clearCache',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh',\n        'include'\n      ];\n\n      _this.name = name;\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationLocal', AngularJsonAPISynchronizationLocalWrapper);\n\n  function AngularJsonAPISynchronizationLocalWrapper(\n    AngularJsonAPISynchronizationPrototype,\n    $window,\n    $q\n  ) {\n\n    AngularJsonAPISynchronizationLocal.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationLocal.prototype.constructor = AngularJsonAPISynchronizationLocal;\n\n    return AngularJsonAPISynchronizationLocal;\n\n    function AngularJsonAPISynchronizationLocal(name, prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISynchronizationPrototype.apply(_this, arguments);\n\n      _this.synchronization('init', init);\n\n      _this.begin('clearCache', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('refresh', updateStorage);\n      _this.begin('unlink', updateStorage);\n      _this.begin('unlinkReflection', updateStorage);\n      _this.begin('link', updateStorage);\n      _this.begin('linkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.begin('get', updateStorage);\n      _this.begin('all', updateStorage);\n      _this.begin('include', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clearCache', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('refresh', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n      _this.finish('include', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.factory.schema.type;\n        return $q.resolve($window.localStorage.getItem(prefix + '.' + type));\n      }\n\n      function clear() {\n        var type = _this.synchronizer.factory.schema.type;\n        $window.localStorage.removeItem(prefix + '.' + type);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.factory.schema.type;\n        var cache = _this.synchronizer.factory.cache;\n        $window.localStorage.setItem(prefix + '.' + type, cache.toJson());\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper($log, pluralize, AngularJsonAPISchemaLink) {\n\n    return AngularJsonAPISchema;\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = new AngularJsonAPISchemaLink(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get.join(',');\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all.join(',');\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchemaLink', AngularJsonAPILinkSchrapperLink);\n\n  function AngularJsonAPILinkSchrapperLink($log, pluralize) {\n\n    return AngularJsonAPISchemaLink;\n\n    function AngularJsonAPISchemaLink(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        if (linkSchema.type !== 'hasMany' && linkSchema.type !== 'hasOne') {\n          $log.error('Schema of link with wrong type: ', linkSchema.type, 'available: hasOne, hasMany');\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n\n        if (linkSchema.reflection === undefined) {\n          _this.reflection = _this.type === 'hasMany' ? pluralize.singular(type) : type;\n        } else {\n          _this.reflection = linkSchema.reflection;\n        }\n\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(AngularJsonAPIAbstractModel, AngularJsonAPISchema, $log) {\n\n    return {\n      model: modelFactory\n    };\n\n    function modelFactory(schemaObj, factory) {\n      var Model = function(data, updatedAt, saved) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, updatedAt, saved);\n\n        _this.form.parent = _this;\n      };\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.factory = factory;\n      Model.prototype.synchronize = factory.synchronizer.synchronize.bind(factory.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return Model;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIFactory', AngularJsonAPIFactoryWrapper);\n\n  function AngularJsonAPIFactoryWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPICache,\n    AngularJsonAPICollection,\n    uuid4,\n    $rootScope,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIFactory.prototype.get = get;\n    AngularJsonAPIFactory.prototype.all = all;\n    AngularJsonAPIFactory.prototype.remove = remove;\n    AngularJsonAPIFactory.prototype.initialize = initialize;\n\n    AngularJsonAPIFactory.prototype.clearCache = clearCache;\n\n    return AngularJsonAPIFactory;\n\n    /**\n     * AngularJsonAPIFactory constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the factory\n     */\n    function AngularJsonAPIFactory(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = new AngularJsonAPISchema(schema);\n      _this.cache = new AngularJsonAPICache(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.factory = _this;\n\n      _this.Model = AngularJsonAPIModel.model(\n        _this.schema,\n        _this\n      );\n\n      _this.initialized = false;\n      _this.type = _this.schema.type;\n\n      synchronizer.factory = _this;\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'resolved', response);\n        _this.cache.fromJson(response.data);\n        _this.initialized = true;\n\n        response.finish();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'rejected', response);\n        response.finish();\n        _this.initialized = true;\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'notify', response);\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id) {\n      var _this = this;\n\n      if (!uuid4.validate(id)) {\n        return $q.reject({errors: [{status: 0, statusText: 'Invalid id not uuid4'}]});\n      }\n\n      var object = _this.cache.get(id);\n\n      object.refresh();\n\n      return object;\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = params || {};\n\n      var collection = new AngularJsonAPICollection(\n        _this,\n        angular.extend(params, _this.schema.params.all)\n      );\n\n      collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n\n      return object.remove();\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize(key, target) {\n      var _this = this;\n      var relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(relationshipSchema, relationshipName) {\n        if (relationshipSchema.type === 'hasOne') {\n          relationships[relationshipName] = {\n            data: null\n          };\n        } else if (relationshipSchema.type === 'hasMany') {\n          relationships[relationshipName] = {\n            data: []\n          };\n        }\n      });\n\n      if (key !== undefined && target !== undefined) {\n        var schema = _this.schema[key];\n\n        if (schema.type === 'hasOne') {\n          relationships[key] = {\n            data: target.data.id\n          };\n        } else if (schema.type === 'hasMany') {\n          $log.warn('Initialize with relationship disallowed for hasMany relationships');\n        }\n      }\n\n      var data = {\n        type: _this.type,\n        id: uuid4.generate(),\n        attributes: {},\n        relationships: relationships\n      };\n\n      var config = {\n        saved: false,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: false\n      };\n\n      var object = _this.cache.addOrUpdate(data, config);\n\n      $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:initialize', 'resolved', object);\n\n      return object;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clearCache() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: 'clearCache'\n      };\n\n      _this.cache.clear();\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clearCache', 'notify', response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    AngularJsonAPIModelSynchronizationError,\n    AngularJsonAPIModelErrorsManager,\n    $rootScope,\n    $injector,\n    $q\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n    AngularJsonAPICollection.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPICollection;\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIFactory} factory Factory associated with the collection\n     * @param {object} params  Params associated with this factory (such as filters)\n     */\n    function AngularJsonAPICollection(factory, params) {\n      var _this = this;\n\n      _this.factory = factory;\n      _this.type = factory.schema.type;\n      _this.params = params;\n\n      _this.errors = {\n        synchronization: new AngularJsonAPIModelErrorsManager(\n          'Synchronization',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSynchronizationError\n        )\n      };\n\n      _this.data = _this.factory.cache.index(_this.params);\n\n      _this.loading = false;\n      _this.loadingCount = 0;\n      _this.synchronized = false;\n      _this.pristine = _this.data === undefined;\n\n      $rootScope.$on('angularJsonAPI:' + _this.type + ':object:remove', remove);\n      $rootScope.$on('angularJsonAPI:' + _this.type + ':factory:clearCache', clear);\n      $rootScope.$on('angularJsonAPI:' + _this.type + ':object:add', add);\n\n      function remove(event, status, object) {\n        var index;\n\n        if (status === 'resolved' && _this.data !== undefined) {\n          index = _this.data.indexOf(object);\n          if (index > -1) {\n            _this.data.splice(index, 1);\n            _this.factory.cache.setIndexIds(_this.data);\n          }\n        }\n      }\n\n      function clear() {\n        _this.data = undefined;\n        _this.pristine = true;\n      }\n\n      function add(event, status, object) {\n        if (status === 'resolved') {\n          _this.data = _this.data || [];\n          _this.data.push(object);\n        }\n      }\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /**\n     * Shortcut to this.factory.get\n     * @param  {uuid4} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id) {\n      var _this = this;\n\n      return _this.factory.get(id);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var deferred = $q.defer();\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params\n      };\n\n      __incrementLoadingCounter(_this);\n\n      angular.forEach(_this.data, __incrementLoadingCounter);\n\n      _this.factory.synchronizer.synchronize(config)\n        .then(resolve, reject, notify)\n        .finally(__decrementLoadingCounter.bind(_this, undefined));\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n\n        _this.data = results.data;\n\n        _this.updatedAt = Date.now();\n        _this.synchronized = true;\n\n        _this.factory.cache.setIndexIds(_this.data);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response);\n        }\n\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'rejected', _this, response);\n        console.log(response);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider() {\n    var memory = {};\n    var names = [];\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPIFactory) {\n      return {\n        form: form,\n        get: get,\n        remove: remove,\n        all: all,\n        addFactory: addFactory,\n        getFactory: getFactory,\n        clearCache: clearCache,\n        proccesResults: proccesResults,\n\n        allFactories: allFactories,\n        factoriesNames: factoriesNames\n      };\n\n      function allFactories() {\n        return memory;\n      }\n\n      function factoriesNames() {\n        return names;\n      }\n\n      function addFactory(schema, synchronization) {\n        var factory = new AngularJsonAPIFactory(schema, synchronization);\n\n        memory[schema.type] = factory;\n        names.push(schema.type);\n      }\n\n      function getFactory(type) {\n        return memory[type];\n      }\n\n      function form(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t add not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].saved.form;\n      }\n\n      function get(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].get(id);\n      }\n\n      function remove(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t remove not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].remove(id);\n      }\n\n      function all(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get all of not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].all();\n      }\n\n      function clearCache() {\n        angular.forEach(memory, function(factory) {\n          factory.clearCache();\n        });\n      }\n\n      function proccesResults(results) {\n        var objects = {\n          data: [],\n          included: []\n        };\n\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n        }\n\n        var config = {\n          saved: true,\n          synchronized: true,\n          stable: true,\n          pristine: false,\n          initialization: false\n        };\n\n        angular.forEach(results.included, function(data) {\n          objects.included.push(getFactory(data.type).cache.addOrUpdate(data, config));\n        });\n\n        if (angular.isArray(results.data)) {\n          angular.forEach(results.data, function(data) {\n            objects.data.push(getFactory(data.type).cache.addOrUpdate(data, config));\n          });\n        } else {\n          objects.data.push(getFactory(results.data.type).cache.addOrUpdate(results.data, config));\n        }\n\n        return objects;\n      }\n    }\n  }\n\n})();\n\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(function($logProvider) {\n    $logProvider.debugEnabled(false);\n  })\n  .run(function(validateJS, $q) {\n    validateJS.Promise = $q;\n  });\n})();\n"],"sourceRoot":"/source/"}