{"version":3,"sources":["/source/jsonapi.module.js","/source/resource/resource-cache/resource-cache.factory.js","angular-jsonapi.min.js","/source/model/model-linker/model-linker.js","/source/model/model-form/model-form.factory.js","/source/model/abstract-model/abstract-model.js","/source/errors/validation-error/validation-error.factory.js","/source/errors/synchronization-error/synchronization-error.factory.js","/source/errors/errors-manager/errors-manager.factory.js","/source/utils/lazy-property.js","/source/utils/kebab-case.js","/source/utils/all-settled.js","/source/synchronizers/synchronizer-simple.factory.js","/source/synchronizers/synchronizer-prototype.js","/source/synchronizations/synchronization-rest.factory.js","/source/synchronizations/synchronization-prototype.js","/source/synchronizations/synchronization-local.factory.js","/source/schema/schema.factory.js","/source/schema/schema-link.factory.js","/source/resource/resource.factory.js","/source/model/model-factory.factory.js","/source/collection/collection.factory.js","/source/jsonapi.provider.js","/source/jsonapi.config.js"],"names":["angular","module","constant","pluralize","validate","AngularJsonAPIResourceCacheWrapper","uuid4","$log","AngularJsonAPIResourceCacheFactory","factory","AngularJsonAPIResourceCache","_this","this","data","removed","size","indexIds","undefined","addOrUpdate","validatedData","config","id","error","modelFactory","update","saved","initialization","fromJson","json","collection","synchronized","stable","pristine","isObject","updatedAt","forEach","objectData","toJson","object","push","clear","get","type","schema","index","params","debug","map","bind","setIndexIds","array","element","isString","remove","revertRemove","clearRemoved","prototype","create","$inject","AngularJsonAPIModelLinkerService","toLinkData","link","key","target","oneWay","relationships","polymorphic","model","__addHasMany","__processAddHasMany","__addHasOne","__processAddHasOne","unlink","__removeHasMany","__processRemove","reflectionSchema","reflectionKey","reflection","__swapResults","__wrapResults","oldReflectionSchema","oldReflection","result","__removeHasOne","reset","linkData","isArray","indexOf","splice","value","newValue","item","i","service","AngularJsonAPIModelFormWrapper","AngularJsonAPIModelValidationError","validateJS","$q","AngularJsonAPIModelFormFactory","parent","AngularJsonAPIModelForm","attributes","copy","save","auto","slice","validator","errors","validation","resolve","deferred","reject","errorsMap","attribute","add","attributesWrapper","constraintsWrapper","defer","async","then","promise","AngularJsonAPIAbstractModelWrapper","AngularJsonAPIModelSynchronizationError","AngularJsonAPIModelErrorsManager","$rootScope","$injector","AngularJsonAPIAbstractModel","loading","saving","Date","now","loadingCount","savingCount","synchronization","promises","__setData","form","synchronize","notify","response","$emit","action","cache","finish","concat","__decrementSavingCounter","__incrementSavingCounter","refresh","synchronizeIncluded","__incrementLoadingCounter","__decrementLoadingCounter","resolveIncluded","includedResponse","operation","success","results","included","$jsonapi","proccesResults","allSettled","unlinkAll","removeLink","linksObj","removeReflectionLink","resolveReflection","targets","hasErrors","answer","setAttributes","validators","setRelationships","relationshipData","links","linkOne","length","unlinkOne","getResource","AngularJsonAPIModelValidationErrorWrapper","ValidationErrorFactory","message","ValidationError","Error","captureStackTrace","constructor","context","Object","name","AngularJsonAPIModelSynchronizationErrorWrapper","SynchronizationErrorFactory","code","SynchronizationError","AngularJsonAPIModelErrorsManagerWrapper","ErrorsManagerFactory","description","ErrorConstructor","defaultFilter","ErrorsManager","obj","propertyName","callback","done","defineProperty","call","enumerable","configurable","str","replace","toLowerCase","$provide","decorator","$delegate","resolvedCallback","rejectedCallback","wrap","isFunction","reason","wrapped","hasOwnProperty","all","AngularJsonAPISynchronizerSimpleWrapper","AngularJsonAPISynchronizerPrototype","AngularJsonAPISynchronizerSimpleFactory","synchronizations","AngularJsonAPISynchronizerSimple","state","synchronizer","step","resolved","afterHooks","hook","finishHooks","rejected","noop","beginHooks","beforeHooks","synchronizationHooks","AngularJsonAPISynchronizerPrototypeWrapper","AngularJsonAPISynchronizationRestWrapper","AngularJsonAPISynchronizationPrototype","toKebabCase","$http","AngularJsonAPISynchronizationRestFactory","url","AngularJsonAPISynchronizationRest","method","headers","resolveHttp","rejectHttp","status","statusText","rejectServerOffline","rejectNoConnection","Accept","Content-Type","apply","arguments","AngularJsonAPISynchronizationPrototypeWrapper","allHooks","options","hookName","begin","beforeSynchro","afterSynchro","before","after","AngularJsonAPISynchronizationLocalWrapper","$window","AngularJsonAPISynchronizationLocalFactory","prefix","AngularJsonAPISynchronizationLocal","init","localStorage","getItem","removeItem","updateStorage","setItem","__updateStorage","AngularJsonAPISchemaWrapper","AngularJsonAPISchemaLink","AngularJsonAPISchemaFactory","AngularJsonAPISchema","include","linkSchema","linkName","linkSchemaObj","extend","join","AngularJsonAPILinkSchrapperLink","AngularJsonAPISchemaLinkFactory","plural","singular","AngularJsonAPIResourceWrapper","AngularJsonAPIModel","AngularJsonAPICollection","AngularJsonAPIResourceFactory","AngularJsonAPIResource","initialized","fetch","initialize","relationshipSchema","relationshipName","generate","clearCache","createModelFactory","schemaObj","Model","functions","metaFunction","metaFunctionName","AngularJsonAPICollectionWrapper","AngularJsonAPICollectionFactory","event","$on","console","log","jsonapiProvider","jsonapiFactory","allResources","memory","listResources","names","addResource","objects","$get","provider","$logProvider","debugEnabled","run","Promise"],"mappings":"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","file":"angular-jsonapi.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false, validate: false */\n  .constant('pluralize', pluralize)\n  .constant('validateJS', validate);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResourceCache', AngularJsonAPIResourceCacheWrapper);\n\n  function AngularJsonAPIResourceCacheWrapper(\n    uuid4,\n    $log\n  ) {\n\n    AngularJsonAPIResourceCache.prototype.get = get;\n    AngularJsonAPIResourceCache.prototype.index = index;\n    AngularJsonAPIResourceCache.prototype.setIndexIds = setIndexIds;\n    AngularJsonAPIResourceCache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPIResourceCache.prototype.fromJson = fromJson;\n    AngularJsonAPIResourceCache.prototype.toJson = toJson;\n    AngularJsonAPIResourceCache.prototype.clear = clear;\n\n    AngularJsonAPIResourceCache.prototype.remove = remove;\n    AngularJsonAPIResourceCache.prototype.revertRemove = revertRemove;\n    AngularJsonAPIResourceCache.prototype.clearRemoved = clearRemoved;\n\n    return {\n      create: AngularJsonAPIResourceCacheFactory\n    };\n\n    function AngularJsonAPIResourceCacheFactory(factory) {\n      return new AngularJsonAPIResourceCache(factory);\n    }\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPIResourceCache(factory) {\n      var _this = this;\n\n      _this.factory = factory;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n\n      _this.indexIds = undefined;\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData, config) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.factory.modelFactory(validatedData, config);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData, config.saved, config.initialization);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      var config = {\n        saved: true,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: true\n      };\n\n      if (angular.isObject(collection) && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n        _this.indexIds = collection.indexIds;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, config, objectData.updatedAt);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: [],\n        updatedAt: _this.updatedAt,\n        indexIds: _this.indexIds\n      };\n\n      angular.forEach(_this.data, function(object) {\n        if (object.error === false) {\n          json.data.push(object.toJson());\n        }\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.indexIds = undefined;\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      var data = {\n        id: id,\n        type: _this.factory.schema.type\n      };\n\n      var config = {\n        saved: true,\n        synchronized: false,\n        stable: false,\n        pristine: true\n      };\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.factory.modelFactory(data, config);\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization, used for index requests\n     * @param  {objec} params\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function index(params) {\n      var _this = this;\n\n      $log.debug('Unused params', params);\n\n      if (_this.indexIds === undefined) {\n        return _this.indexIds;\n      }\n\n      return _this.indexIds.map(_this.get.bind(_this));\n    }\n\n    /**\n     * Cache ids of objects returned by index request\n     * @param {ids array or AngularJsonAPIModel array} array Objects or ids to be cached\n     */\n    function setIndexIds(array) {\n      var _this = this;\n\n      _this.indexIds = [];\n\n      angular.forEach(array, function(element) {\n        if (angular.isString(element) && uuid4.validate(element)) {\n          _this.indexIds.push(element);\n        } else if (angular.isObject(element) && uuid4.validate(element.data.id)) {\n          _this.indexIds.push(element.data.id);\n        }\n      });\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n","!function(){\"use strict\";angular.module(\"angular-jsonapi\",[\"uuid4\"]).constant(\"pluralize\",pluralize).constant(\"validateJS\",validate)}(),function(){\"use strict\";function n(n,t){function e(n){return new r(n)}function r(n){var t=this;t.factory=n,t.data={},t.removed={},t.size=0,t.indexIds=void 0}function a(n,e){var r=this,a=n.id;return void 0===a?void t.error(\"Can't add data without id!\",n):(void 0===r.data[a]?(r.data[a]=r.factory.modelFactory(n,e),r.size+=1):r.data[a].update(n,e.saved,e.initialization),r.data[a])}function o(n){var t=this,e=angular.fromJson(n),r={saved:!0,\"synchronized\":!1,stable:!1,pristine:!1,initialization:!0};angular.isObject(e)&&void 0!==e.data&&(t.updatedAt=e.updatedAt,t.indexIds=e.indexIds,angular.forEach(e.data,function(n){var e=n.data;t.addOrUpdate(e,r,n.updatedAt)}))}function i(){var n=this,t={data:[],updatedAt:n.updatedAt,indexIds:n.indexIds};return angular.forEach(n.data,function(n){n.error===!1&&t.data.push(n.toJson())}),angular.toJson(t)}function s(){var n=this;n.indexIds=void 0,n.data={},n.removed={}}function c(n){var t=this,e={id:n,type:t.factory.schema.type},r={saved:!0,\"synchronized\":!1,stable:!1,pristine:!0};return void 0===t.data[n]&&(t.data[n]=t.factory.modelFactory(e,r)),t.data[n]}function u(n){var e=this;return t.debug(\"Unused params\",n),void 0===e.indexIds?e.indexIds:e.indexIds.map(e.get.bind(e))}function l(t){var e=this;e.indexIds=[],angular.forEach(t,function(t){angular.isString(t)&&n.validate(t)?e.indexIds.push(t):angular.isObject(t)&&n.validate(t.data.id)&&e.indexIds.push(t.data.id)})}function d(n){var t=this;return void 0!==t.data[n]&&(t.removed[n]=t.data[n],delete t.data[n],t.size-=1),t.removed[n]}function h(n){var t=this;return void 0!==t.removed[n]&&(t.data[n]=t.removed[n],delete t.removed[n],t.size+=1),t.data[n]}function f(n){var t=this;delete t.removed[n]}return r.prototype.get=c,r.prototype.index=u,r.prototype.setIndexIds=l,r.prototype.addOrUpdate=a,r.prototype.fromJson=o,r.prototype.toJson=i,r.prototype.clear=s,r.prototype.remove=d,r.prototype.revertRemove=h,r.prototype.clearRemoved=f,{create:e}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIResourceCache\",n),n.$inject=[\"uuid4\",\"$log\"]}(),function(){\"use strict\";function n(n){function t(n){return null===n?null:{type:n.data.type,id:n.data.id}}function e(t,e,r,i){var u;return void 0===t?(n.error(\"Can't add link to non existing object\",t,e,r),n.error(\"Object:\",t.data.type,t),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",e),[]):(u=t.schema.relationships[e],void 0===r?(n.error(\"Can't link non existing object\",t,e,r,u),n.error(\"Object:\",t.data.type,t),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",e),n.error(\"Schema:\",u),[]):void 0===u?(n.error(\"Can't add link not present in schema:\",t,e,r,u),n.error(\"Object:\",t.data.type,t),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",e),n.error(\"Schema:\",u),[]):null!==r&&u.polymorphic===!1&&u.model!==r.data.type?(n.error(\"This relation is not polymorphic, expected: \"+u.model+\" instead of \"+r.data.type),n.error(\"Object:\",t.data.type,t),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",e),n.error(\"Schema:\",u),[]):\"hasMany\"===u.type?i===!0?(c(t,e,r,!1),[]):a(t,e,r):\"hasOne\"===u.type?i===!0?(s(t,e,r,!1),[]):o(t,e,r):void 0)}function r(t,e,r,a){var o;return void 0===t?(n.error(\"Can't remove link from non existing object\",t,e,r),n.error(\"Object:\",t.data.type,t),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",e),[]):(o=t.schema.relationships[e],void 0===o?(n.error(\"Can't remove link not present in schema:\",t,e,r,o),n.error(\"Object:\",t.data.type,t),n.error(\"Target:\",r.data.type,r),n.error(\"Key:\",e),n.error(\"Schema:\",o),[]):a===!0?(l(t,e,r,!1),[]):i(t,e,r))}function a(n,t,e){var r,a=n.schema.relationships[t].reflection;return a===!1?(c(n,t,e),[]):(r=e.schema.relationships[a],\"hasOne\"===r.type?h(d(n,t,e),d(e,a,n),o(e,a,n)):\"hasMany\"===r.type?(c(n,t,e),c(e,a,n),[d(e,a,n)]):void 0)}function o(n,t,e){var r,a,o=n.schema.relationships[t].reflection,i=n.relationships[t],h=[];return s(n,t,e),void 0!==i&&null!==i&&(a=i.schema.relationships[o],\"hasOne\"===a.type?u(i,o,n):\"hasMany\"===a.type&&l(i,o,n),h.push(d(i,o,n))),void 0!==e&&null!==e&&o!==!1&&(r=e.schema.relationships[o],\"hasOne\"===r.type?s(e,o,n):\"hasMany\"===r.type&&c(e,o,n),h.push(d(e,o,n))),h}function i(n,t,e){var r,a=n.schema.relationships[t],o=a.reflection;return\"hasMany\"===a.type?l(n,t,e):\"hasOne\"===a.type&&u(n,t,e),o===!1?[]:(r=e.schema.relationships[o],\"hasOne\"===r.type?u(e,o,n):\"hasMany\"===r.type&&l(e,o,n),[d(e,o,n)])}function s(e,r,a,o){return n.debug(\"addHasOne\",e,r,a),e.relationships[r]=a,e.data.relationships[r].data=t(a),o!==!1&&e.reset(!0),!0}function c(e,r,a,o){var i=t(a);return n.debug(\"addHasMany\",e,r,a),angular.isArray(e.relationships[r])&&e.relationships[r].indexOf(a)>-1?!1:(e.relationships[r]=e.relationships[r]||[],e.data.relationships[r].data=e.data.relationships[r].data||[],e.relationships[r].push(a),e.data.relationships[r].data.push(i),o!==!1&&e.reset(!0),!0)}function u(t,e,r,a){return n.debug(\"removeHasOne\",t,e,r),void 0!==r&&t.relationships[e]!==r?!1:(t.relationships[e]=null,t.data.relationships[e].data=void 0,a!==!1&&t.reset(!0),!0)}function l(t,e,r,a){if(n.debug(\"removeHasMany\",t,e,r),void 0!==t.relationships[e]){if(void 0===r)return t.relationships[e]=[],t.data.relationships[e].data=[],a!==!1&&t.reset(!0),!0;var o=t.relationships[e].indexOf(r);return-1===o?!1:(t.relationships[e].splice(o,1),t.data.relationships[e].data.splice(o,1),a!==!1&&t.reset(!0),!0)}}function d(n,t,e){return{object:n,key:t,target:e}}function h(n,t,e){var r=-1;return angular.forEach(e,function(t,e){t.object===n.object&&t.key===n.key&&t.target===n.target&&(r=e)}),r>-1?e[r]=t:e.push(t),e}var f=this;return f.toLinkData=t,f.link=e,f.unlink=r,this}angular.module(\"angular-jsonapi\").service(\"AngularJsonAPIModelLinkerService\",n),n.$inject=[\"$log\"]}(),function(){\"use strict\";function n(n,t,e,r){function a(n){return new o(n)}function o(n){var t=this;t.data={id:n.data.id,type:n.data.type,attributes:{},relationships:{}},t.relationships={},t.parent=n,t.schema=n.schema,t.reset()}function i(){var n=this,t=angular.copy(n.data),e={};return angular.forEach(t.relationships,function(n,t){void 0!==n.data&&(e[t]=n)}),t.relationships=e,{data:t}}function s(){var n=this;return n.parent.save()}function c(n){var t=this;angular.forEach(t.schema.relationships,function(n,e){t.data.relationships[e]=angular.copy(t.parent.data.relationships[e])||{},angular.isArray(t.relationships[e])?t.relationships[e]=t.parent.relationships[e].slice():t.relationships[e]=t.parent.relationships[e]}),(n!==!0||t.parent[\"synchronized\"]!==!0)&&(angular.forEach(t.schema.attributes,function(n,e){t.data.attributes[e]=angular.copy(t.parent.data.attributes[e])}),t.parent.errors.validation.clear())}function u(t){function a(){void 0===t?c.parent.errors.validation.clear():c.parent.errors.validation.clear(t),u.resolve()}function o(e){c.parent.error=!0,void 0===t?c.parent.errors.validation.clear():c.parent.errors.validation.clear(t),angular.forEach(e,function(t,e){angular.forEach(t,function(t){c.parent.errors.validation.add(e,n.create(t,e))})}),u.reject(c.parent.errors.validation)}var i,s,c=this,u=r.defer();return void 0===t?(i=c.data.attributes,s=c.schema.attributes):(i={},s={},i[t]=c.data.attributes[t],s[t]=c.schema.attributes[t]),e.async(i,s).then(a,o),u.promise}function l(n,e){var a=this;return r.resolve(t.link(a,n,e,!0))}function d(n,e){var a=this;return r.resolve(t.unlink(a,n,e,!0))}return o.prototype.save=s,o.prototype.reset=c,o.prototype.validate=u,o.prototype.link=l,o.prototype.unlink=d,o.prototype.toJson=i,{create:a}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelForm\",n),n.$inject=[\"AngularJsonAPIModelValidationError\",\"AngularJsonAPIModelLinkerService\",\"validateJS\",\"$q\"]}(),function(){\"use strict\";function n(n,o,i,s,c,u,l,d,h,f){function p(t,e,r){var a=this;t.relationships=t.relationships||{},a.saved=void 0===e.saved?!0:e.saved,a.stable=void 0===e.stable?!0:e.stable,a[\"synchronized\"]=void 0===e[\"synchronized\"]?!0:e[\"synchronized\"],a.pristine=void 0===e.pristine?!0:e.pristine,a.removed=!1,a.loading=!1,a.saving=!1,a.updatedAt=a[\"synchronized\"]===!0?Date.now():r,a.loadingCount=0,a.savingCount=0,a.data={relationships:{},attributes:{}},a.relationships={},angular.forEach(a.schema.relationships,function(n,t){a.relationships[t]=void 0}),a.errors={validation:i.create(\"Validation\",\"Errors of attributes validation\",o),synchronization:i.create(\"Synchronization\",\"Errors of synchronizations\",n)},a.promises={},P(a,t),a.form=c.create(a)}function y(){function n(){i.synchronize(c).then(t,e,o)}function t(n){l.$emit(\"angularJsonAPI:\"+i.data.type+\":object:\"+c.action,\"resolved\",i,n),i.update(i.form.data),i.saved===!1&&(i.factory.cache.indexIds=i.factory.cache.indexIds||[],i.factory.cache.indexIds.push(i.data.id)),i[\"synchronized\"]=!0,i.saved=!0,i.stable=!0,n.finish(),i.errors.synchronization.concat(n.errors),s.resolve(i)}function e(n){l.$emit(\"angularJsonAPI:\"+i.data.type+\":object:save\",\"rejected\",i,n),n.finish(),i.errors.synchronization.concat(n.errors),s.reject(n)}function o(n){l.$emit(\"angularJsonAPI:\"+i.data.type+\":object:save\",\"notify\",i,n),s.notify(n)}var i=this,s=f.defer(),c={action:i.saved===!1?\"add\":\"update\",object:i};return i.form.validate().then(n,s.reject)[\"finally\"](a.bind(i,void 0)),r(i),s.promise}function g(){var n=this;void 0!==n.form&&n.form.reset()}function v(){function r(n){function r(n){return t(n),n.synchronize({action:\"include\",object:n})[\"finally\"](e.bind(n,void 0))}function a(t){angular.forEach(t,function(n,t){n.success===!0&&(l.$emit(\"angularJsonAPI:\"+o.included[t].data.type+\":object:include\",\"resolved\",o.included[t],n),n.value.finish())}),s.resolve(n)}var o=i.proccesResults(n.data);l.$emit(\"angularJsonAPI:\"+c.data.type+\":object:refresh\",\"resolved\",c,n),f.allSettled(o.included.map(r)).then(a,s.reject),c[\"synchronized\"]=!0,c.stable=!0,n.finish(),c.errors.synchronization.concat(n.errors)}function a(n){l.$emit(\"angularJsonAPI:\"+c.data.type+\":object:refresh\",\"rejected\",c,n),n.finish(),c.errors.synchronization.concat(n.errors),s.reject(n)}function o(n){l.$emit(\"angularJsonAPI:\"+c.data.type+\":object:refresh\",\"notify\",c,n),s.notify(n)}var i=d.get(\"$jsonapi\"),s=f.defer(),c=this,u={action:\"refresh\",object:c,params:c.schema.params.get};if(c.saved===!1){var h=n.create(\"Can't refresh new object\",null,0,\"refresh\");c.errors.synchronization.add(\"refresh\",h),s.reject(h)}else t(c),c.synchronize(u).then(r,a,o)[\"finally\"](e.bind(c,void 0));return s.promise}function m(){var n=this,t=angular.copy(n.data),e={};return angular.forEach(t.relationships,function(n,t){void 0!==n.data&&(e[t]=n)}),t.relationships=e,{data:t,updatedAt:n.updatedAt}}function b(){function n(n){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"resolved\",o,n),o.removed=!0,o.unlinkAll(),o.factory.cache.clearRemoved(o.data.id),n.finish(),o.errors.synchronization.concat(n.errors),i.resolve(n)}function t(n){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"rejected\",o,n),o.factory.cache.revertRemove(o.data.id),n.finish(),o.errors.synchronization.concat(n.errors),i.reject(n)}function e(n){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"notify\",o,n),i.notify(n)}var o=this,i=f.defer(),s={action:\"remove\",object:o};return o.factory.cache.remove(o.data.id),o.saved===!1?i.resolve():(r(o),o.synchronize(s).then(n,t,e)[\"finally\"](a.bind(o,void 0))),i.promise}function j(n){function r(n,t){var e=o.schema.relationships[t],r=e.reflection;angular.isArray(n)?angular.forEach(n,a.bind(void 0,r)):angular.isObject(n)&&a(r,n),\"hasOne\"===e.type?o.relationships[t]=null:\"hasMany\"===e.type&&(o.relationships[t]=[])}function a(n,r){function a(n){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"resolve\",o,n),n.finish(),o.errors.synchronization.concat(n.errors),i.resolve(o)}function c(n){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"rejected\",o,n),n.finish(),o.errors.synchronization.concat(n.errors),i.reject(n)}function u(n){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"notify\",o,n),n.finish(),i.notify(n)}var d=r.schema.relationships[n],h={action:\"unlinkReflection\",object:r,target:o,key:n};t(r),s.unlink(r,n,o,d),r.synchronize(h).then(a,c,u)[\"finally\"](e.bind(r,void 0))}var o=this,i=f.defer();return t(o),void 0===n?angular.forEach(o.relationships,r):r(o.relationships[n],n),e(o),i.promise}function A(o,i){function c(n){function r(n){return t(i),i.synchronize({action:\"linkReflection\",object:n.object,target:n.target,key:n.key})[\"finally\"](e.bind(i,void 0))}function a(n){angular.forEach(n,function(n,t){n.success===!0&&(l.$emit(\"angularJsonAPI:\"+c[t].object.data.type+\":object:linkReflection\",\"resolved\",c[t],n),n.value.finish())}),p.resolve(y)}l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:link\",\"resolved\",y,n);var c=s.link(y,o,i);y.stable=!0,n.finish(),y.errors.synchronization.concat(n.errors),f.allSettled(c.map(r)).then(a,p.reject)}function u(n){l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:link\",\"rejected\",y,n),p.reject(n.errors),n.finish(),y.errors.synchronization.concat(n.errors),p.reject(n)}function d(n){l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:link\",\"notify\",y,n),p.notify(n)}var h,p=f.defer(),y=this,g={action:\"link\",object:y,target:i,key:o};return void 0===i?(h=n.create(\"Can't link undefined\",null,0,\"link\"),y.errors.synchronization.add(\"link\",h),p.reject(h)):y.saved===!1?(h=n.create(\"Can't link new object\",null,0,\"link\"),y.errors.synchronization.add(\"link\",h),p.reject(h)):(r(y),y.synchronize(g).then(c,u,d)[\"finally\"](a.bind(y,void 0))),p.promise}function z(o,i){function c(n){function r(n){return t(i),i.synchronize({action:\"unlinkReflection\",object:n.object,target:n.target,key:n.key})[\"finally\"](e.bind(i,void 0))}function a(n){angular.forEach(n,function(t){t.success===!0&&(l.$emit(\"angularJsonAPI:\"+c[o].data.type+\":object:unlinkReflection\",\"resolved\",c[o],t),n.value.finish())}),p.resolve(y)}l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:unlink\",\"resolved\",y,n);var c=s.link(y,o,i);y.stable=!0,n.finish(),y.errors.synchronization.concat(n.errors),f.allSettled(c.map(r)).then(a,p.reject)}function u(n){l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:unlink\",\"rejected\",y,n),p.reject(n.errors),n.finish(),y.errors.synchronization.concat(n.errors),p.reject(n)}function d(n){l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:unlink\",\"notify\",y,n),p.notify(n)}var h,p=f.defer(),y=this,g={action:\"unlink\",object:y,target:i,key:o};return void 0===i?(h=n.create(\"Can't unlink undefined\",null,0,\"link\"),y.errors.synchronization.add(\"link\",h),p.reject(h)):y.saved===!1?(h=n.create(\"Can't unlink new object\",null,0,\"link\"),y.errors.synchronization.add(\"link\",h),p.reject(h)):(r(y),y.synchronize(g).then(c,u,d)[\"finally\"](a.bind(y,void 0))),p.promise}function k(n,r,a){var o=this;t(o),P(o,n),o.reset(r),o[\"synchronized\"]=a===!0?!1:!0,o.stable=a===!0?!1:!0,o.updatedAt=Date.now(),e(o)}function I(){var n=this,t=!1;return angular.forEach(n.errors,function(n){t=n.hasErrors()||t}),t}function P(n,t){function e(e,r){n.data.attributes[r]=t.attributes[r]}function r(e,r){var i=t.relationships[r];return void 0===i?void(n.data.relationships[r]={data:void 0}):(n.data.relationships[r]=n.data.relationships[r]||{},n.data.relationships[r].links=i.links,void(\"hasOne\"===e.type?a(n,r,i.data):\"hasMany\"===e.type&&angular.isArray(i.data)&&(0===i.data.length?(n.data.relationships[r].data=[],n.unlinkAll(r)):(angular.forEach(n.relationships[r],o.bind(void 0,n,r,i.data)),angular.forEach(i.data,a.bind(void 0,n,r))))))}function a(n,t,e){var r;if(null===e)return void s.link(n,t,null);if(void 0!==e){if(r=i.getResource(e.type),void 0===r)return void h.error(\"Factory not found\",e.type,e);var a=r.cache.get(e.id);s.link(n,t,a)}}function o(n,t,e,r){e.indexOf(r.data.id)>-1||s.unlink(n,t,r)}var i=d.get(\"$jsonapi\"),c=n.schema;return n.data.id=t.id,n.data.type=t.type,n.factory.schema.type!==t.type?(h.error(\"Different type then factory\",n.factory.schema.type,t),!1):u.validate(n.data.id)?(t.attributes=t.attributes||{},t.relationships=t.relationships||{},angular.forEach(c.attributes,e),angular.forEach(c.relationships,r),!0):(h.error(\"Invalid id\"),!1)}return p.prototype.refresh=v,p.prototype.remove=b,p.prototype.reset=g,p.prototype.save=y,p.prototype.update=k,p.prototype.link=A,p.prototype.unlink=z,p.prototype.unlinkAll=j,p.prototype.toJson=m,p.prototype.hasErrors=I,p}function t(n){n=void 0===n?this:n,n.loadingCount+=1,n.loading=!0}function e(n){n=void 0===n?this:n,n.loadingCount-=1,n.loading=n.loadingCount>0}function r(n){n=void 0===n?this:n,n.savingCount+=1,n.saving=!0}function a(n){n=void 0===n?this:n,n.savingCount-=1,n.saving=n.savingCount>0}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractModel\",n),n.$inject=[\"AngularJsonAPIModelSynchronizationError\",\"AngularJsonAPIModelValidationError\",\"AngularJsonAPIModelErrorsManager\",\"AngularJsonAPIModelLinkerService\",\"AngularJsonAPIModelForm\",\"uuid4\",\"$rootScope\",\"$injector\",\"$log\",\"$q\"]}(),function(){\"use strict\";function n(){function n(n,e){return new t(n,e)}function t(n,t){var e=this;Error.captureStackTrace(e,e.constructor),e.message=n,e.context={attribute:t}}return t.prototype=Object.create(Error.prototype),t.prototype.constructor=t,t.prototype.name=\"ValidationError\",{create:n}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelValidationError\",n)}(),function(){\"use strict\";function n(){function n(n,e,r,a){return new t(n,e,r,a)}function t(n,t,e,r){var a=this;Error.captureStackTrace(a,a.constructor),a.message=n,a.context={synchronization:t,code:e,action:r}}return t.prototype=Object.create(Error.prototype),t.prototype.constructor=t,t.prototype.name=\"SynchronizationError\",{create:n}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelSynchronizationError\",n)}(),function(){\"use strict\";function n(){function n(n,e,r,a){return new t(n,e,r,a)}function t(n,t,e,r){var a=this;a.name=n,a.description=t,a.ErrorConstructor=e,a.errors={},a.defaultFilter=r||function(){return!0}}function e(n){var t=this;void 0===n?angular.forEach(t.errors,function(n,e){t.errors[e]=[]}):t.errors[n]=[]}function r(n,t){var e=this;e.errors[n]=e.errors[n]||[],e.errors[n].push(t)}function a(n){var t=this;angular.forEach(n,function(n){t.errors[n.key]=[]}),angular.forEach(n,function(n){t.errors[n.key].push(n.object)})}function o(n){var t=this;if(void 0===n){var e=!1;return angular.forEach(t.errors,function(n){e=e||n.length>0}),e}return void 0!==t.errors[n]&&t.errors[n].length>0}return t.prototype.constructor=t,t.prototype.concat=a,t.prototype.clear=e,t.prototype.add=r,t.prototype.hasErrors=o,{create:n}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelErrorsManager\",n)}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"lazyProperty\",function(n,t,e){var r,a;Object.defineProperty(n,t,{get:function(){return a||(a=!0,r=e.call(n)),r},enumerable:!0,configurable:!0})})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"toKebabCase\",function(n){return n.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase()})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$provide\",function(n){n.decorator(\"$q\",[\"$delegate\",function(n){var t=n;return t.allSettled=t.allSettled||function(n,e,r){function a(n){return t.resolve(n).then(function(n){return angular.isFunction(e)&&e(n),{success:!0,value:n}},function(n){return angular.isFunction(r)&&r(n),{success:!1,reason:n}})}var o=angular.isArray(n)?[]:{};return angular.forEach(n,function(n,t){o.hasOwnProperty(t)||(o[t]=a(n))}),t.all(o)},t}])}])}(),function(){\"use strict\";function n(n,t,e){function r(n){return new a(n)}function a(t){var e=this;e.state={},n.call(e,t),angular.forEach(t,function(n){n.synchronizer=e})}function o(r){function a(n){d.notify({step:\"synchronization\",data:n})}function o(n){d.notify({step:\"synchronization\",errors:n})}function i(n){u.state[h]=u.state[h]||{},u.state[h].success=!0,angular.forEach(n,function(n){n.success===!1&&(u.state[h].success=!1)}),angular.forEach(u.synchronizations,function(t){angular.forEach(t.afterHooks[h],function(t){d.notify({step:\"after\",errors:t.call(u,r,n)})})});var t,e=[];angular.forEach(n,function(n){n.success===!0?t=n.value:e.push({key:h,object:n.reason})}),e.length>0?d.reject({data:t,finish:s,errors:e}):d.resolve({data:t,finish:s,errors:e})}function s(){angular.forEach(u.synchronizations,function(n){angular.forEach(n.finishHooks[h],function(n){d.notify({step:\"finish\",errors:n.call(u,r)})})})}function c(n){e.error(\"All settled rejected! Something went wrong\"),d.reject({finish:angular.noop,errors:n})}var u=this,l=[],d=t.defer(),h=r.action;return n.prototype.synchronize.call(u,r),angular.forEach(u.synchronizations,function(n){angular.forEach(n.beginHooks[h],function(n){d.notify({step:\"begin\",data:n.call(u,r)})})}),angular.forEach(u.synchronizations,function(n){angular.forEach(n.beforeHooks[h],function(n){d.notify({step:\"before\",data:n.call(u,r)})})}),angular.forEach(u.synchronizations,function(n){angular.forEach(n.synchronizationHooks[h],function(n){l.push(n.call(u,r))})}),t.allSettled(l,a,o).then(i,c),d.promise}return a.prototype=Object.create(n.prototype),a.prototype.constructor=a,a.prototype.synchronize=o,{create:r}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerSimple\",n),n.$inject=[\"AngularJsonAPISynchronizerPrototype\",\"$q\",\"$log\"]}(),function(){\"use strict\";function n(n){function t(n){var t=this;t.synchronizations=n}function e(t){var e=this;n.debug(\"Synchro Collection\",e.factory.schema.type,t),void 0===t.action&&n.error(\"Can't synchronize undefined action\",t)}return t.prototype.synchronize=e,t}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerPrototype\",n),n.$inject=[\"$log\"]}(),function(){\"use strict\";function n(n,t,e,r,a,o){function i(n,t){return new s(n,t)}function s(r,i){function s(n){return o({method:\"GET\",headers:v,url:i,params:n.params||{}}).then(p,y.bind(null,\"all\"))}function c(n){return o({method:\"GET\",headers:v,url:i+\"/\"+n.object.data.id,params:n.params||{}}).then(p,y.bind(null,\"get\"))}function u(n){return o({method:\"DELETE\",headers:v,url:i+\"/\"+n.object.data.id}).then(p,y.bind(null,\"remove\"))}function l(t){var e=a.defer(),r=t.object.schema.relationships[t.key];return t.object.removed===!0?e.reject(n.create(\"Object has been removed\",g,0,\"unlink\")):void 0!==t.target&&void 0===t.target.data.id?e.reject(n.create(\"Can't unlink object without id through rest call\",g,0,\"unlink\")):\"hasOne\"===r.type?o({method:\"DELETE\",headers:v,url:i+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(p,y.bind(null,\"get\")).then(e.resolve,e.reject):\"hasMany\"===r.type&&(void 0===t.target?o({method:\"PUT\",headers:v,data:{data:[]},url:i+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(p,y.bind(null,\"unlink\")).then(e.resolve,e.reject):o({method:\"DELETE\",headers:v,url:i+\"/\"+t.object.data.id+\"/relationships/\"+t.key+\"/\"+t.target.data.id}).then(p,y.bind(null,\"unlink\")).then(e.resolve,e.reject)),e.promise}function d(n){var t=a.defer(),r=n.object.schema.relationships[n.key];return n.object.removed===!0?t.reject({errors:[{status:0,statusText:\"Object has been removed\"}]}):void 0===n.target||void 0===n.target.data.id?t.reject({errors:[{status:0,statusText:\"Can't link object without id through rest call\"}]}):\"hasOne\"===r.type?o({method:\"PUT\",headers:v,data:{data:e.toLinkData(n.target)},url:i+\"/\"+n.object.data.id+\"/relationships/\"+n.key}).then(p,y.bind(null,\"link\")).then(t.resolve,t.reject):\"hasMany\"===r.type&&o({method:\"POST\",headers:v,data:{data:[e.toLinkData(n.target)]},url:i+\"/\"+n.object.data.id+\"/relationships/\"+n.key}).then(p,y.bind(null,\"link\")).then(t.resolve,t.reject),t.promise}function h(n){return o({method:\"PUT\",headers:v,url:i+\"/\"+n.object.data.id,data:n.object.form.toJson()}).then(p,y.bind(null,\"update\"))}function f(n){return o({method:\"POST\",headers:v,url:i+\"/\",data:n.object.form.toJson()}).then(p,y.bind(null,\"add\"))}function p(n){return a.resolve(n.data)}function y(t,e){function r(e){console.log(\"offline\"),console.log(e),s.reject(n.create(\"Server is offline\",g,e.status,t))}function i(){console.log(\"no internet\"),s.reject(n.create(\"No internet connection\",g,e.status,t))}var s=a.defer();return 0===e.status?o({method:\"GET\",url:\"https://status.cloud.google.com/incidents.schema.json\"}).then(r,i):s.reject(n.create(e.statusText,g,e.status,t)),s.promise}var g=this,v={Accept:\"application/vnd.api+json\",\"Content-Type\":\"application/vnd.api+json\"};t.apply(g,arguments),g.synchronization(\"remove\",u),g.synchronization(\"unlink\",l),g.synchronization(\"link\",d),g.synchronization(\"update\",h),g.synchronization(\"add\",f),g.synchronization(\"all\",s),g.synchronization(\"get\",c),g.synchronization(\"refresh\",c)}return s.prototype=Object.create(t.prototype),s.prototype.constructor=s,{create:i}}angular.module(\"angular-jsonapi-rest\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationRest\",n),n.$inject=[\"AngularJsonAPIModelSynchronizationError\",\"AngularJsonAPISynchronizationPrototype\",\"AngularJsonAPIModelLinkerService\",\"toKebabCase\",\"$q\",\"$http\"]}(),function(){\"use strict\";function n(){function n(n){var t=this,e=[\"add\",\"init\",\"get\",\"all\",\"clearCache\",\"remove\",\"unlink\",\"unlinkReflection\",\"link\",\"linkReflection\",\"update\",\"refresh\",\"include\"];t.name=n,t.state={},t.beginHooks={},t.beforeHooks={},t.synchronizationHooks={},t.afterHooks={},t.finishHooks={},t.options={},angular.forEach(e,function(n){t.beginHooks[n]=[],t.beforeHooks[n]=[],t.synchronizationHooks[n]=[],t.afterHooks[n]=[],t.finishHooks[n]=[],t.state[n]={loading:!1,success:!0}})}function t(n,t){var e=this;e.beginHooks[n].push(t)}function e(n,t){var e=this;e.finishHooks[n].push(t)}function r(n,t){var e=this;e.beforeHooks[n].push(t)}function a(n,t){var e=this;e.afterHooks[n].push(t)}function o(n,t){var e=this;e.synchronizationHooks[n].push(t)}return n.prototype.before=r,n.prototype.after=a,n.prototype.begin=t,n.prototype.finish=e,n.prototype.synchronization=o,n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizationPrototype\",n)}(),function(){\"use strict\";function n(n,t,e){function r(n,t){return new a(n,t)}function a(r,a){function o(){var n=c.synchronizer.factory.schema.type;return e.resolve(t.localStorage.getItem(a+\".\"+n))}function i(){var n=c.synchronizer.factory.schema.type;t.localStorage.removeItem(a+\".\"+n)}function s(){var n=c.synchronizer.factory.schema.type,e=c.synchronizer.factory.cache;t.localStorage.setItem(a+\".\"+n,e.toJson())}var c=this;a=a||\"AngularJsonAPI\",c.__updateStorage=s,n.apply(c,arguments),c.synchronization(\"init\",o),c.begin(\"clearCache\",i),c.begin(\"remove\",s),c.begin(\"refresh\",s),c.begin(\"unlink\",s),c.begin(\"unlinkReflection\",s),c.begin(\"link\",s),c.begin(\"linkReflection\",s),c.begin(\"update\",s),c.begin(\"add\",s),c.begin(\"get\",s),c.begin(\"all\",s),c.begin(\"include\",s),c.finish(\"init\",s),c.finish(\"clearCache\",s),c.finish(\"remove\",s),c.finish(\"refresh\",s),c.finish(\"unlink\",s),c.finish(\"unlinkReflection\",s),c.finish(\"link\",s),c.finish(\"linkReflection\",s),c.finish(\"update\",s),c.finish(\"add\",s),c.finish(\"get\",s),c.finish(\"all\",s),c.finish(\"include\",s)}return a.prototype=Object.create(n.prototype),a.prototype.constructor=a,{create:r}}angular.module(\"angular-jsonapi-local\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationLocal\",n),n.$inject=[\"AngularJsonAPISynchronizationPrototype\",\"$window\",\"$q\"]}(),function(){\"use strict\";function n(n,t,e){function r(n){return new a(n)}function a(n){var t=this,r=n.include||{};n.include=r,r.get=n.include.get||[],r.all=n.include.all||[],t.params={get:{},all:{}},angular.forEach(n.relationships,function(t,a){var o=e.create(t,a,n.type);n.relationships[a]=o,o.included===!0&&(r.get.push(a),\"hasOne\"===o.type&&r.all.push(a))}),angular.extend(t,n),r.get.length>0&&(t.params.get.include=r.get.join(\",\")),r.all.length>0&&(t.params.all.include=r.all.join(\",\"))}return{create:r}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchema\",n),n.$inject=[\"$log\",\"pluralize\",\"AngularJsonAPISchemaLink\"]}(),function(){\"use strict\";function n(n,t){function e(n,t,e){return new r(n,t,e)}function r(e,r,a){var o=this;angular.isString(e)?(o.model=t.plural(r),o.type=e,o.polymorphic=!1,o.reflection=a):(void 0===e.type&&n.error(\"Schema of link without a type: \",e,r),\"hasMany\"!==e.type&&\"hasOne\"!==e.type&&n.error(\"Schema of link with wrong type: \",e.type,\"available: hasOne, hasMany\"),o.model=e.model||t.plural(r),o.type=e.type,o.polymorphic=e.polymorphic||!1,void 0===e.reflection?o.reflection=\"hasMany\"===o.type?t.singular(a):a:o.reflection=e.reflection,o.included=e.included||!1)}return{create:e}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchemaLink\",n),n.$inject=[\"$log\",\"pluralize\"]}(),function(){\"use strict\";function n(n,t,e,r,a,o,i,s){function c(n,t){return new u(n,t)}function u(r,a){function i(n){o.$emit(\"angularJsonAPI:\"+u.type+\":factory:init\",\"resolved\",n),u.cache.fromJson(n.data),u.initialized=!0,n.finish()}function s(n){o.$emit(\"angularJsonAPI:\"+u.type+\":factory:init\",\"rejected\",n),n.finish(),u.initialized=!0}function c(n){o.$emit(\"angularJsonAPI:\"+u.type+\":factory:init\",\"notify\",n)}var u=this,l={action:\"init\"};u.schema=t.create(r),u.cache=e.create(u),u.synchronizer=a,u.synchronizer.factory=u,u.modelFactory=n.modelFactory(u.schema,u),u.initialized=!1,u.type=u.schema.type,a.factory=u,u.synchronizer.synchronize(l).then(i,s,c)}function l(n){var t=this;if(!a.validate(n))return s.reject({errors:[{status:0,statusText:\"Invalid id not uuid4\"}]});var e=t.cache.get(n);return e.refresh(),e}function d(n){var t=this;n=n||{};var e=r.create(t,angular.extend(n,t.schema.params.all));return e.fetch(),e}function h(n){var t=this,e=t.cache.remove(n);return e.remove()}function f(){var n=this,t={};angular.forEach(n.schema.relationships,function(n,e){\"hasOne\"===n.type?t[e]={data:null}:\"hasMany\"===n.type&&(t[e]={data:[]})});var e={type:n.type,id:a.generate(),attributes:{},relationships:t},r={saved:!1,\"synchronized\":!1,stable:!1,pristine:!1,initialization:!1},i=n.cache.addOrUpdate(e,r);return o.$emit(\"angularJsonAPI:\"+n.type+\":factory:initialize\",\"resolved\",i),i}function p(){function n(n){o.$emit(\"angularJsonAPI:\"+r.type+\":factory:clearCache\",\"resolved\",n),n.finish(),a.resolve(n)}function t(n){o.$emit(\"angularJsonAPI:\"+r.type+\":factory:clearCache\",\"resolved\",n),n.finish(),a.reject(n)}function e(n){o.$emit(\"angularJsonAPI:\"+r.type+\":factory:clearCache\",\"notify\",n),a.notify(n)}var r=this,a=s.defer(),i={action:\"clearCache\"};return r.cache.clear(),r.synchronizer.synchronize(i).then(n,t,e),a}return u.prototype.get=l,u.prototype.all=d,u.prototype.remove=h,u.prototype.initialize=f,u.prototype.clearCache=p,{create:c}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIResource\",n),n.$inject=[\"AngularJsonAPIModel\",\"AngularJsonAPISchema\",\"AngularJsonAPIResourceCache\",\"AngularJsonAPICollection\",\"uuid4\",\"$rootScope\",\"$log\",\"$q\"]}(),function(){\"use strict\";function n(n,t,e){function r(t,r){function a(n,t,e){return new o(n,t,e)}var o=function(t,r,a){var o=this;t.type!==o.schema.type&&e.error(\"Data type other then declared in schema: \",t.type,\" instead of \",o.schema.type),n.call(o,t,r,a),o.form.parent=o};return o.prototype=Object.create(n.prototype),o.prototype.constructor=o,o.prototype.schema=t,o.prototype.factory=r,o.prototype.synchronize=r.synchronizer.synchronize.bind(r.synchronizer),angular.forEach(t.functions,function(n,t){o.prototype[t]=function(){return n.apply(this,arguments)}}),a}return{modelFactory:r}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModel\",n),n.$inject=[\"AngularJsonAPIAbstractModel\",\"AngularJsonAPISchema\",\"$log\"]}(),function(){\"use strict\";function n(n,r,a,o,i){function s(n,t){return new c(n,t)}function c(t,e){function o(n,t,e){var r;\"resolved\"===t&&void 0!==c.data&&(r=c.data.indexOf(e),r>-1&&(c.data.splice(r,1),c.factory.cache.setIndexIds(c.data)))}function i(){c.data=void 0,c.pristine=!0}function s(n,t,e){\"resolved\"===t&&(c.data=c.data||[],c.data.push(e))}var c=this;c.factory=t,c.type=t.schema.type,c.params=e,c.errors={synchronization:r.create(\"Synchronization\",\"Errors of synchronizations\",n)},c.data=c.factory.cache.index(c.params),\nc.loading=!1,c.loadingCount=0,c[\"synchronized\"]=!1,c.pristine=void 0===c.data,a.$on(\"angularJsonAPI:\"+c.type+\":object:remove\",o),a.$on(\"angularJsonAPI:\"+c.type+\":factory:clearCache\",i),a.$on(\"angularJsonAPI:\"+c.type+\":object:add\",s)}function u(){var n=this,t=!1;return angular.forEach(n.errors,function(n){t=n.hasErrors()||t}),t}function l(n){var t=this;return t.factory.get(n)}function d(){function n(n){function r(n){return t(n),n.synchronize({action:\"include\",object:n})[\"finally\"](e.bind(n,void 0))}function o(t){angular.forEach(t,function(n,t){n.success===!0&&(a.$emit(\"angularJsonAPI:\"+s.included[t].data.type+\":object:include\",\"resolved\",s.included[t],n),n.value.finish())}),u.resolve(n)}var s=l.proccesResults(n.data);a.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"resolved\",c,n),i.allSettled(s.included.map(r)).then(o,u.reject),angular.forEach(c.data,e),c.data=s.data,c.updatedAt=Date.now(),c[\"synchronized\"]=!0,c.factory.cache.setIndexIds(c.data),n.finish(),c.errors.synchronization.concat(n.errors),u.resolve(c)}function r(n){a.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"rejected\",c,n),console.log(n),angular.forEach(c.data,e),n.finish(),c.errors.synchronization.concat(n.errors),u.reject(n)}function s(n){a.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"notify\",c,n),u.notify(n)}var c=this,u=i.defer(),l=o.get(\"$jsonapi\"),d={action:\"all\",params:c.params};return t(c),angular.forEach(c.data,t),c.factory.synchronizer.synchronize(d).then(n,r,s)[\"finally\"](e.bind(c,void 0)),u.promise}return c.prototype.fetch=d,c.prototype.refresh=d,c.prototype.get=l,c.prototype.hasErrors=u,{create:s}}function t(n){n=void 0===n?this:n,n.loadingCount+=1,n.loading=!0}function e(n){n=void 0===n?this:n,n.loadingCount-=1,n.loading=n.loadingCount>0}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICollection\",n),n.$inject=[\"AngularJsonAPIModelSynchronizationError\",\"AngularJsonAPIModelErrorsManager\",\"$rootScope\",\"$injector\",\"$q\"]}(),function(){\"use strict\";function n(){function n(n,r){function a(){return t}function o(){return e}function i(n,a){var o=r.create(n,a);t[n.type]=o,e.push(n.type)}function s(n){return t[n]}function c(e){return void 0===t[e]&&n.error(\"Can\t add not existing object type: \"+e+\". Use initialize.\"),t[e].saved.form}function u(e,r){return void 0===t[e]&&n.error(\"Can\t get not existing object type: \"+e+\". Use initialize.\"),t[e].get(r)}function l(e,r){return void 0===t[e]&&n.error(\"Can\t remove not existing object type: \"+e+\". Use initialize.\"),t[e].remove(r)}function d(e){return void 0===t[e]&&n.error(\"Can\t get all of not existing object type: \"+e+\". Use initialize.\"),t[e].all()}function h(){angular.forEach(t,function(n){n.clearCache()})}function f(t){var e={data:[],included:[]};void 0===t&&n.error(\"Can't proccess results:\",t);var r={saved:!0,\"synchronized\":!0,stable:!0,pristine:!1,initialization:!1};return angular.forEach(t.included,function(n){e.included.push(s(n.type).cache.addOrUpdate(n,r))}),angular.isArray(t.data)?angular.forEach(t.data,function(n){e.data.push(s(n.type).cache.addOrUpdate(n,r))}):e.data.push(s(t.data.type).cache.addOrUpdate(t.data,r)),e}return{form:c,get:u,remove:l,all:d,addResource:i,getResource:s,clearCache:h,proccesResults:f,allResources:a,listResources:o}}var t={},e=[];this.$get=n,n.$inject=[\"$log\",\"AngularJsonAPIResource\"]}angular.module(\"angular-jsonapi\").provider(\"$jsonapi\",n)}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$logProvider\",function(n){n.debugEnabled(!1)}]).run([\"validateJS\",\"$q\",function(n,t){n.Promise=t}])}();\n//# sourceMappingURL=angular-jsonapi.min.js.map","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, oneWay) {\n      var schema;\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema.type === 'hasMany') {\n        if (oneWay === true) {\n          __addHasMany(object, key, target, false);\n          return [];\n        } else {\n          return __processAddHasMany(object, key, target);\n        }\n      } else if (schema.type === 'hasOne') {\n        if (oneWay === true) {\n          __addHasOne(object, key, target, false);\n          return [];\n        } else {\n          return __processAddHasOne(object, key, target);\n        }\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, oneWay) {\n      var schema;\n\n      if (object === undefined) {\n        $log.error('Can\\'t remove link from non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (oneWay === true) {\n        __removeHasMany(object, key, target, false);\n        return [];\n      } else {\n        return __processRemove(object, key, target);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __processAddHasMany(object, key, target) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var reflectionSchema;\n\n      if (reflectionKey === false) {\n        __addHasMany(object, key, target);\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        return __swapResults(\n          __wrapResults(object, key, target),\n          __wrapResults(target, reflectionKey, object),\n          __processAddHasOne(target, reflectionKey, object)\n        );\n      } else if (reflectionSchema.type === 'hasMany') {\n        __addHasMany(object, key, target);\n        __addHasMany(target, reflectionKey, object);\n        return [__wrapResults(target, reflectionKey, object)];\n      }\n    }\n\n    function __processAddHasOne(object, key, target) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var oldReflection = object.relationships[key];\n      var reflectionSchema;\n      var oldReflectionSchema;\n      var result = [];\n\n      __addHasOne(object, key, target);\n\n      if (oldReflection !== undefined && oldReflection !== null) {\n        oldReflectionSchema = oldReflection.schema.relationships[reflectionKey];\n\n        if (oldReflectionSchema.type === 'hasOne') {\n          __removeHasOne(oldReflection, reflectionKey, object);\n        } else if (oldReflectionSchema.type === 'hasMany') {\n          __removeHasMany(oldReflection, reflectionKey, object);\n        }\n\n        result.push(__wrapResults(oldReflection, reflectionKey, object));\n      }\n\n      if (target !== undefined && target !== null && reflectionKey !== false) {\n        reflectionSchema = target.schema.relationships[reflectionKey];\n\n        if (reflectionSchema.type === 'hasOne') {\n          __addHasOne(target, reflectionKey, object);\n        } else if (reflectionSchema.type === 'hasMany') {\n          __addHasMany(target, reflectionKey, object);\n        }\n\n        result.push(__wrapResults(target, reflectionKey, object));\n      }\n\n      return result;\n    }\n\n    function __processRemove(object, key, target) {\n      var schema = object.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema;\n\n      if (schema.type === 'hasMany') {\n        __removeHasMany(object, key, target);\n      } else if (schema.type === 'hasOne') {\n        __removeHasOne(object, key, target);\n      }\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        __removeHasOne(target, reflectionKey, object);\n      } else if (reflectionSchema.type === 'hasMany') {\n        __removeHasMany(target, reflectionKey, object);\n      }\n\n      return [__wrapResults(target, reflectionKey, object)];\n    }\n\n    function __addHasOne(object, key, target, reset) {\n      $log.debug('addHasOne', object, key, target);\n\n      object.relationships[key] = target;\n      object.data.relationships[key].data = toLinkData(target);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, reset) {\n      var linkData = toLinkData(target);\n      $log.debug('addHasMany', object, key, target);\n\n      if (angular.isArray(object.relationships[key]) && object.relationships[key].indexOf(target) > -1) {\n        return false;\n      }\n\n      object.relationships[key] = object.relationships[key] || [];\n      object.data.relationships[key].data = object.data.relationships[key].data || [];\n\n      object.relationships[key].push(target);\n      object.data.relationships[key].data.push(linkData);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, reset) {\n      $log.debug('removeHasOne', object, key, target);\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        return false;\n      }\n\n      object.relationships[key] = null;\n      object.data.relationships[key].data = undefined;\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, reset) {\n      $log.debug('removeHasMany', object, key, target);\n\n      if (object.relationships[key] === undefined) {\n        return;\n      }\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n        if (reset !== false) {\n          object.reset(true);\n        }\n\n        return true;\n      }\n\n      var index = object.relationships[key].indexOf(target);\n\n      if (index === -1) {\n        return false;\n      }\n\n      object.relationships[key].splice(index, 1);\n      object.data.relationships[key].data.splice(index, 1);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __wrapResults(object, key, target) {\n      return {\n        object: object,\n        key: key,\n        target: target\n      };\n    }\n\n    function __swapResults(value, newValue, array) {\n      var index = -1;\n      angular.forEach(array, function(item, i) {\n        if (item.object === value.object && item.key === value.key && item.target === value.target) {\n          index = i;\n        }\n      });\n\n      if (index > -1) {\n        array[index] = newValue;\n      } else {\n        array.push(newValue);\n      }\n\n      return array;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelLinkerService,\n    validateJS,\n    $q\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return {\n      create: AngularJsonAPIModelFormFactory\n    };\n\n    function AngularJsonAPIModelFormFactory(parent) {\n      return new AngularJsonAPIModelForm(parent);\n    }\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        id: parent.data.id,\n        type: parent.data.type,\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset(auto) {\n      var _this = this;\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = angular.copy(_this.parent.data.relationships[key]) || {};\n        if (angular.isArray(_this.relationships[key])) {\n          _this.relationships[key] = _this.parent.relationships[key].slice();\n        } else {\n          _this.relationships[key] = _this.parent.relationships[key];\n        }\n      });\n\n      if (auto === true && _this.parent.synchronized === true) {\n        return;\n      }\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        _this.data.attributes[key] = angular.copy(_this.parent.data.attributes[key]);\n      });\n\n      _this.parent.errors.validation.clear();\n    }\n\n    /**\n     * Validates form\n     * @return {promise} Promise rejected to errors object indexed by keys. If the\n     * key param i stated it only validates an attribute, else all attributes.\n     */\n    function validate(key) {\n      var _this = this;\n      var attributesWrapper;\n      var constraintsWrapper;\n      var deferred = $q.defer();\n\n      if (key === undefined) {\n        attributesWrapper = _this.data.attributes;\n        constraintsWrapper = _this.schema.attributes;\n      } else {\n        attributesWrapper = {};\n        constraintsWrapper = {};\n\n        attributesWrapper[key] = _this.data.attributes[key];\n        constraintsWrapper[key] = _this.schema.attributes[key];\n      }\n\n      validateJS.async(\n        attributesWrapper,\n        constraintsWrapper\n      ).then(resolve, reject);\n\n      function resolve() {\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        deferred.resolve();\n      }\n\n      function reject(errorsMap) {\n        _this.parent.error = true;\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        angular.forEach(errorsMap, function(errors, attribute) {\n          angular.forEach(errors, function(error) {\n            _this.parent.errors.validation.add(attribute, AngularJsonAPIModelValidationError.create(error, attribute));\n          });\n        });\n\n        deferred.reject(_this.parent.errors.validation);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target) {\n      var _this = this;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.link(_this, key, target, true));\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target) {\n      var _this = this;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.unlink(_this, key, target, true));\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelSynchronizationError,\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelErrorsManager,\n    AngularJsonAPIModelLinkerService,\n    AngularJsonAPIModelForm,\n    uuid4,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    AngularJsonAPIAbstractModel.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {object} config   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, config, updatedAt) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      /**\n       * Is not a new record\n       * @type {Boolean}\n       */\n      _this.saved = config.saved === undefined ? true : config.saved;\n\n      /**\n       * Is present on the server\n       * @type {Boolean}\n       */\n      _this.stable = config.stable === undefined ? true : config.stable;\n\n      /**\n       * Has been synchronized with the server\n       * @type {Boolean}\n       */\n      _this.synchronized = config.synchronized === undefined ? true : config.synchronized;\n\n      /**\n       * Has just been created by request and may not exist on the server\n       * @type {Boolean}\n       */\n      _this.pristine = config.pristine === undefined ? true : config.pristine;\n\n      _this.removed = false;\n      _this.loading = false;\n      _this.saving = false;\n      _this.updatedAt = _this.synchronized === true ? Date.now() : updatedAt;\n\n      _this.loadingCount = 0;\n      _this.savingCount = 0;\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(schema, key) {\n        _this.relationships[key] = undefined;\n      });\n\n      _this.errors = {\n        validation: AngularJsonAPIModelErrorsManager.create(\n          'Validation',\n          'Errors of attributes validation',\n          AngularJsonAPIModelValidationError\n        ),\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Synchronization',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSynchronizationError\n        )\n      };\n\n      _this.promises = {};\n\n      __setData(_this, data);\n\n      _this.form = AngularJsonAPIModelForm.create(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: _this.saved === false ? 'add' : 'update',\n        object: _this\n      };\n\n      _this.form.validate().then(\n        synchronize,\n        deferred.reject\n      ).finally(__decrementSavingCounter.bind(_this, undefined));\n\n      __incrementSavingCounter(_this);\n\n      return deferred.promise;\n\n      function synchronize() {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:' + config.action, 'resolved', _this, response);\n        _this.update(_this.form.data);\n\n        if (_this.saved === false) {\n          _this.factory.cache.indexIds = _this.factory.cache.indexIds || [];\n          _this.factory.cache.indexIds.push(_this.data.id);\n        }\n\n        _this.synchronized = true;\n        _this.saved = true;\n        _this.stable = true;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      if (_this.form !== undefined) {\n        _this.form.reset();\n      }\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh() {\n      var $jsonapi = $injector.get('$jsonapi');\n      var deferred = $q.defer();\n      var _this = this;\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: _this.schema.params.get\n      };\n\n      if (_this.saved === false) {\n        var error = AngularJsonAPIModelSynchronizationError.create('Can\\'t refresh new object', null, 0, 'refresh');\n        _this.errors.synchronization.add('refresh', error);\n        deferred.reject(error);\n      } else {\n        __incrementLoadingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        _this.synchronized = true;\n        _this.stable = true;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      var config = {\n        action: 'remove',\n        object: _this\n      };\n\n      _this.factory.cache.remove(_this.data.id);\n\n      if (_this.saved === false) {\n        deferred.resolve();\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'resolved', _this, response);\n        _this.removed = true;\n        _this.unlinkAll();\n        _this.factory.cache.clearRemoved(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'rejected', _this, response);\n        _this.factory.cache.revertRemove(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlink all reflection relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      __incrementLoadingCounter(_this);\n\n      if (key === undefined) {\n        angular.forEach(_this.relationships, removeLink);\n      } else {\n        removeLink(_this.relationships[key], key);\n      }\n\n      __decrementLoadingCounter(_this);\n\n      return deferred.promise;\n\n      function removeLink(linksObj, key) {\n        var schema = _this.schema.relationships[key];\n        var reflectionKey = schema.reflection;\n\n        if (angular.isArray(linksObj)) {\n          angular.forEach(linksObj, removeReflectionLink.bind(undefined, reflectionKey));\n        } else if (angular.isObject(linksObj)) {\n          removeReflectionLink(reflectionKey, linksObj);\n        }\n\n        if (schema.type === 'hasOne') {\n          _this.relationships[key] = null;\n        } else if (schema.type === 'hasMany') {\n          _this.relationships[key] = [];\n        }\n      }\n\n      function removeReflectionLink(reflectionKey, target) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n        var config = {\n          action: 'unlinkReflection',\n          object: target,\n          target: _this,\n          key: reflectionKey\n        };\n\n        __incrementLoadingCounter(target);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        target.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(target, undefined));\n\n        function resolve(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'resolve', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.resolve(_this);\n        }\n\n        function reject(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'rejected', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.reject(response);\n        }\n\n        function notify(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'link',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSynchronizationError.create('Can\\'t link undefined', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else if (_this.saved === false) {\n        error = AngularJsonAPIModelSynchronizationError.create('Can\\'t link new object', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'linkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].object.data.type + ':object:linkReflection', 'resolved', targets[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked if undefined unlinks all\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'unlink',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSynchronizationError.create('Can\\'t unlink undefined', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else if (_this.saved === false) {\n        error = AngularJsonAPIModelSynchronizationError.create('Can\\'t unlink new object', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'unlinkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:unlinkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData, auto, initialization) {\n      var _this = this;\n\n      __incrementLoadingCounter(_this);\n\n      __setData(_this, validatedData);\n      _this.reset(auto);\n      _this.synchronized = initialization === true ? false : true;\n      _this.stable = initialization === true ? false : true;\n      _this.updatedAt = Date.now();\n\n      __decrementLoadingCounter(_this);\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData) {\n\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.factory.schema.type !== validatedData.type) {\n        $log.error('Different type then factory', object.factory.schema.type, validatedData);\n        return false;\n      }\n\n      if (!uuid4.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        var relationshipData = validatedData.relationships[key];\n\n        if (relationshipData === undefined) {\n          object.data.relationships[key] = {data: undefined};\n          return;\n        }\n\n        object.data.relationships[key] = object.data.relationships[key] || {};\n        object.data.relationships[key].links = relationshipData.links;\n\n        if (schema.type === 'hasOne') {\n          linkOne(object, key, relationshipData.data);\n        } else if (schema.type === 'hasMany') {\n          if (angular.isArray(relationshipData.data)) {\n            if (relationshipData.data.length === 0) {\n              object.data.relationships[key].data = [];\n              object.unlinkAll(key);\n            } else {\n              angular.forEach(\n                object.relationships[key],\n                unlinkOne.bind(undefined, object, key, relationshipData.data)\n              );\n              angular.forEach(\n                relationshipData.data,\n                linkOne.bind(undefined, object, key)\n              );\n            }\n          }\n        }\n      }\n\n      function linkOne(object, key, data) {\n        var factory;\n\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        factory = $jsonapi.getResource(data.type);\n\n        if (factory === undefined) {\n          $log.error('Factory not found', data.type, data);\n          return;\n        }\n\n        var target = factory.cache.get(data.id);\n\n        AngularJsonAPIModelLinkerService.link(object, key, target);\n      }\n\n      function unlinkOne(object, key, relationshipData, target) {\n        if (relationshipData.indexOf(target.data.id) > -1) {\n          return;\n        }\n\n        AngularJsonAPIModelLinkerService.unlink(object, key, target);\n      }\n    }\n  }\n\n  /////////////\n  // Private //\n  /////////////\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n\n  function __incrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount += 1;\n    object.saving = true;\n  }\n\n  function __decrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount -= 1;\n    object.saving = object.savingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelValidationError', AngularJsonAPIModelValidationErrorWrapper);\n\n  function AngularJsonAPIModelValidationErrorWrapper() {\n    ValidationError.prototype = Object.create(Error.prototype);\n    ValidationError.prototype.constructor = ValidationError;\n    ValidationError.prototype.name = 'ValidationError';\n\n    return {\n      create: ValidationErrorFactory\n    };\n\n    function ValidationErrorFactory(message, attribute) {\n      return new ValidationError(message, attribute);\n    }\n\n    function ValidationError(message, attribute) {\n      var _this = this;\n      Error.captureStackTrace(_this, _this.constructor);\n\n      _this.message = message;\n      _this.context = {\n        attribute: attribute\n      };\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelSynchronizationError', AngularJsonAPIModelSynchronizationErrorWrapper);\n\n  function AngularJsonAPIModelSynchronizationErrorWrapper() {\n    SynchronizationError.prototype = Object.create(Error.prototype);\n    SynchronizationError.prototype.constructor = SynchronizationError;\n    SynchronizationError.prototype.name = 'SynchronizationError';\n\n    return {\n      create: SynchronizationErrorFactory\n    };\n\n    function SynchronizationErrorFactory(message, synchronization, code, action) {\n      return new SynchronizationError(message, synchronization, code, action);\n    }\n\n    function SynchronizationError(message, synchronization, code, action) {\n      var _this = this;\n      Error.captureStackTrace(_this, _this.constructor);\n\n      _this.message = message;\n      _this.context = {\n        synchronization: synchronization,\n        code: code,\n        action: action\n      };\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelErrorsManager', AngularJsonAPIModelErrorsManagerWrapper);\n\n  function AngularJsonAPIModelErrorsManagerWrapper() {\n    ErrorsManager.prototype.constructor = ErrorsManager;\n    ErrorsManager.prototype.concat = concat;\n    ErrorsManager.prototype.clear = clear;\n    ErrorsManager.prototype.add = add;\n    ErrorsManager.prototype.hasErrors = hasErrors;\n\n    return {\n      create: ErrorsManagerFactory\n    };\n\n    function ErrorsManagerFactory(name, description, ErrorConstructor, defaultFilter) {\n      return new ErrorsManager(name, description, ErrorConstructor, defaultFilter);\n    }\n\n    function ErrorsManager(name, description, ErrorConstructor, defaultFilter) {\n      var _this = this;\n      _this.name = name;\n      _this.description = description;\n\n      _this.ErrorConstructor = ErrorConstructor;\n      _this.errors = {};\n      _this.defaultFilter = defaultFilter || function() { return true; };\n    }\n\n    function clear(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        angular.forEach(_this.errors, function(obj, key) {\n          _this.errors[key] = [];\n        });\n      } else {\n        _this.errors[key] = [];\n      }\n    }\n\n    function add(key, error) {\n      var _this = this;\n\n      _this.errors[key] = _this.errors[key] || [];\n      _this.errors[key].push(error);\n    }\n\n    function concat(errors) {\n      var _this = this;\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key] = [];\n      });\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key].push(error.object);\n      });\n\n    }\n\n    function hasErrors(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        var answer = false;\n\n        angular.forEach(_this.errors, function(error) {\n          answer = answer || error.length > 0;\n        });\n\n        return answer;\n      } else {\n        return _this.errors[key] !== undefined && _this.errors[key].length > 0;\n      }\n    }\n  }\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises, resolvedCallback, rejectedCallback) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.resolve(promise)\n            .then(function(value) {\n              if (angular.isFunction(resolvedCallback)) {\n                resolvedCallback(value);\n              }\n\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              if (angular.isFunction(rejectedCallback)) {\n                rejectedCallback(reason);\n              }\n\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return {\n      create: AngularJsonAPISynchronizerSimpleFactory\n    };\n\n    function AngularJsonAPISynchronizerSimpleFactory(synchronizations) {\n      return new AngularJsonAPISynchronizerSimple(synchronizations);\n    }\n\n    function AngularJsonAPISynchronizerSimple(synchronizations) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, synchronizations);\n\n      angular.forEach(synchronizations, function(synchronization) {\n        synchronization.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push({\n              key: action,\n              object: result.reason\n            });\n          }\n        });\n\n        if (errors.length > 0) {\n          deferred.reject({data: data, finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(synchronizations) {\n      var _this = this;\n\n      _this.synchronizations = synchronizations;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.factory.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationRest', AngularJsonAPISynchronizationRestWrapper);\n\n  function AngularJsonAPISynchronizationRestWrapper(\n    AngularJsonAPIModelSynchronizationError,\n    AngularJsonAPISynchronizationPrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISynchronizationRest.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationRest.prototype.constructor = AngularJsonAPISynchronizationRest;\n\n    return {\n      create: AngularJsonAPISynchronizationRestFactory\n    };\n\n    function AngularJsonAPISynchronizationRestFactory(name, url) {\n      return new AngularJsonAPISynchronizationRest(name, url);\n    }\n\n    function AngularJsonAPISynchronizationRest(name, url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISynchronizationPrototype.apply(_this, arguments);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp.bind(null, 'all'));\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp.bind(null, 'get'));\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp.bind(null, 'remove'));\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject(AngularJsonAPIModelSynchronizationError.create('Object has been removed', _this, 0, 'unlink'));\n        } else if (config.target !== undefined && config.target.data.id === undefined) {\n          deferred.reject(AngularJsonAPIModelSynchronizationError.create('Can\\'t unlink object without id through rest call', _this, 0, 'unlink'));\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'get')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          if (config.target === undefined) {\n            $http({\n              method: 'PUT',\n              headers: headers,\n              data: {data: []},\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          } else {\n            $http({\n              method: 'DELETE',\n              headers: headers,\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key + '/' + config.target.data.id\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          }\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target === undefined || config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'PUT',\n            headers: headers,\n            data: {data: AngularJsonAPIModelLinkerService.toLinkData(config.target)},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          $http({\n            method: 'POST',\n            headers: headers,\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        return $http({\n          method: 'PUT',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'update'));\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url + '/',\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'add'));\n      }\n\n      function resolveHttp(response) {\n        return $q.resolve(response.data);\n      }\n\n      function rejectHttp(action, response) {\n        var deferred = $q.defer();\n\n        if (response.status === 0) {\n          $http({\n            method: 'GET',\n            url: 'https://status.cloud.google.com/incidents.schema.json'\n          }).then(rejectServerOffline, rejectNoConnection);\n        } else {\n          deferred.reject(AngularJsonAPIModelSynchronizationError.create(response.statusText, _this, response.status, action));\n        }\n\n        return deferred.promise;\n\n        function rejectServerOffline(response) {\n          deferred.reject(AngularJsonAPIModelSynchronizationError.create('Server is offline', _this, response.status, action));\n        }\n\n        function rejectNoConnection() {\n          deferred.reject(AngularJsonAPIModelSynchronizationError.create('No internet connection', _this, response.status, action));\n        }\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizationPrototype', AngularJsonAPISynchronizationPrototypeWrapper);\n\n  function AngularJsonAPISynchronizationPrototypeWrapper() {\n    AngularJsonAPISynchronizationPrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.after = afterSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.begin = begin;\n    AngularJsonAPISynchronizationPrototype.prototype.finish = finish;\n    AngularJsonAPISynchronizationPrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISynchronizationPrototype;\n\n    function AngularJsonAPISynchronizationPrototype(name) {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clearCache',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh',\n        'include'\n      ];\n\n      _this.name = name;\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationLocal', AngularJsonAPISynchronizationLocalWrapper);\n\n  function AngularJsonAPISynchronizationLocalWrapper(\n    AngularJsonAPISynchronizationPrototype,\n    $window,\n    $q\n  ) {\n\n    AngularJsonAPISynchronizationLocal.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationLocal.prototype.constructor = AngularJsonAPISynchronizationLocal;\n\n    return {\n      create: AngularJsonAPISynchronizationLocalFactory\n    };\n\n    function AngularJsonAPISynchronizationLocalFactory(name, prefix) {\n      return new AngularJsonAPISynchronizationLocal(name, prefix);\n    }\n\n    function AngularJsonAPISynchronizationLocal(name, prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISynchronizationPrototype.apply(_this, arguments);\n\n      _this.synchronization('init', init);\n\n      _this.begin('clearCache', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('refresh', updateStorage);\n      _this.begin('unlink', updateStorage);\n      _this.begin('unlinkReflection', updateStorage);\n      _this.begin('link', updateStorage);\n      _this.begin('linkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.begin('get', updateStorage);\n      _this.begin('all', updateStorage);\n      _this.begin('include', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clearCache', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('refresh', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n      _this.finish('include', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.factory.schema.type;\n        return $q.resolve($window.localStorage.getItem(prefix + '.' + type));\n      }\n\n      function clear() {\n        var type = _this.synchronizer.factory.schema.type;\n        $window.localStorage.removeItem(prefix + '.' + type);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.factory.schema.type;\n        var cache = _this.synchronizer.factory.cache;\n        $window.localStorage.setItem(prefix + '.' + type, cache.toJson());\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper($log, pluralize, AngularJsonAPISchemaLink) {\n\n    return {\n      create: AngularJsonAPISchemaFactory\n    };\n\n    function AngularJsonAPISchemaFactory(schema) {\n      return new AngularJsonAPISchema(schema);\n    }\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = AngularJsonAPISchemaLink.create(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get.join(',');\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all.join(',');\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchemaLink', AngularJsonAPILinkSchrapperLink);\n\n  function AngularJsonAPILinkSchrapperLink($log, pluralize) {\n\n    return {\n      create: AngularJsonAPISchemaLinkFactory\n    };\n\n    function AngularJsonAPISchemaLinkFactory(linkSchema, linkName, type) {\n      return new AngularJsonAPISchemaLink(linkSchema, linkName, type);\n    }\n\n    function AngularJsonAPISchemaLink(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        if (linkSchema.type !== 'hasMany' && linkSchema.type !== 'hasOne') {\n          $log.error('Schema of link with wrong type: ', linkSchema.type, 'available: hasOne, hasMany');\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n\n        if (linkSchema.reflection === undefined) {\n          _this.reflection = _this.type === 'hasMany' ? pluralize.singular(type) : type;\n        } else {\n          _this.reflection = linkSchema.reflection;\n        }\n\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResource', AngularJsonAPIResourceWrapper);\n\n  function AngularJsonAPIResourceWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPIResourceCache,\n    AngularJsonAPICollection,\n    uuid4,\n    $rootScope,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIResource.prototype.get = get;\n    AngularJsonAPIResource.prototype.all = all;\n    AngularJsonAPIResource.prototype.remove = remove;\n    AngularJsonAPIResource.prototype.initialize = initialize;\n\n    AngularJsonAPIResource.prototype.clearCache = clearCache;\n\n    return {\n      create: AngularJsonAPIResourceFactory\n    };\n\n    function AngularJsonAPIResourceFactory(schema, synchronizer) {\n      return new AngularJsonAPIResource(schema, synchronizer);\n    }\n\n    /**\n     * AngularJsonAPIResource constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the factory\n     */\n    function AngularJsonAPIResource(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = AngularJsonAPISchema.create(schema);\n      _this.cache = AngularJsonAPIResourceCache.create(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.factory = _this;\n\n      _this.modelFactory = AngularJsonAPIModel.modelFactory(\n        _this.schema,\n        _this\n      );\n\n      _this.initialized = false;\n      _this.type = _this.schema.type;\n\n      synchronizer.factory = _this;\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'resolved', response);\n        _this.cache.fromJson(response.data);\n        _this.initialized = true;\n\n        response.finish();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'rejected', response);\n        response.finish();\n        _this.initialized = true;\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'notify', response);\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id) {\n      var _this = this;\n\n      if (!uuid4.validate(id)) {\n        return $q.reject({errors: [{status: 0, statusText: 'Invalid id not uuid4'}]});\n      }\n\n      var object = _this.cache.get(id);\n\n      object.refresh();\n\n      return object;\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = params || {};\n\n      var collection = AngularJsonAPICollection.create(\n        _this,\n        angular.extend(params, _this.schema.params.all)\n      );\n\n      collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n\n      return object.remove();\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize() {\n      var _this = this;\n      var relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(relationshipSchema, relationshipName) {\n        if (relationshipSchema.type === 'hasOne') {\n          relationships[relationshipName] = {\n            data: null\n          };\n        } else if (relationshipSchema.type === 'hasMany') {\n          relationships[relationshipName] = {\n            data: []\n          };\n        }\n      });\n\n      var data = {\n        type: _this.type,\n        id: uuid4.generate(),\n        attributes: {},\n        relationships: relationships\n      };\n\n      var config = {\n        saved: false,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: false\n      };\n\n      var object = _this.cache.addOrUpdate(data, config);\n\n      $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:initialize', 'resolved', object);\n\n      return object;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clearCache() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: 'clearCache'\n      };\n\n      _this.cache.clear();\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clearCache', 'notify', response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(AngularJsonAPIAbstractModel, AngularJsonAPISchema, $log) {\n\n    return {\n      modelFactory: createModelFactory\n    };\n\n    function createModelFactory(schemaObj, factory) {\n      var Model = function(data, updatedAt, saved) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, updatedAt, saved);\n\n        _this.form.parent = _this;\n      };\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.factory = factory;\n      Model.prototype.synchronize = factory.synchronizer.synchronize.bind(factory.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return modelFactory;\n\n      function modelFactory(data, updatedAt, saved) {\n        return new Model(data, updatedAt, saved);\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    AngularJsonAPIModelSynchronizationError,\n    AngularJsonAPIModelErrorsManager,\n    $rootScope,\n    $injector,\n    $q\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n    AngularJsonAPICollection.prototype.hasErrors = hasErrors;\n\n    return {\n      create: AngularJsonAPICollectionFactory\n    };\n\n    function AngularJsonAPICollectionFactory(factory, params) {\n      return new AngularJsonAPICollection(factory, params);\n    }\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIResource} factory Factory associated with the collection\n     * @param {object} params  Params associated with this factory (such as filters)\n     */\n    function AngularJsonAPICollection(factory, params) {\n      var _this = this;\n\n      _this.factory = factory;\n      _this.type = factory.schema.type;\n      _this.params = params;\n\n      _this.errors = {\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Synchronization',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSynchronizationError\n        )\n      };\n\n      _this.data = _this.factory.cache.index(_this.params);\n\n      _this.loading = false;\n      _this.loadingCount = 0;\n      _this.synchronized = false;\n      _this.pristine = _this.data === undefined;\n\n      $rootScope.$on('angularJsonAPI:' + _this.type + ':object:remove', remove);\n      $rootScope.$on('angularJsonAPI:' + _this.type + ':factory:clearCache', clear);\n      $rootScope.$on('angularJsonAPI:' + _this.type + ':object:add', add);\n\n      function remove(event, status, object) {\n        var index;\n\n        if (status === 'resolved' && _this.data !== undefined) {\n          index = _this.data.indexOf(object);\n          if (index > -1) {\n            _this.data.splice(index, 1);\n            _this.factory.cache.setIndexIds(_this.data);\n          }\n        }\n      }\n\n      function clear() {\n        _this.data = undefined;\n        _this.pristine = true;\n      }\n\n      function add(event, status, object) {\n        if (status === 'resolved') {\n          _this.data = _this.data || [];\n          _this.data.push(object);\n        }\n      }\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /**\n     * Shortcut to this.factory.get\n     * @param  {uuid4} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id) {\n      var _this = this;\n\n      return _this.factory.get(id);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var deferred = $q.defer();\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params\n      };\n\n      __incrementLoadingCounter(_this);\n\n      angular.forEach(_this.data, __incrementLoadingCounter);\n\n      _this.factory.synchronizer.synchronize(config)\n        .then(resolve, reject, notify)\n        .finally(__decrementLoadingCounter.bind(_this, undefined));\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n\n        _this.data = results.data;\n\n        _this.updatedAt = Date.now();\n        _this.synchronized = true;\n\n        _this.factory.cache.setIndexIds(_this.data);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response);\n        }\n\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'rejected', _this, response);\n        console.log(response);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider() {\n    var memory = {};\n    var names = [];\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPIResource) {\n      return {\n        form: form,\n        get: get,\n        remove: remove,\n        all: all,\n        addResource: addResource,\n        getResource: getResource,\n        clearCache: clearCache,\n        proccesResults: proccesResults,\n\n        allResources: allResources,\n        listResources: listResources\n      };\n\n      function allResources() {\n        return memory;\n      }\n\n      function listResources() {\n        return names;\n      }\n\n      function addResource(schema, synchronization) {\n        var factory = AngularJsonAPIResource.create(schema, synchronization);\n\n        memory[schema.type] = factory;\n        names.push(schema.type);\n      }\n\n      function getResource(type) {\n        return memory[type];\n      }\n\n      function form(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t add not existing object type: ' + type + '. Use initialize.');\n        }\n\n        return memory[type].saved.form;\n      }\n\n      function get(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get not existing object type: ' + type + '. Use initialize.');\n        }\n\n        return memory[type].get(id);\n      }\n\n      function remove(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t remove not existing object type: ' + type + '. Use initialize.');\n        }\n\n        return memory[type].remove(id);\n      }\n\n      function all(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get all of not existing object type: ' + type + '. Use initialize.');\n        }\n\n        return memory[type].all();\n      }\n\n      function clearCache() {\n        angular.forEach(memory, function(factory) {\n          factory.clearCache();\n        });\n      }\n\n      function proccesResults(results) {\n        var objects = {\n          data: [],\n          included: []\n        };\n\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n        }\n\n        var config = {\n          saved: true,\n          synchronized: true,\n          stable: true,\n          pristine: false,\n          initialization: false\n        };\n\n        angular.forEach(results.included, function(data) {\n          objects.included.push(getResource(data.type).cache.addOrUpdate(data, config));\n        });\n\n        if (angular.isArray(results.data)) {\n          angular.forEach(results.data, function(data) {\n            objects.data.push(getResource(data.type).cache.addOrUpdate(data, config));\n          });\n        } else {\n          objects.data.push(getResource(results.data.type).cache.addOrUpdate(results.data, config));\n        }\n\n        return objects;\n      }\n    }\n  }\n\n})();\n\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(function($logProvider) {\n    $logProvider.debugEnabled(false);\n  })\n  .run(function(validateJS, $q) {\n    validateJS.Promise = $q;\n  });\n})();\n"],"sourceRoot":"/source/"}