{"version":3,"sources":["/source/jsonapi.module.js","/source/utils/lazy-property.js","/source/utils/all-settled.js","/source/synchronization/synchronization.js","angular-jsonapi.min.js","/source/synchronization/synchronization-rest.js","/source/synchronization/synchronization-local.js","/source/collection/collection.factory.js","/source/abstract-data/schema.js","/source/abstract-data/model.factory.js","/source/abstract-data/abstract-data.js","/source/abstract-data/abstract-data-form.js","/source/jsonapi.provider.js"],"names":["angular","module","constant","pluralize","target","propertyName","callback","result","done","Object","defineProperty","get","call","enumerable","configurable","config","$provide","decorator","$delegate","$q","allSettled","promises","wrap","promise","when","then","value","success","reason","wrapped","isArray","forEach","key","hasOwnProperty","all","AngularJsonAPISynchronizationWrapper","AngularJsonAPISynchronization","_this","this","allHooks","state","beginHooks","beforeHooks","synchronizationHooks","afterHooks","finishHooks","options","hookName","loading","extend","synchronization","extendHooks","hooksKey","hooks","concat","begin","action","push","finish","beforeSynchro","afterSynchro","synchronize","collection","object","linkSchema","linkedObject","params","undefined","loadingCount","hook","results","prototype","before","after","factory","$inject","AngularJsonAPISynchronizationRestWrapper","$http","AngularJsonAPISynchronizationRest","url","wrapResp","data","status","headers","afterAll","rawData","included","indexedData","id","addOrUpdate","__remove","allCollections","type","afterGet","deferred","defer","method","errors","rest","resolve","error","reject","ids","toString","remove","removeLink","linkKey","removed","toLink","addLink","update","toPatchData","add","toJson","create","constructor","AngularJsonAPISynchronizationLocalWrapper","$window","AngularJsonAPISynchronizationLocal","prefix","init","datas","localStorage","getItem","Model","schema","fromJson","clear","removeItem","updateStorage","setItem","__updateStorage","AngularJsonAPICollectionWrapper","$log","uuid4","JsonAPIModelFactory","AngularJsonAPISchema","AngularJsonAPICollection","schemaObj","model","dummy","form","save","__saveDummy","bind","__synchronize","hasErrors","json","updatedAt","objectData","validatedData","__setData","__setLinks","relationships","__setUpdated","__get","Date","now","newModel","validate","equals","copy","generate","parentCollection","reset","log","AngularJsonAPISchemaWrapper","include","linkName","linkSchemaObj","AngularJsonAPILinkSchema","length","join","isString","plural","polymorphic","reflection","AngularJsonAPIAbstractData","modelFactory","linkedCollections","parent","functions","metaFunction","metaFunctionName","AngularJsonAPIAbstractDataWrapper","lazyProperty","AngularJsonAPIAbstractDataForm","attributes","validation","refresh","removeAllLinks","res","val","addLinkById","linkModelName","linkType","reflectionKey","linkAttributes","warn","duplicate","link","__setLinkInternal","index","splice","__updateAttributes","validatedAttributes","__setAttributes","getAll","linkedCollection","getSingle","__setLink","indexedLinks","__validateField","__validate","__validateData","validator","attributeName","safeData","attributeValue","element","isFunction","err","parseInt","isObject","maxlength","minlength","maxvalue","minvalue","AngularJsonAPIAbstractDataFormWrapper","validateField","jsonapiProvider","jsonapiFactory","addModel","memory","getModel","$get","provider"],"mappings":"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","file":"angular-jsonapi.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false */\n  .constant('pluralize', pluralize);\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.when(promise)\n            .then(function(value) {\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronization', AngularJsonAPISynchronizationWrapper);\n\n  function AngularJsonAPISynchronizationWrapper($q) {\n    AngularJsonAPISynchronization.prototype.before = beforeSynchro;\n    AngularJsonAPISynchronization.prototype.after = afterSynchro;\n    AngularJsonAPISynchronization.prototype.begin = begin;\n    AngularJsonAPISynchronization.prototype.finish = finish;\n    AngularJsonAPISynchronization.prototype.synchronization = synchronization;\n    AngularJsonAPISynchronization.prototype.synchronize = synchronize;\n    AngularJsonAPISynchronization.prototype.extend = extend;\n\n    return AngularJsonAPISynchronization;\n\n    function AngularJsonAPISynchronization() {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clear',\n        'remove',\n        'removeLink',\n        'removeLinkReflection',\n        'addLink',\n        'addLinkReflection',\n        'update',\n        'refresh'\n      ];\n\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function extend(synchronization) {\n      var _this = this;\n\n      extendHooks('beginHooks');\n      extendHooks('beforeHooks');\n      extendHooks('synchronizationHooks');\n      extendHooks('afterHooks');\n      extendHooks('finishHooks');\n\n      function extendHooks(hooksKey) {\n        angular.forEach(synchronization[hooksKey], function(hooks, key) {\n          _this[hooksKey][key] = _this[hooksKey][key].concat(hooks);\n        });\n      }\n\n      angular.extend(_this.options, synchronization.options);\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n    function synchronize(action, collection, object, linkSchema, linkedObject, params) {\n      var _this = this;\n      var promises = [];\n\n      _this.state[action].loading = true;\n\n      if (object !== undefined) {\n        object.loadingCount += 1;\n      }\n\n      if (collection !== undefined) {\n        collection.loadingCount += 1;\n      }\n\n      angular.forEach(_this.beginHooks[action], function(hook) {\n        hook.call(_this, collection, object, linkSchema, linkedObject, params);\n      });\n\n      angular.forEach(_this.beforeHooks[action], function(hook) {\n        hook.call(_this, collection, object, linkSchema, linkedObject, params);\n      });\n\n      angular.forEach(_this.synchronizationHooks[action], function(hook) {\n        promises.push(hook.call(_this, collection, object, linkSchema, linkedObject, params));\n      });\n\n      $q.allSettled(promises).then(function(results) {\n        _this.state[action].success = true;\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.afterHooks[action], function(hook) {\n          hook.call(_this, collection, object, linkSchema, linkedObject, params, results);\n        });\n\n        angular.forEach(_this.finishHooks[action], function(hook) {\n          hook.call(_this, collection, object, linkSchema, linkedObject, params);\n        });\n\n        _this.state[action].loading = false;\n\n        if (object !== undefined) {\n          object.loadingCount -= 1;\n        }\n\n        if (collection !== undefined) {\n          collection.loadingCount -= 1;\n        }\n      });\n    }\n\n  }\n})();\n","!function(){\"use strict\";angular.module(\"angular-jsonapi\",[\"uuid4\"]).constant(\"pluralize\",pluralize)}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"lazyProperty\",function(t,n,o){var e,r;Object.defineProperty(t,n,{get:function(){return r||(r=!0,e=o.call(t)),e},enumerable:!0,configurable:!0})})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$provide\",function(t){t.decorator(\"$q\",[\"$delegate\",function(t){var n=t;return n.allSettled=n.allSettled||function(t){function o(t){return n.when(t).then(function(t){return{success:!0,value:t}},function(t){return{success:!1,reason:t}})}var e=angular.isArray(t)?[]:{};return angular.forEach(t,function(t,n){e.hasOwnProperty(n)||(e[n]=o(t))}),n.all(e)},n}])}])}(),function(){\"use strict\";function t(t){function n(){var t=this,n=[\"add\",\"init\",\"get\",\"all\",\"clear\",\"remove\",\"removeLink\",\"removeLinkReflection\",\"addLink\",\"addLinkReflection\",\"update\",\"refresh\"];t.state={},t.beginHooks={},t.beforeHooks={},t.synchronizationHooks={},t.afterHooks={},t.finishHooks={},t.options={},angular.forEach(n,function(n){t.beginHooks[n]=[],t.beforeHooks[n]=[],t.synchronizationHooks[n]=[],t.afterHooks[n]=[],t.finishHooks[n]=[],t.state[n]={loading:!1,success:!0}})}function o(t){function n(n){angular.forEach(t[n],function(t,e){o[n][e]=o[n][e].concat(t)})}var o=this;n(\"beginHooks\"),n(\"beforeHooks\"),n(\"synchronizationHooks\"),n(\"afterHooks\"),n(\"finishHooks\"),angular.extend(o.options,t.options)}function e(t,n){var o=this;o.beginHooks[t].push(n)}function r(t,n){var o=this;o.finishHooks[t].push(n)}function a(t,n){var o=this;o.beforeHooks[t].push(n)}function i(t,n){var o=this;o.afterHooks[t].push(n)}function s(t,n){var o=this;o.synchronizationHooks[t].push(n)}function l(n,o,e,r,a,i){var s=this,l=[];s.state[n].loading=!0,void 0!==e&&(e.loadingCount+=1),void 0!==o&&(o.loadingCount+=1),angular.forEach(s.beginHooks[n],function(t){t.call(s,o,e,r,a,i)}),angular.forEach(s.beforeHooks[n],function(t){t.call(s,o,e,r,a,i)}),angular.forEach(s.synchronizationHooks[n],function(t){l.push(t.call(s,o,e,r,a,i))}),t.allSettled(l).then(function(t){s.state[n].success=!0,angular.forEach(t,function(t){t.success===!1&&(s.state[n].success=!1)}),angular.forEach(s.afterHooks[n],function(n){n.call(s,o,e,r,a,i,t)}),angular.forEach(s.finishHooks[n],function(t){t.call(s,o,e,r,a,i)}),s.state[n].loading=!1,void 0!==e&&(e.loadingCount-=1),void 0!==o&&(o.loadingCount-=1)})}return n.prototype.before=a,n.prototype.after=i,n.prototype.begin=e,n.prototype.finish=r,n.prototype.synchronization=s,n.prototype.synchronize=l,n.prototype.extend=o,n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronization\",t),t.$inject=[\"$q\"]}(),function(){\"use strict\";function t(t,n,o){function e(e){function r(t,n,o,e){return{data:t,status:n,headers:o,config:e}}function a(t,n,o,e,r,a){var i,s,l;a[0].success===!0&&(i=a[0].value.data.data,s=a[0].value.data.included,l={},angular.forEach(i,function(n){l[n.id]=n,t.addOrUpdate(n)}),angular.forEach(t.data,function(n){void 0===l[n.id]&&t.__remove(n.id)}),angular.forEach(s,function(n){t.allCollections[n.type].addOrUpdate(n)}))}function i(t,n,o,e,r,a){var i,s;a[0].success===!0&&(i=a[0].value.data.data,s=a[0].value.data.included,t.addOrUpdate(i),angular.forEach(s,function(n){t.allCollections[n.type].addOrUpdate(n)}))}function s(t,a,i){var s=n.defer(),l={method:\"GET\",url:e,params:i||{}};return o(l).success(function(n,o,e,a){t.errors.rest.all=void 0,s.resolve(r(n,o,e,a))}).error(function(n,o,e,a){t.errors.rest.all=n,s.reject(r(n,o,e,a))}),s.promise}function l(t,a,i,s,l){var u,d,c=n.defer();return angular.isArray(a)?(d=[],angular.forEach(a,function(t){d.push(t.data.id)})):d=a.data.id,u={method:\"GET\",url:e+\"/\"+d.toString(),params:l||{}},o(u).success(function(t,n,o,e){a.errors.rest.get=void 0,c.resolve(r(t,n,o,e))}).error(function(t,n,o,e){a.errors.rest.get=t,c.reject(r(t,n,o,e))}),c.promise}function u(t,a){var i=n.defer(),s={method:\"DELETE\",url:e+\"/\"+a.data.id};return o(s).success(function(t,n,o,e){a.errors.rest.remove=void 0,i.resolve(r(t,n,o,e))}).error(function(t,n,o,e){a.errors.rest.remove=t,i.reject(r(t,n,o,e))}),i.promise}function d(t,a,i,s){var l,u=n.defer();return a.removed===!0||void 0===s?u.resolve():(l={method:\"DELETE\",url:e+\"/\"+a.data.id+\"/relationships/\"+i,data:{data:s.toLink()}},o(l).success(function(t,n,o,e){a.errors.rest.removeLink=void 0,u.resolve(r(t,n,o,e))}).error(function(t,n,o,e){a.errors.rest.removeLink=t,u.reject(r(t,n,o,e))})),u.promise}function c(t,a,i,s){var l=n.defer(),u={method:\"POST\",url:e+\"/\"+a.data.id+\"/relationships/\"+i,data:{data:s.toLink()}};return o(u).success(function(t,n,o,e){a.errors.rest.addLink=void 0,l.resolve(r(t,n,o,e))}).error(function(t,n,o,e){a.errors.rest.addLink=t,l.reject(r(t,n,o,e))}),l.promise}function p(t,a){var i=n.defer(),s={method:\"PATCH\",url:e+\"/\"+a.data.id,data:{data:a.toPatchData()}};return o(s).success(function(t,n,o,e){a.errors.rest.update=void 0,i.resolve(r(t,n,o,e))}).error(function(t,n,o,e){a.errors.rest.update=t,i.reject(r(t,n,o,e))}),i.promise}function f(t,a){var i=n.defer(),s={method:\"POST\",url:e+\"/\",data:{data:a.toJson()}};return o(s).success(function(t,n,o,e){a.errors.rest.add=void 0,i.resolve(r(t,n,o,e))}).error(function(t,n,o,e){a.errors.rest.add=t,i.reject(r(t,n,o,e))}),i.promise}var h=this;t.call(h),h.synchronization(\"remove\",u),h.synchronization(\"removeLink\",d),h.synchronization(\"addLink\",c),h.synchronization(\"update\",p),h.synchronization(\"add\",f),h.synchronization(\"all\",s),h.synchronization(\"get\",l),h.synchronization(\"refresh\",l),h.after(\"all\",a),h.after(\"get\",i),h.after(\"refresh\",i)}return e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e}angular.module(\"angular-jsonapi-rest\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationRest\",t),t.$inject=[\"AngularJsonAPISynchronization\",\"$q\",\"$http\"]}(),function(){\"use strict\";function t(t,n){function o(o){function e(t){var e=n.localStorage.getItem(o+\".\"+t.Model.prototype.schema.type);t.fromJson(e)}function r(t){n.localStorage.removeItem(o+\".\"+t.Model.prototype.schema.type)}function a(t){n.localStorage.setItem(o+\".\"+t.Model.prototype.schema.type,t.toJson())}var i=this;i.__updateStorage=a,t.call(i),i.begin(\"init\",e),i.begin(\"clear\",r),i.begin(\"remove\",a),i.begin(\"removeLink\",a),i.begin(\"removeLinkReflection\",a),i.begin(\"addLink\",a),i.begin(\"addLinkReflection\",a),i.begin(\"update\",a),i.begin(\"add\",a),i.finish(\"get\",a),i.finish(\"all\",a),i.finish(\"init\",a),i.finish(\"clear\",a),i.finish(\"remove\",a),i.finish(\"removeLink\",a),i.finish(\"removeLinkReflection\",a),i.finish(\"addLink\",a),i.finish(\"addLinkReflection\",a),i.finish(\"update\",a),i.finish(\"add\",a),i.finish(\"get\",a),i.finish(\"all\",a)}return o.prototype=Object.create(t.prototype),o.prototype.constructor=o,o}angular.module(\"angular-jsonapi-local\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationLocal\",t),t.$inject=[\"AngularJsonAPISynchronization\",\"$window\"]}(),function(){\"use strict\";function t(t,n,o,e){function r(t,n){var r=this,a=new e(t);r.Model=o.model(a,r.allCollections,r),r.synchronization=n,r.loadingCount=0,r.data={},r.removed={},r.schema=a,r.dummy=new r.Model({type:t.type},void 0,!0),r.dummy.form.save=v.bind(r.dummy),r.allCollections[t.type]=r,r.__synchronize(\"init\"),r.errors={}}function a(){var t=this,n=!1;return angular.forEach(t.errors,function(t){void 0!==t&&(n=!0)}),n}function i(t){var n=this,o=angular.fromJson(t);null!==o&&void 0!==o.data&&(n.updatedAt=o.updatedAt,angular.forEach(o.data,function(t){var o=t.data;n.addOrUpdate(o,t.updatedAt)}))}function s(){var t=this,n={data:{},updatedAt:t.updatedAt};return angular.forEach(t.data,function(t,o){n.data[o]=t.toJson()}),angular.toJson(n)}function l(n,o){var e=this;return void 0===n.id?void t.error(\"Can't add data without id!\",n):(void 0===e.data[n.id]?e.data[n.id]=new this.Model(n,o):(e.data[n.id].__setData(n,o),e.data[n.id].__setLinks(n.relationships)),e.data[n.id].__setUpdated(o),e.data[n.id])}function u(t){var n=this;return void 0===n.data[t]&&(n.data[t]=new n.Model({id:t,type:n.Model.prototype.schema.type},void 0,!0)),n.data[t]}function d(t){var n,o=this;return angular.isArray(t)?(n=[],angular.forEach(t,function(t){n.push(o.__get(t))})):n=o.__get(t),o.__synchronize(\"get\",n,void 0,void 0,o.schema.params.get),n}function c(){var t=this;return t.__synchronize(\"all\",void 0,void 0,void 0,t.schema.params.all),t}function p(){var t=this;t.updatedAt=Date.now(),t.data={},t.__synchronize(\"clear\")}function f(t){var n=this,o=n.data[t];n.removed[t]=o,n.updatedAt=Date.now(),delete n.data[t]}function h(n){var o=this,e=o.data[n];void 0!==e?(o.__remove(n),e.__remove(n)):t.error(\"Object with this id does not exist\"),o.__synchronize(\"remove\",e)}function v(){var o,e=this,r=e.form.validate();if(angular.equals(r,{})){var a=angular.copy(e.form.data);if(void 0===a.id)a.id=n.generate();else if(!n.validate(a.id))return void t.error(\"Wrong id of dummy data!\");a.relationships={},a.type=e.schema.type,o=e.parentCollection.addOrUpdate(a),e.form.reset(),e.parentCollection.__synchronize(\"add\",e)}}function g(n,o,e,r,a){var i=this;t.log(\"Synchro Collection\",this.Model.prototype.schema.type,{action:n,object:o,linkKey:e,linkedObject:r,params:a}),i.synchronization.synchronize(n,i,o,e,r,a)}return r.prototype.allCollections={},r.prototype.__synchronize=g,r.prototype.__get=u,r.prototype.__remove=f,r.prototype.get=d,r.prototype.all=c,r.prototype.remove=h,r.prototype.clear=p,r.prototype.fromJson=i,r.prototype.toJson=s,r.prototype.addOrUpdate=l,r.prototype.hasErrors=a,r}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICollection\",t),t.$inject=[\"$log\",\"uuid4\",\"JsonAPIModelFactory\",\"AngularJsonAPISchema\"]}(),function(){\"use strict\";function t(t,n){function o(t){var n=this,o=[];n.params={get:{},all:{}},angular.forEach(t.relationships,function(n,r){var a=new e(n,r,t.type);t.relationships[r]=a,a.included===!0&&o.push(r)}),angular.extend(n,t),o.length>0&&(n.params.get.include=o.join(\",\"))}function e(o,e,r){var a=this;angular.isString(o)?(a.model=n.plural(e),a.type=o,a.polymorphic=!1,a.reflection=r):(void 0===o.type&&t.error(\"Schema of link without a type: \",o,e),a.model=o.model||n.plural(e),a.type=o.type,a.polymorphic=o.polymorphic||!1,a.reflection=o.reflection||r,a.included=o.included||!1)}return o}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchema\",t),t.$inject=[\"$log\",\"pluralize\"]}(),function(){\"use strict\";function t(t,n,o){function e(n,e,r){var a=function(n,e,r){var a=this;n.type!==a.schema.type&&o.error(\"Data type other then declared in schema: \",n.type,\" instead of \",a.schema.type),t.call(a,n,e,r),a.form.parent=a};return a.prototype=Object.create(t.prototype),a.prototype.constructor=a,a.prototype.schema=n,a.prototype.linkedCollections=e,a.prototype.parentCollection=r,angular.forEach(n.functions,function(t,n){a.prototype[n]=function(){return t.call(this)}}),a}return{model:e}}angular.module(\"angular-jsonapi\").factory(\"JsonAPIModelFactory\",t),t.$inject=[\"AngularJsonAPIAbstractData\",\"AngularJsonAPISchema\",\"$log\"]}(),function(){\"use strict\";function t(t,n,o,e){function r(t,n,o){var r=this;t.relationships=t.relationships||{},r.removed=!1,r.loadingCount=0,r.data={relationships:{},attributes:{}},r.relationships={},r.errors={validation:{}},r.dummy=o||!1,r.__setUpdated(n),r.__setData(t,n),r.form=new e(r)}function a(){var t=this;t.parentCollection.__synchronize(\"refresh\",t)}function i(){var t=this,n=!1;return angular.forEach(t.errors,function(t){void 0!==t&&(n=!0)}),n}function s(){var t=this;return{data:t.data,updatedAt:t.updatedAt}}function l(t){var n=this;n.updatedAt=t||Date.now(),n.parentCollection.updatedAt=n.updatedAt}function u(){var t=this;t.__setUpdated(),t.removed=!0,t.removeAllLinks()}function d(){var t=this;t.__remove(),t.parentCollection.remove(t.data.id)}function c(){return{type:this.data.type,id:this.data.id}}function p(){var t=this,n={data:{}};return angular.forEach(t.data,function(t,o){\"relationships\"!==o&&(n.data[o]=t)}),n}function f(o,e,r){var a=this,i=a.linkedCollections[e].__get(r);return void 0===a.schema.relationships[o]?void t.error(\"Cannot add link not specified in schema: \"+o):void 0===a.linkedCollections[e]?void t.error(\"Cannot add link of not existing type: \"+e):n.validate(r)?void 0===i?void t.error(\"Cant find\",e,\"with\",r):void a.addLink(o,i):void t.error(\"Wrong link id, not uuid4: \"+r)}function h(n,o,e){var r,a,i,s=this,l=s.schema.relationships[n];if(void 0===o)return void t.error(\"Can't add non existing object\");if(void 0===l)return void t.error(\"Can't add link not present in schema: \",n,s,e);if(l.polymorphic===!1&&l.model!==o.schema.type)return void t.error(\"This relation is not polymorphic, expected: \"+l.model+\" instead of \"+o.schema.type);if(r=l.type,a=l.reflection,\"hasOne\"===r){if(i=s.data.relationships[n].data,void 0!==i&&null!==i&&i.id===o.data.id)return;void 0!==i&&null!==i&&(t.warn(\"Swaping hasOne\",n,\"of\",s.toString()),s.removeLink(n)),i=o.toLink()}else{i=s.data.relationships[n].data||[];var u=!1;if(angular.forEach(i,function(t){t.id===o.data.id&&(u=!0)}),u===!0)return;i.push(o.toLink())}e===!0?s.parentCollection.__synchronize(\"addLinkReflection\",s,n,o):(o.addLink(a,s,!0),s.parentCollection.__synchronize(\"addLink\",s,n,o)),s.__setUpdated(),s.__setLinkInternal(i,n,l)}function v(){var t=this;angular.forEach(t.relationships,function(n,o){t.removeLink(o)})}function g(n,o,e){var r,a,i,s=this,l=s.schema.relationships[n],u=!1;return void 0===s.schema.relationships[n]?void t.error(\"Can't remove link not present in schema\"):(r=l.type,i=l.reflection,a=s.data.relationships[n].data,\"hasOne\"===r?void 0!==o&&o.data.id===a.id&&(s.data.relationships[n].data=null,a=null,u=!0,e!==!0&&void 0!==s.relationships[n]&&s.relationships[n].removeLink(i,s,!0)):void 0===o?(s.data.relationships[n].data=[],a=[],u=!0,e!==!0&&angular.forEach(s.relationships[n],function(t){t.removeLink(i,s,!0)})):angular.forEach(a,function(t,n){t.id===o.data.id&&(e!==!0&&o.removeLink(i,s,!0),a.splice(n,1),u=!0)}),void(u===!0&&(s.__setUpdated(),e!==!0?s.parentCollection.__synchronize(\"removeLink\",s,n,o):s.parentCollection.__synchronize(\"removeLinkReflection\",s,n,o),s.__setLinkInternal(a,n,l))))}function y(t){var n=this;n.__setUpdated(),n.__setAttributes(t),n.parentCollection.__synchronize(\"update\",n)}function m(n,e,r){var a=this,i=r.type,s=r.reflection;if(null===n)delete a.relationships[e],a.relationships[e]=void 0;else if(\"hasMany\"===i&&angular.isArray(n)){var l=function(){var o=[];return angular.forEach(n,function(e){var r=a.linkedCollections[e.type];if(void 0===r)return void t.error(\"No angular-jsonapi schema for\",n.type);var i=r.__get(e.id);i.addLink(s,a,!0),o.push(i)}),o};o(a.relationships,e,l)}else if(\"hasOne\"===i&&null!==n){var u=function(){var o=a.linkedCollections[n.type];if(void 0===o)return void t.error(\"No angular-jsonapi schema for\",n.type);var e=o.__get(n.id);return e.addLink(s,a,!0),e};o(a.relationships,e,u)}}function _(t,n,o){var e=this,r=o.type,a=o.reflection;if(\"hasMany\"===r&&angular.isArray(t)){var i={};angular.forEach(t,function(t){i[t.id]=t}),angular.forEach(e.relationships[n],function(t){void 0===i[t.data.id]&&t.removeLink(a,e,!0)})}else\"hasOne\"===r&&null!==t&&void 0!==e.relationships[n]&&e.relationships[n].data.id!==t.id&&e.relationships[n].removeLink(a,e,!0);e.__setLinkInternal(t,n,o)}function k(t){var n=this;angular.forEach(n.schema.relationships,function(o,e){n.data.relationships[e]=n.data.relationships[e]||{},void 0!==t[e]&&angular.extend(n.data.relationships[e],t[e])}),angular.forEach(n.schema.relationships,function(o,e){void 0!==t[e]&&void 0!==t[e].data&&n.__setLink(t[e].data,e,o)})}function A(t,n){var o=this,e=[];return void 0!==t&&(e=E(o.schema.attributes[n],t,n)),e}function b(n){var o=this,e={};return angular.forEach(o.schema.attributes,function(r,a){var i=o.__validateField(n[a],a);i.length>0&&(e[a]=i,t.warn(\"Erorrs when validating \",n[a],e))}),e}function L(t){var n=this;angular.forEach(n.schema.attributes,function(o,e){t[e]&&(n.data.attributes[e]=t[e])})}function j(t){var n=this,o=angular.copy(t);n.errors.validation=n.__validateData(o),o.relationships=o.relationships||{},o.attributes=o.attributes||{},n.data.id=o.id,n.data.type=o.type,n.__setAttributes(o.attributes),n.__setLinks(o.relationships)}function E(o,e,r){var a=[];if(angular.isArray(o))angular.forEach(o,function(t){a=a.concat(E(t,e,r))});else if(angular.isFunction(o)){var i=o(e);angular.isArray(i)?a.concat(i):t.error(\"Wrong validator type it should return array of errors instead of: \"+i.toString())}else angular.isString(o)?\"text\"===o||\"string\"===o?angular.isString(e)||a.push(r+\" is not a string \"):\"number\"===o||\"integer\"===o?parseInt(e).toString()!==e.toString()&&a.push(r+\" is not a number\"):\"uuid4\"===o?n.validate(e)||a.push(r+\" is not a uuid4\"):\"required\"===o?0===e.toString().length&&a.push(r+\" is empty\"):t.error(\"Wrong validator type: \"+o.toString()):angular.isObject(o)?(void 0!==o.maxlength&&e.length>o.maxlength&&a.push(r+\" is too long max \"+o.maxlength),void 0!==o.minlength&&e.length<o.minlength&&a.push(r+\" is too short min \"+o.minlength),void 0!==o.maxvalue&&parseInt(e)>o.maxvalue&&a.push(r+\" is too big max \"+o.maxvalue),void 0!==o.minvalue&&parseInt(e)<o.minvalue&&a.push(r+\" is too small min \"+o.minvalue)):t.error(\"Wrong validator type: \"+o.toString());return a}return r.prototype.__setData=j,r.prototype.__setLinks=k,r.prototype.__setLink=_,r.prototype.__setAttributes=L,r.prototype.__validateData=b,r.prototype.__validateField=A,r.prototype.__updateAttributes=y,r.prototype.__remove=u,r.prototype.__setUpdated=l,r.prototype.__setLinkInternal=m,r.prototype.refresh=a,r.prototype.remove=d,r.prototype.addLinkById=f,r.prototype.addLink=h,r.prototype.removeLink=g,r.prototype.toLink=c,r.prototype.toPatchData=p,r.prototype.removeAllLinks=v,r.prototype.hasErrors=i,r.prototype.toJson=s,r}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractData\",t),t.$inject=[\"$log\",\"uuid4\",\"lazyProperty\",\"AngularJsonAPIAbstractDataForm\"]}(),function(){\"use strict\";function t(t){function n(t){var n=this;n.data={},n.parent=t,n.reset()}function o(){var n=this,o=n.validate();return angular.equals(o,{})===!1?void t.error(\"Errors in form: \",o):void n.parent.__updateAttributes(n.data)}function e(){var t=this;angular.forEach(t.parent.schema.attributes,function(n,o){t.data[o]=t.parent.data.attributes[o]||\"\"}),t.errors={validation:{}}}function r(){var t,n=this;return t=n.parent.__validateData(n.data),n.errors.validation=t,t}function a(t){var n,o=this;return n=o.parent.__validateField(o.data[t],t),o.errors.validation[t]=n,n}function i(n){t.log(\"Synchro Collection \"+this.Model.prototype.schema.type,n)}return n.prototype.save=o,n.prototype.reset=e,n.prototype.validate=r,n.prototype.validateField=a,n.prototype.__synchronize=i,n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractDataForm\",t),t.$inject=[\"$log\"]}(),function(){\"use strict\";function t(){function t(t,o){function e(t,e){var r=new o(t,e);n[t.type]=r}function r(t){return n[t]}function a(o){return void 0===n[o]&&t.error(\"Can\t add not existing object type: \"+o+\". Use initialize(Model, datas).\"),n[o].dummy.form}function i(o,e){return void 0===n[o]&&t.error(\"Can\t get not existing object type: \"+o+\". Use initialize(Model, datas).\"),n[o].get(e)}function s(o,e){return void 0===n[o]&&t.error(\"Can\t remove not existing object type: \"+o+\". Use initialize(Model, datas).\"),n[o].remove(e)}function l(o){return void 0===n[o]&&t.error(\"Can\t get all of not existing object type: \"+o+\". Use initialize(Model, datas).\"),n[o].all()}return{form:a,get:i,remove:s,all:l,addModel:e,getModel:r}}var n={};this.$get=t,t.$inject=[\"$log\",\"AngularJsonAPICollection\"]}angular.module(\"angular-jsonapi\").provider(\"$jsonapi\",t)}();\n//# sourceMappingURL=angular-jsonapi.min.js.map","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationRest', AngularJsonAPISynchronizationRestWrapper);\n\n  function AngularJsonAPISynchronizationRestWrapper(AngularJsonAPISynchronization, $q, $http) {\n\n    AngularJsonAPISynchronizationRest.prototype = Object.create(AngularJsonAPISynchronization.prototype);\n    AngularJsonAPISynchronizationRest.prototype.constructor = AngularJsonAPISynchronizationRest;\n\n    return AngularJsonAPISynchronizationRest;\n\n    function AngularJsonAPISynchronizationRest(url) {\n      var _this = this;\n\n      AngularJsonAPISynchronization.call(_this);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('removeLink', removeLink);\n      _this.synchronization('addLink', addLink);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n      _this.after('all', afterAll);\n      _this.after('get', afterGet);\n      _this.after('refresh', afterGet);\n\n      function wrapResp(data, status, headers, config) {\n        return {\n          data: data,\n          status: status,\n          headers: headers,\n          config: config\n        };\n      }\n\n      function afterAll(collection, object, linkSchema, linkedObject, params, results) {\n        var rawData;\n        var included;\n        var indexedData;\n\n        if (results[0].success === true) {\n          rawData = results[0].value.data.data;\n          included = results[0].value.data.included;\n          indexedData = {};\n          angular.forEach(rawData, function(data) {\n            indexedData[data.id] = data;\n            collection.addOrUpdate(data);\n          });\n\n          angular.forEach(collection.data, function(data) {\n            if (indexedData[data.id] === undefined) {\n              collection.__remove(data.id);\n            }\n          });\n\n          angular.forEach(included, function(object) {\n            collection.allCollections[object.type].addOrUpdate(object);\n          });\n        }\n      }\n\n      function afterGet(collection, object, linkSchema, linkedObject, params, results) {\n        var data;\n        var included;\n\n        if (results[0].success === true) {\n          data = results[0].value.data.data;\n          included = results[0].value.data.included;\n          collection.addOrUpdate(data);\n\n          angular.forEach(included, function(object) {\n            collection.allCollections[object.type].addOrUpdate(object);\n          });\n        }\n      }\n\n      function all(collection, object, params) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'GET',\n          url: url,\n          params: params || {}\n        };\n\n        collection.errors.rest = collection.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            collection.errors.rest.all = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            collection.errors.rest.all = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function get(collection, object, linkSchema, linkedObject, params) {\n        var deferred = $q.defer();\n        var config;\n        var ids;\n\n        if (angular.isArray(object)) {\n          ids = [];\n          angular.forEach(object, function(object) {\n            ids.push(object.data.id);\n          });\n        } else {\n          ids = object.data.id;\n        }\n\n        config = {\n          method: 'GET',\n          url: url + '/' + ids.toString(),\n          params: params || {}\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.get = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.get = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function remove(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'DELETE',\n          url: url + '/' + object.data.id\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.remove = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.remove = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function removeLink(collection, object, linkKey, linkedObject) {\n        var deferred = $q.defer();\n        var config;\n\n        object.errors.rest = object.errors.rest || {};\n\n        if (object.removed === true || linkedObject === undefined) {\n          deferred.resolve();\n        } else {\n          config = {\n            method: 'DELETE',\n            url: url + '/' + object.data.id + '/relationships/' + linkKey,\n            data: {data: linkedObject.toLink()}\n          };\n\n          $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.removeLink = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.removeLink = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n        }\n\n        return deferred.promise;\n      }\n\n      function addLink(collection, object, linkKey, linkedObject) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'POST',\n          url: url + '/' + object.data.id + '/relationships/' + linkKey,\n          data: {data: linkedObject.toLink()}\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.addLink = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.addLink = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n\n      }\n\n      function update(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'PATCH',\n          url: url + '/' + object.data.id,\n          data: {data: object.toPatchData()}\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.update = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.update = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function add(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'POST',\n          url: url + '/',\n          data: {data: object.toJson()}\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.add = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.add = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationLocal', AngularJsonAPISynchronizationLocalWrapper);\n\n  function AngularJsonAPISynchronizationLocalWrapper(AngularJsonAPISynchronization, $window) {\n\n    AngularJsonAPISynchronizationLocal.prototype = Object.create(AngularJsonAPISynchronization.prototype);\n    AngularJsonAPISynchronizationLocal.prototype.constructor = AngularJsonAPISynchronizationLocal;\n\n    return AngularJsonAPISynchronizationLocal;\n\n    function AngularJsonAPISynchronizationLocal(prefix) {\n      var _this = this;\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISynchronization.call(_this);\n\n      _this.begin('init', init);\n      _this.begin('clear', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('removeLink', updateStorage);\n      _this.begin('removeLinkReflection', updateStorage);\n      _this.begin('addLink', updateStorage);\n      _this.begin('addLinkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clear', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('removeLink', updateStorage);\n      _this.finish('removeLinkReflection', updateStorage);\n      _this.finish('addLink', updateStorage);\n      _this.finish('addLinkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      function init(collection) {\n        var datas = $window.localStorage.getItem(prefix + '.' + collection.Model.prototype.schema.type);\n        collection.fromJson(datas);\n      }\n\n      function clear(collection) {\n        $window.localStorage.removeItem(prefix + '.' + collection.Model.prototype.schema.type);\n      }\n\n      function updateStorage(collection) {\n        $window.localStorage.setItem(prefix + '.' + collection.Model.prototype.schema.type, collection.toJson());\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    $log,\n    uuid4,\n    JsonAPIModelFactory,\n    AngularJsonAPISchema\n  ) {\n    AngularJsonAPICollection.prototype.allCollections = {};\n\n    AngularJsonAPICollection.prototype.__synchronize = __synchronize;\n    AngularJsonAPICollection.prototype.__get = __get;\n    AngularJsonAPICollection.prototype.__remove = __remove;\n\n    AngularJsonAPICollection.prototype.get = get;\n    AngularJsonAPICollection.prototype.all = all;\n    AngularJsonAPICollection.prototype.remove = remove;\n    AngularJsonAPICollection.prototype.clear = clear;\n    AngularJsonAPICollection.prototype.fromJson = fromJson;\n    AngularJsonAPICollection.prototype.toJson = toJson;\n    AngularJsonAPICollection.prototype.addOrUpdate = addOrUpdate;\n    AngularJsonAPICollection.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPICollection;\n\n    function AngularJsonAPICollection(schema, synchronization) {\n      var _this = this;\n\n      var schemaObj = new AngularJsonAPISchema(schema);\n\n      _this.Model = JsonAPIModelFactory.model(\n        schemaObj,\n        _this.allCollections,\n        _this\n      );\n\n      _this.synchronization = synchronization;\n\n      _this.loadingCount = 0;\n      _this.data = {};\n      _this.removed = {};\n      _this.schema = schemaObj;\n\n      _this.dummy = new _this.Model({type: schema.type}, undefined, true);\n      _this.dummy.form.save = __saveDummy.bind(_this.dummy);\n      _this.allCollections[schema.type] = _this;\n\n      _this.__synchronize('init');\n\n      _this.errors = {};\n    }\n\n    function hasErrors() {\n      var _this = this;\n      var result = false;\n\n      angular.forEach(_this.errors, function(error) {\n        if (error !== undefined) {\n          result = true;\n        }\n      });\n\n      return result;\n    }\n\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      if (collection !== null && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, objectData.updatedAt);\n        });\n      }\n    }\n\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: {},\n        updatedAt: _this.updatedAt\n      };\n\n      angular.forEach(_this.data, function(object, key) {\n        json.data[key] = object.toJson();\n      });\n\n      return angular.toJson(json);\n    }\n\n    function addOrUpdate(validatedData, updatedAt) {\n      var _this = this;\n      if (validatedData.id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[validatedData.id] === undefined) {\n        _this.data[validatedData.id] = new this.Model(validatedData, updatedAt);\n      } else {\n        _this.data[validatedData.id].__setData(validatedData, updatedAt);\n        _this.data[validatedData.id].__setLinks(validatedData.relationships);\n      }\n\n      _this.data[validatedData.id].__setUpdated(updatedAt);\n\n      return _this.data[validatedData.id];\n    }\n\n    function __get(id) {\n      var _this = this;\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.Model({id: id, type: _this.Model.prototype.schema.type}, undefined, true);\n      }\n\n      return _this.data[id];\n    }\n\n    function get(id) {\n      var _this = this;\n      var result;\n\n      if (angular.isArray(id)) {\n        result = [];\n        angular.forEach(id, function(id) {\n          result.push(_this.__get(id));\n        });\n      } else {\n        result = _this.__get(id);\n      }\n\n      _this.__synchronize('get', result, undefined, undefined, _this.schema.params.get);\n\n      return result;\n    }\n\n    function all() {\n      var _this = this;\n      _this.__synchronize('all', undefined, undefined, undefined, _this.schema.params.all);\n\n      return _this;\n    }\n\n    function clear() {\n      var _this = this;\n      _this.updatedAt = Date.now();\n      _this.data = {};\n\n      _this.__synchronize('clear');\n    }\n\n    function __remove(id) {\n      var _this = this;\n      var object = _this.data[id];\n\n      _this.removed[id] = object;\n      _this.updatedAt = Date.now();\n\n      delete _this.data[id];\n    }\n\n    function remove(id) {\n      var _this = this;\n      var object = _this.data[id];\n\n      if (object !== undefined) {\n        _this.__remove(id);\n        object.__remove(id);\n      } else {\n        $log.error('Object with this id does not exist');\n      }\n\n      _this.__synchronize('remove', object);\n    }\n\n    function __saveDummy() {\n      var _this = this;\n      var errors = _this.form.validate();\n      var newModel;\n\n      if (angular.equals(errors, {})) {\n        var data = angular.copy(_this.form.data);\n        if (data.id === undefined) {\n          data.id = uuid4.generate();\n        } else if (!uuid4.validate(data.id)) {\n          $log.error('Wrong id of dummy data!');\n          return;\n        }\n\n        data.relationships = {};\n\n        data.type = _this.schema.type;\n        newModel = _this.parentCollection.addOrUpdate(data);\n        _this.form.reset();\n        _this.parentCollection.__synchronize('add', _this);\n      }\n    }\n\n    function __synchronize(action, object, linkKey, linkedObject, params) {\n      var _this = this;\n\n      $log.log('Synchro Collection', this.Model.prototype.schema.type, {action: action, object: object, linkKey: linkKey, linkedObject: linkedObject, params: params});\n\n      _this.synchronization.synchronize(action, _this, object, linkKey, linkedObject, params);\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper($log, pluralize) {\n\n    return AngularJsonAPISchema;\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = new AngularJsonAPILinkSchema(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.push(linkName);\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.length > 0) {\n        _this.params.get.include = include.join(',');\n      }\n    }\n\n    function AngularJsonAPILinkSchema(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n        _this.reflection = linkSchema.reflection || type;\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('JsonAPIModelFactory', JsonAPIModelFactory);\n\n  function JsonAPIModelFactory(AngularJsonAPIAbstractData, AngularJsonAPISchema, $log) {\n\n    return {\n      model: modelFactory\n    };\n\n    function modelFactory(schemaObj, linkedCollections, parentCollection) {\n      var Model = function(data, updatedAt, dummy) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractData.call(_this, data, updatedAt, dummy);\n\n        _this.form.parent = _this;\n      };\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractData.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.linkedCollections = linkedCollections;\n      Model.prototype.parentCollection = parentCollection;\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.call(this);\n        };\n      });\n\n      return Model;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractData', AngularJsonAPIAbstractDataWrapper);\n\n  function AngularJsonAPIAbstractDataWrapper(\n    $log,\n    uuid4,\n    lazyProperty,\n    AngularJsonAPIAbstractDataForm\n  ) {\n\n    AngularJsonAPIAbstractData.prototype.__setData = __setData;\n    AngularJsonAPIAbstractData.prototype.__setLinks   = __setLinks;\n    AngularJsonAPIAbstractData.prototype.__setLink = __setLink;\n    AngularJsonAPIAbstractData.prototype.__setAttributes = __setAttributes;\n    AngularJsonAPIAbstractData.prototype.__validateData = __validateData;\n    AngularJsonAPIAbstractData.prototype.__validateField = __validateField;\n    AngularJsonAPIAbstractData.prototype.__updateAttributes = __updateAttributes;\n    AngularJsonAPIAbstractData.prototype.__remove = __remove;\n    AngularJsonAPIAbstractData.prototype.__setUpdated = __setUpdated;\n    AngularJsonAPIAbstractData.prototype.__setLinkInternal = __setLinkInternal;\n\n    AngularJsonAPIAbstractData.prototype.refresh = refresh;\n    AngularJsonAPIAbstractData.prototype.remove = remove;\n    AngularJsonAPIAbstractData.prototype.addLinkById = addLinkById;\n    AngularJsonAPIAbstractData.prototype.addLink = addLink;\n    AngularJsonAPIAbstractData.prototype.removeLink = removeLink;\n    AngularJsonAPIAbstractData.prototype.toLink = toLink;\n    AngularJsonAPIAbstractData.prototype.toPatchData = toPatchData;\n    AngularJsonAPIAbstractData.prototype.removeAllLinks = removeAllLinks;\n    AngularJsonAPIAbstractData.prototype.hasErrors = hasErrors;\n\n    AngularJsonAPIAbstractData.prototype.toJson = toJson;\n\n    return AngularJsonAPIAbstractData;\n\n    function AngularJsonAPIAbstractData(data, updatedAt, dummy) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      _this.removed = false;\n      _this.loadingCount = 0;\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      _this.errors = {\n        validation: {}\n      };\n\n      _this.dummy = dummy || false;\n\n      _this.__setUpdated(updatedAt);\n      _this.__setData(data, updatedAt);\n\n      _this.form = new AngularJsonAPIAbstractDataForm(_this);\n    }\n\n    function refresh() {\n      var _this = this;\n\n      _this.parentCollection.__synchronize('refresh', _this);\n    }\n\n    function hasErrors() {\n      var _this = this;\n      var result = false;\n\n      angular.forEach(_this.errors, function(error) {\n        if (error !== undefined) {\n          result = true;\n        }\n      });\n\n      return result;\n    }\n\n    function toJson() {\n      var _this = this;\n\n      return {\n        data: _this.data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    function __setUpdated(updatedAt) {\n      var _this = this;\n\n      _this.updatedAt = updatedAt || Date.now();\n      _this.parentCollection.updatedAt = _this.updatedAt;\n    }\n\n    function __remove() {\n      var _this = this;\n\n      _this.__setUpdated();\n      _this.removed = true;\n      _this.removeAllLinks();\n    }\n\n    function remove() {\n      var _this = this;\n\n      _this.__remove();\n      _this.parentCollection.remove(_this.data.id);\n    }\n\n    function toLink() {\n      return {type: this.data.type, id: this.data.id};\n    }\n\n    function toPatchData() {\n      var _this = this;\n      var res = {data: {}};\n      angular.forEach(_this.data, function(val, key) {\n        if (key !== 'relationships') {\n          res.data[key] = val;\n        }\n      });\n\n      return res;\n    }\n\n    function addLinkById(linkKey, linkModelName, id) {\n      var _this = this;\n      var linkedObject = _this.linkedCollections[linkModelName].__get(id);\n\n      if (_this.schema.relationships[linkKey] === undefined) {\n        $log.error('Cannot add link not specified in schema: ' + linkKey);\n        return;\n      }\n\n      if (_this.linkedCollections[linkModelName] === undefined) {\n        $log.error('Cannot add link of not existing type: ' + linkModelName);\n        return;\n      }\n\n      if (!uuid4.validate(id)) {\n        $log.error('Wrong link id, not uuid4: ' + id);\n        return;\n      }\n\n      if (linkedObject === undefined) {\n        $log.error('Cant find', linkModelName, 'with', id);\n        return;\n      }\n\n      _this.addLink(\n        linkKey,\n        linkedObject\n      );\n\n    }\n\n    function addLink(linkKey, linkedObject, reflection) {\n      var _this = this;\n      var linkSchema = _this.schema.relationships[linkKey];\n      var linkType;\n      var reflectionKey;\n      var linkAttributes;\n\n      if (linkedObject === undefined) {\n        $log.error('Can\\'t add non existing object');\n        return;\n      }\n\n      if (linkSchema === undefined) {\n        $log.error('Can\\'t add link not present in schema: ', linkKey, _this, reflection);\n        return;\n      }\n\n      if (linkSchema.polymorphic === false && linkSchema.model !== linkedObject.schema.type) {\n        $log.error('This relation is not polymorphic, expected: ' + linkSchema.model + ' instead of ' + linkedObject.schema.type);\n        return;\n      }\n\n      linkType = linkSchema.type;\n      reflectionKey = linkSchema.reflection;\n\n      if (linkType === 'hasOne') {\n        linkAttributes = _this.data.relationships[linkKey].data;\n\n        if (\n          linkAttributes !== undefined &&\n          linkAttributes !== null &&\n          linkAttributes.id === linkedObject.data.id\n        ) {\n          return;\n        }\n\n        if (linkAttributes !== undefined && linkAttributes !== null) {\n          $log.warn('Swaping hasOne', linkKey, 'of', _this.toString());\n          _this.removeLink(linkKey);\n        }\n\n        linkAttributes = linkedObject.toLink();\n      } else {\n        linkAttributes = _this.data.relationships[linkKey].data || [];\n        var duplicate = false;\n        angular.forEach(linkAttributes, function(link) {\n          if (link.id === linkedObject.data.id) {\n            duplicate = true;\n          }\n        });\n\n        if (duplicate === true) {\n          return;\n        }\n\n        linkAttributes.push(linkedObject.toLink());\n      }\n\n      if (reflection === true) {\n        _this.parentCollection.__synchronize('addLinkReflection', _this, linkKey, linkedObject);\n      } else {\n        linkedObject.addLink(reflectionKey, _this, true);\n        _this.parentCollection.__synchronize('addLink', _this, linkKey, linkedObject);\n      }\n\n      _this.__setUpdated();\n      _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n    }\n\n    function removeAllLinks() {\n      var _this = this;\n\n      angular.forEach(_this.relationships, function(link, key) {\n        _this.removeLink(key);\n      });\n    }\n\n    function removeLink(linkKey, linkedObject, reflection) {\n      var _this = this;\n      var linkSchema = _this.schema.relationships[linkKey];\n      var linkType;\n      var linkAttributes;\n      var reflectionKey;\n      var removed = false;\n\n      if (_this.schema.relationships[linkKey] === undefined) {\n        $log.error('Can\\'t remove link not present in schema');\n        return;\n      }\n\n      linkType = linkSchema.type;\n      reflectionKey = linkSchema.reflection;\n      linkAttributes = _this.data.relationships[linkKey].data;\n\n      if (linkType === 'hasOne') {\n        if (linkedObject !== undefined && linkedObject.data.id === linkAttributes.id) {\n          _this.data.relationships[linkKey].data = null;\n          linkAttributes = null;\n          removed = true;\n          if (reflection !== true && _this.relationships[linkKey] !== undefined) {\n            _this.relationships[linkKey].removeLink(reflectionKey, _this, true);\n          }\n        }\n      } else {\n        if (linkedObject === undefined) {\n          _this.data.relationships[linkKey].data = [];\n          linkAttributes = [];\n          removed = true;\n          if (reflection !== true) {\n            angular.forEach(_this.relationships[linkKey], function(link) {\n              link.removeLink(reflectionKey, _this, true);\n            });\n          }\n        } else {\n          angular.forEach(linkAttributes, function(link, index) {\n            if (link.id === linkedObject.data.id) {\n              if (reflection !== true) {\n                linkedObject.removeLink(reflectionKey, _this, true);\n              }\n\n              linkAttributes.splice(index, 1);\n              removed = true;\n            }\n          });\n        }\n      }\n\n      if (removed === true) {\n        _this.__setUpdated();\n\n        if (reflection !== true) {\n          _this.parentCollection.__synchronize('removeLink', _this, linkKey, linkedObject);\n        } else {\n          _this.parentCollection.__synchronize('removeLinkReflection',  _this, linkKey, linkedObject);\n        }\n\n        _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n      }\n    }\n\n    function __updateAttributes(validatedAttributes) {\n      var _this = this;\n\n      _this.__setUpdated();\n      _this.__setAttributes(validatedAttributes);\n      _this.parentCollection.__synchronize('update', _this);\n    }\n\n    function __setLinkInternal(linkAttributes, linkKey, linkSchema) {\n      var _this = this;\n      var linkType = linkSchema.type;\n      var reflectionKey = linkSchema.reflection;\n\n      if (linkAttributes === null) {\n        delete _this.relationships[linkKey];\n        _this.relationships[linkKey] = undefined;\n      } else if (linkType === 'hasMany' && angular.isArray(linkAttributes)) {\n        var getAll = function() {\n          var result = [];\n          angular.forEach(linkAttributes, function(link) {\n            var linkedCollection = _this.linkedCollections[link.type];\n            if (linkedCollection === undefined) {\n              $log.error('No angular-jsonapi schema for', linkAttributes.type);\n              return;\n            }\n\n            var linkedObject = linkedCollection.__get(link.id);\n            linkedObject.addLink(reflectionKey, _this, true);\n\n            result.push(linkedObject);\n          });\n\n          return result;\n        };\n\n        lazyProperty(_this.relationships, linkKey, getAll);\n      } else if (linkType === 'hasOne' && linkAttributes !== null) {\n\n        var getSingle = function() {\n          var linkedCollection = _this.linkedCollections[linkAttributes.type];\n          if (linkedCollection === undefined) {\n            $log.error('No angular-jsonapi schema for', linkAttributes.type);\n            return;\n          }\n\n          var linkedObject = linkedCollection.__get(linkAttributes.id);\n          linkedObject.addLink(reflectionKey, _this, true);\n\n          return linkedObject;\n        };\n\n        lazyProperty(_this.relationships, linkKey, getSingle);\n      }\n    }\n\n    function __setLink(linkAttributes, linkKey, linkSchema) {\n      var _this = this;\n      var linkType = linkSchema.type;\n      var reflectionKey = linkSchema.reflection;\n\n      if (linkType === 'hasMany' && angular.isArray(linkAttributes)) {\n        var indexedLinks = {};\n        angular.forEach(linkAttributes, function(link) {\n          indexedLinks[link.id] = link;\n        });\n\n        angular.forEach(_this.relationships[linkKey], function(link) {\n          if (indexedLinks[link.data.id] === undefined) {\n            link.removeLink(reflectionKey, _this, true);\n          }\n        });\n      } else if (linkType === 'hasOne' && linkAttributes !== null) {\n        if (_this.relationships[linkKey] !== undefined && _this.relationships[linkKey].data.id !== linkAttributes.id) {\n          _this.relationships[linkKey].removeLink(reflectionKey, _this, true);\n        }\n      }\n\n      _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n    }\n\n    function __setLinks(relationships) {\n      var _this = this;\n      angular.forEach(_this.schema.relationships, function(linkSchema, linkName) {\n        _this.data.relationships[linkName] = _this.data.relationships[linkName] || {};\n        if (relationships[linkName] !== undefined) {\n          angular.extend(_this.data.relationships[linkName], relationships[linkName]);\n        }\n      });\n\n      angular.forEach(_this.schema.relationships, function(linkSchema, linkKey) {\n        if (relationships[linkKey] !== undefined && relationships[linkKey].data !== undefined) {\n          _this.__setLink(relationships[linkKey].data, linkKey, linkSchema);\n        }\n      });\n    }\n\n    function __validateField(data, key) {\n      var _this = this;\n      var error = [];\n\n      if (data !== undefined) {\n        error = __validate(_this.schema.attributes[key], data, key);\n      }\n\n      return error;\n    }\n\n    function __validateData(data) {\n      var _this = this;\n      var errors = {};\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        var error = _this.__validateField(data[key], key);\n        if (error.length > 0) {\n          errors[key] = error;\n          $log.warn('Erorrs when validating ', data[key], errors);\n        }\n      });\n\n      return errors;\n    }\n\n    function __setAttributes(attributes) {\n      var _this = this;\n\n      angular.forEach(_this.schema.attributes, function(validator, attributeName) {\n        if (attributes[attributeName]) {\n          _this.data.attributes[attributeName] = attributes[attributeName];\n        }\n      });\n    }\n\n    function __setData(data) {\n      var _this = this;\n      var safeData = angular.copy(data);\n\n      _this.errors.validation = _this.__validateData(safeData);\n\n      safeData.relationships = safeData.relationships || {};\n      safeData.attributes = safeData.attributes || {};\n\n      _this.data.id = safeData.id;\n      _this.data.type = safeData.type;\n\n      _this.__setAttributes(safeData.attributes);\n      _this.__setLinks(safeData.relationships);\n    }\n\n    function __validate(validator, attributeValue, attributeName) {\n      var errors = [];\n      if (angular.isArray(validator)) {\n        angular.forEach(validator, function(element) {\n          errors = errors.concat(__validate(element, attributeValue, attributeName));\n        });\n      } else if (angular.isFunction(validator)) {\n        var err = validator(attributeValue);\n        if (angular.isArray(err)) {\n          errors.concat(err);\n        } else {\n          $log.error(\n            'Wrong validator type it should return array of errors instead of: ' +\n              err.toString()\n          );\n        }\n      } else if (angular.isString(validator)) {\n        if (validator === 'text' || validator === 'string') {\n          if (!angular.isString(attributeValue)) {\n            errors.push(attributeName + ' is not a string ');\n          }\n        } else if (validator === 'number' || validator === 'integer') {\n          if (parseInt(attributeValue).toString() !== attributeValue.toString()) {\n            errors.push(attributeName + ' is not a number');\n          }\n        } else if (validator === 'uuid4') {\n          if (!uuid4.validate(attributeValue)) {\n            errors.push(attributeName + ' is not a uuid4');\n          }\n        } else if (validator === 'required') {\n          if (attributeValue.toString().length === 0) {\n            errors.push(attributeName + ' is empty');\n          }\n        } else {\n          $log.error('Wrong validator type: ' + validator.toString());\n        }\n      } else if (angular.isObject(validator)) {\n        if (validator.maxlength !== undefined && attributeValue.length > validator.maxlength) {\n          errors.push(attributeName + ' is too long max ' + validator.maxlength);\n        }\n\n        if (validator.minlength !== undefined && attributeValue.length < validator.minlength) {\n          errors.push(attributeName + ' is too short min ' + validator.minlength);\n        }\n\n        if (validator.maxvalue !== undefined && parseInt(attributeValue) > validator.maxvalue) {\n          errors.push(attributeName + ' is too big max ' + validator.maxvalue);\n        }\n\n        if (validator.minvalue !== undefined && parseInt(attributeValue) < validator.minvalue) {\n          errors.push(attributeName + ' is too small min ' + validator.minvalue);\n        }\n      } else {\n        $log.error('Wrong validator type: ' + validator.toString());\n      }\n\n      return errors;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractDataForm', AngularJsonAPIAbstractDataFormWrapper);\n\n  function AngularJsonAPIAbstractDataFormWrapper($log) {\n\n    AngularJsonAPIAbstractDataForm.prototype.save = save;\n    AngularJsonAPIAbstractDataForm.prototype.reset = reset;\n    AngularJsonAPIAbstractDataForm.prototype.validate = validate;\n    AngularJsonAPIAbstractDataForm.prototype.validateField = validateField;\n\n    AngularJsonAPIAbstractDataForm.prototype.__synchronize = __synchronize;\n\n    return AngularJsonAPIAbstractDataForm;\n\n    function AngularJsonAPIAbstractDataForm(parent) {\n      var _this = this;\n\n      _this.data = {};\n      _this.parent = parent;\n      _this.reset();\n    }\n\n    function save() {\n      var _this = this;\n      var errors = _this.validate();\n\n      if (angular.equals(errors, {}) === false) {\n        $log.error('Errors in form: ', errors);\n        return;\n      }\n\n      _this.parent.__updateAttributes(_this.data);\n    }\n\n    function reset() {\n      var _this = this;\n\n      angular.forEach(_this.parent.schema.attributes, function(data, key) {\n        _this.data[key] = _this.parent.data.attributes[key] || '';\n      });\n\n      _this.errors = {\n        validation: {}\n      };\n    }\n\n    function validate() {\n      var _this = this;\n      var errors;\n\n      errors = _this.parent.__validateData(_this.data);\n\n      _this.errors.validation = errors;\n\n      return errors;\n    }\n\n    function validateField(key) {\n      var _this = this;\n      var errors;\n      errors = _this.parent.__validateField(\n        _this.data[key],\n        key\n      );\n\n      _this.errors.validation[key] = errors;\n\n      return errors;\n    }\n\n    function __synchronize(key) {\n      $log.log('Synchro Collection ' + this.Model.prototype.schema.type, key);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider() {\n    var memory = {};\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPICollection) {\n      return {\n        form: form,\n        get: get,\n        remove: remove,\n        all: all,\n        addModel: addModel,\n        getModel: getModel\n      };\n\n      function addModel(schema, synchronization) {\n        var collection = new AngularJsonAPICollection(schema, synchronization);\n\n        memory[schema.type] = collection;\n      }\n\n      function getModel(type) {\n        return memory[type];\n      }\n\n      function form(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t add not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].dummy.form;\n      }\n\n      function get(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].get(id);\n      }\n\n      function remove(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t remove not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].remove(id);\n      }\n\n      function all(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get all of not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].all();\n      }\n    }\n  }\n\n})();\n\n"],"sourceRoot":"/source/"}