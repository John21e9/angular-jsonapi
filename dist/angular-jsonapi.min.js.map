{"version":3,"sources":["/source/jsonapi.module.js","/source/model/model-form/model-form.factory.js","angular-jsonapi.min.js","/source/resource/resource-cache/resource-cache.factory.js","/source/model/model-linker/model-linker.js","/source/model/abstract-model/abstract-model.js","/source/errors/validation-error/validation-error.factory.js","/source/errors/source-error/source-error.factory.js","/source/errors/errors-manager/errors-manager.factory.js","/source/utils/named-function.js","/source/utils/lazy-property.js","/source/utils/kebab-case.js","/source/utils/all-settled.js","/source/synchronizers/synchronizer-simple.factory.js","/source/synchronizers/synchronizer-prototype.js","/source/sources/source-rest.factory.js","/source/sources/source-prototype.js","/source/sources/source-local.factory.js","/source/schema/schema.factory.js","/source/schema/schema-link.factory.js","/source/resource/resource.factory.js","/source/model/model-factory.factory.js","/source/collection/collection.factory.js","/source/jsonapi.provider.js","/source/jsonapi.config.js"],"names":["angular","module","constant","pluralize","validate","AngularJsonAPIModelFormWrapper","AngularJsonAPIModelValidationError","AngularJsonAPIModelLinkerService","validateJS","$q","AngularJsonAPIModelFormFactory","parent","AngularJsonAPIModelForm","_this","this","data","id","type","attributes","relationships","schema","reset","toJson","copy","forEach","value","key","undefined","save","auto","isArray","slice","validator","errors","validation","clear","resolve","deferred","reject","errorsMap","error","attribute","add","create","attributesWrapper","constraintsWrapper","defer","async","then","promise","link","target","oneWay","unlink","prototype","factory","$inject","AngularJsonAPIResourceCacheWrapper","uuid4","$log","AngularJsonAPIResourceCacheFactory","resource","AngularJsonAPIResourceCache","removed","size","indexIds","addOrUpdate","validatedData","config","updatedAt","modelFactory","update","initialization","fromJson","json","collection","new","synchronized","stable","pristine","isObject","objectData","object","hasErrors","push","get","index","params","debug","map","bind","setIndexIds","array","element","isString","remove","revertRemove","clearRemoved","toLinkData","form","polymorphic","model","__addHasMany","__processAddHasMany","__addHasOne","__processAddHasOne","__removeHasMany","__processRemove","reflectionSchema","reflectionKey","reflection","__swapResults","__wrapResults","oldReflectionSchema","oldReflection","result","__removeHasOne","linkData","indexOf","splice","newValue","item","i","service","AngularJsonAPIAbstractModelWrapper","AngularJsonAPIModelSourceError","AngularJsonAPIModelErrorsManager","$rootScope","$injector","AngularJsonAPIAbstractModel","loading","saving","Date","now","loadingCount","savingCount","synchronization","__setData","synchronize","notify","response","$emit","action","cache","finish","concat","meta","__decrementSavingCounter","__incrementSavingCounter","refresh","synchronizeIncluded","__incrementLoadingCounter","__decrementLoadingCounter","resolveIncluded","includedResponse","operation","success","results","included","$jsonapi","__proccesResults","allSettled","unlinkAll","removeLink","linksObj","removeReflectionLink","resolveReflection","targets","answer","setAttributes","validators","setRelationships","relationshipData","links","linkOne","length","unlinkOne","getResource","AngularJsonAPIModelValidationErrorWrapper","ValidationErrorFactory","message","ValidationError","Error","captureStackTrace","constructor","context","Object","name","AngularJsonAPIModelSourceErrorWrapper","SourceErrorFactory","source","code","SourceError","AngularJsonAPIModelErrorsManagerWrapper","ErrorsManagerFactory","description","ErrorConstructor","defaultFilter","ErrorsManager","obj","namedFunction","fn","Function","propertyName","callback","done","defineProperty","call","enumerable","configurable","str","replace","toLowerCase","$provide","decorator","$delegate","promises","resolvedCallback","rejectedCallback","wrap","isFunction","reason","wrapped","hasOwnProperty","all","AngularJsonAPISynchronizerSimpleWrapper","AngularJsonAPISynchronizerPrototype","AngularJsonAPISynchronizerSimpleFactory","sources","AngularJsonAPISynchronizerSimple","state","synchronizer","step","resolved","afterHooks","hook","finishHooks","rejected","noop","beginHooks","beforeHooks","synchronizationHooks","AngularJsonAPISynchronizerPrototypeWrapper","AngularJsonAPISourceRestWrapper","AngularJsonAPISourcePrototype","toKebabCase","$http","AngularJsonAPISourceRestFactory","url","AngularJsonAPISourceRest","method","headers","resolveHttp","rejectHttp","status","statusText","rejectServerOffline","rejectNoConnection","Accept","Content-Type","apply","arguments","AngularJsonAPISourcePrototypeWrapper","allHooks","options","hookName","begin","beforeSynchro","afterSynchro","before","after","AngularJsonAPISourceLocalWrapper","$window","AngularJsonAPISourceLocalFactory","prefix","AngularJsonAPISourceLocal","init","localStorage","getItem","removeItem","updateStorage","setItem","__updateStorage","AngularJsonAPISchemaWrapper","AngularJsonAPISchemaLink","AngularJsonAPISchemaFactory","AngularJsonAPISchema","include","generate","isNumber","identity","linkSchema","linkName","linkSchemaObj","extend","join","AngularJsonAPILinkSchrapperLink","AngularJsonAPISchemaLinkFactory","plural","singular","AngularJsonAPIResourceWrapper","AngularJsonAPIModel","AngularJsonAPICollection","AngularJsonAPIResourceFactory","AngularJsonAPIResource","initialized","fetch","initialize","relationshipSchema","relationshipName","clearCache","createModelFactory","schemaObj","isNew","Model","constructorName","functions","metaFunction","metaFunctionName","AngularJsonAPICollectionWrapper","AngularJsonAPICollectionFactory","event","clearWatchers","onObjectRemove","onFactoryClear","onObjectAdd","$on","jsonapiProvider","jsonapiFactory","addResource","memory","names","allResources","listResources","addValidator","warn","objects","$get","provider","$logProvider","debugEnabled","run","Promise"],"mappings":"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","file":"angular-jsonapi.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false, validate: false */\n  .constant('pluralize', pluralize)\n  .constant('validateJS', validate);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelLinkerService,\n    validateJS,\n    $q\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return {\n      create: AngularJsonAPIModelFormFactory\n    };\n\n    function AngularJsonAPIModelFormFactory(parent) {\n      return new AngularJsonAPIModelForm(parent);\n    }\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        id: parent.data.id,\n        type: parent.data.type,\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset(auto) {\n      var _this = this;\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = angular.copy(_this.parent.data.relationships[key]) || {};\n        if (angular.isArray(_this.relationships[key])) {\n          _this.relationships[key] = _this.parent.relationships[key].slice();\n        } else {\n          _this.relationships[key] = _this.parent.relationships[key];\n        }\n      });\n\n      if (auto === true && _this.parent.synchronized === true) {\n        return;\n      }\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        _this.data.attributes[key] = angular.copy(_this.parent.data.attributes[key]);\n      });\n\n      _this.parent.errors.validation.clear();\n    }\n\n    /**\n     * Validates form\n     * @return {promise} Promise rejected to errors object indexed by keys. If the\n     * key param i stated it only validates an attribute, else all attributes.\n     */\n    function validate(key) {\n      var _this = this;\n      var attributesWrapper;\n      var constraintsWrapper;\n      var deferred = $q.defer();\n\n      if (key === undefined) {\n        attributesWrapper = _this.data.attributes;\n        constraintsWrapper = _this.schema.attributes;\n      } else {\n        attributesWrapper = {};\n        constraintsWrapper = {};\n\n        attributesWrapper[key] = _this.data.attributes[key];\n        constraintsWrapper[key] = _this.schema.attributes[key];\n      }\n\n      validateJS.async(\n        attributesWrapper,\n        constraintsWrapper\n      ).then(resolve, reject);\n\n      function resolve() {\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        deferred.resolve();\n      }\n\n      function reject(errorsMap) {\n        _this.parent.error = true;\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        angular.forEach(errorsMap, function(errors, attribute) {\n          angular.forEach(errors, function(error) {\n            _this.parent.errors.validation.add(attribute, AngularJsonAPIModelValidationError.create(error, attribute));\n          });\n        });\n\n        deferred.reject(_this.parent.errors.validation);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target, oneWay) {\n      var _this = this;\n      oneWay = oneWay === undefined ? false : true;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.link(_this.parent, key, target, oneWay, true));\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target, oneWay) {\n      var _this = this;\n      oneWay = oneWay === undefined ? false : true;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.unlink(_this.parent, key, target, oneWay, true));\n    }\n  }\n})();\n","!function(){\"use strict\";angular.module(\"angular-jsonapi\",[\"uuid4\"]).constant(\"pluralize\",pluralize).constant(\"validateJS\",validate)}(),function(){\"use strict\";function e(e,n){function t(e){return new r(e)}function r(e){var n=this;n.resource=e,n.data={},n.removed={},n.size=0,n.indexIds=void 0}function a(e,t,r){var a=this,o=e.id;return void 0===o?void n.error(\"Can't add data without id!\",e):(void 0===a.data[o]?(a.data[o]=a.resource.modelFactory(e,t,r),a.size+=1):a.data[o].update(e,!t[\"new\"],t.initialization),a.data[o])}function o(e){var n=this,t=angular.fromJson(e),r={\"new\":!1,\"synchronized\":!1,stable:!1,pristine:!1,initialization:!0};angular.isObject(t)&&void 0!==t.data&&(n.updatedAt=t.updatedAt,n.indexIds=t.indexIds,angular.forEach(t.data,function(e){var t=e.data;n.addOrUpdate(t,r,e.updatedAt)}))}function i(){var e=this,n={data:[],updatedAt:e.updatedAt,indexIds:e.indexIds};return angular.forEach(e.data,function(e){e.hasErrors()===!1&&n.data.push(e.toJson())}),angular.toJson(n)}function s(){var e=this;e.indexIds=void 0,e.data={},e.removed={}}function c(e){var n=this,t={id:e,type:n.resource.schema.type},r={\"new\":!1,\"synchronized\":!1,stable:!1,pristine:!0};return void 0===n.data[e]&&(n.data[e]=n.resource.modelFactory(t,r)),n.data[e]}function u(e){var t=this;return n.debug(\"Unused params\",e),void 0===t.indexIds?t.indexIds:t.indexIds.map(t.get.bind(t))}function l(e){var n=this;n.indexIds=[],angular.forEach(e,function(e){angular.isString(e)&&n.resource.schema.id.validate(e)?n.indexIds.push(e):angular.isObject(e)&&n.resource.schema.id.validate(e.data.id)&&n.indexIds.push(e.data.id)})}function d(e){var n=this;return void 0!==n.data[e]&&(n.removed[e]=n.data[e],delete n.data[e],n.size-=1),n.removed[e]}function h(e){var n=this;return void 0!==n.removed[e]&&(n.data[e]=n.removed[e],delete n.removed[e],n.size+=1),n.data[e]}function p(e){var n=this;delete n.removed[e]}return r.prototype.get=c,r.prototype.index=u,r.prototype.setIndexIds=l,r.prototype.addOrUpdate=a,r.prototype.fromJson=o,r.prototype.toJson=i,r.prototype.clear=s,r.prototype.remove=d,r.prototype.revertRemove=h,r.prototype.clearRemoved=p,{create:t}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIResourceCache\",e),e.$inject=[\"uuid4\",\"$log\"]}(),function(){\"use strict\";function e(e){function n(e){return null===e?null:{type:e.data.type,id:e.data.id}}function t(n,t,r,i,u){var l;return u=void 0===u?!1:u,void 0===n?(e.error(\"Can't add link to non existing object\",n,t,r),e.error(\"Object:\",n.data.type,n),e.error(\"Target:\",r.data.type,r),e.error(\"Key:\",t),[]):(l=n.schema.relationships[t],void 0===r?(e.error(\"Can't link non existing object\",n,t,r,l),e.error(\"Object:\",n.data.type,n),e.error(\"Target:\",r.data.type,r),e.error(\"Key:\",t),e.error(\"Schema:\",l),[]):void 0===l?(e.error(\"Can't add link not present in schema:\",n,t,r,l),e.error(\"Object:\",n.data.type,n),e.error(\"Target:\",r.data.type,r),e.error(\"Key:\",t),e.error(\"Schema:\",l),[]):null!==r&&l.polymorphic===!1&&l.model!==r.data.type?(e.error(\"This relation is not polymorphic, expected: \"+l.model+\" instead of \"+r.data.type),e.error(\"Object:\",n.data.type,n),e.error(\"Target:\",r.data.type,r),e.error(\"Key:\",t),e.error(\"Schema:\",l),[]):\"hasMany\"===l.type?i===!0?(c(n,t,r,u),[]):a(n,t,r,u):\"hasOne\"===l.type?i===!0?(s(n,t,r,u),[]):o(n,t,r,u):void 0)}function r(n,t,r,a,o){var s;return o=void 0===o?!1:o,void 0===n?(e.error(\"Can't remove link from non existing object\",n,t,r),e.error(\"Object:\",n.data.type,n),e.error(\"Target:\",r.data.type,r),e.error(\"Key:\",t),[]):(s=n.schema.relationships[t],void 0===s?(e.error(\"Can't remove link not present in schema:\",n,t,r,s),e.error(\"Object:\",n.data.type,n),e.error(\"Target:\",r.data.type,r),e.error(\"Key:\",t),e.error(\"Schema:\",s),[]):a===!0?(l(n,t,r,o),[]):i(n,t,r,o))}function a(e,n,t,r){var a,i=e.schema.relationships[n].reflection;return i===!1?(c(e,n,t,r),[]):(a=t.schema.relationships[i],\"hasOne\"===a.type?h(d(e,n,t),d(t,i,e),o(t,i,e,r)):\"hasMany\"===a.type?(c(e,n,t,r),c(t,i,e,r),[d(t,i,e)]):void 0)}function o(e,n,t,r){var a,o,i=e.schema.relationships[n].reflection,h=e.relationships[n],p=[];return s(e,n,t,r),void 0!==h&&null!==h&&(o=h.schema.relationships[i],\"hasOne\"===o.type?u(h,i,e,r):\"hasMany\"===o.type&&l(h,i,e,r),p.push(d(h,i,e))),void 0!==t&&null!==t&&i!==!1&&(a=t.schema.relationships[i],\"hasOne\"===a.type?s(t,i,e,r):\"hasMany\"===a.type&&c(t,i,e,r),p.push(d(t,i,e))),p}function i(e,n,t,r){var a,o=e.schema.relationships[n],i=o.reflection;return\"hasMany\"===o.type?l(e,n,t,r):\"hasOne\"===o.type&&u(e,n,t,r),i===!1?[]:(a=t.schema.relationships[i],\"hasOne\"===a.type?u(t,i,e,r):\"hasMany\"===a.type&&l(t,i,e,r),[d(t,i,e)])}function s(t,r,a,o){return e.debug(\"addHasOne\",t,r,a),o===!0&&(t=t.form),t.relationships[r]=a,t.data.relationships[r].data=n(a),o===!1&&t.reset(!0),!0}function c(t,r,a,o){e.debug(\"addHasMany\",t,r,a);var i=n(a);return o===!0&&(t=t.form),angular.isArray(t.relationships[r])&&t.relationships[r].indexOf(a)>-1?!1:(t.relationships[r]=t.relationships[r]||[],t.data.relationships[r].data=t.data.relationships[r].data||[],t.relationships[r].push(a),t.data.relationships[r].data.push(i),o===!1&&t.reset(!0),!0)}function u(n,t,r,a){return e.debug(\"removeHasOne\",n,t,r),a===!0&&(n=n.form),void 0!==r&&n.relationships[t]!==r?!1:(n.relationships[t]=null,n.data.relationships[t].data=void 0,a===!1&&n.reset(!0),!0)}function l(n,t,r,a){if(e.debug(\"removeHasMany\",n,t,r),a===!0&&(n=n.form),void 0!==n.relationships[t]){if(void 0===r)return n.relationships[t]=[],n.data.relationships[t].data=[],a===!1&&n.reset(!0),!0;var o=n.relationships[t].indexOf(r);return-1===o?!1:(n.relationships[t].splice(o,1),n.data.relationships[t].data.splice(o,1),a===!1&&n.reset(!0),!0)}}function d(e,n,t){return{object:e,key:n,target:t}}function h(e,n,t){var r=-1;return angular.forEach(t,function(n,t){n.object===e.object&&n.key===e.key&&n.target===e.target&&(r=t)}),r>-1?t[r]=n:t.push(n),t}var p=this;return p.toLinkData=n,p.link=t,p.unlink=r,this}angular.module(\"angular-jsonapi\").service(\"AngularJsonAPIModelLinkerService\",e),e.$inject=[\"$log\"]}(),function(){\"use strict\";function e(e,n,t,r){function a(e){return new o(e)}function o(e){var n=this;n.data={id:e.data.id,type:e.data.type,attributes:{},relationships:{}},n.relationships={},n.parent=e,n.schema=e.schema,n.reset()}function i(){var e=this,n=angular.copy(e.data),t={};return angular.forEach(n.relationships,function(e,n){void 0!==e.data&&(t[n]=e)}),n.relationships=t,{data:n}}function s(){var e=this;return e.parent.save()}function c(e){var n=this;angular.forEach(n.schema.relationships,function(e,t){n.data.relationships[t]=angular.copy(n.parent.data.relationships[t])||{},angular.isArray(n.relationships[t])?n.relationships[t]=n.parent.relationships[t].slice():n.relationships[t]=n.parent.relationships[t]}),(e!==!0||n.parent[\"synchronized\"]!==!0)&&(angular.forEach(n.schema.attributes,function(e,t){n.data.attributes[t]=angular.copy(n.parent.data.attributes[t])}),n.parent.errors.validation.clear())}function u(n){function a(){void 0===n?c.parent.errors.validation.clear():c.parent.errors.validation.clear(n),u.resolve()}function o(t){c.parent.error=!0,void 0===n?c.parent.errors.validation.clear():c.parent.errors.validation.clear(n),angular.forEach(t,function(n,t){angular.forEach(n,function(n){c.parent.errors.validation.add(t,e.create(n,t))})}),u.reject(c.parent.errors.validation)}var i,s,c=this,u=r.defer();return void 0===n?(i=c.data.attributes,s=c.schema.attributes):(i={},s={},i[n]=c.data.attributes[n],s[n]=c.schema.attributes[n]),t.async(i,s).then(a,o),u.promise}function l(e,t,a){var o=this;return a=void 0===a?!1:!0,r.resolve(n.link(o.parent,e,t,a,!0))}function d(e,t,a){var o=this;return a=void 0===a?!1:!0,r.resolve(n.unlink(o.parent,e,t,a,!0))}return o.prototype.save=s,o.prototype.reset=c,o.prototype.validate=u,o.prototype.link=l,o.prototype.unlink=d,o.prototype.toJson=i,{create:a}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelForm\",e),e.$inject=[\"AngularJsonAPIModelValidationError\",\"AngularJsonAPIModelLinkerService\",\"validateJS\",\"$q\"]}(),function(){\"use strict\";function e(e,o,i,s,c,u,l,d,h){function p(n,t,r){var a=this;n.relationships=n.relationships||{},a[\"new\"]=void 0===t[\"new\"]?!1:t[\"new\"],a.stable=void 0===t.stable?!0:t.stable,a[\"synchronized\"]=void 0===t[\"synchronized\"]?!0:t[\"synchronized\"],a.pristine=void 0===t.pristine?!0:t.pristine,a.removed=!1,a.loading=!1,a.saving=!1,a.updatedAt=a[\"synchronized\"]===!0?Date.now():r,a.loadingCount=0,a.savingCount=0,a.data={relationships:{},attributes:{}},a.relationships={},angular.forEach(a.schema.relationships,function(e,n){a.relationships[n]=void 0}),a.errors={validation:i.create(\"Validation\",\"Errors of attributes validation\",o),synchronization:i.create(\"Source\",\"Errors of synchronizations\",e)},a.promise=h.resolve(a),I(a,n),a.form=c.create(a)}function f(){function e(){i.synchronize(c).then(n,t,o)}function n(e){u.$emit(\"angularJsonAPI:\"+i.data.type+\":object:\"+c.action,\"resolved\",i,e),i.update(e.data.data),i[\"new\"]===!0&&(i.resource.cache.indexIds=i.resource.cache.indexIds||[],i.resource.cache.indexIds.push(i.data.id)),i[\"synchronized\"]=!0,i[\"new\"]=!1,i.pristine=!1,i.stable=!0,e.finish(),i.errors.synchronization.concat(e.errors),s.resolve(e.data.meta)}function t(e){u.$emit(\"angularJsonAPI:\"+i.data.type+\":object:save\",\"rejected\",i,e),e.finish(),i.errors.synchronization.concat(e.errors),s.reject(i)}function o(e){u.$emit(\"angularJsonAPI:\"+i.data.type+\":object:save\",\"notify\",i,e),s.notify(e)}var i=this,s=h.defer(),c={action:i[\"new\"]===!0?\"add\":\"update\",object:i};return i.form.validate().then(e,s.reject)[\"finally\"](a.bind(i,void 0)),r(i),s.promise}function y(){var e=this;void 0!==e.form&&e.form.reset()}function g(r){function a(e){function r(e){return n(e),e.synchronize({action:\"include\",object:e})[\"finally\"](t.bind(e,void 0))}function a(n){angular.forEach(n,function(e,n){e.success===!0&&(u.$emit(\"angularJsonAPI:\"+o.included[n].data.type+\":object:include\",\"resolved\",o.included[n],e),e.value.finish())}),c.resolve(e.data.meta)}var o=s.__proccesResults(e.data);u.$emit(\"angularJsonAPI:\"+d.data.type+\":object:refresh\",\"resolved\",d,e),h.allSettled(o.included.map(r)).then(a,c.reject),d[\"synchronized\"]=!0,d.stable=!0,d.pristine=!1,e.finish(),d.errors.synchronization.concat(e.errors)}function o(e){u.$emit(\"angularJsonAPI:\"+d.data.type+\":object:refresh\",\"rejected\",d,e),e.finish(),d.errors.synchronization.concat(e.errors),c.reject(d)}function i(e){u.$emit(\"angularJsonAPI:\"+d.data.type+\":object:refresh\",\"notify\",d,e),c.notify(e)}var s=l.get(\"$jsonapi\"),c=h.defer(),d=this;r=void 0===r?d.schema.params.get:r;var p={action:\"refresh\",object:d,params:r};if(d[\"new\"]===!0){var f=e.create(\"Can't refresh new object\",null,0,\"refresh\");d.errors.synchronization.add(\"refresh\",f),c.reject(f)}else n(d),d.synchronize(p).then(a,o,i)[\"finally\"](t.bind(d,void 0));return c.promise}function v(){var e=this,n=angular.copy(e.data),t={};return angular.forEach(n.relationships,function(e,n){void 0!==e.data&&(t[n]=e)}),n.relationships=t,{data:n,updatedAt:e.updatedAt}}function m(){function e(e){u.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"resolved\",o,e),o.removed=!0,o.unlinkAll(),o.resource.cache.clearRemoved(o.data.id),e.finish(),o.errors.synchronization.concat(e.errors),i.resolve(e.data.meta)}function n(e){u.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"rejected\",o,e),o.resource.cache.revertRemove(o.data.id),e.finish(),o.errors.synchronization.concat(e.errors),i.reject(o)}function t(e){u.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"notify\",o,e),i.notify(e)}var o=this,i=h.defer(),s={action:\"remove\",object:o};return o.resource.cache.remove(o.data.id),o[\"new\"]===!0?i.resolve():(r(o),o.synchronize(s).then(e,n,t)[\"finally\"](a.bind(o,void 0))),i.promise}function b(e){function r(e,n){var t=o.schema.relationships[n],r=t.reflection;angular.isArray(e)?angular.forEach(e,a.bind(void 0,r)):angular.isObject(e)&&a(r,e),\"hasOne\"===t.type?o.relationships[n]=null:\"hasMany\"===t.type&&(o.relationships[n]=[])}function a(e,r){function a(e){u.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"resolve\",o,e),e.finish(),o.errors.synchronization.concat(e.errors),i.resolve(e.data.meta)}function c(e){u.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"rejected\",o,e),e.finish(),o.errors.synchronization.concat(e.errors),i.reject(o)}function l(e){u.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"notify\",o,e),e.finish(),i.notify(e)}var d=r.schema.relationships[e],h={action:\"unlinkReflection\",object:r,target:o,key:e};n(r),s.unlink(r,e,o,d),r.synchronize(h).then(a,c,l)[\"finally\"](t.bind(r,void 0))}var o=this,i=h.defer();return n(o),void 0===e?angular.forEach(o.relationships,r):r(o.relationships[e],e),t(o),i.promise}function j(o,i){function c(e){function r(e){return n(i),i.synchronize({action:\"linkReflection\",object:e.object,target:e.target,key:e.key})[\"finally\"](t.bind(i,void 0))}function a(e){angular.forEach(e,function(e,n){e.success===!0&&(u.$emit(\"angularJsonAPI:\"+c[n].object.data.type+\":object:linkReflection\",\"resolved\",c[n],e),e.value.finish())}),f.resolve(e.data.meta)}u.$emit(\"angularJsonAPI:\"+y.data.type+\":object:link\",\"resolved\",y,e);var c=s.link(y,o,i);y.stable=!0,y.pristine=!1,e.finish(),y.errors.synchronization.concat(e.errors),h.allSettled(c.map(r)).then(a,f.reject)}function l(e){u.$emit(\"angularJsonAPI:\"+y.data.type+\":object:link\",\"rejected\",y,e),f.reject(e.errors),e.finish(),y.errors.synchronization.concat(e.errors),f.reject(y)}function d(e){u.$emit(\"angularJsonAPI:\"+y.data.type+\":object:link\",\"notify\",y,e),f.notify(e)}var p,f=h.defer(),y=this,g={action:\"link\",object:y,target:i,key:o};return void 0===i?(p=e.create(\"Can't link undefined\",null,0,\"link\"),y.errors.synchronization.add(\"link\",p),f.reject(p)):y[\"new\"]===!0?(p=e.create(\"Can't link new object\",null,0,\"link\"),y.errors.synchronization.add(\"link\",p),f.reject(p)):(r(y),y.synchronize(g).then(c,l,d)[\"finally\"](a.bind(y,void 0))),f.promise}function A(o,i){function c(e){function r(e){return n(i),i.synchronize({action:\"unlinkReflection\",object:e.object,target:e.target,key:e.key})[\"finally\"](t.bind(i,void 0))}function a(e){angular.forEach(e,function(n){n.success===!0&&(u.$emit(\"angularJsonAPI:\"+c[o].data.type+\":object:unlinkReflection\",\"resolved\",c[o],n),e.value.finish())}),f.resolve(e.data.meta)}u.$emit(\"angularJsonAPI:\"+y.data.type+\":object:unlink\",\"resolved\",y,e);var c=s.link(y,o,i);y.stable=!0,y.pristine=!1,e.finish(),y.errors.synchronization.concat(e.errors),h.allSettled(c.map(r)).then(a,f.reject)}function l(e){u.$emit(\"angularJsonAPI:\"+y.data.type+\":object:unlink\",\"rejected\",y,e),f.reject(e.errors),e.finish(),y.errors.synchronization.concat(e.errors),f.reject(y)}function d(e){u.$emit(\"angularJsonAPI:\"+y.data.type+\":object:unlink\",\"notify\",y,e),f.notify(e)}var p,f=h.defer(),y=this,g={action:\"unlink\",object:y,target:i,key:o};return void 0===i?(p=e.create(\"Can't unlink undefined\",null,0,\"unlink\"),y.errors.synchronization.add(\"unlink\",p),f.reject(y)):y[\"new\"]===!0?(p=e.create(\"Can't unlink new object\",null,0,\"unlink\"),y.errors.synchronization.add(\"unlink\",p),f.reject(y)):(r(y),y.synchronize(g).then(c,l,d)[\"finally\"](a.bind(y,void 0))),f.promise}function k(e,r,a){var o=this;n(o),I(o,e),o.reset(r),o[\"synchronized\"]=a===!0?!1:!0,o.stable=a===!0?!1:!0,o.updatedAt=Date.now(),t(o)}function z(){var e=this,n=!1;return angular.forEach(e.errors,function(e){n=e.hasErrors()||n}),n}function I(e,n){function t(t,r){e.data.attributes[r]=n.attributes[r]}function r(t,r){var i=n.relationships[r];return void 0===i?void(e.data.relationships[r]={data:void 0}):(e.data.relationships[r]=e.data.relationships[r]||{},e.data.relationships[r].links=i.links,void(\"hasOne\"===t.type?a(e,r,i.data):\"hasMany\"===t.type&&angular.isArray(i.data)&&(0===i.data.length?(e.data.relationships[r].data=[],e.unlinkAll(r)):(angular.forEach(e.relationships[r],o.bind(void 0,e,r,i.data)),angular.forEach(i.data,a.bind(void 0,e,r))))))}function a(e,n,t){var r;if(null===t)return void s.link(e,n,null);if(void 0!==t){if(r=i.getResource(t.type),void 0===r)return void d.error(\"Factory not found\",t.type,t);var a=r.cache.get(t.id);s.link(e,n,a)}}function o(e,n,t,r){t.indexOf(r.data.id)>-1||s.unlink(e,n,r)}var i=l.get(\"$jsonapi\"),c=e.schema;return e.data.id=n.id,e.data.type=n.type,e.resource.schema.type!==n.type?(d.error(\"Different type then resource\",e.resource.schema.type,n),!1):e.schema.id.validate(e.data.id)?(e.data.links=n.links,n.attributes=n.attributes||{},n.relationships=n.relationships||{},angular.forEach(c.attributes,t),angular.forEach(c.relationships,r),!0):(d.error(\"Invalid id\"),!1)}return p.prototype.refresh=g,p.prototype.remove=m,p.prototype.reset=y,p.prototype.save=f,p.prototype.update=k,p.prototype.link=j,p.prototype.unlink=A,p.prototype.unlinkAll=b,p.prototype.toJson=v,p.prototype.hasErrors=z,p}function n(e){e=void 0===e?this:e,e.loadingCount+=1,e.loading=!0}function t(e){e=void 0===e?this:e,e.loadingCount-=1,e.loading=e.loadingCount>0}function r(e){e=void 0===e?this:e,e.savingCount+=1,e.saving=!0}function a(e){e=void 0===e?this:e,e.savingCount-=1,e.saving=e.savingCount>0}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractModel\",e),e.$inject=[\"AngularJsonAPIModelSourceError\",\"AngularJsonAPIModelValidationError\",\"AngularJsonAPIModelErrorsManager\",\"AngularJsonAPIModelLinkerService\",\"AngularJsonAPIModelForm\",\"$rootScope\",\"$injector\",\"$log\",\"$q\"]}(),function(){\"use strict\";function e(){function e(e,t){return new n(e,t)}function n(e,n){var t=this;Error.captureStackTrace(t,t.constructor),t.message=e,t.context={attribute:n}}return n.prototype=Object.create(Error.prototype),n.prototype.constructor=n,n.prototype.name=\"ValidationError\",{create:e}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelValidationError\",e)}(),function(){\"use strict\";function e(){function e(e,t,r,a){return new n(e,t,r,a)}function n(e,n,t,r){var a=this;Error.captureStackTrace(a,a.constructor),a.message=e,a.context={source:n,code:t,action:r}}return n.prototype=Object.create(Error.prototype),n.prototype.constructor=n,n.prototype.name=\"SourceError\",{create:e}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelSourceError\",e)}(),function(){\"use strict\";function e(){function e(e,t,r,a){return new n(e,t,r,a)}function n(e,n,t,r){var a=this;a.name=e,a.description=n,a.ErrorConstructor=t,a.errors={},a.defaultFilter=r||function(){return!0}}function t(e){var n=this;void 0===e?angular.forEach(n.errors,function(e,t){n.errors[t]=[]}):n.errors[e]=[]}function r(e,n){var t=this;t.errors[e]=t.errors[e]||[],t.errors[e].push(n)}function a(e){var n=this;angular.forEach(e,function(e){n.errors[e.key]=[]}),angular.forEach(e,function(e){n.errors[e.key].push(e.object)})}function o(e){var n=this;if(void 0===e){var t=!1;return angular.forEach(n.errors,function(e){t=t||e.length>0}),t}return void 0!==n.errors[e]&&n.errors[e].length>0}return n.prototype.constructor=n,n.prototype.concat=a,n.prototype.clear=t,n.prototype.add=r,n.prototype.hasErrors=o,{create:e}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelErrorsManager\",e)}(),function(){\"use strict\";function e(e,n){return new Function(\"fn\",\"return function \"+e+\"(){ return fn.apply(this,arguments)}\")(n)}angular.module(\"angular-jsonapi\").constant(\"namedFunction\",e)}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"lazyProperty\",function(e,n,t){var r,a;Object.defineProperty(e,n,{get:function(){return a||(a=!0,r=t.call(e)),r},enumerable:!0,configurable:!0})})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"toKebabCase\",function(e){return e.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase()})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$provide\",function(e){e.decorator(\"$q\",[\"$delegate\",function(e){var n=e;return n.allSettled=n.allSettled||function(e,t,r){function a(e){return n.resolve(e).then(function(e){return angular.isFunction(t)&&t(e),{success:!0,value:e}},function(e){return angular.isFunction(r)&&r(e),{success:!1,reason:e}})}var o=angular.isArray(e)?[]:{};return angular.forEach(e,function(e,n){o.hasOwnProperty(n)||(o[n]=a(e))}),n.all(o)},n}])}])}(),function(){\"use strict\";function e(e,n,t){function r(e){return new a(e)}function a(n){var t=this;t.state={},e.call(t,n),angular.forEach(n,function(e){e.synchronizer=t})}function o(r){function a(e){d.notify({step:\"synchronization\",data:e})}function o(e){d.notify({step:\"synchronization\",errors:e})}function i(e){u.state[h]=u.state[h]||{},u.state[h].success=!0,angular.forEach(e,function(e){e.success===!1&&(u.state[h].success=!1)}),angular.forEach(u.sources,function(n){angular.forEach(n.afterHooks[h],function(n){d.notify({step:\"after\",errors:n.call(u,r,e)})})});var n,t=[];angular.forEach(e,function(e){e.success===!0?n=e.value:t.push({key:h,object:e.reason})}),t.length>0?d.reject({data:n,finish:s,errors:t}):d.resolve({data:n,finish:s,errors:t})}function s(){angular.forEach(u.sources,function(e){angular.forEach(e.finishHooks[h],function(e){d.notify({step:\"finish\",errors:e.call(u,r)})})})}function c(e){t.error(\"All settled rejected! Something went wrong\"),d.reject({finish:angular.noop,errors:e})}var u=this,l=[],d=n.defer(),h=r.action;return e.prototype.synchronize.call(u,r),angular.forEach(u.sources,function(e){angular.forEach(e.beginHooks[h],function(e){d.notify({step:\"begin\",data:e.call(u,r)})})}),angular.forEach(u.sources,function(e){angular.forEach(e.beforeHooks[h],function(e){d.notify({step:\"before\",data:e.call(u,r)})})}),angular.forEach(u.sources,function(e){angular.forEach(e.synchronizationHooks[h],function(e){l.push(e.call(u,r))})}),n.allSettled(l,a,o).then(i,c),d.promise}return a.prototype=Object.create(e.prototype),a.prototype.constructor=a,a.prototype.synchronize=o,{create:r}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerSimple\",e),e.$inject=[\"AngularJsonAPISynchronizerPrototype\",\"$q\",\"$log\"]}(),function(){\"use strict\";function e(e){function n(e){var n=this;n.sources=e}function t(n){var t=this;e.debug(\"Synchro Collection\",t.resource.schema.type,n),void 0===n.action&&e.error(\"Can't synchronize undefined action\",n)}return n.prototype.synchronize=t,n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerPrototype\",e),e.$inject=[\"$log\"]}(),function(){\"use strict\";function e(e,n,t,r,a,o){function i(e,n){return new s(e,n)}function s(r,i){function s(e){return o({method:\"GET\",headers:v,url:i,params:e.params||{}}).then(f,y.bind(null,\"all\"))}function c(e){return o({method:\"GET\",headers:v,url:i+\"/\"+e.object.data.id,params:e.params||{}}).then(f,y.bind(null,\"get\"))}function u(e){return o({method:\"DELETE\",headers:v,url:i+\"/\"+e.object.data.id}).then(f,y.bind(null,\"remove\"))}function l(n){var t=a.defer(),r=n.object.schema.relationships[n.key];return n.object.removed===!0?t.reject(e.create(\"Object has been removed\",g,0,\"unlink\")):void 0!==n.target&&void 0===n.target.data.id?t.reject(e.create(\"Can't unlink object without id through rest call\",g,0,\"unlink\")):\"hasOne\"===r.type?o({method:\"DELETE\",headers:v,url:i+\"/\"+n.object.data.id+\"/relationships/\"+n.key}).then(f,y.bind(null,\"get\")).then(t.resolve,t.reject):\"hasMany\"===r.type&&(void 0===n.target?o({method:\"PUT\",headers:v,data:{data:[]},url:i+\"/\"+n.object.data.id+\"/relationships/\"+n.key}).then(f,y.bind(null,\"unlink\")).then(t.resolve,t.reject):o({method:\"DELETE\",headers:v,url:i+\"/\"+n.object.data.id+\"/relationships/\"+n.key+\"/\"+n.target.data.id}).then(f,y.bind(null,\"unlink\")).then(t.resolve,t.reject)),t.promise}function d(e){var n=a.defer(),r=e.object.schema.relationships[e.key];return e.object.removed===!0?n.reject({errors:[{status:0,statusText:\"Object has been removed\"}]}):void 0===e.target||void 0===e.target.data.id?n.reject({errors:[{status:0,statusText:\"Can't link object without id through rest call\"}]}):\"hasOne\"===r.type?o({method:\"PUT\",headers:v,data:{data:t.toLinkData(e.target)},url:i+\"/\"+e.object.data.id+\"/relationships/\"+e.key}).then(f,y.bind(null,\"link\")).then(n.resolve,n.reject):\"hasMany\"===r.type&&o({method:\"POST\",headers:v,data:{data:[t.toLinkData(e.target)]},url:i+\"/\"+e.object.data.id+\"/relationships/\"+e.key}).then(f,y.bind(null,\"link\")).then(n.resolve,n.reject),n.promise}function h(e){return o({method:\"PUT\",headers:v,url:i+\"/\"+e.object.data.id,data:e.object.form.toJson()}).then(f,y.bind(null,\"update\"))}function p(e){return o({method:\"POST\",headers:v,url:i,data:e.object.form.toJson()}).then(f,y.bind(null,\"add\"))}function f(e){return a.resolve(e.data)}function y(n,t){function r(t){s.reject(e.create(\"Server is offline\",g,t.status,n))}function i(){s.reject(e.create(\"No internet connection\",g,t.status,n))}var s=a.defer();return 0===t.status?o({method:\"GET\",url:\"https://status.cloud.google.com/incidents.schema.json\"}).then(r,i):s.reject(e.create(t.statusText,g,t.status,n)),s.promise}var g=this,v={Accept:\"application/vnd.api+json\",\"Content-Type\":\"application/vnd.api+json\"};n.apply(g,arguments),g.synchronization(\"remove\",u),g.synchronization(\"unlink\",l),g.synchronization(\"link\",d),g.synchronization(\"update\",h),g.synchronization(\"add\",p),g.synchronization(\"all\",s),g.synchronization(\"get\",c),g.synchronization(\"refresh\",c)}return s.prototype=Object.create(n.prototype),s.prototype.constructor=s,{create:i}}angular.module(\"angular-jsonapi-rest\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISourceRest\",e),e.$inject=[\"AngularJsonAPIModelSourceError\",\"AngularJsonAPISourcePrototype\",\"AngularJsonAPIModelLinkerService\",\"toKebabCase\",\"$q\",\"$http\"]}(),function(){\"use strict\";function e(){function e(e){var n=this,t=[\"add\",\"init\",\"get\",\"all\",\"clearCache\",\"remove\",\"unlink\",\"unlinkReflection\",\"link\",\"linkReflection\",\"update\",\"refresh\",\"include\"];n.name=e,n.state={},n.beginHooks={},n.beforeHooks={},n.synchronizationHooks={},n.afterHooks={},n.finishHooks={},n.options={},angular.forEach(t,function(e){n.beginHooks[e]=[],n.beforeHooks[e]=[],n.synchronizationHooks[e]=[],n.afterHooks[e]=[],n.finishHooks[e]=[],n.state[e]={loading:!1,success:!0}})}function n(e,n){var t=this;t.beginHooks[e].push(n)}function t(e,n){var t=this;t.finishHooks[e].push(n)}function r(e,n){var t=this;t.beforeHooks[e].push(n)}function a(e,n){var t=this;t.afterHooks[e].push(n)}function o(e,n){var t=this;t.synchronizationHooks[e].push(n)}return e.prototype.before=r,e.prototype.after=a,e.prototype.begin=n,e.prototype.finish=t,e.prototype.synchronization=o,e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISourcePrototype\",e)}(),function(){\"use strict\";function e(e,n,t){function r(e,n){return new a(e,n)}function a(r,a){function o(){var e=c.synchronizer.resource.schema.type;return t.resolve(n.localStorage.getItem(a+\".\"+e))}function i(){var e=c.synchronizer.resource.schema.type;n.localStorage.removeItem(a+\".\"+e)}function s(){var e=c.synchronizer.resource.schema.type,t=c.synchronizer.resource.cache;n.localStorage.setItem(a+\".\"+e,t.toJson())}var c=this;a=a||\"AngularJsonAPI\",c.__updateStorage=s,e.apply(c,arguments),c.synchronization(\"init\",o),c.begin(\"clearCache\",i),c.begin(\"remove\",s),c.begin(\"refresh\",s),c.begin(\"unlink\",s),c.begin(\"unlinkReflection\",s),c.begin(\"link\",s),c.begin(\"linkReflection\",s),c.begin(\"update\",s),c.begin(\"add\",s),c.begin(\"get\",s),c.begin(\"all\",s),c.begin(\"include\",s),c.finish(\"init\",s),c.finish(\"clearCache\",s),c.finish(\"remove\",s),c.finish(\"refresh\",s),c.finish(\"unlink\",s),c.finish(\"unlinkReflection\",s),c.finish(\"link\",s),c.finish(\"linkReflection\",s),c.finish(\"update\",s),c.finish(\"add\",s),c.finish(\"get\",s),c.finish(\"all\",s),c.finish(\"include\",s)}return a.prototype=Object.create(e.prototype),a.prototype.constructor=a,{create:r}}angular.module(\"angular-jsonapi-local\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISourceLocal\",e),e.$inject=[\"AngularJsonAPISourcePrototype\",\"$window\",\"$q\"]}(),function(){\"use strict\";function e(e,n,t,r){function a(e){return new o(e)}function o(e){var n=this,a=e.include||{};e.include=a,a.get=e.include.get||[],a.all=e.include.all||[],n.params={get:{},all:{}},\"uuid4\"===e.id?e.id=t:\"int\"===e.id?e.id={generate:angular.noop,validate:angular.isNumber}:angular.isObject(e.id)?angular.isFunction(e.id.generate)||(e.id.generate=angular.noop):e.id={generate:angular.noop,validate:angular.identity.bind(null,!0)},angular.forEach(e.relationships,function(n,t){var o=r.create(n,t,e.type);e.relationships[t]=o,o.included===!0&&(a.get.push(t),\"hasOne\"===o.type&&a.all.push(t))}),angular.extend(n,e),a.get.length>0&&(n.params.get.include=a.get.join(\",\")),a.all.length>0&&(n.params.all.include=a.all.join(\",\"))}return{create:a}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchema\",e),e.$inject=[\"$log\",\"pluralize\",\"uuid4\",\"AngularJsonAPISchemaLink\"]}(),function(){\"use strict\";function e(e,n){function t(e,n,t){return new r(e,n,t)}function r(t,r,a){var o=this;angular.isString(t)?(o.model=n.plural(r),o.type=t,o.polymorphic=!1,o.reflection=a):(void 0===t.type&&e.error(\"Schema of link without a type: \",t,r),\"hasMany\"!==t.type&&\"hasOne\"!==t.type&&e.error(\"Schema of link with wrong type: \",t.type,\"available: hasOne, hasMany\"),o.model=t.model||n.plural(r),o.type=t.type,o.polymorphic=t.polymorphic||!1,void 0===t.reflection?o.reflection=\"hasMany\"===o.type?n.singular(a):a:o.reflection=t.reflection,o.included=t.included||!1)}return{create:t}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchemaLink\",e),e.$inject=[\"$log\",\"pluralize\"]}(),function(){\"use strict\";function e(e,n,t,r,a,o,i){function s(e,n){return new c(e,n)}function c(r,o){function i(e){a.$emit(\"angularJsonAPI:\"+u.type+\":resource:init\",\"resolved\",e),u.cache.fromJson(e.data),u.initialized=!0,e.finish()}function s(e){a.$emit(\"angularJsonAPI:\"+u.type+\":resource:init\",\"rejected\",e),e.finish(),u.initialized=!0}function c(e){a.$emit(\"angularJsonAPI:\"+u.type+\":resource:init\",\"notify\",e)}var u=this,l={action:\"init\"};u.schema=n.create(r),u.cache=t.create(u),u.synchronizer=o,u.synchronizer.resource=u,u.modelFactory=e.modelFactory(u.schema,u),u.initialized=!1,u.type=u.schema.type,o.resource=u,u.synchronizer.synchronize(l).then(i,s,c)}function u(e,n){var t=this;if(!t.schema.id.validate(e))return i.reject({errors:[{status:0,statusText:\"Invalid id\"}]});var r=t.cache.get(e);return r.promise=r.refresh(n),r}function l(e){var n=this;e=void 0===e?n.schema.params.all:e;var t=r.create(n,e);return t.promise=t.fetch(),t}function d(e){var n=this,t=n.cache.remove(e);return t.remove()}function h(){var e=this,n={};angular.forEach(e.schema.relationships,function(e,t){\"hasOne\"===e.type?n[t]={data:null}:\"hasMany\"===e.type&&(n[t]={data:[]})});var t={type:e.type,id:e.schema.id.generate(),attributes:{},relationships:n},r={\"new\":!0,\"synchronized\":!1,stable:!1,pristine:!1,initialization:!1},o=e.modelFactory(t,r);return a.$emit(\"angularJsonAPI:\"+e.type+\":resource:initialize\",\"resolved\",o),o}function p(){function e(e){a.$emit(\"angularJsonAPI:\"+r.type+\":resource:clearCache\",\"resolved\",e),e.finish(),o.resolve(e)}function n(e){a.$emit(\"angularJsonAPI:\"+r.type+\":resource:clearCache\",\"resolved\",e),e.finish(),o.reject(e)}function t(e){a.$emit(\"angularJsonAPI:\"+r.type+\":resource:clearCache\",\"notify\",e),o.notify(e)}var r=this,o=i.defer(),s={action:\"clearCache\"};return r.cache.clear(),r.synchronizer.synchronize(s).then(e,n,t),o}return c.prototype.get=u,c.prototype.all=l,c.prototype.remove=d,c.prototype.initialize=h,c.prototype.clearCache=p,{create:s}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIResource\",e),e.$inject=[\"AngularJsonAPIModel\",\"AngularJsonAPISchema\",\"AngularJsonAPIResourceCache\",\"AngularJsonAPICollection\",\"$rootScope\",\"$log\",\"$q\"]}(),function(){\"use strict\";function e(e,n,t,r,a){function o(n,o){function i(e,n,t){return new c(e,n,t)}var s=r.plural(n.type,1),c=t(s,function(n,t,r){var o=this;n.type!==o.schema.type&&a.error(\"Data type other then declared in schema: \",n.type,\" instead of \",o.schema.type),e.call(o,n,t,r),o.form.parent=o});return c.prototype=Object.create(e.prototype),c.prototype.constructor=c,c.prototype.schema=n,c.prototype.resource=o,c.prototype.synchronize=o.synchronizer.synchronize.bind(o.synchronizer),angular.forEach(n.functions,function(e,n){c.prototype[n]=function(){\nreturn e.apply(this,arguments)}}),i}return{modelFactory:o}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModel\",e),e.$inject=[\"AngularJsonAPIAbstractModel\",\"AngularJsonAPISchema\",\"namedFunction\",\"pluralize\",\"$log\"]}(),function(){\"use strict\";function e(e,r,a,o,i){function s(e,n){return new c(e,n)}function c(n,t){function o(e,n,t){var r;\"resolved\"===n&&void 0!==l.data&&(r=l.data.indexOf(t),r>-1&&(l.data.splice(r,1),l.resource.cache.setIndexIds(l.data)))}function s(){l.data=void 0,l.pristine=!0}function c(e,n,t){\"resolved\"===n&&(l.data=l.data||[],l.data.push(t))}function u(){d(),h(),p()}var l=this;l.resource=n,l.type=n.schema.type,l.params=t,l.errors={synchronization:r.create(\"Source\",\"Errors of synchronizations\",e)},l.data=l.resource.cache.index(l.params),l.loading=!1,l.loadingCount=0,l[\"synchronized\"]=!1,l.pristine=void 0===l.data,l.promise=i.resolve(l);var d=a.$on(\"angularJsonAPI:\"+l.type+\":object:remove\",o),h=a.$on(\"angularJsonAPI:\"+l.type+\":resource:clearCache\",s),p=a.$on(\"angularJsonAPI:\"+l.type+\":object:add\",c);a.$on(\"$destroy\",u)}function u(){var e=this,n=!1;return angular.forEach(e.errors,function(e){n=e.hasErrors()||n}),n}function l(e,n){var t=this;return t.resource.get(e,n)}function d(){function e(e){function r(e){return n(e),e.synchronize({action:\"include\",object:e})[\"finally\"](t.bind(e,void 0))}function o(n){angular.forEach(n,function(e,n){e.success===!0&&(a.$emit(\"angularJsonAPI:\"+s.included[n].data.type+\":object:include\",\"resolved\",s.included[n],e),e.value.finish())}),u.resolve(e.data.meta)}var s=l.__proccesResults(e.data);a.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"resolved\",c,e),i.allSettled(s.included.map(r)).then(o,u.reject),angular.forEach(c.data,t),c.data=s.data,c.links=e.data.links,c.updatedAt=Date.now(),c[\"synchronized\"]=!0,c.resource.cache.setIndexIds(c.data),e.finish(),c.errors.synchronization.concat(e.errors)}function r(e){a.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"rejected\",c,e),angular.forEach(c.data,t),e.finish(),c.errors.synchronization.concat(e.errors),u.reject(c)}function s(e){a.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"notify\",c,e),u.notify(e)}var c=this,u=i.defer(),l=o.get(\"$jsonapi\"),d={action:\"all\",params:c.params};return n(c),angular.forEach(c.data,n),c.resource.synchronizer.synchronize(d).then(e,r,s)[\"finally\"](t.bind(c,void 0)),u.promise}return c.prototype.fetch=d,c.prototype.refresh=d,c.prototype.get=l,c.prototype.hasErrors=u,{create:s}}function n(e){e=void 0===e?this:e,e.loadingCount+=1,e.loading=!0}function t(e){e=void 0===e?this:e,e.loadingCount-=1,e.loading=e.loadingCount>0}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICollection\",e),e.$inject=[\"AngularJsonAPIModelSourceError\",\"AngularJsonAPIModelErrorsManager\",\"$rootScope\",\"$injector\",\"$q\"]}(),function(){\"use strict\";function e(e){function n(n,a){function o(e,n){var o=a.create(e,n);t[e.type]=o,r.push(e.type)}function i(e){return t[e]}function s(){return t}function c(){return r}function u(){angular.forEach(t,function(e){e.clearCache()})}function l(t,r){return angular.isString(t)?(void 0===e.validators[t]&&n.warn(\"Redeclaring validator\",t),void(e.validators[t]=r)):void n.error(\"Validator name is not a string\",t)}function d(e){var t={data:[],included:[]};void 0===e&&n.error(\"Can't proccess results:\",e);var r={\"new\":!1,\"synchronized\":!0,stable:!0,pristine:!1,initialization:!1};return angular.forEach(e.included,function(e){t.included.push(i(e.type).cache.addOrUpdate(e,r))}),angular.isArray(e.data)?angular.forEach(e.data,function(e){t.data.push(i(e.type).cache.addOrUpdate(e,r))}):t.data.push(i(e.data.type).cache.addOrUpdate(e.data,r)),t}return{addResource:o,getResource:i,clearCache:u,allResources:s,listResources:c,addValidator:l,__proccesResults:d}}var t={},r=[];this.$get=n,n.$inject=[\"$log\",\"AngularJsonAPIResource\"]}angular.module(\"angular-jsonapi\").provider(\"$jsonapi\",e),e.$inject=[\"validateJS\"]}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$logProvider\",function(e){e.debugEnabled(!1)}]).run([\"validateJS\",\"$q\",function(e,n){e.Promise=n}])}();\n//# sourceMappingURL=angular-jsonapi.min.js.map","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResourceCache', AngularJsonAPIResourceCacheWrapper);\n\n  function AngularJsonAPIResourceCacheWrapper(\n    uuid4,\n    $log\n  ) {\n\n    AngularJsonAPIResourceCache.prototype.get = get;\n    AngularJsonAPIResourceCache.prototype.index = index;\n    AngularJsonAPIResourceCache.prototype.setIndexIds = setIndexIds;\n    AngularJsonAPIResourceCache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPIResourceCache.prototype.fromJson = fromJson;\n    AngularJsonAPIResourceCache.prototype.toJson = toJson;\n    AngularJsonAPIResourceCache.prototype.clear = clear;\n\n    AngularJsonAPIResourceCache.prototype.remove = remove;\n    AngularJsonAPIResourceCache.prototype.revertRemove = revertRemove;\n    AngularJsonAPIResourceCache.prototype.clearRemoved = clearRemoved;\n\n    return {\n      create: AngularJsonAPIResourceCacheFactory\n    };\n\n    function AngularJsonAPIResourceCacheFactory(resource) {\n      return new AngularJsonAPIResourceCache(resource);\n    }\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPIResourceCache(resource) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n\n      _this.indexIds = undefined;\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData, config, updatedAt) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(validatedData, config, updatedAt);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData, !config.new, config.initialization);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: true\n      };\n\n      if (angular.isObject(collection) && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n        _this.indexIds = collection.indexIds;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, config, objectData.updatedAt);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: [],\n        updatedAt: _this.updatedAt,\n        indexIds: _this.indexIds\n      };\n\n      angular.forEach(_this.data, function(object) {\n        if (object.hasErrors() === false) {\n          json.data.push(object.toJson());\n        }\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.indexIds = undefined;\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      var data = {\n        id: id,\n        type: _this.resource.schema.type\n      };\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: true\n      };\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(data, config);\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization, used for index requests\n     * @param  {objec} params\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function index(params) {\n      var _this = this;\n\n      $log.debug('Unused params', params);\n\n      if (_this.indexIds === undefined) {\n        return _this.indexIds;\n      }\n\n      return _this.indexIds.map(_this.get.bind(_this));\n    }\n\n    /**\n     * Cache ids of objects returned by index request\n     * @param {ids array or AngularJsonAPIModel array} array Objects or ids to be cached\n     */\n    function setIndexIds(array) {\n      var _this = this;\n\n      _this.indexIds = [];\n\n      angular.forEach(array, function(element) {\n        if (angular.isString(element) && _this.resource.schema.id.validate(element)) {\n          _this.indexIds.push(element);\n        } else if (angular.isObject(element) && _this.resource.schema.id.validate(element.data.id)) {\n          _this.indexIds.push(element.data.id);\n        }\n      });\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, oneWay, form) {\n      var schema;\n      form = form === undefined ? false : form;\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema.type === 'hasMany') {\n        if (oneWay === true) {\n          __addHasMany(object, key, target, form);\n          return [];\n        } else {\n          return __processAddHasMany(object, key, target, form);\n        }\n      } else if (schema.type === 'hasOne') {\n        if (oneWay === true) {\n          __addHasOne(object, key, target, form);\n          return [];\n        } else {\n          return __processAddHasOne(object, key, target, form);\n        }\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, oneWay, form) {\n      var schema;\n      form = form === undefined ? false : form;\n\n      if (object === undefined) {\n        $log.error('Can\\'t remove link from non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (oneWay === true) {\n        __removeHasMany(object, key, target, form);\n        return [];\n      } else {\n        return __processRemove(object, key, target, form);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __processAddHasMany(object, key, target, form) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var reflectionSchema;\n\n      if (reflectionKey === false) {\n        __addHasMany(object, key, target, form);\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        return __swapResults(\n          __wrapResults(object, key, target),\n          __wrapResults(target, reflectionKey, object),\n          __processAddHasOne(target, reflectionKey, object, form)\n        );\n      } else if (reflectionSchema.type === 'hasMany') {\n        __addHasMany(object, key, target, form);\n        __addHasMany(target, reflectionKey, object, form);\n        return [__wrapResults(target, reflectionKey, object)];\n      }\n    }\n\n    function __processAddHasOne(object, key, target, form) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var oldReflection = object.relationships[key];\n      var reflectionSchema;\n      var oldReflectionSchema;\n      var result = [];\n\n      __addHasOne(object, key, target, form);\n\n      if (oldReflection !== undefined && oldReflection !== null) {\n        oldReflectionSchema = oldReflection.schema.relationships[reflectionKey];\n\n        if (oldReflectionSchema.type === 'hasOne') {\n          __removeHasOne(oldReflection, reflectionKey, object, form);\n        } else if (oldReflectionSchema.type === 'hasMany') {\n          __removeHasMany(oldReflection, reflectionKey, object, form);\n        }\n\n        result.push(__wrapResults(oldReflection, reflectionKey, object));\n      }\n\n      if (target !== undefined && target !== null && reflectionKey !== false) {\n        reflectionSchema = target.schema.relationships[reflectionKey];\n\n        if (reflectionSchema.type === 'hasOne') {\n          __addHasOne(target, reflectionKey, object, form);\n        } else if (reflectionSchema.type === 'hasMany') {\n          __addHasMany(target, reflectionKey, object, form);\n        }\n\n        result.push(__wrapResults(target, reflectionKey, object));\n      }\n\n      return result;\n    }\n\n    function __processRemove(object, key, target, form) {\n      var schema = object.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema;\n\n      if (schema.type === 'hasMany') {\n        __removeHasMany(object, key, target, form);\n      } else if (schema.type === 'hasOne') {\n        __removeHasOne(object, key, target, form);\n      }\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        __removeHasOne(target, reflectionKey, object, form);\n      } else if (reflectionSchema.type === 'hasMany') {\n        __removeHasMany(target, reflectionKey, object, form);\n      }\n\n      return [__wrapResults(target, reflectionKey, object)];\n    }\n\n    function __addHasOne(object, key, target, form) {\n      $log.debug('addHasOne', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      object.relationships[key] = target;\n      object.data.relationships[key].data = toLinkData(target);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, form) {\n      $log.debug('addHasMany', object, key, target);\n\n      var linkData = toLinkData(target);\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (angular.isArray(object.relationships[key]) && object.relationships[key].indexOf(target) > -1) {\n        return false;\n      }\n\n      object.relationships[key] = object.relationships[key] || [];\n      object.data.relationships[key].data = object.data.relationships[key].data || [];\n\n      object.relationships[key].push(target);\n      object.data.relationships[key].data.push(linkData);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, form) {\n      $log.debug('removeHasOne', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        return false;\n      }\n\n      object.relationships[key] = null;\n      object.data.relationships[key].data = undefined;\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, form) {\n      $log.debug('removeHasMany', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (object.relationships[key] === undefined) {\n        return;\n      }\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n        if (form === false) {\n          object.reset(true);\n        }\n\n        return true;\n      }\n\n      var index = object.relationships[key].indexOf(target);\n\n      if (index === -1) {\n        return false;\n      }\n\n      object.relationships[key].splice(index, 1);\n      object.data.relationships[key].data.splice(index, 1);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __wrapResults(object, key, target) {\n      return {\n        object: object,\n        key: key,\n        target: target\n      };\n    }\n\n    function __swapResults(value, newValue, array) {\n      var index = -1;\n      angular.forEach(array, function(item, i) {\n        if (item.object === value.object && item.key === value.key && item.target === value.target) {\n          index = i;\n        }\n      });\n\n      if (index > -1) {\n        array[index] = newValue;\n      } else {\n        array.push(newValue);\n      }\n\n      return array;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelErrorsManager,\n    AngularJsonAPIModelLinkerService,\n    AngularJsonAPIModelForm,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    AngularJsonAPIAbstractModel.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {object} config   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, config, updatedAt) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      /**\n       * Is not a new record\n       * @type {Boolean}\n       */\n      _this.new = config.new === undefined ? false : config.new;\n\n      /**\n       * Is present on the server\n       * @type {Boolean}\n       */\n      _this.stable = config.stable === undefined ? true : config.stable;\n\n      /**\n       * Has been synchronized with the server\n       * @type {Boolean}\n       */\n      _this.synchronized = config.synchronized === undefined ? true : config.synchronized;\n\n      /**\n       * Has just been created by request and may not exist on the server\n       * @type {Boolean}\n       */\n      _this.pristine = config.pristine === undefined ? true : config.pristine;\n\n      _this.removed = false;\n      _this.loading = false;\n      _this.saving = false;\n      _this.updatedAt = _this.synchronized === true ? Date.now() : updatedAt;\n\n      _this.loadingCount = 0;\n      _this.savingCount = 0;\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(schema, key) {\n        _this.relationships[key] = undefined;\n      });\n\n      _this.errors = {\n        validation: AngularJsonAPIModelErrorsManager.create(\n          'Validation',\n          'Errors of attributes validation',\n          AngularJsonAPIModelValidationError\n        ),\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Source',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSourceError\n        )\n      };\n\n      _this.promise = $q.resolve(_this);\n\n      __setData(_this, data);\n\n      _this.form = AngularJsonAPIModelForm.create(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: _this.new === true ? 'add' : 'update',\n        object: _this\n      };\n\n      _this.form.validate().then(\n        synchronize,\n        deferred.reject\n      ).finally(__decrementSavingCounter.bind(_this, undefined));\n\n      __incrementSavingCounter(_this);\n\n      return deferred.promise;\n\n      function synchronize() {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:' + config.action, 'resolved', _this, response);\n        _this.update(response.data.data);\n\n        if (_this.new === true) {\n          _this.resource.cache.indexIds = _this.resource.cache.indexIds || [];\n          _this.resource.cache.indexIds.push(_this.data.id);\n        }\n\n        _this.synchronized = true;\n        _this.new = false;\n        _this.pristine = false;\n        _this.stable = true;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.resolve(response.data.meta);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      if (_this.form !== undefined) {\n        _this.form.reset();\n      }\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh(params) {\n      var $jsonapi = $injector.get('$jsonapi');\n      var deferred = $q.defer();\n      var _this = this;\n      params = params === undefined ? _this.schema.params.get : params;\n\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: params\n      };\n\n      if (_this.new === true) {\n        var error = AngularJsonAPIModelSourceError.create('Can\\'t refresh new object', null, 0, 'refresh');\n        _this.errors.synchronization.add('refresh', error);\n        deferred.reject(error);\n      } else {\n        __incrementLoadingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        _this.synchronized = true;\n        _this.stable = true;\n        _this.pristine = false;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      var config = {\n        action: 'remove',\n        object: _this\n      };\n\n      _this.resource.cache.remove(_this.data.id);\n\n      if (_this.new === true) {\n        deferred.resolve();\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'resolved', _this, response);\n        _this.removed = true;\n        _this.unlinkAll();\n        _this.resource.cache.clearRemoved(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.resolve(response.data.meta);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'rejected', _this, response);\n        _this.resource.cache.revertRemove(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlink all reflection relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      __incrementLoadingCounter(_this);\n\n      if (key === undefined) {\n        angular.forEach(_this.relationships, removeLink);\n      } else {\n        removeLink(_this.relationships[key], key);\n      }\n\n      __decrementLoadingCounter(_this);\n\n      return deferred.promise;\n\n      function removeLink(linksObj, key) {\n        var schema = _this.schema.relationships[key];\n        var reflectionKey = schema.reflection;\n\n        if (angular.isArray(linksObj)) {\n          angular.forEach(linksObj, removeReflectionLink.bind(undefined, reflectionKey));\n        } else if (angular.isObject(linksObj)) {\n          removeReflectionLink(reflectionKey, linksObj);\n        }\n\n        if (schema.type === 'hasOne') {\n          _this.relationships[key] = null;\n        } else if (schema.type === 'hasMany') {\n          _this.relationships[key] = [];\n        }\n      }\n\n      function removeReflectionLink(reflectionKey, target) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n        var config = {\n          action: 'unlinkReflection',\n          object: target,\n          target: _this,\n          key: reflectionKey\n        };\n\n        __incrementLoadingCounter(target);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        target.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(target, undefined));\n\n        function resolve(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'resolve', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.resolve(response.data.meta);\n        }\n\n        function reject(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'rejected', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.reject(_this);\n        }\n\n        function notify(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'link',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t link undefined', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t link new object', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'linkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].object.data.type + ':object:linkReflection', 'resolved', targets[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked if undefined unlinks all\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'unlink',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t unlink undefined', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t unlink new object', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'unlinkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:unlinkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData, auto, initialization) {\n      var _this = this;\n\n      __incrementLoadingCounter(_this);\n\n      __setData(_this, validatedData);\n      _this.reset(auto);\n      _this.synchronized = initialization === true ? false : true;\n      _this.stable = initialization === true ? false : true;\n      _this.updatedAt = Date.now();\n\n      __decrementLoadingCounter(_this);\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData) {\n\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.resource.schema.type !== validatedData.type) {\n        $log.error('Different type then resource', object.resource.schema.type, validatedData);\n        return false;\n      }\n\n      if (!object.schema.id.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      object.data.links = validatedData.links;\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        var relationshipData = validatedData.relationships[key];\n\n        if (relationshipData === undefined) {\n          object.data.relationships[key] = {data: undefined};\n          return;\n        }\n\n        object.data.relationships[key] = object.data.relationships[key] || {};\n        object.data.relationships[key].links = relationshipData.links;\n\n        if (schema.type === 'hasOne') {\n          linkOne(object, key, relationshipData.data);\n        } else if (schema.type === 'hasMany') {\n          if (angular.isArray(relationshipData.data)) {\n            if (relationshipData.data.length === 0) {\n              object.data.relationships[key].data = [];\n              object.unlinkAll(key);\n            } else {\n              angular.forEach(\n                object.relationships[key],\n                unlinkOne.bind(undefined, object, key, relationshipData.data)\n              );\n              angular.forEach(\n                relationshipData.data,\n                linkOne.bind(undefined, object, key)\n              );\n            }\n          }\n        }\n      }\n\n      function linkOne(object, key, data) {\n        var resource;\n\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        resource = $jsonapi.getResource(data.type);\n\n        if (resource === undefined) {\n          $log.error('Factory not found', data.type, data);\n          return;\n        }\n\n        var target = resource.cache.get(data.id);\n\n        AngularJsonAPIModelLinkerService.link(object, key, target);\n      }\n\n      function unlinkOne(object, key, relationshipData, target) {\n        if (relationshipData.indexOf(target.data.id) > -1) {\n          return;\n        }\n\n        AngularJsonAPIModelLinkerService.unlink(object, key, target);\n      }\n    }\n  }\n\n  /////////////\n  // Private //\n  /////////////\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n\n  function __incrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount += 1;\n    object.saving = true;\n  }\n\n  function __decrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount -= 1;\n    object.saving = object.savingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelValidationError', AngularJsonAPIModelValidationErrorWrapper);\n\n  function AngularJsonAPIModelValidationErrorWrapper() {\n    ValidationError.prototype = Object.create(Error.prototype);\n    ValidationError.prototype.constructor = ValidationError;\n    ValidationError.prototype.name = 'ValidationError';\n\n    return {\n      create: ValidationErrorFactory\n    };\n\n    function ValidationErrorFactory(message, attribute) {\n      return new ValidationError(message, attribute);\n    }\n\n    function ValidationError(message, attribute) {\n      var _this = this;\n      Error.captureStackTrace(_this, _this.constructor);\n\n      _this.message = message;\n      _this.context = {\n        attribute: attribute\n      };\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelSourceError', AngularJsonAPIModelSourceErrorWrapper);\n\n  function AngularJsonAPIModelSourceErrorWrapper() {\n    SourceError.prototype = Object.create(Error.prototype);\n    SourceError.prototype.constructor = SourceError;\n    SourceError.prototype.name = 'SourceError';\n\n    return {\n      create: SourceErrorFactory\n    };\n\n    function SourceErrorFactory(message, source, code, action) {\n      return new SourceError(message, source, code, action);\n    }\n\n    function SourceError(message, source, code, action) {\n      var _this = this;\n      Error.captureStackTrace(_this, _this.constructor);\n\n      _this.message = message;\n      _this.context = {\n        source: source,\n        code: code,\n        action: action\n      };\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelErrorsManager', AngularJsonAPIModelErrorsManagerWrapper);\n\n  function AngularJsonAPIModelErrorsManagerWrapper() {\n    ErrorsManager.prototype.constructor = ErrorsManager;\n    ErrorsManager.prototype.concat = concat;\n    ErrorsManager.prototype.clear = clear;\n    ErrorsManager.prototype.add = add;\n    ErrorsManager.prototype.hasErrors = hasErrors;\n\n    return {\n      create: ErrorsManagerFactory\n    };\n\n    function ErrorsManagerFactory(name, description, ErrorConstructor, defaultFilter) {\n      return new ErrorsManager(name, description, ErrorConstructor, defaultFilter);\n    }\n\n    function ErrorsManager(name, description, ErrorConstructor, defaultFilter) {\n      var _this = this;\n      _this.name = name;\n      _this.description = description;\n\n      _this.ErrorConstructor = ErrorConstructor;\n      _this.errors = {};\n      _this.defaultFilter = defaultFilter || function() { return true; };\n    }\n\n    function clear(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        angular.forEach(_this.errors, function(obj, key) {\n          _this.errors[key] = [];\n        });\n      } else {\n        _this.errors[key] = [];\n      }\n    }\n\n    function add(key, error) {\n      var _this = this;\n\n      _this.errors[key] = _this.errors[key] || [];\n      _this.errors[key].push(error);\n    }\n\n    function concat(errors) {\n      var _this = this;\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key] = [];\n      });\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key].push(error.object);\n      });\n\n    }\n\n    function hasErrors(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        var answer = false;\n\n        angular.forEach(_this.errors, function(error) {\n          answer = answer || error.length > 0;\n        });\n\n        return answer;\n      } else {\n        return _this.errors[key] !== undefined && _this.errors[key].length > 0;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('namedFunction', namedFunction);\n\n  function namedFunction(name, fn) {\n    return new Function('fn',\n      'return function ' + name + '(){ return fn.apply(this,arguments)}'\n    )(fn);\n  };\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises, resolvedCallback, rejectedCallback) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.resolve(promise)\n            .then(function(value) {\n              if (angular.isFunction(resolvedCallback)) {\n                resolvedCallback(value);\n              }\n\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              if (angular.isFunction(rejectedCallback)) {\n                rejectedCallback(reason);\n              }\n\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return {\n      create: AngularJsonAPISynchronizerSimpleFactory\n    };\n\n    function AngularJsonAPISynchronizerSimpleFactory(sources) {\n      return new AngularJsonAPISynchronizerSimple(sources);\n    }\n\n    function AngularJsonAPISynchronizerSimple(sources) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, sources);\n\n      angular.forEach(sources, function(source) {\n        source.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.sources, function(source) {\n          angular.forEach(source.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push({\n              key: action,\n              object: result.reason\n            });\n          }\n        });\n\n        if (errors.length > 0) {\n          deferred.reject({data: data, finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.sources, function(source) {\n          angular.forEach(source.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(sources) {\n      var _this = this;\n\n      _this.sources = sources;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.resource.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISourceRest', AngularJsonAPISourceRestWrapper);\n\n  function AngularJsonAPISourceRestWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPISourcePrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISourceRest.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceRest.prototype.constructor = AngularJsonAPISourceRest;\n\n    return {\n      create: AngularJsonAPISourceRestFactory\n    };\n\n    function AngularJsonAPISourceRestFactory(name, url) {\n      return new AngularJsonAPISourceRest(name, url);\n    }\n\n    function AngularJsonAPISourceRest(name, url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp.bind(null, 'all'));\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp.bind(null, 'get'));\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp.bind(null, 'remove'));\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Object has been removed', _this, 0, 'unlink'));\n        } else if (config.target !== undefined && config.target.data.id === undefined) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Can\\'t unlink object without id through rest call', _this, 0, 'unlink'));\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'get')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          if (config.target === undefined) {\n            $http({\n              method: 'PUT',\n              headers: headers,\n              data: {data: []},\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          } else {\n            $http({\n              method: 'DELETE',\n              headers: headers,\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key + '/' + config.target.data.id\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          }\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target === undefined || config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'PUT',\n            headers: headers,\n            data: {data: AngularJsonAPIModelLinkerService.toLinkData(config.target)},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          $http({\n            method: 'POST',\n            headers: headers,\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        return $http({\n          method: 'PUT',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'update'));\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'add'));\n      }\n\n      function resolveHttp(response) {\n        return $q.resolve(response.data);\n      }\n\n      function rejectHttp(action, response) {\n        var deferred = $q.defer();\n\n        if (response.status === 0) {\n          $http({\n            method: 'GET',\n            url: 'https://status.cloud.google.com/incidents.schema.json'\n          }).then(rejectServerOffline, rejectNoConnection);\n        } else {\n          deferred.reject(AngularJsonAPIModelSourceError.create(response.statusText, _this, response.status, action));\n        }\n\n        return deferred.promise;\n\n        function rejectServerOffline(response) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Server is offline', _this, response.status, action));\n        }\n\n        function rejectNoConnection() {\n          deferred.reject(AngularJsonAPIModelSourceError.create('No internet connection', _this, response.status, action));\n        }\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISourcePrototype', AngularJsonAPISourcePrototypeWrapper);\n\n  function AngularJsonAPISourcePrototypeWrapper() {\n    AngularJsonAPISourcePrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISourcePrototype.prototype.after = afterSynchro;\n    AngularJsonAPISourcePrototype.prototype.begin = begin;\n    AngularJsonAPISourcePrototype.prototype.finish = finish;\n    AngularJsonAPISourcePrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISourcePrototype;\n\n    function AngularJsonAPISourcePrototype(name) {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clearCache',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh',\n        'include'\n      ];\n\n      _this.name = name;\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISourceLocal', AngularJsonAPISourceLocalWrapper);\n\n  function AngularJsonAPISourceLocalWrapper(\n    AngularJsonAPISourcePrototype,\n    $window,\n    $q\n  ) {\n\n    AngularJsonAPISourceLocal.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceLocal.prototype.constructor = AngularJsonAPISourceLocal;\n\n    return {\n      create: AngularJsonAPISourceLocalFactory\n    };\n\n    function AngularJsonAPISourceLocalFactory(name, prefix) {\n      return new AngularJsonAPISourceLocal(name, prefix);\n    }\n\n    function AngularJsonAPISourceLocal(name, prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('init', init);\n\n      _this.begin('clearCache', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('refresh', updateStorage);\n      _this.begin('unlink', updateStorage);\n      _this.begin('unlinkReflection', updateStorage);\n      _this.begin('link', updateStorage);\n      _this.begin('linkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.begin('get', updateStorage);\n      _this.begin('all', updateStorage);\n      _this.begin('include', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clearCache', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('refresh', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n      _this.finish('include', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.resource.schema.type;\n        return $q.resolve($window.localStorage.getItem(prefix + '.' + type));\n      }\n\n      function clear() {\n        var type = _this.synchronizer.resource.schema.type;\n        $window.localStorage.removeItem(prefix + '.' + type);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.resource.schema.type;\n        var cache = _this.synchronizer.resource.cache;\n        $window.localStorage.setItem(prefix + '.' + type, cache.toJson());\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper(\n    $log,\n    pluralize,\n    uuid4,\n    AngularJsonAPISchemaLink\n  ) {\n\n    return {\n      create: AngularJsonAPISchemaFactory\n    };\n\n    function AngularJsonAPISchemaFactory(schema) {\n      return new AngularJsonAPISchema(schema);\n    }\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      if (schema.id === 'uuid4') {\n        schema.id = uuid4;\n      } else if (schema.id === 'int') {\n        schema.id = {\n          generate: angular.noop,\n          validate: angular.isNumber\n        };\n      } else if (angular.isObject(schema.id)) {\n        if (!angular.isFunction(schema.id.generate)) {\n          schema.id.generate = angular.noop;\n        }\n      } else {\n        schema.id = {\n          generate: angular.noop,\n          validate: angular.identity.bind(null, true)\n        };\n      }\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = AngularJsonAPISchemaLink.create(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get.join(',');\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all.join(',');\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchemaLink', AngularJsonAPILinkSchrapperLink);\n\n  function AngularJsonAPILinkSchrapperLink($log, pluralize) {\n\n    return {\n      create: AngularJsonAPISchemaLinkFactory\n    };\n\n    function AngularJsonAPISchemaLinkFactory(linkSchema, linkName, type) {\n      return new AngularJsonAPISchemaLink(linkSchema, linkName, type);\n    }\n\n    function AngularJsonAPISchemaLink(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        if (linkSchema.type !== 'hasMany' && linkSchema.type !== 'hasOne') {\n          $log.error('Schema of link with wrong type: ', linkSchema.type, 'available: hasOne, hasMany');\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n\n        if (linkSchema.reflection === undefined) {\n          _this.reflection = _this.type === 'hasMany' ? pluralize.singular(type) : type;\n        } else {\n          _this.reflection = linkSchema.reflection;\n        }\n\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResource', AngularJsonAPIResourceWrapper);\n\n  function AngularJsonAPIResourceWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPIResourceCache,\n    AngularJsonAPICollection,\n    $rootScope,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIResource.prototype.get = get;\n    AngularJsonAPIResource.prototype.all = all;\n    AngularJsonAPIResource.prototype.remove = remove;\n    AngularJsonAPIResource.prototype.initialize = initialize;\n\n    AngularJsonAPIResource.prototype.clearCache = clearCache;\n\n    return {\n      create: AngularJsonAPIResourceFactory\n    };\n\n    function AngularJsonAPIResourceFactory(schema, synchronizer) {\n      return new AngularJsonAPIResource(schema, synchronizer);\n    }\n\n    /**\n     * AngularJsonAPIResource constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the resource\n     */\n    function AngularJsonAPIResource(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = AngularJsonAPISchema.create(schema);\n      _this.cache = AngularJsonAPIResourceCache.create(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.resource = _this;\n\n      _this.modelFactory = AngularJsonAPIModel.modelFactory(\n        _this.schema,\n        _this\n      );\n\n      _this.initialized = false;\n      _this.type = _this.schema.type;\n\n      synchronizer.resource = _this;\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'resolved', response);\n        _this.cache.fromJson(response.data);\n        _this.initialized = true;\n\n        response.finish();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'rejected', response);\n        response.finish();\n        _this.initialized = true;\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'notify', response);\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id, params) {\n      var _this = this;\n\n      if (!_this.schema.id.validate(id)) {\n        return $q.reject({errors: [{status: 0, statusText: 'Invalid id'}]});\n      }\n\n      var object = _this.cache.get(id);\n\n      object.promise = object.refresh(params);\n\n      return object;\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = params === undefined ? _this.schema.params.all : params;\n\n      var collection = AngularJsonAPICollection.create(\n        _this,\n        params\n      );\n\n      collection.promise = collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n\n      return object.remove();\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize() {\n      var _this = this;\n      var relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(relationshipSchema, relationshipName) {\n        if (relationshipSchema.type === 'hasOne') {\n          relationships[relationshipName] = {\n            data: null\n          };\n        } else if (relationshipSchema.type === 'hasMany') {\n          relationships[relationshipName] = {\n            data: []\n          };\n        }\n      });\n\n      var data = {\n        type: _this.type,\n        id: _this.schema.id.generate(),\n        attributes: {},\n        relationships: relationships\n      };\n\n      var config = {\n        new: true,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: false\n      };\n\n      var object = _this.modelFactory(data, config);\n\n      $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:initialize', 'resolved', object);\n\n      return object;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clearCache() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: 'clearCache'\n      };\n\n      _this.cache.clear();\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'notify', response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(\n    AngularJsonAPIAbstractModel,\n    AngularJsonAPISchema,\n    namedFunction,\n    pluralize,\n    $log\n  ) {\n\n    return {\n      modelFactory: createModelFactory\n    };\n\n    function createModelFactory(schemaObj, resource) {\n      var constructorName = pluralize.plural(schemaObj.type, 1);\n\n      var Model = namedFunction(constructorName, function(data, config, updatedAt) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, config, updatedAt);\n\n        _this.form.parent = _this;\n      });\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.resource = resource;\n      Model.prototype.synchronize = resource.synchronizer.synchronize.bind(resource.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return modelFactory;\n\n      function modelFactory(data, updatedAt, isNew) {\n        return new Model(data, updatedAt, isNew);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPIModelErrorsManager,\n    $rootScope,\n    $injector,\n    $q\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n    AngularJsonAPICollection.prototype.hasErrors = hasErrors;\n\n    return {\n      create: AngularJsonAPICollectionFactory\n    };\n\n    function AngularJsonAPICollectionFactory(resource, params) {\n      return new AngularJsonAPICollection(resource, params);\n    }\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIResource} resource Factory associated with the collection\n     * @param {object} params  Params associated with this resource (such as filters)\n     */\n    function AngularJsonAPICollection(resource, params) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.type = resource.schema.type;\n      _this.params = params;\n\n      _this.errors = {\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Source',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSourceError\n        )\n      };\n\n      _this.data = _this.resource.cache.index(_this.params);\n\n      _this.loading = false;\n      _this.loadingCount = 0;\n      _this.synchronized = false;\n      _this.pristine = _this.data === undefined;\n\n      _this.promise = $q.resolve(_this);\n\n      var onObjectRemove = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:remove', remove);\n      var onFactoryClear = $rootScope.$on('angularJsonAPI:' + _this.type + ':resource:clearCache', clear);\n      var onObjectAdd = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:add', add);\n\n      $rootScope.$on('$destroy', clearWatchers);\n\n      function remove(event, status, object) {\n        var index;\n\n        if (status === 'resolved' && _this.data !== undefined) {\n          index = _this.data.indexOf(object);\n          if (index > -1) {\n            _this.data.splice(index, 1);\n            _this.resource.cache.setIndexIds(_this.data);\n          }\n        }\n      }\n\n      function clear() {\n        _this.data = undefined;\n        _this.pristine = true;\n      }\n\n      function add(event, status, object) {\n        if (status === 'resolved') {\n          _this.data = _this.data || [];\n          _this.data.push(object);\n        }\n      }\n\n      function clearWatchers() {\n        onObjectRemove();\n        onFactoryClear();\n        onObjectAdd();\n      }\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /**\n     * Shortcut to this.resource.get\n     * @param  {string} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id, params) {\n      var _this = this;\n\n      return _this.resource.get(id, params);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var deferred = $q.defer();\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params\n      };\n\n      __incrementLoadingCounter(_this);\n\n      angular.forEach(_this.data, __incrementLoadingCounter);\n\n      _this.resource.synchronizer.synchronize(config)\n        .then(resolve, reject, notify)\n        .finally(__decrementLoadingCounter.bind(_this, undefined));\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n\n        _this.data = results.data;\n        _this.links = response.data.links;\n\n        _this.updatedAt = Date.now();\n        _this.synchronized = true;\n\n        _this.resource.cache.setIndexIds(_this.data);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'rejected', _this, response);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider(validateJS) {\n    var memory = {};\n    var names = [];\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPIResource) {\n      return {\n        addResource: addResource,\n        getResource: getResource,\n        clearCache: clearCache,\n        allResources: allResources,\n        listResources: listResources,\n        addValidator: addValidator,\n\n        __proccesResults: __proccesResults\n      };\n\n      function addResource(schema, synchronizer) {\n        var resource = AngularJsonAPIResource.create(schema, synchronizer);\n\n        memory[schema.type] = resource;\n        names.push(schema.type);\n      }\n\n      function getResource(type) {\n        return memory[type];\n      }\n\n      function allResources() {\n        return memory;\n      }\n\n      function listResources() {\n        return names;\n      }\n\n      function clearCache() {\n        angular.forEach(memory, function(resource) {\n          resource.clearCache();\n        });\n      }\n\n      function addValidator(name, validator) {\n        if (!angular.isString(name)) {\n          $log.error('Validator name is not a string', name);\n          return;\n        } else if (validateJS.validators[name] === undefined) {\n          $log.warn('Redeclaring validator', name);\n        }\n\n        validateJS.validators[name] = validator;\n      }\n\n      function __proccesResults(results) {\n        var objects = {\n          data: [],\n          included: []\n        };\n\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n        }\n\n        var config = {\n          new: false,\n          synchronized: true,\n          stable: true,\n          pristine: false,\n          initialization: false\n        };\n\n        angular.forEach(results.included, function(data) {\n          objects.included.push(getResource(data.type).cache.addOrUpdate(data, config));\n        });\n\n        if (angular.isArray(results.data)) {\n          angular.forEach(results.data, function(data) {\n            objects.data.push(getResource(data.type).cache.addOrUpdate(data, config));\n          });\n        } else {\n          objects.data.push(getResource(results.data.type).cache.addOrUpdate(results.data, config));\n        }\n\n        return objects;\n      }\n    }\n  }\n\n})();\n\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(function($logProvider) {\n    $logProvider.debugEnabled(false);\n  })\n  .run(function(validateJS, $q) {\n    validateJS.Promise = $q;\n  });\n})();\n"],"sourceRoot":"/source/"}