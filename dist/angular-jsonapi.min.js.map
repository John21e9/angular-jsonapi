{"version":3,"sources":["/source/jsonapi.module.js","/source/resource/resource-cache/resource-cache.factory.js","angular-jsonapi.min.js","/source/model/model-linker/model-linker.js","/source/model/model-form/model-form.factory.js","/source/errors/validation-error/validation-error.factory.js","/source/model/abstract-model/abstract-model.js","/source/errors/source-error/source-error.factory.js","/source/errors/errors-manager/errors-manager.factory.js","/source/utils/named-function.js","/source/utils/lazy-property.js","/source/utils/kebab-case.js","/source/utils/all-settled.js","/source/synchronizers/synchronizer-simple.factory.js","/source/synchronizers/synchronizer-prototype.js","/source/sources/source-rest.factory.js","/source/sources/source-prototype.js","/source/sources/source-local.factory.js","/source/schema/schema.factory.js","/source/schema/schema-link.factory.js","/source/resource/resource.factory.js","/source/model/model-factory.factory.js","/source/collection/collection.factory.js","/source/jsonapi.provider.js","/source/jsonapi.config.js"],"names":["angular","module","constant","pluralize","validate","AngularJsonAPIResourceCacheWrapper","uuid4","$log","AngularJsonAPIResourceCacheFactory","resource","AngularJsonAPIResourceCache","_this","this","data","removed","size","indexIds","undefined","addOrUpdate","validatedData","config","updatedAt","id","error","modelFactory","update","initialization","fromJson","json","collection","new","synchronized","stable","pristine","isObject","forEach","objectData","toJson","object","hasErrors","push","clear","get","type","schema","index","params","debug","map","bind","setIndexIds","array","element","isString","remove","revertRemove","clearRemoved","prototype","create","factory","$inject","AngularJsonAPIModelLinkerService","toLinkData","link","key","target","oneWay","form","relationships","polymorphic","model","__addHasMany","__processAddHasMany","__addHasOne","__processAddHasOne","unlink","__removeHasMany","__processRemove","reflectionSchema","reflectionKey","reflection","__swapResults","__wrapResults","oldReflectionSchema","oldReflection","result","__removeHasOne","reset","linkData","isArray","indexOf","splice","value","newValue","item","i","service","AngularJsonAPIModelFormWrapper","AngularJsonAPIModelValidationError","validateJS","$q","AngularJsonAPIModelFormFactory","parent","AngularJsonAPIModelForm","attributes","copy","save","auto","slice","validator","errors","validation","resolve","deferred","reject","errorsMap","attribute","add","attributesWrapper","constraintsWrapper","defer","async","then","promise","AngularJsonAPIModelValidationErrorWrapper","ValidationErrorFactory","message","ValidationError","Error","captureStackTrace","constructor","context","Object","name","AngularJsonAPIAbstractModelWrapper","AngularJsonAPIModelSourceError","AngularJsonAPIModelErrorsManager","$rootScope","$injector","AngularJsonAPIAbstractModel","loading","saving","Date","now","loadingCount","savingCount","synchronization","__setData","synchronize","notify","response","$emit","action","cache","finish","concat","__decrementSavingCounter","__incrementSavingCounter","refresh","synchronizeIncluded","__incrementLoadingCounter","__decrementLoadingCounter","resolveIncluded","includedResponse","operation","success","results","included","$jsonapi","__proccesResults","allSettled","unlinkAll","removeLink","linksObj","removeReflectionLink","resolveReflection","targets","answer","setAttributes","validators","setRelationships","relationshipData","links","linkOne","length","unlinkOne","getResource","AngularJsonAPIModelSourceErrorWrapper","SourceErrorFactory","source","code","SourceError","AngularJsonAPIModelErrorsManagerWrapper","ErrorsManagerFactory","description","ErrorConstructor","defaultFilter","ErrorsManager","obj","namedFunction","fn","Function","propertyName","callback","done","defineProperty","call","enumerable","configurable","str","replace","toLowerCase","$provide","decorator","$delegate","promises","resolvedCallback","rejectedCallback","wrap","isFunction","reason","wrapped","hasOwnProperty","all","AngularJsonAPISynchronizerSimpleWrapper","AngularJsonAPISynchronizerPrototype","AngularJsonAPISynchronizerSimpleFactory","sources","AngularJsonAPISynchronizerSimple","state","synchronizer","step","resolved","afterHooks","hook","finishHooks","rejected","noop","beginHooks","beforeHooks","synchronizationHooks","AngularJsonAPISynchronizerPrototypeWrapper","AngularJsonAPISourceRestWrapper","AngularJsonAPISourcePrototype","toKebabCase","$http","AngularJsonAPISourceRestFactory","url","AngularJsonAPISourceRest","method","headers","resolveHttp","rejectHttp","status","statusText","rejectServerOffline","rejectNoConnection","Accept","Content-Type","apply","arguments","AngularJsonAPISourcePrototypeWrapper","allHooks","options","hookName","begin","beforeSynchro","afterSynchro","before","after","AngularJsonAPISourceLocalWrapper","$window","AngularJsonAPISourceLocalFactory","prefix","AngularJsonAPISourceLocal","init","localStorage","getItem","removeItem","updateStorage","setItem","__updateStorage","AngularJsonAPISchemaWrapper","AngularJsonAPISchemaLink","AngularJsonAPISchemaFactory","AngularJsonAPISchema","include","linkSchema","linkName","linkSchemaObj","extend","join","AngularJsonAPILinkSchrapperLink","AngularJsonAPISchemaLinkFactory","plural","singular","AngularJsonAPIResourceWrapper","AngularJsonAPIModel","AngularJsonAPICollection","AngularJsonAPIResourceFactory","AngularJsonAPIResource","initialized","fetch","initialize","relationshipSchema","relationshipName","generate","clearCache","createModelFactory","schemaObj","isNew","Model","constructorName","functions","metaFunction","metaFunctionName","AngularJsonAPICollectionWrapper","AngularJsonAPICollectionFactory","event","clearWatchers","onObjectRemove","onFactoryClear","onObjectAdd","$on","jsonapiProvider","jsonapiFactory","addResource","memory","names","allResources","listResources","addValidator","warn","objects","$get","provider","$logProvider","debugEnabled","run","Promise"],"mappings":"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","file":"angular-jsonapi.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false, validate: false */\n  .constant('pluralize', pluralize)\n  .constant('validateJS', validate);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResourceCache', AngularJsonAPIResourceCacheWrapper);\n\n  function AngularJsonAPIResourceCacheWrapper(\n    uuid4,\n    $log\n  ) {\n\n    AngularJsonAPIResourceCache.prototype.get = get;\n    AngularJsonAPIResourceCache.prototype.index = index;\n    AngularJsonAPIResourceCache.prototype.setIndexIds = setIndexIds;\n    AngularJsonAPIResourceCache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPIResourceCache.prototype.fromJson = fromJson;\n    AngularJsonAPIResourceCache.prototype.toJson = toJson;\n    AngularJsonAPIResourceCache.prototype.clear = clear;\n\n    AngularJsonAPIResourceCache.prototype.remove = remove;\n    AngularJsonAPIResourceCache.prototype.revertRemove = revertRemove;\n    AngularJsonAPIResourceCache.prototype.clearRemoved = clearRemoved;\n\n    return {\n      create: AngularJsonAPIResourceCacheFactory\n    };\n\n    function AngularJsonAPIResourceCacheFactory(resource) {\n      return new AngularJsonAPIResourceCache(resource);\n    }\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPIResourceCache(resource) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n\n      _this.indexIds = undefined;\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData, config, updatedAt) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(validatedData, config, updatedAt);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData, !config.new, config.initialization);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: true\n      };\n\n      if (angular.isObject(collection) && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n        _this.indexIds = collection.indexIds;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, config, objectData.updatedAt);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: [],\n        updatedAt: _this.updatedAt,\n        indexIds: _this.indexIds\n      };\n\n      angular.forEach(_this.data, function(object) {\n        if (object.hasErrors() === false) {\n          json.data.push(object.toJson());\n        }\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.indexIds = undefined;\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      var data = {\n        id: id,\n        type: _this.resource.schema.type\n      };\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: true\n      };\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(data, config);\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization, used for index requests\n     * @param  {objec} params\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function index(params) {\n      var _this = this;\n\n      $log.debug('Unused params', params);\n\n      if (_this.indexIds === undefined) {\n        return _this.indexIds;\n      }\n\n      return _this.indexIds.map(_this.get.bind(_this));\n    }\n\n    /**\n     * Cache ids of objects returned by index request\n     * @param {ids array or AngularJsonAPIModel array} array Objects or ids to be cached\n     */\n    function setIndexIds(array) {\n      var _this = this;\n\n      _this.indexIds = [];\n\n      angular.forEach(array, function(element) {\n        if (angular.isString(element) && uuid4.validate(element)) {\n          _this.indexIds.push(element);\n        } else if (angular.isObject(element) && uuid4.validate(element.data.id)) {\n          _this.indexIds.push(element.data.id);\n        }\n      });\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n","!function(){\"use strict\";angular.module(\"angular-jsonapi\",[\"uuid4\"]).constant(\"pluralize\",pluralize).constant(\"validateJS\",validate)}(),function(){\"use strict\";function e(e,n){function t(e){return new r(e)}function r(e){var n=this;n.resource=e,n.data={},n.removed={},n.size=0,n.indexIds=void 0}function a(e,t,r){var a=this,o=e.id;return void 0===o?void n.error(\"Can't add data without id!\",e):(void 0===a.data[o]?(a.data[o]=a.resource.modelFactory(e,t,r),a.size+=1):a.data[o].update(e,!t[\"new\"],t.initialization),a.data[o])}function o(e){var n=this,t=angular.fromJson(e),r={\"new\":!1,\"synchronized\":!1,stable:!1,pristine:!1,initialization:!0};angular.isObject(t)&&void 0!==t.data&&(n.updatedAt=t.updatedAt,n.indexIds=t.indexIds,angular.forEach(t.data,function(e){var t=e.data;n.addOrUpdate(t,r,e.updatedAt)}))}function i(){var e=this,n={data:[],updatedAt:e.updatedAt,indexIds:e.indexIds};return angular.forEach(e.data,function(e){e.hasErrors()===!1&&n.data.push(e.toJson())}),angular.toJson(n)}function s(){var e=this;e.indexIds=void 0,e.data={},e.removed={}}function c(e){var n=this,t={id:e,type:n.resource.schema.type},r={\"new\":!1,\"synchronized\":!1,stable:!1,pristine:!0};return void 0===n.data[e]&&(n.data[e]=n.resource.modelFactory(t,r)),n.data[e]}function u(e){var t=this;return n.debug(\"Unused params\",e),void 0===t.indexIds?t.indexIds:t.indexIds.map(t.get.bind(t))}function l(n){var t=this;t.indexIds=[],angular.forEach(n,function(n){angular.isString(n)&&e.validate(n)?t.indexIds.push(n):angular.isObject(n)&&e.validate(n.data.id)&&t.indexIds.push(n.data.id)})}function d(e){var n=this;return void 0!==n.data[e]&&(n.removed[e]=n.data[e],delete n.data[e],n.size-=1),n.removed[e]}function h(e){var n=this;return void 0!==n.removed[e]&&(n.data[e]=n.removed[e],delete n.removed[e],n.size+=1),n.data[e]}function p(e){var n=this;delete n.removed[e]}return r.prototype.get=c,r.prototype.index=u,r.prototype.setIndexIds=l,r.prototype.addOrUpdate=a,r.prototype.fromJson=o,r.prototype.toJson=i,r.prototype.clear=s,r.prototype.remove=d,r.prototype.revertRemove=h,r.prototype.clearRemoved=p,{create:t}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIResourceCache\",e),e.$inject=[\"uuid4\",\"$log\"]}(),function(){\"use strict\";function e(e){function n(e){return null===e?null:{type:e.data.type,id:e.data.id}}function t(n,t,r,i,u){var l;return u=void 0===u?!1:u,void 0===n?(e.error(\"Can't add link to non existing object\",n,t,r),e.error(\"Object:\",n.data.type,n),e.error(\"Target:\",r.data.type,r),e.error(\"Key:\",t),[]):(l=n.schema.relationships[t],void 0===r?(e.error(\"Can't link non existing object\",n,t,r,l),e.error(\"Object:\",n.data.type,n),e.error(\"Target:\",r.data.type,r),e.error(\"Key:\",t),e.error(\"Schema:\",l),[]):void 0===l?(e.error(\"Can't add link not present in schema:\",n,t,r,l),e.error(\"Object:\",n.data.type,n),e.error(\"Target:\",r.data.type,r),e.error(\"Key:\",t),e.error(\"Schema:\",l),[]):null!==r&&l.polymorphic===!1&&l.model!==r.data.type?(e.error(\"This relation is not polymorphic, expected: \"+l.model+\" instead of \"+r.data.type),e.error(\"Object:\",n.data.type,n),e.error(\"Target:\",r.data.type,r),e.error(\"Key:\",t),e.error(\"Schema:\",l),[]):\"hasMany\"===l.type?i===!0?(c(n,t,r,u),[]):a(n,t,r,u):\"hasOne\"===l.type?i===!0?(s(n,t,r,u),[]):o(n,t,r,u):void 0)}function r(n,t,r,a,o){var s;return o=void 0===o?!1:o,void 0===n?(e.error(\"Can't remove link from non existing object\",n,t,r),e.error(\"Object:\",n.data.type,n),e.error(\"Target:\",r.data.type,r),e.error(\"Key:\",t),[]):(s=n.schema.relationships[t],void 0===s?(e.error(\"Can't remove link not present in schema:\",n,t,r,s),e.error(\"Object:\",n.data.type,n),e.error(\"Target:\",r.data.type,r),e.error(\"Key:\",t),e.error(\"Schema:\",s),[]):a===!0?(l(n,t,r,o),[]):i(n,t,r,o))}function a(e,n,t,r){var a,i=e.schema.relationships[n].reflection;return i===!1?(c(e,n,t,r),[]):(a=t.schema.relationships[i],\"hasOne\"===a.type?h(d(e,n,t),d(t,i,e),o(t,i,e,r)):\"hasMany\"===a.type?(c(e,n,t,r),c(t,i,e,r),[d(t,i,e)]):void 0)}function o(e,n,t,r){var a,o,i=e.schema.relationships[n].reflection,h=e.relationships[n],p=[];return s(e,n,t,r),void 0!==h&&null!==h&&(o=h.schema.relationships[i],\"hasOne\"===o.type?u(h,i,e,r):\"hasMany\"===o.type&&l(h,i,e,r),p.push(d(h,i,e))),void 0!==t&&null!==t&&i!==!1&&(a=t.schema.relationships[i],\"hasOne\"===a.type?s(t,i,e,r):\"hasMany\"===a.type&&c(t,i,e,r),p.push(d(t,i,e))),p}function i(e,n,t,r){var a,o=e.schema.relationships[n],i=o.reflection;return\"hasMany\"===o.type?l(e,n,t,r):\"hasOne\"===o.type&&u(e,n,t,r),i===!1?[]:(a=t.schema.relationships[i],\"hasOne\"===a.type?u(t,i,e,r):\"hasMany\"===a.type&&l(t,i,e,r),[d(t,i,e)])}function s(t,r,a,o){return e.debug(\"addHasOne\",t,r,a),o===!0&&(t=t.form),t.relationships[r]=a,t.data.relationships[r].data=n(a),o===!1&&t.reset(!0),!0}function c(t,r,a,o){e.debug(\"addHasMany\",t,r,a);var i=n(a);return o===!0&&(t=t.form),angular.isArray(t.relationships[r])&&t.relationships[r].indexOf(a)>-1?!1:(t.relationships[r]=t.relationships[r]||[],t.data.relationships[r].data=t.data.relationships[r].data||[],t.relationships[r].push(a),t.data.relationships[r].data.push(i),o===!1&&t.reset(!0),!0)}function u(n,t,r,a){return e.debug(\"removeHasOne\",n,t,r),a===!0&&(n=n.form),void 0!==r&&n.relationships[t]!==r?!1:(n.relationships[t]=null,n.data.relationships[t].data=void 0,a===!1&&n.reset(!0),!0)}function l(n,t,r,a){if(e.debug(\"removeHasMany\",n,t,r),a===!0&&(n=n.form),void 0!==n.relationships[t]){if(void 0===r)return n.relationships[t]=[],n.data.relationships[t].data=[],a===!1&&n.reset(!0),!0;var o=n.relationships[t].indexOf(r);return-1===o?!1:(n.relationships[t].splice(o,1),n.data.relationships[t].data.splice(o,1),a===!1&&n.reset(!0),!0)}}function d(e,n,t){return{object:e,key:n,target:t}}function h(e,n,t){var r=-1;return angular.forEach(t,function(n,t){n.object===e.object&&n.key===e.key&&n.target===e.target&&(r=t)}),r>-1?t[r]=n:t.push(n),t}var p=this;return p.toLinkData=n,p.link=t,p.unlink=r,this}angular.module(\"angular-jsonapi\").service(\"AngularJsonAPIModelLinkerService\",e),e.$inject=[\"$log\"]}(),function(){\"use strict\";function e(e,n,t,r){function a(e){return new o(e)}function o(e){var n=this;n.data={id:e.data.id,type:e.data.type,attributes:{},relationships:{}},n.relationships={},n.parent=e,n.schema=e.schema,n.reset()}function i(){var e=this,n=angular.copy(e.data),t={};return angular.forEach(n.relationships,function(e,n){void 0!==e.data&&(t[n]=e)}),n.relationships=t,{data:n}}function s(){var e=this;return e.parent.save()}function c(e){var n=this;angular.forEach(n.schema.relationships,function(e,t){n.data.relationships[t]=angular.copy(n.parent.data.relationships[t])||{},angular.isArray(n.relationships[t])?n.relationships[t]=n.parent.relationships[t].slice():n.relationships[t]=n.parent.relationships[t]}),(e!==!0||n.parent[\"synchronized\"]!==!0)&&(angular.forEach(n.schema.attributes,function(e,t){n.data.attributes[t]=angular.copy(n.parent.data.attributes[t])}),n.parent.errors.validation.clear())}function u(n){function a(){void 0===n?c.parent.errors.validation.clear():c.parent.errors.validation.clear(n),u.resolve()}function o(t){c.parent.error=!0,void 0===n?c.parent.errors.validation.clear():c.parent.errors.validation.clear(n),angular.forEach(t,function(n,t){angular.forEach(n,function(n){c.parent.errors.validation.add(t,e.create(n,t))})}),u.reject(c.parent.errors.validation)}var i,s,c=this,u=r.defer();return void 0===n?(i=c.data.attributes,s=c.schema.attributes):(i={},s={},i[n]=c.data.attributes[n],s[n]=c.schema.attributes[n]),t.async(i,s).then(a,o),u.promise}function l(e,t,a){var o=this;return a=void 0===a?!1:!0,r.resolve(n.link(o.parent,e,t,a,!0))}function d(e,t,a){var o=this;return a=void 0===a?!1:!0,r.resolve(n.unlink(o.parent,e,t,a,!0))}return o.prototype.save=s,o.prototype.reset=c,o.prototype.validate=u,o.prototype.link=l,o.prototype.unlink=d,o.prototype.toJson=i,{create:a}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelForm\",e),e.$inject=[\"AngularJsonAPIModelValidationError\",\"AngularJsonAPIModelLinkerService\",\"validateJS\",\"$q\"]}(),function(){\"use strict\";function e(e,o,i,s,c,u,l,d,h,p){function f(n,t,r){var a=this;n.relationships=n.relationships||{},a[\"new\"]=void 0===t[\"new\"]?!1:t[\"new\"],a.stable=void 0===t.stable?!0:t.stable,a[\"synchronized\"]=void 0===t[\"synchronized\"]?!0:t[\"synchronized\"],a.pristine=void 0===t.pristine?!0:t.pristine,a.removed=!1,a.loading=!1,a.saving=!1,a.updatedAt=a[\"synchronized\"]===!0?Date.now():r,a.loadingCount=0,a.savingCount=0,a.data={relationships:{},attributes:{}},a.relationships={},angular.forEach(a.schema.relationships,function(e,n){a.relationships[n]=void 0}),a.errors={validation:i.create(\"Validation\",\"Errors of attributes validation\",o),synchronization:i.create(\"Source\",\"Errors of synchronizations\",e)},a.promise=p.resolve(a),E(a,n),a.form=c.create(a)}function y(){function e(){i.synchronize(c).then(n,t,o)}function n(e){l.$emit(\"angularJsonAPI:\"+i.data.type+\":object:\"+c.action,\"resolved\",i,e),i.update(e.data.data),i[\"new\"]===!0&&(i.resource.cache.indexIds=i.resource.cache.indexIds||[],i.resource.cache.indexIds.push(i.data.id)),i[\"synchronized\"]=!0,i[\"new\"]=!1,i.pristine=!1,i.stable=!0,e.finish(),i.errors.synchronization.concat(e.errors),s.resolve(i)}function t(e){l.$emit(\"angularJsonAPI:\"+i.data.type+\":object:save\",\"rejected\",i,e),e.finish(),i.errors.synchronization.concat(e.errors),s.reject(i)}function o(e){l.$emit(\"angularJsonAPI:\"+i.data.type+\":object:save\",\"notify\",i,e),s.notify(e)}var i=this,s=p.defer(),c=(d.get(\"$jsonapi\"),{action:i[\"new\"]===!0?\"add\":\"update\",object:i});return i.form.validate().then(e,s.reject)[\"finally\"](a.bind(i,void 0)),r(i),s.promise}function g(){var e=this;void 0!==e.form&&e.form.reset()}function v(r){function a(e){function r(e){return n(e),e.synchronize({action:\"include\",object:e})[\"finally\"](t.bind(e,void 0))}function a(e){angular.forEach(e,function(e,n){e.success===!0&&(l.$emit(\"angularJsonAPI:\"+o.included[n].data.type+\":object:include\",\"resolved\",o.included[n],e),e.value.finish())}),c.resolve(u)}var o=s.__proccesResults(e.data);l.$emit(\"angularJsonAPI:\"+u.data.type+\":object:refresh\",\"resolved\",u,e),p.allSettled(o.included.map(r)).then(a,c.reject),u[\"synchronized\"]=!0,u.stable=!0,u.pristine=!1,e.finish(),u.errors.synchronization.concat(e.errors)}function o(e){l.$emit(\"angularJsonAPI:\"+u.data.type+\":object:refresh\",\"rejected\",u,e),e.finish(),u.errors.synchronization.concat(e.errors),c.reject(u)}function i(e){l.$emit(\"angularJsonAPI:\"+u.data.type+\":object:refresh\",\"notify\",u,e),c.notify(e)}var s=d.get(\"$jsonapi\"),c=p.defer(),u=this;r=void 0===r?u.schema.params.get:r;var h={action:\"refresh\",object:u,params:r};if(u[\"new\"]===!0){var f=e.create(\"Can't refresh new object\",null,0,\"refresh\");u.errors.synchronization.add(\"refresh\",f),c.reject(f)}else n(u),u.synchronize(h).then(a,o,i)[\"finally\"](t.bind(u,void 0));return c.promise}function m(){var e=this,n=angular.copy(e.data),t={};return angular.forEach(n.relationships,function(e,n){void 0!==e.data&&(t[n]=e)}),n.relationships=t,{data:n,updatedAt:e.updatedAt}}function b(){function e(e){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"resolved\",o,e),o.removed=!0,o.unlinkAll(),o.resource.cache.clearRemoved(o.data.id),e.finish(),o.errors.synchronization.concat(e.errors),i.resolve(o)}function n(e){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"rejected\",o,e),o.resource.cache.revertRemove(o.data.id),e.finish(),o.errors.synchronization.concat(e.errors),i.reject(o)}function t(e){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"notify\",o,e),i.notify(e)}var o=this,i=p.defer(),s={action:\"remove\",object:o};return o.resource.cache.remove(o.data.id),o[\"new\"]===!0?i.resolve():(r(o),o.synchronize(s).then(e,n,t)[\"finally\"](a.bind(o,void 0))),i.promise}function j(e){function r(e,n){var t=o.schema.relationships[n],r=t.reflection;angular.isArray(e)?angular.forEach(e,a.bind(void 0,r)):angular.isObject(e)&&a(r,e),\"hasOne\"===t.type?o.relationships[n]=null:\"hasMany\"===t.type&&(o.relationships[n]=[])}function a(e,r){function a(e){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"resolve\",o,e),e.finish(),o.errors.synchronization.concat(e.errors),i.resolve(o)}function c(e){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"rejected\",o,e),e.finish(),o.errors.synchronization.concat(e.errors),i.reject(o)}function u(e){l.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"notify\",o,e),e.finish(),i.notify(e)}var d=r.schema.relationships[e],h={action:\"unlinkReflection\",object:r,target:o,key:e};n(r),s.unlink(r,e,o,d),r.synchronize(h).then(a,c,u)[\"finally\"](t.bind(r,void 0))}var o=this,i=p.defer();return n(o),void 0===e?angular.forEach(o.relationships,r):r(o.relationships[e],e),t(o),i.promise}function A(o,i){function c(e){function r(e){return n(i),i.synchronize({action:\"linkReflection\",object:e.object,target:e.target,key:e.key})[\"finally\"](t.bind(i,void 0))}function a(e){angular.forEach(e,function(e,n){e.success===!0&&(l.$emit(\"angularJsonAPI:\"+c[n].object.data.type+\":object:linkReflection\",\"resolved\",c[n],e),e.value.finish())}),f.resolve(y)}l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:link\",\"resolved\",y,e);var c=s.link(y,o,i);y.stable=!0,y.pristine=!1,e.finish(),y.errors.synchronization.concat(e.errors),p.allSettled(c.map(r)).then(a,f.reject)}function u(e){l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:link\",\"rejected\",y,e),f.reject(e.errors),e.finish(),y.errors.synchronization.concat(e.errors),f.reject(y)}function d(e){l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:link\",\"notify\",y,e),f.notify(e)}var h,f=p.defer(),y=this,g={action:\"link\",object:y,target:i,key:o};return void 0===i?(h=e.create(\"Can't link undefined\",null,0,\"link\"),y.errors.synchronization.add(\"link\",h),f.reject(h)):y[\"new\"]===!0?(h=e.create(\"Can't link new object\",null,0,\"link\"),y.errors.synchronization.add(\"link\",h),f.reject(h)):(r(y),y.synchronize(g).then(c,u,d)[\"finally\"](a.bind(y,void 0))),f.promise}function k(o,i){function c(e){function r(e){return n(i),i.synchronize({action:\"unlinkReflection\",object:e.object,target:e.target,key:e.key})[\"finally\"](t.bind(i,void 0))}function a(e){angular.forEach(e,function(n){n.success===!0&&(l.$emit(\"angularJsonAPI:\"+c[o].data.type+\":object:unlinkReflection\",\"resolved\",c[o],n),e.value.finish())}),f.resolve(y)}l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:unlink\",\"resolved\",y,e);var c=s.link(y,o,i);y.stable=!0,y.pristine=!1,e.finish(),y.errors.synchronization.concat(e.errors),p.allSettled(c.map(r)).then(a,f.reject)}function u(e){l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:unlink\",\"rejected\",y,e),f.reject(e.errors),e.finish(),y.errors.synchronization.concat(e.errors),f.reject(y)}function d(e){l.$emit(\"angularJsonAPI:\"+y.data.type+\":object:unlink\",\"notify\",y,e),f.notify(e)}var h,f=p.defer(),y=this,g={action:\"unlink\",object:y,target:i,key:o};return void 0===i?(h=e.create(\"Can't unlink undefined\",null,0,\"unlink\"),y.errors.synchronization.add(\"unlink\",h),f.reject(y)):y[\"new\"]===!0?(h=e.create(\"Can't unlink new object\",null,0,\"unlink\"),y.errors.synchronization.add(\"unlink\",h),f.reject(y)):(r(y),y.synchronize(g).then(c,u,d)[\"finally\"](a.bind(y,void 0))),f.promise}function z(e,r,a){var o=this;n(o),E(o,e),o.reset(r),o[\"synchronized\"]=a===!0?!1:!0,o.stable=a===!0?!1:!0,o.updatedAt=Date.now(),t(o)}function I(){var e=this,n=!1;return angular.forEach(e.errors,function(e){n=e.hasErrors()||n}),n}function E(e,n){function t(t,r){e.data.attributes[r]=n.attributes[r]}function r(t,r){var i=n.relationships[r];return void 0===i?void(e.data.relationships[r]={data:void 0}):(e.data.relationships[r]=e.data.relationships[r]||{},e.data.relationships[r].links=i.links,void(\"hasOne\"===t.type?a(e,r,i.data):\"hasMany\"===t.type&&angular.isArray(i.data)&&(0===i.data.length?(e.data.relationships[r].data=[],e.unlinkAll(r)):(angular.forEach(e.relationships[r],o.bind(void 0,e,r,i.data)),angular.forEach(i.data,a.bind(void 0,e,r))))))}function a(e,n,t){var r;if(null===t)return void s.link(e,n,null);if(void 0!==t){if(r=i.getResource(t.type),void 0===r)return void h.error(\"Factory not found\",t.type,t);var a=r.cache.get(t.id);s.link(e,n,a)}}function o(e,n,t,r){t.indexOf(r.data.id)>-1||s.unlink(e,n,r)}var i=d.get(\"$jsonapi\"),c=e.schema;return e.data.id=n.id,e.data.type=n.type,e.resource.schema.type!==n.type?(h.error(\"Different type then resource\",e.resource.schema.type,n),!1):u.validate(e.data.id)?(e.data.links=n.links,n.attributes=n.attributes||{},n.relationships=n.relationships||{},angular.forEach(c.attributes,t),angular.forEach(c.relationships,r),!0):(h.error(\"Invalid id\"),!1)}return f.prototype.refresh=v,f.prototype.remove=b,f.prototype.reset=g,f.prototype.save=y,f.prototype.update=z,f.prototype.link=A,f.prototype.unlink=k,f.prototype.unlinkAll=j,f.prototype.toJson=m,f.prototype.hasErrors=I,f}function n(e){e=void 0===e?this:e,e.loadingCount+=1,e.loading=!0}function t(e){e=void 0===e?this:e,e.loadingCount-=1,e.loading=e.loadingCount>0}function r(e){e=void 0===e?this:e,e.savingCount+=1,e.saving=!0}function a(e){e=void 0===e?this:e,e.savingCount-=1,e.saving=e.savingCount>0}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractModel\",e),e.$inject=[\"AngularJsonAPIModelSourceError\",\"AngularJsonAPIModelValidationError\",\"AngularJsonAPIModelErrorsManager\",\"AngularJsonAPIModelLinkerService\",\"AngularJsonAPIModelForm\",\"uuid4\",\"$rootScope\",\"$injector\",\"$log\",\"$q\"]}(),function(){\"use strict\";function e(){function e(e,t){return new n(e,t)}function n(e,n){var t=this;Error.captureStackTrace(t,t.constructor),t.message=e,t.context={attribute:n}}return n.prototype=Object.create(Error.prototype),n.prototype.constructor=n,n.prototype.name=\"ValidationError\",{create:e}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelValidationError\",e)}(),function(){\"use strict\";function e(){function e(e,t,r,a){return new n(e,t,r,a)}function n(e,n,t,r){var a=this;Error.captureStackTrace(a,a.constructor),a.message=e,a.context={source:n,code:t,action:r}}return n.prototype=Object.create(Error.prototype),n.prototype.constructor=n,n.prototype.name=\"SourceError\",{create:e}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelSourceError\",e)}(),function(){\"use strict\";function e(){function e(e,t,r,a){return new n(e,t,r,a)}function n(e,n,t,r){var a=this;a.name=e,a.description=n,a.ErrorConstructor=t,a.errors={},a.defaultFilter=r||function(){return!0}}function t(e){var n=this;void 0===e?angular.forEach(n.errors,function(e,t){n.errors[t]=[]}):n.errors[e]=[]}function r(e,n){var t=this;t.errors[e]=t.errors[e]||[],t.errors[e].push(n)}function a(e){var n=this;angular.forEach(e,function(e){n.errors[e.key]=[]}),angular.forEach(e,function(e){n.errors[e.key].push(e.object)})}function o(e){var n=this;if(void 0===e){var t=!1;return angular.forEach(n.errors,function(e){t=t||e.length>0}),t}return void 0!==n.errors[e]&&n.errors[e].length>0}return n.prototype.constructor=n,n.prototype.concat=a,n.prototype.clear=t,n.prototype.add=r,n.prototype.hasErrors=o,{create:e}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelErrorsManager\",e)}(),function(){\"use strict\";function e(e,n){return new Function(\"fn\",\"return function \"+e+\"(){ return fn.apply(this,arguments)}\")(n)}angular.module(\"angular-jsonapi\").constant(\"namedFunction\",e)}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"lazyProperty\",function(e,n,t){var r,a;Object.defineProperty(e,n,{get:function(){return a||(a=!0,r=t.call(e)),r},enumerable:!0,configurable:!0})})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"toKebabCase\",function(e){return e.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase()})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$provide\",function(e){e.decorator(\"$q\",[\"$delegate\",function(e){var n=e;return n.allSettled=n.allSettled||function(e,t,r){function a(e){return n.resolve(e).then(function(e){return angular.isFunction(t)&&t(e),{success:!0,value:e}},function(e){return angular.isFunction(r)&&r(e),{success:!1,reason:e}})}var o=angular.isArray(e)?[]:{};return angular.forEach(e,function(e,n){o.hasOwnProperty(n)||(o[n]=a(e))}),n.all(o)},n}])}])}(),function(){\"use strict\";function e(e,n,t){function r(e){return new a(e)}function a(n){var t=this;t.state={},e.call(t,n),angular.forEach(n,function(e){e.synchronizer=t})}function o(r){function a(e){d.notify({step:\"synchronization\",data:e})}function o(e){d.notify({step:\"synchronization\",errors:e})}function i(e){u.state[h]=u.state[h]||{},u.state[h].success=!0,angular.forEach(e,function(e){e.success===!1&&(u.state[h].success=!1)}),angular.forEach(u.sources,function(n){angular.forEach(n.afterHooks[h],function(n){d.notify({step:\"after\",errors:n.call(u,r,e)})})});var n,t=[];angular.forEach(e,function(e){e.success===!0?n=e.value:t.push({key:h,object:e.reason})}),t.length>0?d.reject({data:n,finish:s,errors:t}):d.resolve({data:n,finish:s,errors:t})}function s(){angular.forEach(u.sources,function(e){angular.forEach(e.finishHooks[h],function(e){d.notify({step:\"finish\",errors:e.call(u,r)})})})}function c(e){t.error(\"All settled rejected! Something went wrong\"),d.reject({finish:angular.noop,errors:e})}var u=this,l=[],d=n.defer(),h=r.action;return e.prototype.synchronize.call(u,r),angular.forEach(u.sources,function(e){angular.forEach(e.beginHooks[h],function(e){d.notify({step:\"begin\",data:e.call(u,r)})})}),angular.forEach(u.sources,function(e){angular.forEach(e.beforeHooks[h],function(e){d.notify({step:\"before\",data:e.call(u,r)})})}),angular.forEach(u.sources,function(e){angular.forEach(e.synchronizationHooks[h],function(e){l.push(e.call(u,r))})}),n.allSettled(l,a,o).then(i,c),d.promise}return a.prototype=Object.create(e.prototype),a.prototype.constructor=a,a.prototype.synchronize=o,{create:r}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerSimple\",e),e.$inject=[\"AngularJsonAPISynchronizerPrototype\",\"$q\",\"$log\"]}(),function(){\"use strict\";function e(e){function n(e){var n=this;n.sources=e}function t(n){var t=this;e.debug(\"Synchro Collection\",t.resource.schema.type,n),void 0===n.action&&e.error(\"Can't synchronize undefined action\",n)}return n.prototype.synchronize=t,n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerPrototype\",e),e.$inject=[\"$log\"]}(),function(){\"use strict\";function e(e,n,t,r,a,o){function i(e,n){return new s(e,n)}function s(r,i){function s(e){return o({method:\"GET\",headers:v,url:i,params:e.params||{}}).then(f,y.bind(null,\"all\"))}function c(e){return o({method:\"GET\",headers:v,url:i+\"/\"+e.object.data.id,params:e.params||{}}).then(f,y.bind(null,\"get\"))}function u(e){return o({method:\"DELETE\",headers:v,url:i+\"/\"+e.object.data.id}).then(f,y.bind(null,\"remove\"))}function l(n){var t=a.defer(),r=n.object.schema.relationships[n.key];return n.object.removed===!0?t.reject(e.create(\"Object has been removed\",g,0,\"unlink\")):void 0!==n.target&&void 0===n.target.data.id?t.reject(e.create(\"Can't unlink object without id through rest call\",g,0,\"unlink\")):\"hasOne\"===r.type?o({method:\"DELETE\",headers:v,url:i+\"/\"+n.object.data.id+\"/relationships/\"+n.key}).then(f,y.bind(null,\"get\")).then(t.resolve,t.reject):\"hasMany\"===r.type&&(void 0===n.target?o({method:\"PUT\",headers:v,data:{data:[]},url:i+\"/\"+n.object.data.id+\"/relationships/\"+n.key}).then(f,y.bind(null,\"unlink\")).then(t.resolve,t.reject):o({method:\"DELETE\",headers:v,url:i+\"/\"+n.object.data.id+\"/relationships/\"+n.key+\"/\"+n.target.data.id}).then(f,y.bind(null,\"unlink\")).then(t.resolve,t.reject)),t.promise}function d(e){var n=a.defer(),r=e.object.schema.relationships[e.key];return e.object.removed===!0?n.reject({errors:[{status:0,statusText:\"Object has been removed\"}]}):void 0===e.target||void 0===e.target.data.id?n.reject({errors:[{status:0,statusText:\"Can't link object without id through rest call\"}]}):\"hasOne\"===r.type?o({method:\"PUT\",headers:v,data:{data:t.toLinkData(e.target)},url:i+\"/\"+e.object.data.id+\"/relationships/\"+e.key}).then(f,y.bind(null,\"link\")).then(n.resolve,n.reject):\"hasMany\"===r.type&&o({method:\"POST\",headers:v,data:{data:[t.toLinkData(e.target)]},url:i+\"/\"+e.object.data.id+\"/relationships/\"+e.key}).then(f,y.bind(null,\"link\")).then(n.resolve,n.reject),n.promise}function h(e){return o({method:\"PUT\",headers:v,url:i+\"/\"+e.object.data.id,data:e.object.form.toJson()}).then(f,y.bind(null,\"update\"))}function p(e){return o({method:\"POST\",headers:v,url:i+\"/\",data:e.object.form.toJson()}).then(f,y.bind(null,\"add\"))}function f(e){return a.resolve(e.data)}function y(n,t){function r(t){s.reject(e.create(\"Server is offline\",g,t.status,n))}function i(){s.reject(e.create(\"No internet connection\",g,t.status,n))}var s=a.defer();return 0===t.status?o({method:\"GET\",url:\"https://status.cloud.google.com/incidents.schema.json\"}).then(r,i):s.reject(e.create(t.statusText,g,t.status,n)),s.promise}var g=this,v={Accept:\"application/vnd.api+json\",\"Content-Type\":\"application/vnd.api+json\"};n.apply(g,arguments),g.synchronization(\"remove\",u),g.synchronization(\"unlink\",l),g.synchronization(\"link\",d),g.synchronization(\"update\",h),g.synchronization(\"add\",p),g.synchronization(\"all\",s),g.synchronization(\"get\",c),g.synchronization(\"refresh\",c)}return s.prototype=Object.create(n.prototype),s.prototype.constructor=s,{create:i}}angular.module(\"angular-jsonapi-rest\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISourceRest\",e),e.$inject=[\"AngularJsonAPIModelSourceError\",\"AngularJsonAPISourcePrototype\",\"AngularJsonAPIModelLinkerService\",\"toKebabCase\",\"$q\",\"$http\"]}(),function(){\"use strict\";function e(){function e(e){var n=this,t=[\"add\",\"init\",\"get\",\"all\",\"clearCache\",\"remove\",\"unlink\",\"unlinkReflection\",\"link\",\"linkReflection\",\"update\",\"refresh\",\"include\"];n.name=e,n.state={},n.beginHooks={},n.beforeHooks={},n.synchronizationHooks={},n.afterHooks={},n.finishHooks={},n.options={},angular.forEach(t,function(e){n.beginHooks[e]=[],n.beforeHooks[e]=[],n.synchronizationHooks[e]=[],n.afterHooks[e]=[],n.finishHooks[e]=[],n.state[e]={loading:!1,success:!0}})}function n(e,n){var t=this;t.beginHooks[e].push(n)}function t(e,n){var t=this;t.finishHooks[e].push(n)}function r(e,n){var t=this;t.beforeHooks[e].push(n)}function a(e,n){var t=this;t.afterHooks[e].push(n)}function o(e,n){var t=this;t.synchronizationHooks[e].push(n)}return e.prototype.before=r,e.prototype.after=a,e.prototype.begin=n,e.prototype.finish=t,e.prototype.synchronization=o,e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISourcePrototype\",e)}(),function(){\"use strict\";function e(e,n,t){function r(e,n){return new a(e,n)}function a(r,a){function o(){var e=c.synchronizer.resource.schema.type;return t.resolve(n.localStorage.getItem(a+\".\"+e))}function i(){var e=c.synchronizer.resource.schema.type;n.localStorage.removeItem(a+\".\"+e)}function s(){var e=c.synchronizer.resource.schema.type,t=c.synchronizer.resource.cache;n.localStorage.setItem(a+\".\"+e,t.toJson())}var c=this;a=a||\"AngularJsonAPI\",c.__updateStorage=s,e.apply(c,arguments),c.synchronization(\"init\",o),c.begin(\"clearCache\",i),c.begin(\"remove\",s),c.begin(\"refresh\",s),c.begin(\"unlink\",s),c.begin(\"unlinkReflection\",s),c.begin(\"link\",s),c.begin(\"linkReflection\",s),c.begin(\"update\",s),c.begin(\"add\",s),c.begin(\"get\",s),c.begin(\"all\",s),c.begin(\"include\",s),c.finish(\"init\",s),c.finish(\"clearCache\",s),c.finish(\"remove\",s),c.finish(\"refresh\",s),c.finish(\"unlink\",s),c.finish(\"unlinkReflection\",s),c.finish(\"link\",s),c.finish(\"linkReflection\",s),c.finish(\"update\",s),c.finish(\"add\",s),c.finish(\"get\",s),c.finish(\"all\",s),c.finish(\"include\",s)}return a.prototype=Object.create(e.prototype),a.prototype.constructor=a,{create:r}}angular.module(\"angular-jsonapi-local\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISourceLocal\",e),e.$inject=[\"AngularJsonAPISourcePrototype\",\"$window\",\"$q\"]}(),function(){\"use strict\";function e(e,n,t){function r(e){return new a(e)}function a(e){var n=this,r=e.include||{};e.include=r,r.get=e.include.get||[],r.all=e.include.all||[],n.params={get:{},all:{}},angular.forEach(e.relationships,function(n,a){var o=t.create(n,a,e.type);e.relationships[a]=o,o.included===!0&&(r.get.push(a),\"hasOne\"===o.type&&r.all.push(a))}),angular.extend(n,e),r.get.length>0&&(n.params.get.include=r.get.join(\",\")),r.all.length>0&&(n.params.all.include=r.all.join(\",\"))}return{create:r}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchema\",e),e.$inject=[\"$log\",\"pluralize\",\"AngularJsonAPISchemaLink\"]}(),function(){\"use strict\";function e(e,n){function t(e,n,t){return new r(e,n,t)}function r(t,r,a){var o=this;angular.isString(t)?(o.model=n.plural(r),o.type=t,o.polymorphic=!1,o.reflection=a):(void 0===t.type&&e.error(\"Schema of link without a type: \",t,r),\"hasMany\"!==t.type&&\"hasOne\"!==t.type&&e.error(\"Schema of link with wrong type: \",t.type,\"available: hasOne, hasMany\"),o.model=t.model||n.plural(r),o.type=t.type,o.polymorphic=t.polymorphic||!1,void 0===t.reflection?o.reflection=\"hasMany\"===o.type?n.singular(a):a:o.reflection=t.reflection,o.included=t.included||!1)}return{create:t}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchemaLink\",e),e.$inject=[\"$log\",\"pluralize\"]}(),function(){\"use strict\";function e(e,n,t,r,a,o,i,s){function c(e,n){return new u(e,n)}function u(r,a){function i(e){o.$emit(\"angularJsonAPI:\"+u.type+\":resource:init\",\"resolved\",e),u.cache.fromJson(e.data),u.initialized=!0,e.finish()}function s(e){o.$emit(\"angularJsonAPI:\"+u.type+\":resource:init\",\"rejected\",e),e.finish(),u.initialized=!0}function c(e){o.$emit(\"angularJsonAPI:\"+u.type+\":resource:init\",\"notify\",e)}var u=this,l={action:\"init\"};u.schema=n.create(r),u.cache=t.create(u),u.synchronizer=a,u.synchronizer.resource=u,u.modelFactory=e.modelFactory(u.schema,u),u.initialized=!1,u.type=u.schema.type,a.resource=u,u.synchronizer.synchronize(l).then(i,s,c)}function l(e,n){var t=this;if(!a.validate(e))return s.reject({errors:[{status:0,statusText:\"Invalid id not uuid4\"}]});var r=t.cache.get(e);return r.promise=r.refresh(n),r}function d(e){var n=this;e=void 0===e?n.schema.params.all:e;var t=r.create(n,e);return t.promise=t.fetch(),t}function h(e){var n=this,t=n.cache.remove(e);return t.remove()}function p(){var e=this,n={};angular.forEach(e.schema.relationships,function(e,t){\"hasOne\"===e.type?n[t]={data:null}:\"hasMany\"===e.type&&(n[t]={data:[]})});var t={type:e.type,id:a.generate(),attributes:{},relationships:n},r={\"new\":!0,\"synchronized\":!1,stable:!1,pristine:!1,initialization:!1},i=e.cache.addOrUpdate(t,r);return o.$emit(\"angularJsonAPI:\"+e.type+\":resource:initialize\",\"resolved\",i),i}function f(){function e(e){o.$emit(\"angularJsonAPI:\"+r.type+\":resource:clearCache\",\"resolved\",e),e.finish(),a.resolve(e)}function n(e){o.$emit(\"angularJsonAPI:\"+r.type+\":resource:clearCache\",\"resolved\",e),e.finish(),a.reject(e)}function t(e){o.$emit(\"angularJsonAPI:\"+r.type+\":resource:clearCache\",\"notify\",e),a.notify(e)}var r=this,a=s.defer(),i={action:\"clearCache\"};return r.cache.clear(),r.synchronizer.synchronize(i).then(e,n,t),a}return u.prototype.get=l,u.prototype.all=d,u.prototype.remove=h,u.prototype.initialize=p,u.prototype.clearCache=f,{create:c}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIResource\",e),e.$inject=[\"AngularJsonAPIModel\",\"AngularJsonAPISchema\",\"AngularJsonAPIResourceCache\",\"AngularJsonAPICollection\",\"uuid4\",\"$rootScope\",\"$log\",\"$q\"]}(),function(){\"use strict\";function e(e,n,t,r,a){function o(n,o){function i(e,n,t){return new c(e,n,t)}var s=r.plural(n.type,1),c=t(s,function(n,t,r){var o=this;n.type!==o.schema.type&&a.error(\"Data type other then declared in schema: \",n.type,\" instead of \",o.schema.type),e.call(o,n,t,r),o.form.parent=o});return c.prototype=Object.create(e.prototype),c.prototype.constructor=c,c.prototype.schema=n,c.prototype.resource=o,c.prototype.synchronize=o.synchronizer.synchronize.bind(o.synchronizer),angular.forEach(n.functions,function(e,n){c.prototype[n]=function(){return e.apply(this,arguments)}}),i}return{modelFactory:o}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModel\",e),e.$inject=[\"AngularJsonAPIAbstractModel\",\"AngularJsonAPISchema\",\"namedFunction\",\"pluralize\",\"$log\"]}(),function(){\"use strict\";function e(e,r,a,o,i){function s(e,n){return new c(e,n);\n}function c(n,t){function o(e,n,t){var r;\"resolved\"===n&&void 0!==l.data&&(r=l.data.indexOf(t),r>-1&&(l.data.splice(r,1),l.resource.cache.setIndexIds(l.data)))}function s(){l.data=void 0,l.pristine=!0}function c(e,n,t){\"resolved\"===n&&(l.data=l.data||[],l.data.push(t))}function u(){d(),h(),p()}var l=this;l.resource=n,l.type=n.schema.type,l.params=t,l.errors={synchronization:r.create(\"Source\",\"Errors of synchronizations\",e)},l.data=l.resource.cache.index(l.params),l.loading=!1,l.loadingCount=0,l[\"synchronized\"]=!1,l.pristine=void 0===l.data,l.promise=i.resolve(l);var d=a.$on(\"angularJsonAPI:\"+l.type+\":object:remove\",o),h=a.$on(\"angularJsonAPI:\"+l.type+\":resource:clearCache\",s),p=a.$on(\"angularJsonAPI:\"+l.type+\":object:add\",c);a.$on(\"$destroy\",u)}function u(){var e=this,n=!1;return angular.forEach(e.errors,function(e){n=e.hasErrors()||n}),n}function l(e,n){var t=this;return t.resource.get(e,n)}function d(){function e(e){function r(e){return n(e),e.synchronize({action:\"include\",object:e})[\"finally\"](t.bind(e,void 0))}function o(e){angular.forEach(e,function(e,n){e.success===!0&&(a.$emit(\"angularJsonAPI:\"+s.included[n].data.type+\":object:include\",\"resolved\",s.included[n],e),e.value.finish())}),u.resolve(c)}var s=l.__proccesResults(e.data);a.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"resolved\",c,e),i.allSettled(s.included.map(r)).then(o,u.reject),angular.forEach(c.data,t),c.data=s.data,c.links=e.data.links,c.updatedAt=Date.now(),c[\"synchronized\"]=!0,c.resource.cache.setIndexIds(c.data),e.finish(),c.errors.synchronization.concat(e.errors),u.resolve(c)}function r(e){a.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"rejected\",c,e),angular.forEach(c.data,t),e.finish(),c.errors.synchronization.concat(e.errors),u.reject(c)}function s(e){a.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"notify\",c,e),u.notify(e)}var c=this,u=i.defer(),l=o.get(\"$jsonapi\"),d={action:\"all\",params:c.params};return n(c),angular.forEach(c.data,n),c.resource.synchronizer.synchronize(d).then(e,r,s)[\"finally\"](t.bind(c,void 0)),u.promise}return c.prototype.fetch=d,c.prototype.refresh=d,c.prototype.get=l,c.prototype.hasErrors=u,{create:s}}function n(e){e=void 0===e?this:e,e.loadingCount+=1,e.loading=!0}function t(e){e=void 0===e?this:e,e.loadingCount-=1,e.loading=e.loadingCount>0}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICollection\",e),e.$inject=[\"AngularJsonAPIModelSourceError\",\"AngularJsonAPIModelErrorsManager\",\"$rootScope\",\"$injector\",\"$q\"]}(),function(){\"use strict\";function e(e){function n(n,a){function o(e,n){var o=a.create(e,n);t[e.type]=o,r.push(e.type)}function i(e){return t[e]}function s(){return t}function c(){return r}function u(){angular.forEach(t,function(e){e.clearCache()})}function l(t,r){return angular.isString(t)?(void 0===e.validators[t]&&n.warn(\"Redeclaring validator\",t),void(e.validators[t]=r)):void n.error(\"Validator name is not a string\",t)}function d(e){var t={data:[],included:[]};void 0===e&&n.error(\"Can't proccess results:\",e);var r={\"new\":!1,\"synchronized\":!0,stable:!0,pristine:!1,initialization:!1};return angular.forEach(e.included,function(e){t.included.push(i(e.type).cache.addOrUpdate(e,r))}),angular.isArray(e.data)?angular.forEach(e.data,function(e){t.data.push(i(e.type).cache.addOrUpdate(e,r))}):t.data.push(i(e.data.type).cache.addOrUpdate(e.data,r)),t}return{addResource:o,getResource:i,clearCache:u,allResources:s,listResources:c,addValidator:l,__proccesResults:d}}var t={},r=[];this.$get=n,n.$inject=[\"$log\",\"AngularJsonAPIResource\"]}angular.module(\"angular-jsonapi\").provider(\"$jsonapi\",e),e.$inject=[\"validateJS\"]}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$logProvider\",function(e){e.debugEnabled(!1)}]).run([\"validateJS\",\"$q\",function(e,n){e.Promise=n}])}();\n//# sourceMappingURL=angular-jsonapi.min.js.map","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, oneWay, form) {\n      var schema;\n      form = form === undefined ? false : form;\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema.type === 'hasMany') {\n        if (oneWay === true) {\n          __addHasMany(object, key, target, form);\n          return [];\n        } else {\n          return __processAddHasMany(object, key, target, form);\n        }\n      } else if (schema.type === 'hasOne') {\n        if (oneWay === true) {\n          __addHasOne(object, key, target, form);\n          return [];\n        } else {\n          return __processAddHasOne(object, key, target, form);\n        }\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, oneWay, form) {\n      var schema;\n      form = form === undefined ? false : form;\n\n      if (object === undefined) {\n        $log.error('Can\\'t remove link from non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (oneWay === true) {\n        __removeHasMany(object, key, target, form);\n        return [];\n      } else {\n        return __processRemove(object, key, target, form);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __processAddHasMany(object, key, target, form) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var reflectionSchema;\n\n      if (reflectionKey === false) {\n        __addHasMany(object, key, target, form);\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        return __swapResults(\n          __wrapResults(object, key, target),\n          __wrapResults(target, reflectionKey, object),\n          __processAddHasOne(target, reflectionKey, object, form)\n        );\n      } else if (reflectionSchema.type === 'hasMany') {\n        __addHasMany(object, key, target, form);\n        __addHasMany(target, reflectionKey, object, form);\n        return [__wrapResults(target, reflectionKey, object)];\n      }\n    }\n\n    function __processAddHasOne(object, key, target, form) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var oldReflection = object.relationships[key];\n      var reflectionSchema;\n      var oldReflectionSchema;\n      var result = [];\n\n      __addHasOne(object, key, target, form);\n\n      if (oldReflection !== undefined && oldReflection !== null) {\n        oldReflectionSchema = oldReflection.schema.relationships[reflectionKey];\n\n        if (oldReflectionSchema.type === 'hasOne') {\n          __removeHasOne(oldReflection, reflectionKey, object, form);\n        } else if (oldReflectionSchema.type === 'hasMany') {\n          __removeHasMany(oldReflection, reflectionKey, object, form);\n        }\n\n        result.push(__wrapResults(oldReflection, reflectionKey, object));\n      }\n\n      if (target !== undefined && target !== null && reflectionKey !== false) {\n        reflectionSchema = target.schema.relationships[reflectionKey];\n\n        if (reflectionSchema.type === 'hasOne') {\n          __addHasOne(target, reflectionKey, object, form);\n        } else if (reflectionSchema.type === 'hasMany') {\n          __addHasMany(target, reflectionKey, object, form);\n        }\n\n        result.push(__wrapResults(target, reflectionKey, object));\n      }\n\n      return result;\n    }\n\n    function __processRemove(object, key, target, form) {\n      var schema = object.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema;\n\n      if (schema.type === 'hasMany') {\n        __removeHasMany(object, key, target, form);\n      } else if (schema.type === 'hasOne') {\n        __removeHasOne(object, key, target, form);\n      }\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        __removeHasOne(target, reflectionKey, object, form);\n      } else if (reflectionSchema.type === 'hasMany') {\n        __removeHasMany(target, reflectionKey, object, form);\n      }\n\n      return [__wrapResults(target, reflectionKey, object)];\n    }\n\n    function __addHasOne(object, key, target, form) {\n      $log.debug('addHasOne', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      object.relationships[key] = target;\n      object.data.relationships[key].data = toLinkData(target);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, form) {\n      $log.debug('addHasMany', object, key, target);\n\n      var linkData = toLinkData(target);\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (angular.isArray(object.relationships[key]) && object.relationships[key].indexOf(target) > -1) {\n        return false;\n      }\n\n      object.relationships[key] = object.relationships[key] || [];\n      object.data.relationships[key].data = object.data.relationships[key].data || [];\n\n      object.relationships[key].push(target);\n      object.data.relationships[key].data.push(linkData);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, form) {\n      $log.debug('removeHasOne', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        return false;\n      }\n\n      object.relationships[key] = null;\n      object.data.relationships[key].data = undefined;\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, form) {\n      $log.debug('removeHasMany', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (object.relationships[key] === undefined) {\n        return;\n      }\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n        if (form === false) {\n          object.reset(true);\n        }\n\n        return true;\n      }\n\n      var index = object.relationships[key].indexOf(target);\n\n      if (index === -1) {\n        return false;\n      }\n\n      object.relationships[key].splice(index, 1);\n      object.data.relationships[key].data.splice(index, 1);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __wrapResults(object, key, target) {\n      return {\n        object: object,\n        key: key,\n        target: target\n      };\n    }\n\n    function __swapResults(value, newValue, array) {\n      var index = -1;\n      angular.forEach(array, function(item, i) {\n        if (item.object === value.object && item.key === value.key && item.target === value.target) {\n          index = i;\n        }\n      });\n\n      if (index > -1) {\n        array[index] = newValue;\n      } else {\n        array.push(newValue);\n      }\n\n      return array;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelLinkerService,\n    validateJS,\n    $q\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return {\n      create: AngularJsonAPIModelFormFactory\n    };\n\n    function AngularJsonAPIModelFormFactory(parent) {\n      return new AngularJsonAPIModelForm(parent);\n    }\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        id: parent.data.id,\n        type: parent.data.type,\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset(auto) {\n      var _this = this;\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = angular.copy(_this.parent.data.relationships[key]) || {};\n        if (angular.isArray(_this.relationships[key])) {\n          _this.relationships[key] = _this.parent.relationships[key].slice();\n        } else {\n          _this.relationships[key] = _this.parent.relationships[key];\n        }\n      });\n\n      if (auto === true && _this.parent.synchronized === true) {\n        return;\n      }\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        _this.data.attributes[key] = angular.copy(_this.parent.data.attributes[key]);\n      });\n\n      _this.parent.errors.validation.clear();\n    }\n\n    /**\n     * Validates form\n     * @return {promise} Promise rejected to errors object indexed by keys. If the\n     * key param i stated it only validates an attribute, else all attributes.\n     */\n    function validate(key) {\n      var _this = this;\n      var attributesWrapper;\n      var constraintsWrapper;\n      var deferred = $q.defer();\n\n      if (key === undefined) {\n        attributesWrapper = _this.data.attributes;\n        constraintsWrapper = _this.schema.attributes;\n      } else {\n        attributesWrapper = {};\n        constraintsWrapper = {};\n\n        attributesWrapper[key] = _this.data.attributes[key];\n        constraintsWrapper[key] = _this.schema.attributes[key];\n      }\n\n      validateJS.async(\n        attributesWrapper,\n        constraintsWrapper\n      ).then(resolve, reject);\n\n      function resolve() {\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        deferred.resolve();\n      }\n\n      function reject(errorsMap) {\n        _this.parent.error = true;\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        angular.forEach(errorsMap, function(errors, attribute) {\n          angular.forEach(errors, function(error) {\n            _this.parent.errors.validation.add(attribute, AngularJsonAPIModelValidationError.create(error, attribute));\n          });\n        });\n\n        deferred.reject(_this.parent.errors.validation);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target, oneWay) {\n      var _this = this;\n      oneWay = oneWay === undefined ? false : true;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.link(_this.parent, key, target, oneWay, true));\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target, oneWay) {\n      var _this = this;\n      oneWay = oneWay === undefined ? false : true;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.unlink(_this.parent, key, target, oneWay, true));\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelValidationError', AngularJsonAPIModelValidationErrorWrapper);\n\n  function AngularJsonAPIModelValidationErrorWrapper() {\n    ValidationError.prototype = Object.create(Error.prototype);\n    ValidationError.prototype.constructor = ValidationError;\n    ValidationError.prototype.name = 'ValidationError';\n\n    return {\n      create: ValidationErrorFactory\n    };\n\n    function ValidationErrorFactory(message, attribute) {\n      return new ValidationError(message, attribute);\n    }\n\n    function ValidationError(message, attribute) {\n      var _this = this;\n      Error.captureStackTrace(_this, _this.constructor);\n\n      _this.message = message;\n      _this.context = {\n        attribute: attribute\n      };\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelErrorsManager,\n    AngularJsonAPIModelLinkerService,\n    AngularJsonAPIModelForm,\n    uuid4,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    AngularJsonAPIAbstractModel.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {object} config   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, config, updatedAt) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      /**\n       * Is not a new record\n       * @type {Boolean}\n       */\n      _this.new = config.new === undefined ? false : config.new;\n\n      /**\n       * Is present on the server\n       * @type {Boolean}\n       */\n      _this.stable = config.stable === undefined ? true : config.stable;\n\n      /**\n       * Has been synchronized with the server\n       * @type {Boolean}\n       */\n      _this.synchronized = config.synchronized === undefined ? true : config.synchronized;\n\n      /**\n       * Has just been created by request and may not exist on the server\n       * @type {Boolean}\n       */\n      _this.pristine = config.pristine === undefined ? true : config.pristine;\n\n      _this.removed = false;\n      _this.loading = false;\n      _this.saving = false;\n      _this.updatedAt = _this.synchronized === true ? Date.now() : updatedAt;\n\n      _this.loadingCount = 0;\n      _this.savingCount = 0;\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(schema, key) {\n        _this.relationships[key] = undefined;\n      });\n\n      _this.errors = {\n        validation: AngularJsonAPIModelErrorsManager.create(\n          'Validation',\n          'Errors of attributes validation',\n          AngularJsonAPIModelValidationError\n        ),\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Source',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSourceError\n        )\n      };\n\n      _this.promise = $q.resolve(_this);\n\n      __setData(_this, data);\n\n      _this.form = AngularJsonAPIModelForm.create(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: _this.new === true ? 'add' : 'update',\n        object: _this\n      };\n\n      _this.form.validate().then(\n        synchronize,\n        deferred.reject\n      ).finally(__decrementSavingCounter.bind(_this, undefined));\n\n      __incrementSavingCounter(_this);\n\n      return deferred.promise;\n\n      function synchronize() {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:' + config.action, 'resolved', _this, response);\n        _this.update(response.data.data);\n\n        if (_this.new === true) {\n          _this.resource.cache.indexIds = _this.resource.cache.indexIds || [];\n          _this.resource.cache.indexIds.push(_this.data.id);\n        }\n\n        _this.synchronized = true;\n        _this.new = false;\n        _this.pristine = false;\n        _this.stable = true;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      if (_this.form !== undefined) {\n        _this.form.reset();\n      }\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh(params) {\n      var $jsonapi = $injector.get('$jsonapi');\n      var deferred = $q.defer();\n      var _this = this;\n      params = params === undefined ? _this.schema.params.get : params;\n\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: params\n      };\n\n      if (_this.new === true) {\n        var error = AngularJsonAPIModelSourceError.create('Can\\'t refresh new object', null, 0, 'refresh');\n        _this.errors.synchronization.add('refresh', error);\n        deferred.reject(error);\n      } else {\n        __incrementLoadingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        _this.synchronized = true;\n        _this.stable = true;\n        _this.pristine = false;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      var config = {\n        action: 'remove',\n        object: _this\n      };\n\n      _this.resource.cache.remove(_this.data.id);\n\n      if (_this.new === true) {\n        deferred.resolve();\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'resolved', _this, response);\n        _this.removed = true;\n        _this.unlinkAll();\n        _this.resource.cache.clearRemoved(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'rejected', _this, response);\n        _this.resource.cache.revertRemove(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlink all reflection relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      __incrementLoadingCounter(_this);\n\n      if (key === undefined) {\n        angular.forEach(_this.relationships, removeLink);\n      } else {\n        removeLink(_this.relationships[key], key);\n      }\n\n      __decrementLoadingCounter(_this);\n\n      return deferred.promise;\n\n      function removeLink(linksObj, key) {\n        var schema = _this.schema.relationships[key];\n        var reflectionKey = schema.reflection;\n\n        if (angular.isArray(linksObj)) {\n          angular.forEach(linksObj, removeReflectionLink.bind(undefined, reflectionKey));\n        } else if (angular.isObject(linksObj)) {\n          removeReflectionLink(reflectionKey, linksObj);\n        }\n\n        if (schema.type === 'hasOne') {\n          _this.relationships[key] = null;\n        } else if (schema.type === 'hasMany') {\n          _this.relationships[key] = [];\n        }\n      }\n\n      function removeReflectionLink(reflectionKey, target) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n        var config = {\n          action: 'unlinkReflection',\n          object: target,\n          target: _this,\n          key: reflectionKey\n        };\n\n        __incrementLoadingCounter(target);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        target.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(target, undefined));\n\n        function resolve(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'resolve', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.resolve(_this);\n        }\n\n        function reject(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'rejected', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.reject(_this);\n        }\n\n        function notify(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'link',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t link undefined', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t link new object', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'linkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].object.data.type + ':object:linkReflection', 'resolved', targets[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked if undefined unlinks all\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'unlink',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t unlink undefined', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t unlink new object', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'unlinkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:unlinkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData, auto, initialization) {\n      var _this = this;\n\n      __incrementLoadingCounter(_this);\n\n      __setData(_this, validatedData);\n      _this.reset(auto);\n      _this.synchronized = initialization === true ? false : true;\n      _this.stable = initialization === true ? false : true;\n      _this.updatedAt = Date.now();\n\n      __decrementLoadingCounter(_this);\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData) {\n\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.resource.schema.type !== validatedData.type) {\n        $log.error('Different type then resource', object.resource.schema.type, validatedData);\n        return false;\n      }\n\n      if (!uuid4.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      object.data.links = validatedData.links;\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        var relationshipData = validatedData.relationships[key];\n\n        if (relationshipData === undefined) {\n          object.data.relationships[key] = {data: undefined};\n          return;\n        }\n\n        object.data.relationships[key] = object.data.relationships[key] || {};\n        object.data.relationships[key].links = relationshipData.links;\n\n        if (schema.type === 'hasOne') {\n          linkOne(object, key, relationshipData.data);\n        } else if (schema.type === 'hasMany') {\n          if (angular.isArray(relationshipData.data)) {\n            if (relationshipData.data.length === 0) {\n              object.data.relationships[key].data = [];\n              object.unlinkAll(key);\n            } else {\n              angular.forEach(\n                object.relationships[key],\n                unlinkOne.bind(undefined, object, key, relationshipData.data)\n              );\n              angular.forEach(\n                relationshipData.data,\n                linkOne.bind(undefined, object, key)\n              );\n            }\n          }\n        }\n      }\n\n      function linkOne(object, key, data) {\n        var resource;\n\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        resource = $jsonapi.getResource(data.type);\n\n        if (resource === undefined) {\n          $log.error('Factory not found', data.type, data);\n          return;\n        }\n\n        var target = resource.cache.get(data.id);\n\n        AngularJsonAPIModelLinkerService.link(object, key, target);\n      }\n\n      function unlinkOne(object, key, relationshipData, target) {\n        if (relationshipData.indexOf(target.data.id) > -1) {\n          return;\n        }\n\n        AngularJsonAPIModelLinkerService.unlink(object, key, target);\n      }\n    }\n  }\n\n  /////////////\n  // Private //\n  /////////////\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n\n  function __incrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount += 1;\n    object.saving = true;\n  }\n\n  function __decrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount -= 1;\n    object.saving = object.savingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelSourceError', AngularJsonAPIModelSourceErrorWrapper);\n\n  function AngularJsonAPIModelSourceErrorWrapper() {\n    SourceError.prototype = Object.create(Error.prototype);\n    SourceError.prototype.constructor = SourceError;\n    SourceError.prototype.name = 'SourceError';\n\n    return {\n      create: SourceErrorFactory\n    };\n\n    function SourceErrorFactory(message, source, code, action) {\n      return new SourceError(message, source, code, action);\n    }\n\n    function SourceError(message, source, code, action) {\n      var _this = this;\n      Error.captureStackTrace(_this, _this.constructor);\n\n      _this.message = message;\n      _this.context = {\n        source: source,\n        code: code,\n        action: action\n      };\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelErrorsManager', AngularJsonAPIModelErrorsManagerWrapper);\n\n  function AngularJsonAPIModelErrorsManagerWrapper() {\n    ErrorsManager.prototype.constructor = ErrorsManager;\n    ErrorsManager.prototype.concat = concat;\n    ErrorsManager.prototype.clear = clear;\n    ErrorsManager.prototype.add = add;\n    ErrorsManager.prototype.hasErrors = hasErrors;\n\n    return {\n      create: ErrorsManagerFactory\n    };\n\n    function ErrorsManagerFactory(name, description, ErrorConstructor, defaultFilter) {\n      return new ErrorsManager(name, description, ErrorConstructor, defaultFilter);\n    }\n\n    function ErrorsManager(name, description, ErrorConstructor, defaultFilter) {\n      var _this = this;\n      _this.name = name;\n      _this.description = description;\n\n      _this.ErrorConstructor = ErrorConstructor;\n      _this.errors = {};\n      _this.defaultFilter = defaultFilter || function() { return true; };\n    }\n\n    function clear(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        angular.forEach(_this.errors, function(obj, key) {\n          _this.errors[key] = [];\n        });\n      } else {\n        _this.errors[key] = [];\n      }\n    }\n\n    function add(key, error) {\n      var _this = this;\n\n      _this.errors[key] = _this.errors[key] || [];\n      _this.errors[key].push(error);\n    }\n\n    function concat(errors) {\n      var _this = this;\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key] = [];\n      });\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key].push(error.object);\n      });\n\n    }\n\n    function hasErrors(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        var answer = false;\n\n        angular.forEach(_this.errors, function(error) {\n          answer = answer || error.length > 0;\n        });\n\n        return answer;\n      } else {\n        return _this.errors[key] !== undefined && _this.errors[key].length > 0;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('namedFunction', namedFunction);\n\n  function namedFunction(name, fn) {\n    return new Function('fn',\n      'return function ' + name + '(){ return fn.apply(this,arguments)}'\n    )(fn);\n  };\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises, resolvedCallback, rejectedCallback) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.resolve(promise)\n            .then(function(value) {\n              if (angular.isFunction(resolvedCallback)) {\n                resolvedCallback(value);\n              }\n\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              if (angular.isFunction(rejectedCallback)) {\n                rejectedCallback(reason);\n              }\n\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return {\n      create: AngularJsonAPISynchronizerSimpleFactory\n    };\n\n    function AngularJsonAPISynchronizerSimpleFactory(sources) {\n      return new AngularJsonAPISynchronizerSimple(sources);\n    }\n\n    function AngularJsonAPISynchronizerSimple(sources) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, sources);\n\n      angular.forEach(sources, function(source) {\n        source.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.sources, function(source) {\n          angular.forEach(source.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push({\n              key: action,\n              object: result.reason\n            });\n          }\n        });\n\n        if (errors.length > 0) {\n          deferred.reject({data: data, finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.sources, function(source) {\n          angular.forEach(source.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(sources) {\n      var _this = this;\n\n      _this.sources = sources;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.resource.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISourceRest', AngularJsonAPISourceRestWrapper);\n\n  function AngularJsonAPISourceRestWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPISourcePrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISourceRest.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceRest.prototype.constructor = AngularJsonAPISourceRest;\n\n    return {\n      create: AngularJsonAPISourceRestFactory\n    };\n\n    function AngularJsonAPISourceRestFactory(name, url) {\n      return new AngularJsonAPISourceRest(name, url);\n    }\n\n    function AngularJsonAPISourceRest(name, url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp.bind(null, 'all'));\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp.bind(null, 'get'));\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp.bind(null, 'remove'));\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Object has been removed', _this, 0, 'unlink'));\n        } else if (config.target !== undefined && config.target.data.id === undefined) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Can\\'t unlink object without id through rest call', _this, 0, 'unlink'));\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'get')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          if (config.target === undefined) {\n            $http({\n              method: 'PUT',\n              headers: headers,\n              data: {data: []},\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          } else {\n            $http({\n              method: 'DELETE',\n              headers: headers,\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key + '/' + config.target.data.id\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          }\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target === undefined || config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'PUT',\n            headers: headers,\n            data: {data: AngularJsonAPIModelLinkerService.toLinkData(config.target)},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          $http({\n            method: 'POST',\n            headers: headers,\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        return $http({\n          method: 'PUT',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'update'));\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url + '/',\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'add'));\n      }\n\n      function resolveHttp(response) {\n        return $q.resolve(response.data);\n      }\n\n      function rejectHttp(action, response) {\n        var deferred = $q.defer();\n\n        if (response.status === 0) {\n          $http({\n            method: 'GET',\n            url: 'https://status.cloud.google.com/incidents.schema.json'\n          }).then(rejectServerOffline, rejectNoConnection);\n        } else {\n          deferred.reject(AngularJsonAPIModelSourceError.create(response.statusText, _this, response.status, action));\n        }\n\n        return deferred.promise;\n\n        function rejectServerOffline(response) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Server is offline', _this, response.status, action));\n        }\n\n        function rejectNoConnection() {\n          deferred.reject(AngularJsonAPIModelSourceError.create('No internet connection', _this, response.status, action));\n        }\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISourcePrototype', AngularJsonAPISourcePrototypeWrapper);\n\n  function AngularJsonAPISourcePrototypeWrapper() {\n    AngularJsonAPISourcePrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISourcePrototype.prototype.after = afterSynchro;\n    AngularJsonAPISourcePrototype.prototype.begin = begin;\n    AngularJsonAPISourcePrototype.prototype.finish = finish;\n    AngularJsonAPISourcePrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISourcePrototype;\n\n    function AngularJsonAPISourcePrototype(name) {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clearCache',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh',\n        'include'\n      ];\n\n      _this.name = name;\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISourceLocal', AngularJsonAPISourceLocalWrapper);\n\n  function AngularJsonAPISourceLocalWrapper(\n    AngularJsonAPISourcePrototype,\n    $window,\n    $q\n  ) {\n\n    AngularJsonAPISourceLocal.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceLocal.prototype.constructor = AngularJsonAPISourceLocal;\n\n    return {\n      create: AngularJsonAPISourceLocalFactory\n    };\n\n    function AngularJsonAPISourceLocalFactory(name, prefix) {\n      return new AngularJsonAPISourceLocal(name, prefix);\n    }\n\n    function AngularJsonAPISourceLocal(name, prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('init', init);\n\n      _this.begin('clearCache', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('refresh', updateStorage);\n      _this.begin('unlink', updateStorage);\n      _this.begin('unlinkReflection', updateStorage);\n      _this.begin('link', updateStorage);\n      _this.begin('linkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.begin('get', updateStorage);\n      _this.begin('all', updateStorage);\n      _this.begin('include', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clearCache', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('refresh', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n      _this.finish('include', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.resource.schema.type;\n        return $q.resolve($window.localStorage.getItem(prefix + '.' + type));\n      }\n\n      function clear() {\n        var type = _this.synchronizer.resource.schema.type;\n        $window.localStorage.removeItem(prefix + '.' + type);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.resource.schema.type;\n        var cache = _this.synchronizer.resource.cache;\n        $window.localStorage.setItem(prefix + '.' + type, cache.toJson());\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper($log, pluralize, AngularJsonAPISchemaLink) {\n\n    return {\n      create: AngularJsonAPISchemaFactory\n    };\n\n    function AngularJsonAPISchemaFactory(schema) {\n      return new AngularJsonAPISchema(schema);\n    }\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = AngularJsonAPISchemaLink.create(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get.join(',');\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all.join(',');\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchemaLink', AngularJsonAPILinkSchrapperLink);\n\n  function AngularJsonAPILinkSchrapperLink($log, pluralize) {\n\n    return {\n      create: AngularJsonAPISchemaLinkFactory\n    };\n\n    function AngularJsonAPISchemaLinkFactory(linkSchema, linkName, type) {\n      return new AngularJsonAPISchemaLink(linkSchema, linkName, type);\n    }\n\n    function AngularJsonAPISchemaLink(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        if (linkSchema.type !== 'hasMany' && linkSchema.type !== 'hasOne') {\n          $log.error('Schema of link with wrong type: ', linkSchema.type, 'available: hasOne, hasMany');\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n\n        if (linkSchema.reflection === undefined) {\n          _this.reflection = _this.type === 'hasMany' ? pluralize.singular(type) : type;\n        } else {\n          _this.reflection = linkSchema.reflection;\n        }\n\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResource', AngularJsonAPIResourceWrapper);\n\n  function AngularJsonAPIResourceWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPIResourceCache,\n    AngularJsonAPICollection,\n    uuid4,\n    $rootScope,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIResource.prototype.get = get;\n    AngularJsonAPIResource.prototype.all = all;\n    AngularJsonAPIResource.prototype.remove = remove;\n    AngularJsonAPIResource.prototype.initialize = initialize;\n\n    AngularJsonAPIResource.prototype.clearCache = clearCache;\n\n    return {\n      create: AngularJsonAPIResourceFactory\n    };\n\n    function AngularJsonAPIResourceFactory(schema, synchronizer) {\n      return new AngularJsonAPIResource(schema, synchronizer);\n    }\n\n    /**\n     * AngularJsonAPIResource constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the resource\n     */\n    function AngularJsonAPIResource(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = AngularJsonAPISchema.create(schema);\n      _this.cache = AngularJsonAPIResourceCache.create(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.resource = _this;\n\n      _this.modelFactory = AngularJsonAPIModel.modelFactory(\n        _this.schema,\n        _this\n      );\n\n      _this.initialized = false;\n      _this.type = _this.schema.type;\n\n      synchronizer.resource = _this;\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'resolved', response);\n        _this.cache.fromJson(response.data);\n        _this.initialized = true;\n\n        response.finish();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'rejected', response);\n        response.finish();\n        _this.initialized = true;\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'notify', response);\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id, params) {\n      var _this = this;\n\n      if (!uuid4.validate(id)) {\n        return $q.reject({errors: [{status: 0, statusText: 'Invalid id not uuid4'}]});\n      }\n\n      var object = _this.cache.get(id);\n\n      object.promise = object.refresh(params);\n\n      return object;\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = params === undefined ? _this.schema.params.all : params;\n\n      var collection = AngularJsonAPICollection.create(\n        _this,\n        params\n      );\n\n      collection.promise = collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n\n      return object.remove();\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize() {\n      var _this = this;\n      var relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(relationshipSchema, relationshipName) {\n        if (relationshipSchema.type === 'hasOne') {\n          relationships[relationshipName] = {\n            data: null\n          };\n        } else if (relationshipSchema.type === 'hasMany') {\n          relationships[relationshipName] = {\n            data: []\n          };\n        }\n      });\n\n      var data = {\n        type: _this.type,\n        id: uuid4.generate(),\n        attributes: {},\n        relationships: relationships\n      };\n\n      var config = {\n        new: true,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: false\n      };\n\n      var object = _this.cache.addOrUpdate(data, config);\n\n      $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:initialize', 'resolved', object);\n\n      return object;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clearCache() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: 'clearCache'\n      };\n\n      _this.cache.clear();\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'notify', response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(\n    AngularJsonAPIAbstractModel,\n    AngularJsonAPISchema,\n    namedFunction,\n    pluralize,\n    $log\n  ) {\n\n    return {\n      modelFactory: createModelFactory\n    };\n\n    function createModelFactory(schemaObj, resource) {\n      var constructorName = pluralize.plural(schemaObj.type, 1);\n\n      var Model = namedFunction(constructorName, function(data, config, updatedAt) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, config, updatedAt);\n\n        _this.form.parent = _this;\n      });\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.resource = resource;\n      Model.prototype.synchronize = resource.synchronizer.synchronize.bind(resource.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return modelFactory;\n\n      function modelFactory(data, updatedAt, isNew) {\n        return new Model(data, updatedAt, isNew);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPIModelErrorsManager,\n    $rootScope,\n    $injector,\n    $q\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n    AngularJsonAPICollection.prototype.hasErrors = hasErrors;\n\n    return {\n      create: AngularJsonAPICollectionFactory\n    };\n\n    function AngularJsonAPICollectionFactory(resource, params) {\n      return new AngularJsonAPICollection(resource, params);\n    }\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIResource} resource Factory associated with the collection\n     * @param {object} params  Params associated with this resource (such as filters)\n     */\n    function AngularJsonAPICollection(resource, params) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.type = resource.schema.type;\n      _this.params = params;\n\n      _this.errors = {\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Source',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSourceError\n        )\n      };\n\n      _this.data = _this.resource.cache.index(_this.params);\n\n      _this.loading = false;\n      _this.loadingCount = 0;\n      _this.synchronized = false;\n      _this.pristine = _this.data === undefined;\n\n      _this.promise = $q.resolve(_this);\n\n      var onObjectRemove = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:remove', remove);\n      var onFactoryClear = $rootScope.$on('angularJsonAPI:' + _this.type + ':resource:clearCache', clear);\n      var onObjectAdd = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:add', add);\n\n      $rootScope.$on('$destroy', clearWatchers);\n\n      function remove(event, status, object) {\n        var index;\n\n        if (status === 'resolved' && _this.data !== undefined) {\n          index = _this.data.indexOf(object);\n          if (index > -1) {\n            _this.data.splice(index, 1);\n            _this.resource.cache.setIndexIds(_this.data);\n          }\n        }\n      }\n\n      function clear() {\n        _this.data = undefined;\n        _this.pristine = true;\n      }\n\n      function add(event, status, object) {\n        if (status === 'resolved') {\n          _this.data = _this.data || [];\n          _this.data.push(object);\n        }\n      }\n\n      function clearWatchers() {\n        onObjectRemove();\n        onFactoryClear();\n        onObjectAdd();\n      }\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /**\n     * Shortcut to this.resource.get\n     * @param  {uuid4} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id, params) {\n      var _this = this;\n\n      return _this.resource.get(id, params);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var deferred = $q.defer();\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params\n      };\n\n      __incrementLoadingCounter(_this);\n\n      angular.forEach(_this.data, __incrementLoadingCounter);\n\n      _this.resource.synchronizer.synchronize(config)\n        .then(resolve, reject, notify)\n        .finally(__decrementLoadingCounter.bind(_this, undefined));\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n\n        _this.data = results.data;\n        _this.links = response.data.links;\n\n        _this.updatedAt = Date.now();\n        _this.synchronized = true;\n\n        _this.resource.cache.setIndexIds(_this.data);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'rejected', _this, response);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider(validateJS) {\n    var memory = {};\n    var names = [];\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPIResource) {\n      return {\n        addResource: addResource,\n        getResource: getResource,\n        clearCache: clearCache,\n        allResources: allResources,\n        listResources: listResources,\n        addValidator: addValidator,\n\n        __proccesResults: __proccesResults\n      };\n\n      function addResource(schema, synchronizer) {\n        var resource = AngularJsonAPIResource.create(schema, synchronizer);\n\n        memory[schema.type] = resource;\n        names.push(schema.type);\n      }\n\n      function getResource(type) {\n        return memory[type];\n      }\n\n      function allResources() {\n        return memory;\n      }\n\n      function listResources() {\n        return names;\n      }\n\n      function clearCache() {\n        angular.forEach(memory, function(resource) {\n          resource.clearCache();\n        });\n      }\n\n      function addValidator(name, validator) {\n        if (!angular.isString(name)) {\n          $log.error('Validator name is not a string', name);\n          return;\n        } else if (validateJS.validators[name] === undefined) {\n          $log.warn('Redeclaring validator', name);\n        }\n\n        validateJS.validators[name] = validator;\n      }\n\n      function __proccesResults(results) {\n        var objects = {\n          data: [],\n          included: []\n        };\n\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n        }\n\n        var config = {\n          new: false,\n          synchronized: true,\n          stable: true,\n          pristine: false,\n          initialization: false\n        };\n\n        angular.forEach(results.included, function(data) {\n          objects.included.push(getResource(data.type).cache.addOrUpdate(data, config));\n        });\n\n        if (angular.isArray(results.data)) {\n          angular.forEach(results.data, function(data) {\n            objects.data.push(getResource(data.type).cache.addOrUpdate(data, config));\n          });\n        } else {\n          objects.data.push(getResource(results.data.type).cache.addOrUpdate(results.data, config));\n        }\n\n        return objects;\n      }\n    }\n  }\n\n})();\n\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(function($logProvider) {\n    $logProvider.debugEnabled(false);\n  })\n  .run(function(validateJS, $q) {\n    validateJS.Promise = $q;\n  });\n})();\n"],"sourceRoot":"/source/"}