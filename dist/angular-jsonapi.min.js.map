{"version":3,"sources":["/source/jsonapi.module.js","/source/model/model-schema/schema.js","angular-jsonapi.min.js","/source/model/model-prototype/abstract-data.js","/source/model/model-form-prototype/abstract-data-form.js","/source/utils/lazy-property.js","/source/utils/kebab-case.js","/source/utils/all-settled.js","/source/synchronizations/synchronization.js","/source/synchronizations/synchronization-rest.js","/source/synchronizations/synchronization-local.js","/source/model/model.factory.js","/source/factory/factory.factory.js","/source/collection/collection.factory.js","/source/jsonapi.provider.js"],"names":["angular","module","constant","pluralize","AngularJsonAPISchemaWrapper","$log","AngularJsonAPISchema","schema","_this","this","include","get","all","params","forEach","relationships","linkSchema","linkName","linkSchemaObj","AngularJsonAPILinkSchema","type","included","push","extend","length","join","isString","model","plural","polymorphic","reflection","undefined","error","factory","$inject","AngularJsonAPIAbstractDataWrapper","uuid4","lazyProperty","AngularJsonAPIAbstractDataForm","$timeout","AngularJsonAPIAbstractData","data","updatedAt","isNew","removed","loadingCount","attributes","errors","validation","promises","form","__setUpdated","__setData","refresh","parentCollection","__synchronize","hasErrors","result","toJson","toAddData","copy","value","key","Date","now","__remove","removeAllLinks","remove","id","toLinkData","toPatchData","res","val","addLinkById","linkKey","linkModelName","linkedObject","linkedCollections","__get","validate","addLink","linkType","reflectionKey","linkAttributes","warn","toString","removeLink","duplicate","link","__setLinkInternal","index","splice","__updateAttributes","validatedAttributes","__setAttributes","isArray","getAll","linkedCollection","getSingle","__setLink","indexedLinks","__setLinks","__validateField","__validate","__validateData","validator","attributeName","safeData","reset","attributeValue","element","concat","isFunction","err","parseInt","isObject","maxlength","minlength","maxvalue","minvalue","prototype","AngularJsonAPIAbstractDataFormWrapper","parent","save","equals","validateField","log","Model","target","propertyName","callback","done","Object","defineProperty","call","enumerable","configurable","str","replace","toLowerCase","config","$provide","decorator","$delegate","$q","allSettled","wrap","promise","when","then","success","reason","wrapped","hasOwnProperty","AngularJsonAPISynchronizationWrapper","AngularJsonAPISynchronization","allHooks","state","beginHooks","beforeHooks","synchronizationHooks","afterHooks","finishHooks","options","hookName","loading","synchronization","extendHooks","hooksKey","hooks","begin","action","finish","beforeSynchro","afterSynchro","synchronize","collection","object","deferred","defer","hook","results","resolve","reject","before","after","AngularJsonAPISynchronizationRestWrapper","$http","toKebabCase","AngularJsonAPISynchronizationRest","url","wrapResp","status","headers","afterAll","rawData","indexedData","addOrUpdate","allCollections","afterGet","method","rest","ids","update","add","Accept","Content-Type","create","constructor","AngularJsonAPISynchronizationLocalWrapper","$window","AngularJsonAPISynchronizationLocal","prefix","init","datas","localStorage","getItem","fromJson","clear","removeItem","updateStorage","setItem","__updateStorage","JsonAPIModelFactory","modelFactory","schemaObj","functions","metaFunction","metaFunctionName","apply","arguments","AngularJsonAPIFactoryWrapper","AngularJsonAPIFactory","__saveNew","bind","__addLinkNew","__reset","detach","__detach","json","objectData","validatedData","newModel","generate","detached","debug","AngularJsonAPICollectionWrapper","AngularJsonAPICollection","jsonapiProvider","jsonapiFactory","addModel","memory","getModel","clearAll","$get","provider"],"mappings":"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","file":"angular-jsonapi.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false */\n  .constant('pluralize', pluralize);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper($log, pluralize) {\n\n    return AngularJsonAPISchema;\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = new AngularJsonAPILinkSchema(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get.join(',');\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all.join(',');\n      }\n    }\n\n    function AngularJsonAPILinkSchema(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n        _this.reflection = linkSchema.reflection || type;\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","!function(){\"use strict\";angular.module(\"angular-jsonapi\",[\"uuid4\"]).constant(\"pluralize\",pluralize)}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"lazyProperty\",function(t,e,r){var n,a;Object.defineProperty(t,e,{get:function(){return a||(a=!0,n=r.call(t)),n},enumerable:!0,configurable:!0})})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"toKebabCase\",function(t){return t.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase()})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$provide\",function(t){t.decorator(\"$q\",[\"$delegate\",function(t){var e=t;return e.allSettled=e.allSettled||function(t){function r(t){return e.when(t).then(function(t){return{success:!0,value:t}},function(t){return{success:!1,reason:t}})}var n=angular.isArray(t)?[]:{};return angular.forEach(t,function(t,e){n.hasOwnProperty(e)||(n[e]=r(t))}),e.all(n)},e}])}])}(),function(){\"use strict\";function t(t){function e(){var t=this,e=[\"add\",\"init\",\"get\",\"all\",\"clear\",\"remove\",\"removeLink\",\"removeLinkReflection\",\"addLink\",\"addLinkReflection\",\"update\",\"refresh\"];t.state={},t.beginHooks={},t.beforeHooks={},t.synchronizationHooks={},t.afterHooks={},t.finishHooks={},t.options={},angular.forEach(e,function(e){t.beginHooks[e]=[],t.beforeHooks[e]=[],t.synchronizationHooks[e]=[],t.afterHooks[e]=[],t.finishHooks[e]=[],t.state[e]={loading:!1,success:!0}})}function r(t){function e(e){angular.forEach(t[e],function(t,n){r[e][n]=r[e][n].concat(t)})}var r=this;e(\"beginHooks\"),e(\"beforeHooks\"),e(\"synchronizationHooks\"),e(\"afterHooks\"),e(\"finishHooks\"),angular.extend(r.options,t.options)}function n(t,e){var r=this;r.beginHooks[t].push(e)}function a(t,e){var r=this;r.finishHooks[t].push(e)}function o(t,e){var r=this;r.beforeHooks[t].push(e)}function i(t,e){var r=this;r.afterHooks[t].push(e)}function s(t,e){var r=this;r.synchronizationHooks[t].push(e)}function d(e,r,n,a,o,i){var s=this,d=[],l=t.defer();return s.state[e].loading=!0,void 0!==n&&(n.loadingCount+=1),void 0!==r&&(r.loadingCount+=1),angular.forEach(s.beginHooks[e],function(t){t.call(s,r,n,a,o,i)}),angular.forEach(s.beforeHooks[e],function(t){t.call(s,r,n,a,o,i)}),angular.forEach(s.synchronizationHooks[e],function(t){d.push(t.call(s,r,n,a,o,i))}),t.allSettled(d).then(function(t){s.state[e].success=!0,angular.forEach(t,function(t){t.success===!1&&(s.state[e].success=!1)}),angular.forEach(s.afterHooks[e],function(e){e.call(s,r,n,a,o,i,t)}),angular.forEach(s.finishHooks[e],function(t){t.call(s,r,n,a,o,i)}),s.state[e].loading=!1,void 0!==n&&(n.loadingCount-=1),void 0!==r&&(r.loadingCount-=1),s.state[e].success===!0?l.resolve(t):l.reject(t)},function(t){l.reject(t)}),l.promise}return e.prototype.before=o,e.prototype.after=i,e.prototype.begin=n,e.prototype.finish=a,e.prototype.synchronization=s,e.prototype.synchronize=d,e.prototype.extend=r,e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronization\",t),t.$inject=[\"$q\"]}(),function(){\"use strict\";function t(t,e,r,n){function a(a){function o(t,e,r,n){return{data:t,status:e,headers:r,config:n}}function i(t,e,r,n,a,o){var i,s,d;o[0].success===!0&&(i=o[0].value.data.data,s=o[0].value.data.included,d={},angular.forEach(i,function(e){d[e.id]=e,t.addOrUpdate(e)}),angular.forEach(t.data,function(e){void 0===d[e.data.id]&&t.__remove(e.data.id)}),angular.forEach(s,function(e){t.allCollections[e.type].addOrUpdate(e)}))}function s(t,e,r,n,a,o){var i,s;o[0].success===!0&&(i=o[0].value.data.data,s=o[0].value.data.included,t.addOrUpdate(i),angular.forEach(s,function(e){t.allCollections[e.type].addOrUpdate(e)}))}function d(t,n,i,s,d){var l=e.defer(),u={method:\"GET\",headers:g,url:a,params:d||{}};return t.errors.rest=t.errors.rest||{},r(u).success(function(e,r,n,a){t.errors.rest.all=void 0,l.resolve(o(e,r,n,a))}).error(function(e,r,n,a){t.errors.rest.all=e,l.reject(o(e,r,n,a))}),l.promise}function l(t,n,i,s,d){var l,u,c=e.defer();return angular.isArray(n)?(u=[],angular.forEach(n,function(t){u.push(t.data.id)})):u=n.data.id,l={method:\"GET\",headers:g,url:a+\"/\"+u.toString(),params:d||{}},n.errors.rest=n.errors.rest||{},r(l).success(function(t,e,r,a){n.errors.rest.get=void 0,c.resolve(o(t,e,r,a))}).error(function(t,e,r,a){n.errors.rest.get=t,c.reject(o(t,e,r,a))}),c.promise}function u(t,n){var i=e.defer(),s={method:\"DELETE\",headers:g,url:a+\"/\"+n.data.id};return n.errors.rest=n.errors.rest||{},r(s).success(function(t,e,r,a){n.errors.rest.remove=void 0,i.resolve(o(t,e,r,a))}).error(function(t,e,r,a){n.errors.rest.remove=t,i.reject(o(t,e,r,a))}),i.promise}function c(t,i,s,d){var l,u=e.defer();return i.errors.rest=i.errors.rest||{},i.removed===!0||void 0===d?u.resolve():(l={method:\"DELETE\",headers:g,url:a+\"/\"+i.data.id+\"/relationships/\"+n(s)+\"/\"+d.data.id},r(l).success(function(t,e,r,n){i.errors.rest.removeLink=void 0,u.resolve(o(t,e,r,n))}).error(function(t,e,r,n){i.errors.rest.removeLink=t,u.reject(o(t,e,r,n))})),u.promise}function p(t,i,s,d){var l=e.defer(),u={method:\"POST\",headers:g,url:a+\"/\"+i.data.id+\"/relationships/\"+n(s),data:{data:[d.toLinkData()]}};return i.errors.rest=i.errors.rest||{},r(u).success(function(t,e,r,n){i.errors.rest.addLink=void 0,l.resolve(o(t,e,r,n))}).error(function(t,e,r,n){i.errors.rest.addLink=t,l.reject(o(t,e,r,n))}),l.promise}function h(t,n){var i=e.defer(),s={method:\"PUT\",headers:g,url:a+\"/\"+n.data.id,data:n.toPatchData()};return n.errors.rest=n.errors.rest||{},r(s).success(function(t,e,r,a){n.errors.rest.update=void 0,i.resolve(o(t,e,r,a))}).error(function(t,e,r,a){n.errors.rest.update=t,i.reject(o(t,e,r,a))}),i.promise}function f(t,n){var i=e.defer(),s={method:\"POST\",headers:g,url:a+\"/\",data:n.toAddData()};return n.errors.rest=n.errors.rest||{},r(s).success(function(t,e,r,a){n.errors.rest.add=void 0,i.resolve(o(t,e,r,a))}).error(function(t,e,r,a){n.errors.rest.add=t,i.reject(o(t,e,r,a))}),i.promise}var v=this,g={Accept:\"application/vnd.api+json\",\"Content-Type\":\"application/vnd.api+json\"};t.call(v),v.synchronization(\"remove\",u),v.synchronization(\"removeLink\",c),v.synchronization(\"addLink\",p),v.synchronization(\"update\",h),v.synchronization(\"add\",f),v.synchronization(\"all\",d),v.synchronization(\"get\",l),v.synchronization(\"refresh\",l),v.after(\"all\",i),v.after(\"get\",s),v.after(\"refresh\",s)}return a.prototype=Object.create(t.prototype),a.prototype.constructor=a,a}angular.module(\"angular-jsonapi-rest\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationRest\",t),t.$inject=[\"AngularJsonAPISynchronization\",\"$q\",\"$http\",\"toKebabCase\"]}(),function(){\"use strict\";function t(t,e){function r(r){function n(t){var n=e.localStorage.getItem(r+\".\"+t.Model.prototype.schema.type);t.fromJson(n)}function a(t){e.localStorage.removeItem(r+\".\"+t.Model.prototype.schema.type)}function o(t){e.localStorage.setItem(r+\".\"+t.Model.prototype.schema.type,t.toJson())}var i=this;i.__updateStorage=o,t.call(i),i.begin(\"init\",n),i.begin(\"clear\",a),i.begin(\"remove\",o),i.begin(\"removeLink\",o),i.begin(\"removeLinkReflection\",o),i.begin(\"addLink\",o),i.begin(\"addLinkReflection\",o),i.begin(\"update\",o),i.begin(\"add\",o),i.finish(\"get\",o),i.finish(\"all\",o),i.finish(\"init\",o),i.finish(\"clear\",o),i.finish(\"remove\",o),i.finish(\"removeLink\",o),i.finish(\"removeLinkReflection\",o),i.finish(\"addLink\",o),i.finish(\"addLinkReflection\",o),i.finish(\"update\",o),i.finish(\"add\",o),i.finish(\"get\",o),i.finish(\"all\",o)}return r.prototype=Object.create(t.prototype),r.prototype.constructor=r,r}angular.module(\"angular-jsonapi-local\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationLocal\",t),t.$inject=[\"AngularJsonAPISynchronization\",\"$window\"]}(),function(){\"use strict\";function t(t,e,r,n){function a(t,e){var a=this,o=new n(t);a.Model=r.model(o,a.allCollections,a),a.synchronization=e,a.loadingCount=0,a.data={},a.removed={},a.promises={},a.schema=o,a.length=0,a[\"new\"]=new a.Model({type:t.type,attributes:{},relationships:{}},void 0,!0),a[\"new\"].form.save=v.bind(a[\"new\"]),a[\"new\"].form.addLink=g.bind(a[\"new\"]),a[\"new\"].reset=y.bind(a[\"new\"]),a[\"new\"].detach=m.bind(a[\"new\"]),a.allCollections[t.type]=a,a.__synchronize(\"init\"),a.errors={}}function o(){var t=this,e=!1;return angular.forEach(t.errors,function(t){void 0!==t&&(e=!0)}),e}function i(t){var e=this,r=angular.fromJson(t);null!==r&&void 0!==r.data&&(e.updatedAt=r.updatedAt,angular.forEach(r.data,function(t){var r=t.data;e.addOrUpdate(r,t.updatedAt)}))}function s(){var t=this,e={data:{},updatedAt:t.updatedAt};return angular.forEach(t.data,function(t,r){e.data[r]=t.toJson()}),angular.toJson(e)}function d(e,r){var n=this;return void 0===e.id?void t.error(\"Can't add data without id!\",e):(void 0===n.data[e.id]?(n.data[e.id]=new this.Model(e,r),n.length+=1):(n.data[e.id].__setData(e,r),n.data[e.id].__setLinks(e.relationships)),n.data[e.id].__setUpdated(r),n.data[e.id])}function l(t){var e=this;return void 0===e.data[t]&&(e.data[t]=new e.Model({id:t,type:e.Model.prototype.schema.type},void 0)),e.data[t]}function u(t){var e,r=this,n=r.schema.params.get;return angular.isArray(t)?(e=[],angular.forEach(t,function(t){e.push(r.__get(t))})):e=r.__get(t),r.__synchronize(\"get\",e,void 0,void 0,n),e}function c(){var t=this;return t.__synchronize(\"all\",void 0,void 0,void 0,t.schema.params.all),t}function p(){var t=this;t.updatedAt=Date.now(),t.data={},t.length=0,t.__synchronize(\"clear\")}function h(t){var e=this,r=e.data[t];e.removed[t]=r,e.updatedAt=Date.now(),delete e.data[t],e.length-=1}function f(e){var r=this,n=r.data[e];void 0!==n?(r.__remove(e),n.__remove(e)):t.error(\"Object with this id does not exist\"),r.__synchronize(\"remove\",n)}function v(){var r,n=this,a=n.form.validate();if(angular.equals(a,{})){var o=angular.copy(n.form.data);if(void 0===o.id)o.id=e.generate();else if(!e.validate(o.id))return void t.error(\"Wrong id of new data!\");o.type=n.schema.type,r=n.parentCollection.addOrUpdate(o),n.reset(),n.parentCollection.__synchronize(\"add\",r)}return r}function g(e,r){var n=this;return void 0===n.schema.relationships[e]?void t.error(\"Link'\",e,\"'not present in schema of\",n.data.type,n):void(\"hasOne\"===n.schema.relationships[e].type?n.form.data.relationships[e]={data:{type:r.data.type,id:r.data.id}}:(n.form.data.relationships[e].data=n.form.data.relationships[e].data||[],n.form.data.relationships[e].data.push({type:r.data.type,id:r.data.id})))}function y(){var t=this;t.form.reset(),t.relationships={}}function m(){var t=this,e=angular.copy(t);return t.reset(),e.form.save=v.bind(e),e.form.addLink=g.bind(e),e.reset=y.bind(e),e.detach=m.bind(e),e}function _(e,r,n,a,o){var i,s=this;t.debug(\"Synchro Collection\",this.Model.prototype.schema.type,{action:e,object:r,linkKey:n,linkedObject:a,params:o}),i=s.synchronization.synchronize(e,s,r,n,a,o),void 0!==r?r.promises[e]=i:s.promises[e]=i}return a.prototype.allCollections={},a.prototype.__synchronize=_,a.prototype.__get=l,a.prototype.__remove=h,a.prototype.get=u,a.prototype.all=c,a.prototype.refresh=c,a.prototype.remove=f,a.prototype.clear=p,a.prototype.fromJson=i,a.prototype.toJson=s,a.prototype.addOrUpdate=d,a.prototype.hasErrors=o,a}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICollection\",t),t.$inject=[\"$log\",\"uuid4\",\"JsonAPIModelFactory\",\"AngularJsonAPISchema\"]}(),function(){\"use strict\";function t(t,e){function r(t){var e=this,r=t.include||{};t.include=r,r.get=t.include.get||[],r.all=t.include.all||[],e.params={get:{},all:{}},angular.forEach(t.relationships,function(e,a){var o=new n(e,a,t.type);t.relationships[a]=o,o.included===!0&&(r.get.push(a),\"hasOne\"===o.type&&r.all.push(a))}),angular.extend(e,t),r.get.length>0&&(e.params.get.include=r.get.join(\",\")),r.all.length>0&&(e.params.all.include=r.all.join(\",\"))}function n(r,n,a){var o=this;angular.isString(r)?(o.model=e.plural(n),o.type=r,o.polymorphic=!1,o.reflection=a):(void 0===r.type&&t.error(\"Schema of link without a type: \",r,n),o.model=r.model||e.plural(n),o.type=r.type,o.polymorphic=r.polymorphic||!1,o.reflection=r.reflection||a,o.included=r.included||!1)}return r}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchema\",t),t.$inject=[\"$log\",\"pluralize\"]}(),function(){\"use strict\";function t(t,e,r){function n(e,n,a){var o=function(e,n,a){var o=this;e.type!==o.schema.type&&r.error(\"Data type other then declared in schema: \",e.type,\" instead of \",o.schema.type),t.call(o,e,n,a),o.form.parent=o};return o.prototype=Object.create(t.prototype),o.prototype.constructor=o,o.prototype.schema=e,o.prototype.linkedCollections=n,o.prototype.parentCollection=a,angular.forEach(e.functions,function(t,e){o.prototype[e]=function(){return t.apply(this,arguments)}}),o}return{model:n}}angular.module(\"angular-jsonapi\").factory(\"JsonAPIModelFactory\",t),t.$inject=[\"AngularJsonAPIAbstractData\",\"AngularJsonAPISchema\",\"$log\"]}(),function(){\"use strict\";function t(t,e,r,n,a){function o(t,e,r){var a=this;t.relationships=t.relationships||{},a.removed=!1,a.loadingCount=0,a.data={relationships:{},attributes:{}},a.relationships={},a.errors={validation:{}},a.promises={},a.isNew=r||!1,a.form=new n(a),a.__setUpdated(e),a.__setData(t,e)}function i(){var t=this;t.parentCollection.__synchronize(\"refresh\",t,void 0,void 0,t.schema.params.get)}function s(){var t=this,e=!1;return angular.forEach(t.errors,function(t){void 0!==t&&(e=!0)}),e}function d(){var t=this;return{data:t.data,updatedAt:t.updatedAt}}function l(){var t=this,e=angular.copy(t.data),r={};return angular.forEach(e.relationships,function(t,e){void 0!==t.data&&(r[e]=t)}),e.relationships=r,{data:e,updatedAt:t.updatedAt}}function u(t){var e=this;e.updatedAt=t||Date.now(),e.parentCollection.updatedAt=e.updatedAt}function c(){var t=this;t.__setUpdated(),t.removed=!0,t.removeAllLinks()}function p(){var t=this;t.__remove(),t.parentCollection.remove(t.data.id)}function h(){return{type:this.data.type,id:this.data.id}}function f(){var t=this,e={data:{}};return angular.forEach(t.data,function(t,r){\"relationships\"!==r&&(e.data[r]=t)}),e}function v(r,n,a){var o=this,i=o.linkedCollections[n].__get(a);return void 0===o.schema.relationships[r]?void t.error(\"Cannot add link not specified in schema: \"+r):void 0===o.linkedCollections[n]?void t.error(\"Cannot add link of not existing type: \"+n):e.validate(a)?void 0===i?void t.error(\"Cant find\",n,\"with\",a):void o.addLink(r,i):void t.error(\"Wrong link id, not uuid4: \"+a)}function g(e,r,n){var a,o,i,s=this,d=s.schema.relationships[e];if(void 0===r)return void t.error(\"Can't add non existing object\");if(void 0===d)return void(n===!1&&t.error(\"Can't add link not present in schema: \",e,s,n));if(d.polymorphic===!1&&d.model!==r.data.type)return void t.error(\"This relation is not polymorphic, expected: \"+d.model+\" instead of \"+r.data.type);if(a=d.type,o=d.reflection,\"hasOne\"===a){if(i=s.data.relationships[e].data,void 0!==i&&null!==i&&i.id===r.data.id)return;void 0!==i&&null!==i&&(t.warn(\"Swaping hasOne\",e,\"of\",s.toString()),s.removeLink(e)),i=r.toLinkData()}else{i=s.data.relationships[e].data||[];var l=!1;if(angular.forEach(i,function(t){t.id===r.data.id&&(l=!0)}),l===!0)return;i.push(r.toLinkData())}n===!0?s.parentCollection.__synchronize(\"addLinkReflection\",s,e,r):(r.addLink(o,s,!0),s.parentCollection.__synchronize(\"addLink\",s,e,r)),s.__setUpdated(),s.__setLinkInternal(i,e,d)}function y(){var t=this;angular.forEach(t.relationships,function(e,r){t.removeLink(r)})}function m(e,r,n){var a,o,i,s=this,d=s.schema.relationships[e],l=!1;return void 0===s.schema.relationships[e]?void(n===!1&&t.error(\"Can't remove link not present in schema: \"+e,s)):(a=d.type,i=d.reflection,o=s.data.relationships[e].data,\"hasOne\"===a?(void 0===r||r.data.id===o.id)&&(s.data.relationships[e].data=null,o=null,l=!0,n!==!0&&void 0!==s.relationships[e]&&s.relationships[e].removeLink(i,s,!0)):void 0===r?(s.data.relationships[e].data=[],o=[],l=!0,n!==!0&&angular.forEach(s.relationships[e],function(t){t.removeLink(i,s,!0)})):angular.forEach(o,function(t,e){t.id===r.data.id&&(n!==!0&&r.removeLink(i,s,!0),o.splice(e,1),l=!0)}),void(l===!0&&(s.__setUpdated(),n!==!0?s.parentCollection.__synchronize(\"removeLink\",s,e,r):s.parentCollection.__synchronize(\"removeLinkReflection\",s,e,r),s.__setLinkInternal(o,e,d))))}function _(t){var e=this;e.__setUpdated(),e.__setAttributes(t),e.parentCollection.__synchronize(\"update\",e)}function k(e,n,o){var i=this,s=o.type,d=o.reflection;if(null===e)delete i.relationships[n],i.relationships[n]=void 0;else if(\"hasMany\"===s&&angular.isArray(e)){var l=function(){var r=[];return angular.forEach(e,function(n){var a=i.linkedCollections[n.type];if(void 0===a)return void t.error(\"No angular-jsonapi schema for\",e.type);var o=a.__get(n.id);o.addLink(d,i,!0),r.push(o)}),r};a(l),r(i.relationships,n,l)}else if(\"hasOne\"===s&&null!==e){var u=function(){var r=i.linkedCollections[e.type];if(void 0===r)return void t.error(\"No angular-jsonapi schema for\",e.type);var n=r.__get(e.id);return n.addLink(d,i,!0),n};a(u),r(i.relationships,n,u)}}function b(t,e,r){var n=this,a=r.type,o=r.reflection;if(\"hasMany\"===a&&angular.isArray(t)){var i={};angular.forEach(t,function(t){i[t.id]=t}),angular.forEach(n.relationships[e],function(t){void 0===i[t.data.id]&&t.removeLink(o,n,!0)})}else\"hasOne\"===a&&null!==t&&void 0!==n.relationships[e]&&n.relationships[e].data.id!==t.id&&n.relationships[e].removeLink(o,n,!0);n.__setLinkInternal(t,e,r)}function A(t){var e=this;void 0!==t&&(angular.forEach(e.schema.relationships,function(r,n){e.data.relationships[n]=e.data.relationships[n]||{},void 0!==t[n]&&angular.extend(e.data.relationships[n],t[n])}),angular.forEach(e.schema.relationships,function(r,n){void 0!==t[n]&&void 0!==t[n].data&&e.__setLink(t[n].data,n,r)}))}function L(t,e){var r=this,n=[];return void 0!==t&&(n=C(r.schema.attributes[e],t,e)),n}function j(e){var r=this,n={};return angular.forEach(r.schema.attributes,function(a,o){var i=r.__validateField(e[o],o);i.length>0&&(n[o]=i,t.warn(\"Erorrs when validating \",e[o],n))}),n}function E(t){var e=this;angular.forEach(e.schema.attributes,function(r,n){void 0!==t[n]&&(e.data.attributes[n]=t[n])})}function z(t){var e=this,r=angular.copy(t);e.errors.validation=e.__validateData(r),r.relationships=r.relationships||{},r.attributes=r.attributes||{},e.data.id=r.id,e.data.type=r.type,e.__setAttributes(r.attributes),e.__setLinks(r.relationships),e.form.reset()}function C(r,n,a){var o=[];if(angular.isArray(r))angular.forEach(r,function(t){o=o.concat(C(t,n,a))});else if(angular.isFunction(r)){var i=r(n);angular.isArray(i)?o.concat(i):t.error(\"Wrong validator type it should return array of errors instead of: \"+i.toString())}else angular.isString(r)?\"text\"===r||\"string\"===r?angular.isString(n)||o.push(a+\" is not a string \"):\"number\"===r||\"integer\"===r?parseInt(n).toString()!==n.toString()&&o.push(a+\" is not a number\"):\"uuid4\"===r?e.validate(n)||o.push(a+\" is not a uuid4\"):\"required\"===r?0===n.toString().length&&o.push(a+\" is empty\"):t.error(\"Wrong validator type: \"+r.toString()):angular.isObject(r)?(void 0!==r.maxlength&&n.length>r.maxlength&&o.push(a+\" is too long max \"+r.maxlength),void 0!==r.minlength&&n.length<r.minlength&&o.push(a+\" is too short min \"+r.minlength),void 0!==r.maxvalue&&parseInt(n)>r.maxvalue&&o.push(a+\" is too big max \"+r.maxvalue),void 0!==r.minvalue&&parseInt(n)<r.minvalue&&o.push(a+\" is too small min \"+r.minvalue)):t.error(\"Wrong validator type: \"+r.toString());return o}return o.prototype.__setData=z,o.prototype.__setLinks=A,o.prototype.__setLink=b,o.prototype.__setAttributes=E,o.prototype.__validateData=j,o.prototype.__validateField=L,o.prototype.__updateAttributes=_,o.prototype.__remove=c,o.prototype.__setUpdated=u,o.prototype.__setLinkInternal=k,o.prototype.refresh=i,o.prototype.remove=p,o.prototype.addLinkById=v,o.prototype.addLink=g,o.prototype.removeLink=m,o.prototype.removeAllLinks=y,o.prototype.hasErrors=s,o.prototype.toLinkData=h,o.prototype.toPatchData=f,o.prototype.toAddData=l,o.prototype.toJson=d,o}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractData\",t),t.$inject=[\"$log\",\"uuid4\",\"lazyProperty\",\"AngularJsonAPIAbstractDataForm\",\"$timeout\"]}(),function(){\"use strict\";function t(t){function e(t){var e=this;e.data={attributes:{},relationships:{}},e.parent=t,e.reset()}function r(){var e=this,r=e.validate();return angular.equals(r,{})===!1?void t.error(\"Errors in form: \",r):void e.parent.__updateAttributes(e.data.attributes)}function n(){var t=this;angular.forEach(t.parent.schema.attributes,function(e,r){t.data.attributes[r]=t.parent.data.attributes[r]||\"\"}),angular.forEach(t.parent.schema.relationships,function(e,r){t.data.relationships[r]=t.parent.data.relationships[r]||{}}),t.errors={validation:{}}}function a(){var t,e=this;return t=e.parent.__validateData(e.data),e.errors.validation=t,t}function o(t){var e,r=this;return e=r.parent.__validateField(r.data[t],t),r.errors.validation[t]=e,e}function i(e){t.log(\"Synchro Collection \"+this.Model.prototype.schema.type,e)}return e.prototype.save=r,e.prototype.reset=n,e.prototype.validate=a,e.prototype.validateField=o,e.prototype.__synchronize=i,e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractDataForm\",t),t.$inject=[\"$log\"]}(),function(){\"use strict\";function t(){function t(t,r){function n(t,n){var a=new r(t,n);e[t.type]=a}function a(t){return e[t]}function o(r){return void 0===e[r]&&t.error(\"Can\t add not existing object type: \"+r+\". Use initialize(Model, datas).\"),e[r].isNew.form}function i(r,n){return void 0===e[r]&&t.error(\"Can\t get not existing object type: \"+r+\". Use initialize(Model, datas).\"),e[r].get(n)}function s(r,n){return void 0===e[r]&&t.error(\"Can\t remove not existing object type: \"+r+\". Use initialize(Model, datas).\"),e[r].remove(n)}function d(r){return void 0===e[r]&&t.error(\"Can\t get all of not existing object type: \"+r+\". Use initialize(Model, datas).\"),e[r].all()}function l(){angular.forEach(e,function(t){t.clear()})}return{form:o,get:i,remove:s,all:d,addModel:n,getModel:a,clearAll:l}}var e={};this.$get=t,t.$inject=[\"$log\",\"AngularJsonAPICollection\"]}angular.module(\"angular-jsonapi\").provider(\"$jsonapi\",t)}();\n//# sourceMappingURL=angular-jsonapi.min.js.map","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractData', AngularJsonAPIAbstractDataWrapper);\n\n  function AngularJsonAPIAbstractDataWrapper(\n    $log,\n    uuid4,\n    lazyProperty,\n    AngularJsonAPIAbstractDataForm,\n    $timeout\n  ) {\n\n    AngularJsonAPIAbstractData.prototype.__setData = __setData;\n    AngularJsonAPIAbstractData.prototype.__setLinks   = __setLinks;\n    AngularJsonAPIAbstractData.prototype.__setLink = __setLink;\n    AngularJsonAPIAbstractData.prototype.__setAttributes = __setAttributes;\n    AngularJsonAPIAbstractData.prototype.__validateData = __validateData;\n    AngularJsonAPIAbstractData.prototype.__validateField = __validateField;\n    AngularJsonAPIAbstractData.prototype.__updateAttributes = __updateAttributes;\n    AngularJsonAPIAbstractData.prototype.__remove = __remove;\n    AngularJsonAPIAbstractData.prototype.__setUpdated = __setUpdated;\n    AngularJsonAPIAbstractData.prototype.__setLinkInternal = __setLinkInternal;\n\n    AngularJsonAPIAbstractData.prototype.refresh = refresh;\n    AngularJsonAPIAbstractData.prototype.remove = remove;\n    AngularJsonAPIAbstractData.prototype.addLinkById = addLinkById;\n    AngularJsonAPIAbstractData.prototype.addLink = addLink;\n    AngularJsonAPIAbstractData.prototype.removeLink = removeLink;\n\n    AngularJsonAPIAbstractData.prototype.removeAllLinks = removeAllLinks;\n    AngularJsonAPIAbstractData.prototype.hasErrors = hasErrors;\n\n    AngularJsonAPIAbstractData.prototype.toLinkData = toLinkData;\n    AngularJsonAPIAbstractData.prototype.toPatchData = toPatchData;\n    AngularJsonAPIAbstractData.prototype.toAddData = toAddData;\n\n    AngularJsonAPIAbstractData.prototype.toJson = toJson;\n\n    return AngularJsonAPIAbstractData;\n\n    function AngularJsonAPIAbstractData(data, updatedAt, isNew) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      _this.removed = false;\n      _this.loadingCount = 0;\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      _this.errors = {\n        validation: {}\n      };\n\n      _this.promises = {};\n\n      _this.isNew = isNew || false;\n\n      _this.form = new AngularJsonAPIAbstractDataForm(_this);\n\n      _this.__setUpdated(updatedAt);\n      _this.__setData(data, updatedAt);\n    }\n\n    function refresh() {\n      var _this = this;\n\n      _this.parentCollection.__synchronize('refresh', _this, undefined, undefined, _this.schema.params.get);\n    }\n\n    function hasErrors() {\n      var _this = this;\n      var result = false;\n\n      angular.forEach(_this.errors, function(error) {\n        if (error !== undefined) {\n          result = true;\n        }\n      });\n\n      return result;\n    }\n\n    function toJson() {\n      var _this = this;\n\n      return {\n        data: _this.data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    function toAddData() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    function __setUpdated(updatedAt) {\n      var _this = this;\n\n      _this.updatedAt = updatedAt || Date.now();\n      _this.parentCollection.updatedAt = _this.updatedAt;\n    }\n\n    function __remove() {\n      var _this = this;\n\n      _this.__setUpdated();\n      _this.removed = true;\n      _this.removeAllLinks();\n    }\n\n    function remove() {\n      var _this = this;\n\n      _this.__remove();\n      _this.parentCollection.remove(_this.data.id);\n    }\n\n    function toLinkData() {\n      return {type: this.data.type, id: this.data.id};\n    }\n\n    function toPatchData() {\n      var _this = this;\n      var res = {data: {}};\n      angular.forEach(_this.data, function(val, key) {\n        if (key !== 'relationships') {\n          res.data[key] = val;\n        }\n      });\n\n      return res;\n    }\n\n    function addLinkById(linkKey, linkModelName, id) {\n      var _this = this;\n      var linkedObject = _this.linkedCollections[linkModelName].__get(id);\n\n      if (_this.schema.relationships[linkKey] === undefined) {\n        $log.error('Cannot add link not specified in schema: ' + linkKey);\n        return;\n      }\n\n      if (_this.linkedCollections[linkModelName] === undefined) {\n        $log.error('Cannot add link of not existing type: ' + linkModelName);\n        return;\n      }\n\n      if (!uuid4.validate(id)) {\n        $log.error('Wrong link id, not uuid4: ' + id);\n        return;\n      }\n\n      if (linkedObject === undefined) {\n        $log.error('Cant find', linkModelName, 'with', id);\n        return;\n      }\n\n      _this.addLink(\n        linkKey,\n        linkedObject\n      );\n\n    }\n\n    function addLink(linkKey, linkedObject, reflection) {\n      var _this = this;\n      var linkSchema = _this.schema.relationships[linkKey];\n      var linkType;\n      var reflectionKey;\n      var linkAttributes;\n\n      if (linkedObject === undefined) {\n        $log.error('Can\\'t add non existing object');\n        return;\n      }\n\n      if (linkSchema === undefined) {\n        if (reflection === false) {\n          $log.error('Can\\'t add link not present in schema: ', linkKey, _this, reflection);\n        }\n\n        return;\n      }\n\n      if (linkSchema.polymorphic === false && linkSchema.model !== linkedObject.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + linkSchema.model + ' instead of ' + linkedObject.data.type);\n        return;\n      }\n\n      linkType = linkSchema.type;\n      reflectionKey = linkSchema.reflection;\n\n      if (linkType === 'hasOne') {\n        linkAttributes = _this.data.relationships[linkKey].data;\n\n        if (\n          linkAttributes !== undefined &&\n          linkAttributes !== null &&\n          linkAttributes.id === linkedObject.data.id\n        ) {\n          return;\n        }\n\n        if (linkAttributes !== undefined && linkAttributes !== null) {\n          $log.warn('Swaping hasOne', linkKey, 'of', _this.toString());\n          _this.removeLink(linkKey);\n        }\n\n        linkAttributes = linkedObject.toLinkData();\n      } else {\n        linkAttributes = _this.data.relationships[linkKey].data || [];\n        var duplicate = false;\n        angular.forEach(linkAttributes, function(link) {\n          if (link.id === linkedObject.data.id) {\n            duplicate = true;\n          }\n        });\n\n        if (duplicate === true) {\n          return;\n        }\n\n        linkAttributes.push(linkedObject.toLinkData());\n      }\n\n      if (reflection === true) {\n        _this.parentCollection.__synchronize('addLinkReflection', _this, linkKey, linkedObject);\n      } else {\n        linkedObject.addLink(reflectionKey, _this, true);\n        _this.parentCollection.__synchronize('addLink', _this, linkKey, linkedObject);\n      }\n\n      _this.__setUpdated();\n      _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n    }\n\n    function removeAllLinks() {\n      var _this = this;\n\n      angular.forEach(_this.relationships, function(link, key) {\n        _this.removeLink(key);\n      });\n    }\n\n    function removeLink(linkKey, linkedObject, reflection) {\n      var _this = this;\n      var linkSchema = _this.schema.relationships[linkKey];\n      var linkType;\n      var linkAttributes;\n      var reflectionKey;\n      var removed = false;\n\n      if (_this.schema.relationships[linkKey] === undefined) {\n        if (reflection === false) {\n          $log.error('Can\\'t remove link not present in schema: ' + linkKey, _this);\n        }\n\n        return;\n      }\n\n      linkType = linkSchema.type;\n      reflectionKey = linkSchema.reflection;\n      linkAttributes = _this.data.relationships[linkKey].data;\n\n      if (linkType === 'hasOne') {\n        if (linkedObject === undefined || linkedObject.data.id === linkAttributes.id) {\n          _this.data.relationships[linkKey].data = null;\n          linkAttributes = null;\n          removed = true;\n          if (reflection !== true && _this.relationships[linkKey] !== undefined) {\n            _this.relationships[linkKey].removeLink(reflectionKey, _this, true);\n          }\n        }\n      } else {\n        if (linkedObject === undefined) {\n          _this.data.relationships[linkKey].data = [];\n          linkAttributes = [];\n          removed = true;\n          if (reflection !== true) {\n            angular.forEach(_this.relationships[linkKey], function(link) {\n              link.removeLink(reflectionKey, _this, true);\n            });\n          }\n        } else {\n          angular.forEach(linkAttributes, function(link, index) {\n            if (link.id === linkedObject.data.id) {\n              if (reflection !== true) {\n                linkedObject.removeLink(reflectionKey, _this, true);\n              }\n\n              linkAttributes.splice(index, 1);\n              removed = true;\n            }\n          });\n        }\n      }\n\n      if (removed === true) {\n        _this.__setUpdated();\n\n        if (reflection !== true) {\n          _this.parentCollection.__synchronize('removeLink', _this, linkKey, linkedObject);\n        } else {\n          _this.parentCollection.__synchronize('removeLinkReflection',  _this, linkKey, linkedObject);\n        }\n\n        _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n      }\n    }\n\n    function __updateAttributes(validatedAttributes) {\n      var _this = this;\n\n      _this.__setUpdated();\n      _this.__setAttributes(validatedAttributes);\n\n      return _this.parentCollection.__synchronize('update', _this);\n    }\n\n    function __setLinkInternal(linkAttributes, linkKey, linkSchema) {\n      var _this = this;\n      var linkType = linkSchema.type;\n      var reflectionKey = linkSchema.reflection;\n\n      if (linkAttributes === null) {\n        delete _this.relationships[linkKey];\n        _this.relationships[linkKey] = undefined;\n      } else if (linkType === 'hasMany' && angular.isArray(linkAttributes)) {\n        var getAll = function() {\n          var result = [];\n          angular.forEach(linkAttributes, function(link) {\n            var linkedCollection = _this.linkedCollections[link.type];\n            if (linkedCollection === undefined) {\n              $log.error('No angular-jsonapi schema for', linkAttributes.type);\n              return;\n            }\n\n            var linkedObject = linkedCollection.__get(link.id);\n            linkedObject.addLink(reflectionKey, _this, true);\n\n            result.push(linkedObject);\n          });\n\n          return result;\n        };\n\n        $timeout(getAll);\n        lazyProperty(_this.relationships, linkKey, getAll);\n      } else if (linkType === 'hasOne' && linkAttributes !== null) {\n\n        var getSingle = function() {\n          var linkedCollection = _this.linkedCollections[linkAttributes.type];\n          if (linkedCollection === undefined) {\n            $log.error('No angular-jsonapi schema for', linkAttributes.type);\n            return;\n          }\n\n          var linkedObject = linkedCollection.__get(linkAttributes.id);\n          linkedObject.addLink(reflectionKey, _this, true);\n\n          return linkedObject;\n        };\n\n        $timeout(getSingle);\n        lazyProperty(_this.relationships, linkKey, getSingle);\n      }\n    }\n\n    function __setLink(linkAttributes, linkKey, linkSchema) {\n      var _this = this;\n      var linkType = linkSchema.type;\n      var reflectionKey = linkSchema.reflection;\n\n      if (linkType === 'hasMany' && angular.isArray(linkAttributes)) {\n        var indexedLinks = {};\n        angular.forEach(linkAttributes, function(link) {\n          indexedLinks[link.id] = link;\n        });\n\n        angular.forEach(_this.relationships[linkKey], function(link) {\n          if (indexedLinks[link.data.id] === undefined) {\n            link.removeLink(reflectionKey, _this, true);\n          }\n        });\n      } else if (linkType === 'hasOne' && linkAttributes !== null) {\n        if (_this.relationships[linkKey] !== undefined && _this.relationships[linkKey].data.id !== linkAttributes.id) {\n          _this.relationships[linkKey].removeLink(reflectionKey, _this, true);\n        }\n      }\n\n      _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n    }\n\n    function __setLinks(relationships) {\n      var _this = this;\n      if (relationships === undefined) {\n        return;\n      }\n\n      angular.forEach(_this.schema.relationships, function(linkSchema, linkName) {\n        _this.data.relationships[linkName] = _this.data.relationships[linkName] || {};\n        if (relationships[linkName] !== undefined) {\n          angular.extend(_this.data.relationships[linkName], relationships[linkName]);\n        }\n      });\n\n      angular.forEach(_this.schema.relationships, function(linkSchema, linkKey) {\n        if (relationships[linkKey] !== undefined && relationships[linkKey].data !== undefined) {\n          _this.__setLink(relationships[linkKey].data, linkKey, linkSchema);\n        }\n      });\n    }\n\n    function __validateField(data, key) {\n      var _this = this;\n      var error = [];\n\n      if (data !== undefined) {\n        error = __validate(_this.schema.attributes[key], data, key);\n      }\n\n      return error;\n    }\n\n    function __validateData(data) {\n      var _this = this;\n      var errors = {};\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        var error = _this.__validateField(data[key], key);\n        if (error.length > 0) {\n          errors[key] = error;\n          $log.warn('Erorrs when validating ', data[key], errors);\n        }\n      });\n\n      return errors;\n    }\n\n    function __setAttributes(attributes) {\n      var _this = this;\n\n      angular.forEach(_this.schema.attributes, function(validator, attributeName) {\n        if (attributes[attributeName] !== undefined) {\n          _this.data.attributes[attributeName] = attributes[attributeName];\n        }\n      });\n    }\n\n    function __setData(data) {\n      var _this = this;\n      var safeData = angular.copy(data);\n\n      _this.errors.validation = _this.__validateData(safeData);\n\n      safeData.relationships = safeData.relationships || {};\n      safeData.attributes = safeData.attributes || {};\n\n      _this.data.id = safeData.id;\n      _this.data.type = safeData.type;\n\n      _this.__setAttributes(safeData.attributes);\n      _this.__setLinks(safeData.relationships);\n\n      _this.form.reset();\n    }\n\n    function __validate(validator, attributeValue, attributeName) {\n      var errors = [];\n      if (angular.isArray(validator)) {\n        angular.forEach(validator, function(element) {\n          errors = errors.concat(__validate(element, attributeValue, attributeName));\n        });\n      } else if (angular.isFunction(validator)) {\n        var err = validator(attributeValue);\n        if (angular.isArray(err)) {\n          errors.concat(err);\n        } else {\n          $log.error(\n            'Wrong validator type it should return array of errors instead of: ' +\n              err.toString()\n          );\n        }\n      } else if (angular.isString(validator)) {\n        if (validator === 'text' || validator === 'string') {\n          if (!angular.isString(attributeValue)) {\n            errors.push(attributeName + ' is not a string ');\n          }\n        } else if (validator === 'number' || validator === 'integer') {\n          if (parseInt(attributeValue).toString() !== attributeValue.toString()) {\n            errors.push(attributeName + ' is not a number');\n          }\n        } else if (validator === 'uuid4') {\n          if (!uuid4.validate(attributeValue)) {\n            errors.push(attributeName + ' is not a uuid4');\n          }\n        } else if (validator === 'required') {\n          if (attributeValue.toString().length === 0) {\n            errors.push(attributeName + ' is empty');\n          }\n        } else {\n          $log.error('Wrong validator type: ' + validator.toString());\n        }\n      } else if (angular.isObject(validator)) {\n        if (validator.maxlength !== undefined && attributeValue.length > validator.maxlength) {\n          errors.push(attributeName + ' is too long max ' + validator.maxlength);\n        }\n\n        if (validator.minlength !== undefined && attributeValue.length < validator.minlength) {\n          errors.push(attributeName + ' is too short min ' + validator.minlength);\n        }\n\n        if (validator.maxvalue !== undefined && parseInt(attributeValue) > validator.maxvalue) {\n          errors.push(attributeName + ' is too big max ' + validator.maxvalue);\n        }\n\n        if (validator.minvalue !== undefined && parseInt(attributeValue) < validator.minvalue) {\n          errors.push(attributeName + ' is too small min ' + validator.minvalue);\n        }\n      } else {\n        $log.error('Wrong validator type: ' + validator.toString());\n      }\n\n      return errors;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractDataForm', AngularJsonAPIAbstractDataFormWrapper);\n\n  function AngularJsonAPIAbstractDataFormWrapper($log) {\n\n    AngularJsonAPIAbstractDataForm.prototype.save = save;\n    AngularJsonAPIAbstractDataForm.prototype.reset = reset;\n    AngularJsonAPIAbstractDataForm.prototype.validate = validate;\n    AngularJsonAPIAbstractDataForm.prototype.validateField = validateField;\n\n    AngularJsonAPIAbstractDataForm.prototype.__synchronize = __synchronize;\n\n    return AngularJsonAPIAbstractDataForm;\n\n    function AngularJsonAPIAbstractDataForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        attributes: {},\n        relationships: {}\n      };\n      _this.parent = parent;\n      _this.reset();\n    }\n\n    function save() {\n      var _this = this;\n      var errors = _this.validate();\n\n      if (angular.equals(errors, {}) === false) {\n        $log.error('Errors in form: ', errors);\n        return;\n      }\n\n      _this.parent.__updateAttributes(_this.data.attributes);\n    }\n\n    function reset() {\n      var _this = this;\n\n      angular.forEach(_this.parent.schema.attributes, function(data, key) {\n        _this.data.attributes[key] = _this.parent.data.attributes[key] || '';\n      });\n\n      angular.forEach(_this.parent.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = _this.parent.data.relationships[key] || {};\n      });\n\n      _this.errors = {\n        validation: {}\n      };\n    }\n\n    function validate() {\n      var _this = this;\n      var errors;\n\n      errors = _this.parent.__validateData(_this.data);\n\n      _this.errors.validation = errors;\n\n      return errors;\n    }\n\n    function validateField(key) {\n      var _this = this;\n      var errors;\n      errors = _this.parent.__validateField(\n        _this.data[key],\n        key\n      );\n\n      _this.errors.validation[key] = errors;\n\n      return errors;\n    }\n\n    function __synchronize(key) {\n      $log.log('Synchro Collection ' + this.Model.prototype.schema.type, key);\n    }\n\n  }\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.when(promise)\n            .then(function(value) {\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronization', AngularJsonAPISynchronizationWrapper);\n\n  function AngularJsonAPISynchronizationWrapper($q) {\n    AngularJsonAPISynchronization.prototype.before = beforeSynchro;\n    AngularJsonAPISynchronization.prototype.after = afterSynchro;\n    AngularJsonAPISynchronization.prototype.begin = begin;\n    AngularJsonAPISynchronization.prototype.finish = finish;\n    AngularJsonAPISynchronization.prototype.synchronization = synchronization;\n    AngularJsonAPISynchronization.prototype.synchronize = synchronize;\n    AngularJsonAPISynchronization.prototype.extend = extend;\n\n    return AngularJsonAPISynchronization;\n\n    function AngularJsonAPISynchronization() {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clear',\n        'remove',\n        'removeLink',\n        'removeLinkReflection',\n        'addLink',\n        'addLinkReflection',\n        'update',\n        'refresh'\n      ];\n\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function extend(synchronization) {\n      var _this = this;\n\n      extendHooks('beginHooks');\n      extendHooks('beforeHooks');\n      extendHooks('synchronizationHooks');\n      extendHooks('afterHooks');\n      extendHooks('finishHooks');\n\n      function extendHooks(hooksKey) {\n        angular.forEach(synchronization[hooksKey], function(hooks, key) {\n          _this[hooksKey][key] = _this[hooksKey][key].concat(hooks);\n        });\n      }\n\n      angular.extend(_this.options, synchronization.options);\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n    function synchronize(action, collection, object, linkSchema, linkedObject, params) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n\n      _this.state[action].loading = true;\n\n      if (object !== undefined) {\n        object.loadingCount += 1;\n      }\n\n      if (collection !== undefined) {\n        collection.loadingCount += 1;\n      }\n\n      angular.forEach(_this.beginHooks[action], function(hook) {\n        hook.call(_this, collection, object, linkSchema, linkedObject, params);\n      });\n\n      angular.forEach(_this.beforeHooks[action], function(hook) {\n        hook.call(_this, collection, object, linkSchema, linkedObject, params);\n      });\n\n      angular.forEach(_this.synchronizationHooks[action], function(hook) {\n        promises.push(hook.call(_this, collection, object, linkSchema, linkedObject, params));\n      });\n\n      $q.allSettled(promises).then(function(results) {\n        _this.state[action].success = true;\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.afterHooks[action], function(hook) {\n          hook.call(_this, collection, object, linkSchema, linkedObject, params, results);\n        });\n\n        angular.forEach(_this.finishHooks[action], function(hook) {\n          hook.call(_this, collection, object, linkSchema, linkedObject, params);\n        });\n\n        _this.state[action].loading = false;\n\n        if (object !== undefined) {\n          object.loadingCount -= 1;\n        }\n\n        if (collection !== undefined) {\n          collection.loadingCount -= 1;\n        }\n\n        if (_this.state[action].success === true) {\n          deferred.resolve(results);\n        } else {\n          deferred.reject(results);\n        }\n\n      },\n\n      function(results) {\n        deferred.reject(results);\n      });\n\n      return deferred.promise;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationRest', AngularJsonAPISynchronizationRestWrapper);\n\n  function AngularJsonAPISynchronizationRestWrapper(AngularJsonAPISynchronization, $q, $http, toKebabCase) {\n\n    AngularJsonAPISynchronizationRest.prototype = Object.create(AngularJsonAPISynchronization.prototype);\n    AngularJsonAPISynchronizationRest.prototype.constructor = AngularJsonAPISynchronizationRest;\n\n    return AngularJsonAPISynchronizationRest;\n\n    function AngularJsonAPISynchronizationRest(url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISynchronization.call(_this);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('removeLink', removeLink);\n      _this.synchronization('addLink', addLink);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n      _this.after('all', afterAll);\n      _this.after('get', afterGet);\n      _this.after('refresh', afterGet);\n\n      function wrapResp(data, status, headers, config) {\n        return {\n          data: data,\n          status: status,\n          headers: headers,\n          config: config\n        };\n      }\n\n      function afterAll(collection, object, linkSchema, linkedObject, params, results) {\n        var rawData;\n        var included;\n        var indexedData;\n\n        if (results[0].success === true) {\n          rawData = results[0].value.data.data;\n          included = results[0].value.data.included;\n          indexedData = {};\n          angular.forEach(rawData, function(data) {\n            indexedData[data.id] = data;\n            collection.addOrUpdate(data);\n          });\n\n          angular.forEach(collection.data, function(object) {\n            if (indexedData[object.data.id] === undefined) {\n              collection.__remove(object.data.id);\n            }\n          });\n\n          angular.forEach(included, function(object) {\n            collection.allCollections[object.type].addOrUpdate(object);\n          });\n        }\n      }\n\n      function afterGet(collection, object, linkSchema, linkedObject, params, results) {\n        var data;\n        var included;\n\n        if (results[0].success === true) {\n          data = results[0].value.data.data;\n          included = results[0].value.data.included;\n          collection.addOrUpdate(data);\n\n          angular.forEach(included, function(object) {\n            collection.allCollections[object.type].addOrUpdate(object);\n          });\n        }\n      }\n\n      function all(collection, object, linkSchema, linkedObject, params) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: params || {}\n        };\n\n        collection.errors.rest = collection.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            collection.errors.rest.all = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            collection.errors.rest.all = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function get(collection, object, linkSchema, linkedObject, params) {\n        var deferred = $q.defer();\n        var config;\n        var ids;\n\n        if (angular.isArray(object)) {\n          ids = [];\n          angular.forEach(object, function(object) {\n            ids.push(object.data.id);\n          });\n        } else {\n          ids = object.data.id;\n        }\n\n        config = {\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + ids.toString(),\n          params: params || {}\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.get = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.get = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function remove(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + object.data.id\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.remove = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.remove = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function removeLink(collection, object, linkKey, linkedObject) {\n        var deferred = $q.defer();\n        var config;\n\n        object.errors.rest = object.errors.rest || {};\n\n        if (object.removed === true || linkedObject === undefined) {\n          deferred.resolve();\n        } else {\n          config = {\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + object.data.id + '/relationships/' + toKebabCase(linkKey) + '/' + linkedObject.data.id\n          };\n\n          $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.removeLink = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.removeLink = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n        }\n\n        return deferred.promise;\n      }\n\n      function addLink(collection, object, linkKey, linkedObject) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'POST',\n          headers: headers,\n          url: url + '/' + object.data.id + '/relationships/' + toKebabCase(linkKey),\n          data: {data: [linkedObject.toLinkData()]}\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.addLink = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.addLink = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n\n      }\n\n      function update(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'PUT',\n          headers: headers,\n          url: url + '/' + object.data.id,\n          data: object.toPatchData()\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.update = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.update = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function add(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'POST',\n          headers: headers,\n          url: url + '/',\n          data: object.toAddData()\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.add = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.add = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationLocal', AngularJsonAPISynchronizationLocalWrapper);\n\n  function AngularJsonAPISynchronizationLocalWrapper(AngularJsonAPISynchronization, $window) {\n\n    AngularJsonAPISynchronizationLocal.prototype = Object.create(AngularJsonAPISynchronization.prototype);\n    AngularJsonAPISynchronizationLocal.prototype.constructor = AngularJsonAPISynchronizationLocal;\n\n    return AngularJsonAPISynchronizationLocal;\n\n    function AngularJsonAPISynchronizationLocal(prefix) {\n      var _this = this;\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISynchronization.call(_this);\n\n      _this.begin('init', init);\n      _this.begin('clear', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('removeLink', updateStorage);\n      _this.begin('removeLinkReflection', updateStorage);\n      _this.begin('addLink', updateStorage);\n      _this.begin('addLinkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clear', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('removeLink', updateStorage);\n      _this.finish('removeLinkReflection', updateStorage);\n      _this.finish('addLink', updateStorage);\n      _this.finish('addLinkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      function init(collection) {\n        var datas = $window.localStorage.getItem(prefix + '.' + collection.Model.prototype.schema.type);\n        collection.fromJson(datas);\n      }\n\n      function clear(collection) {\n        $window.localStorage.removeItem(prefix + '.' + collection.Model.prototype.schema.type);\n      }\n\n      function updateStorage(collection) {\n        $window.localStorage.setItem(prefix + '.' + collection.Model.prototype.schema.type, collection.toJson());\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('JsonAPIModelFactory', JsonAPIModelFactory);\n\n  function JsonAPIModelFactory(AngularJsonAPIAbstractData, AngularJsonAPISchema, $log) {\n\n    return {\n      model: modelFactory\n    };\n\n    function modelFactory(schemaObj, linkedCollections, parentCollection) {\n      var Model = function(data, updatedAt, isNew) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractData.call(_this, data, updatedAt, isNew);\n\n        _this.form.parent = _this;\n      };\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractData.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.linkedCollections = linkedCollections;\n      Model.prototype.parentCollection = parentCollection;\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return Model;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIFactory', AngularJsonAPIFactoryWrapper);\n\n  function AngularJsonAPIFactoryWrapper(\n    $log,\n    uuid4,\n    JsonAPIModelFactory,\n    AngularJsonAPISchema\n  ) {\n    AngularJsonAPIFactory.prototype.allCollections = {};\n\n    AngularJsonAPIFactory.prototype.__synchronize = __synchronize;\n    AngularJsonAPIFactory.prototype.__get = __get;\n    AngularJsonAPIFactory.prototype.__remove = __remove;\n\n    AngularJsonAPIFactory.prototype.get = get;\n    AngularJsonAPIFactory.prototype.all = all;\n    AngularJsonAPIFactory.prototype.remove = remove;\n    AngularJsonAPIFactory.prototype.clear = clear;\n    AngularJsonAPIFactory.prototype.create = create;\n\n    AngularJsonAPIFactory.prototype.fromJson = fromJson;\n    AngularJsonAPIFactory.prototype.toJson = toJson;\n\n    AngularJsonAPIFactory.prototype.addOrUpdate = addOrUpdate;\n    AngularJsonAPIFactory.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPIFactory;\n\n    function AngularJsonAPIFactory(schema, synchronization) {\n      var _this = this;\n\n      var schemaObj = new AngularJsonAPISchema(schema);\n\n      _this.Model = JsonAPIModelFactory.model(\n        schemaObj,\n        _this.allCollections,\n        _this\n      );\n\n      _this.synchronization = synchronization;\n\n      _this.loadingCount = 0;\n      _this.data = {};\n      _this.removed = {};\n      _this.promises = {};\n      _this.schema = schemaObj;\n      _this.length = 0;\n\n      _this.new = new _this.Model({\n        type: schema.type,\n        attributes: {},\n        relationships: {}\n      }, undefined, true);\n\n      _this.new.form.save = __saveNew.bind(_this.new);\n      _this.new.form.addLink = __addLinkNew.bind(_this.new);\n\n      _this.new.reset = __reset.bind(_this.new);\n      _this.new.detach = __detach.bind(_this.new);\n\n      _this.allCollections[schema.type] = _this;\n\n      _this.__synchronize('init');\n\n      _this.errors = {};\n    }\n\n    function hasErrors() {\n      var _this = this;\n      var result = false;\n\n      angular.forEach(_this.errors, function(error) {\n        if (error !== undefined) {\n          result = true;\n        }\n      });\n\n      return result;\n    }\n\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      if (collection !== null && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, objectData.updatedAt);\n        });\n      }\n    }\n\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: {},\n        updatedAt: _this.updatedAt\n      };\n\n      angular.forEach(_this.data, function(object, key) {\n        json.data[key] = object.toJson();\n      });\n\n      return angular.toJson(json);\n    }\n\n    function addOrUpdate(validatedData, updatedAt) {\n      var _this = this;\n      if (validatedData.id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[validatedData.id] === undefined) {\n        _this.data[validatedData.id] = new this.Model(validatedData, updatedAt);\n        _this.length += 1;\n      } else {\n        _this.data[validatedData.id].__setData(validatedData, updatedAt);\n        _this.data[validatedData.id].__setLinks(validatedData.relationships);\n      }\n\n      _this.data[validatedData.id].__setUpdated(updatedAt);\n\n      return _this.data[validatedData.id];\n    }\n\n    function __get(id) {\n      var _this = this;\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.Model({id: id, type: _this.Model.prototype.schema.type}, undefined);\n      }\n\n      return _this.data[id];\n    }\n\n    function get(id) {\n      var _this = this;\n      var result;\n      var params = _this.schema.params.get;\n\n      if (angular.isArray(id)) {\n        result = [];\n        angular.forEach(id, function(id) {\n          result.push(_this.__get(id));\n        });\n      } else {\n        result = _this.__get(id);\n      }\n\n      _this.__synchronize('get', result, undefined, undefined, params);\n\n      return result;\n    }\n\n    function all() {\n      var _this = this;\n      _this.__synchronize('all', undefined, undefined, undefined, _this.schema.params.all);\n\n      return _this;\n    }\n\n    function clear() {\n      var _this = this;\n      _this.updatedAt = Date.now();\n      _this.data = {};\n      _this.length = 0;\n\n      return _this.__synchronize('clear');\n    }\n\n    function __remove(id) {\n      var _this = this;\n      var object = _this.data[id];\n\n      _this.removed[id] = object;\n      _this.updatedAt = Date.now();\n\n      delete _this.data[id];\n\n      _this.length -= 1;\n    }\n\n    function remove(id) {\n      var _this = this;\n      var object = _this.data[id];\n\n      if (object !== undefined) {\n        _this.__remove(id);\n        object.__remove(id);\n      } else {\n        $log.error('Object with this id does not exist');\n      }\n\n      return _this.__synchronize('remove', object);\n    }\n\n    function __saveNew() {\n      var _this = this;\n      var errors = _this.form.validate();\n      var newModel;\n\n      if (angular.equals(errors, {})) {\n        var data = angular.copy(_this.form.data);\n        if (data.id === undefined) {\n          data.id = uuid4.generate();\n        } else if (!uuid4.validate(data.id)) {\n          $log.error('Wrong id of new data!');\n          return;\n        }\n\n        data.type = _this.schema.type;\n        newModel = _this.parentCollection.addOrUpdate(data);\n        _this.reset();\n        _this.parentCollection.__synchronize('add', newModel);\n      }\n\n      return newModel;\n    }\n\n    function __addLinkNew(linkKey, linkedObject) {\n      var _this = this;\n      if (_this.schema.relationships[linkKey] === undefined) {\n        $log.error('Link\\'', linkKey, '\\'not present in schema of', _this.data.type, _this);\n        return;\n      }\n\n      if (_this.schema.relationships[linkKey].type === 'hasOne') {\n        _this.form.data.relationships[linkKey] = {\n          data: {\n            type: linkedObject.data.type,\n            id: linkedObject.data.id\n          }\n        };\n      } else {\n        _this.form.data.relationships[linkKey].data = _this.form.data.relationships[linkKey].data || [];\n        _this.form.data.relationships[linkKey].data.push({\n          type: linkedObject.data.type,\n          id: linkedObject.data.id\n        });\n      }\n    }\n\n    function __reset() {\n      var _this = this;\n\n      _this.form.reset();\n      _this.relationships = {};\n    }\n\n    function __detach() {\n      var _this = this;\n      var detached = angular.copy(_this);\n\n      _this.reset();\n\n      detached.form.save = __saveNew.bind(detached);\n      detached.form.addLink = __addLinkNew.bind(detached);\n      detached.reset = __reset.bind(detached);\n      detached.detach = __detach.bind(detached);\n\n      return detached;\n    }\n\n    function __synchronize(action, object, linkKey, linkedObject, params) {\n      var _this = this;\n      var promise;\n\n      $log.debug('Synchro Collection', this.Model.prototype.schema.type, {action: action, object: object, linkKey: linkKey, linkedObject: linkedObject, params: params});\n\n      promise = _this.synchronization.synchronize(action, _this, object, linkKey, linkedObject, params);\n      if (object !== undefined) {\n        object.promises[action] = promise;\n      } else {\n        _this.promises[action] = promise;\n      }\n\n      return promise;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n\n  ) {\n\n    return AngularJsonAPICollection;\n\n    function AngularJsonAPICollection() {\n\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider() {\n    var memory = {};\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPIFactory) {\n      return {\n        form: form,\n        get: get,\n        remove: remove,\n        all: all,\n        addModel: addModel,\n        getModel: getModel,\n        clearAll: clearAll\n      };\n\n      function addModel(schema, synchronization) {\n        var collection = new AngularJsonAPIFactory(schema, synchronization);\n\n        memory[schema.type] = collection;\n      }\n\n      function getModel(type) {\n        return memory[type];\n      }\n\n      function form(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t add not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].isNew.form;\n      }\n\n      function get(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].get(id);\n      }\n\n      function remove(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t remove not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].remove(id);\n      }\n\n      function all(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get all of not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].all();\n      }\n\n      function clearAll() {\n        angular.forEach(memory, function(collection) {\n          collection.clear();\n        });\n      }\n    }\n  }\n\n})();\n\n"],"sourceRoot":"/source/"}