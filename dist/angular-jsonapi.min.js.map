{"version":3,"sources":["/source/jsonapi.module.js","/source/model/model-validator/model-validator.js","/source/model/model-linker/model-linker.js","angular-jsonapi.min.js","/source/model/model-form/model-form.js","/source/model/abstract-model/abstract-model.js","/source/factory/factory-cache/factory-cache.factory.js","/source/utils/lazy-property.js","/source/utils/kebab-case.js","/source/utils/all-settled.js","/source/synchronizers/synchronizer-simple.js","/source/synchronizers/synchronizer-prototype.js","/source/synchronizations/synchronization-rest.js","/source/synchronizations/synchronization-prototype.js","/source/synchronizations/synchronization-local.js","/source/schema/schema.js","/source/model/model.js","/source/factory/factory.js","/source/collection/collection.js","/source/jsonapi.provider.js"],"names":["angular","module","constant","pluralize","AngularJsonAPIModelValidatorService","validateForm","schema","data","validateField","key","_this","this","service","AngularJsonAPIModelLinkerService","$log","toLinkData","object","type","id","link","target","undefined","error","polymorphic","model","__addHasMany","__addHasOne","unlink","__removeHasMany","__removeHasOne","log","relationships","warn","indexOf","push","index","splice","$inject","AngularJsonAPIModelFormWrapper","AngularJsonAPIModelForm","parent","attributes","reset","toJson","copy","forEach","value","save","errors","validation","validate","prototype","factory","AngularJsonAPIAbstractModelWrapper","uuid4","$injector","$q","AngularJsonAPIAbstractModel","isNew","removed","loadingCount","promises","__setData","form","resolved","response","finish","rejected","deferred","defer","hasErrors","config","action","hasOwnProperty","reject","promise","synchronize","then","refresh","update","params","get","remove","parentFactory","unlinkAll","resolve","reflectionKey","reflectionSchema","reflection","all","validatedData","initialize","setAttributes","validators","setRelationships","linkOne","bind","$jsonapi","getFactory","cache","AngularJsonAPICacheWrapper","AngularJsonAPICache","size","addOrUpdate","Model","fromJson","json","collection","updatedAt","objectData","clear","revertRemove","clearRemoved","propertyName","callback","result","done","Object","defineProperty","call","enumerable","configurable","str","replace","toLowerCase","$provide","decorator","$delegate","allSettled","resolvedCallback","rejectedCallback","wrap","when","isFunction","success","reason","wrapped","isArray","AngularJsonAPISynchronizerSimpleWrapper","AngularJsonAPISynchronizerPrototype","AngularJsonAPISynchronizerSimple","synchronizations","state","synchronization","synchronizer","notify","step","results","afterHooks","hook","finishHooks","noop","beginHooks","beforeHooks","synchronizationHooks","create","constructor","AngularJsonAPISynchronizerPrototypeWrapper","debug","AngularJsonAPISynchronizationRestWrapper","AngularJsonAPISynchronizationPrototype","toKebabCase","$http","AngularJsonAPISynchronizationRest","url","method","headers","resolveHttp","rejectHttp","add","Accept","Content-Type","AngularJsonAPISynchronizationPrototypeWrapper","allHooks","options","hookName","loading","begin","beforeSynchro","afterSynchro","before","after","AngularJsonAPISynchronizationLocalWrapper","$window","AngularJsonAPISynchronizationLocal","prefix","init","localStorage","getItem","removeItem","updateStorage","setItem","__updateStorage","AngularJsonAPISchemaWrapper","AngularJsonAPISchema","include","linkSchema","linkName","linkSchemaObj","AngularJsonAPILinkSchema","included","extend","length","join","isString","plural","AngularJsonAPIModel","modelFactory","schemaObj","functions","metaFunction","metaFunctionName","apply","arguments","AngularJsonAPIFactoryWrapper","AngularJsonAPICollection","AngularJsonAPIFactory","fetch","generate","AngularJsonAPICollectionWrapper","$rootScope","$emit","proccesResults","jsonapiProvider","jsonapiFactory","addFactory","memory","clearAll","console","objects","$get","provider"],"mappings":"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","file":"angular-jsonapi.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false */\n  .constant('pluralize', pluralize);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelValidatorService', AngularJsonAPIModelValidatorService);\n\n  function AngularJsonAPIModelValidatorService() {\n    var _this = this;\n    _this.validateForm = validateForm;\n    _this.validateField = validateField;\n\n    return this;\n\n    /**\n     * Validates form\n     * @param  {object} data Form data\n     * @return {object} Errors object indexed by keys\n     */\n    function validateForm(schema, data) {\n      var _this = this;\n\n      return {};\n    }\n\n    /**\n     * Validates single field\n     * @param  {string} key Field key\n     * @return {array}     Errors array\n     */\n    function validateField(schema, key) {\n      var _this = this;\n\n      return [];\n    }\n\n    // function __validate(validator, attributeValue, attributeName) {\n    //   var errors = [];\n    //   if (angular.isArray(validator)) {\n    //     angular.forEach(validator, function(element) {\n    //       errors = errors.concat(__validate(element, attributeValue, attributeName));\n    //     });\n    //   } else if (angular.isFunction(validator)) {\n    //     var err = validator(attributeValue, attributeName);\n    //     if (angular.isArray(err)) {\n    //       errors.concat(err);\n    //     } else {\n    //       $log.error(\n    //         'Wrong validator type it should return array of errors instead of: ' +\n    //           err.toString()\n    //       );\n    //     }\n    //   } else if (angular.isString(validator)) {\n    //     if (validator === 'text' || validator === 'string') {\n    //       if (!angular.isString(attributeValue)) {\n    //         errors.push(attributeName + ' is not a string ');\n    //       }\n    //     } else if (validator === 'number' || validator === 'integer') {\n    //       if (parseInt(attributeValue).toString() !== attributeValue.toString()) {\n    //         errors.push(attributeName + ' is not a number');\n    //       }\n    //     } else if (validator === 'uuid4') {\n    //       if (!uuid4.validate(attributeValue)) {\n    //         errors.push(attributeName + ' is not a uuid4');\n    //       }\n    //     } else if (validator === 'required') {\n    //       if (attributeValue.toString().length === 0) {\n    //         errors.push(attributeName + ' is empty');\n    //       }\n    //     } else {\n    //       $log.error('Wrong validator type: ' + validator.toString());\n    //     }\n    //   } else if (angular.isObject(validator)) {\n    //     if (validator.maxlength !== undefined && attributeValue.length > validator.maxlength) {\n    //       errors.push(attributeName + ' is too long max ' + validator.maxlength);\n    //     }\n\n    //     if (validator.minlength !== undefined && attributeValue.length < validator.minlength) {\n    //       errors.push(attributeName + ' is too short min ' + validator.minlength);\n    //     }\n\n    //     if (validator.maxvalue !== undefined && parseInt(attributeValue) > validator.maxvalue) {\n    //       errors.push(attributeName + ' is too big max ' + validator.maxvalue);\n    //     }\n\n    //     if (validator.minvalue !== undefined && parseInt(attributeValue) < validator.minvalue) {\n    //       errors.push(attributeName + ' is too small min ' + validator.minvalue);\n    //     }\n    //   } else {\n    //     $log.error('Wrong validator type: ' + validator.toString());\n    //   }\n\n    //   return errors;\n    // }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, schema) {\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        return false;\n      }\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target, schema);\n        return false;\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema: ', object, key, target, schema);\n        return false;\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        return false;\n      }\n\n      if (schema.type === 'hasMany') {\n        return __addHasMany(object, key, target, schema);\n      } else if (schema.type === 'hasOne') {\n        return __addHasOne(object, key, target, schema);\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, schema) {\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema: ' + key);\n        return;\n      }\n\n      if (schema.type === 'hasMany') {\n        return __removeHasMany(_this, key, object, schema);\n      } else if (schema.type === 'hasOne') {\n        return __removeHasOne(_this, key, object, schema);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __addHasOne(object, key, target, schema) {\n      $log.log('addHasOne', object);\n\n      if (object.relationships[key] === target) {\n        $log.warn(object, 'is already linked to', target);\n        return false;\n      } else {\n        object.relationships[key] = target;\n        object.data.relationships[key].data = toLinkData(target);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, schema) {\n      $log.log('addHasMany', object, key, target, schema);\n\n      if (object.relationships[key].indexOf(target) > -1) {\n        $log.warn(object, 'is already linked to', target);\n        return false;\n      } else {\n        object.relationships[key].push(target);\n        object.data.relationships[key].data.push(toLinkData(target));\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, schema) {\n      $log.log('removeHasOne', object, key, target, schema);\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        $log.warn(object, 'is not linked to', target);\n        return false;\n      } else {\n        object.relationships[key] = null;\n        object.data.relationships[key].data = undefined;\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, schema) {\n      $log.log('removeHasMany', object, key, target, schema);\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n      } else {\n        var index = object.relationships[key].indexOf(target);\n\n        if (index === -1) {\n          $log.warn(object, 'is not linked to', target);\n          return false;\n        } else {\n          object.relationships[key].splice(index, 1);\n          object.data.relationships[key].data.splice(index, 1);\n        }\n      }\n\n      return true;\n    }\n\n  }\n})();\n","!function(){\"use strict\";angular.module(\"angular-jsonapi\",[\"uuid4\"]).constant(\"pluralize\",pluralize)}(),function(){\"use strict\";function n(){function n(n,t){return{}}function t(n,t){return[]}var e=this;return e.validateForm=n,e.validateField=t,this}angular.module(\"angular-jsonapi\").service(\"AngularJsonAPIModelValidatorService\",n)}(),function(){\"use strict\";function n(n){function t(n){return null===n?null:{type:n.data.type,id:n.data.id}}function e(t,e,r,i){return void 0===r?(n.error(\"Can't link non existing object\",t,e,r,i),!1):void 0===t?(n.error(\"Can't add link to non existing object\",t,e,r,i),!1):void 0===i?(n.error(\"Can't add link not present in schema: \",t,e,r,i),!1):null!==r&&i.polymorphic===!1&&i.model!==r.data.type?(n.error(\"This relation is not polymorphic, expected: \"+i.model+\" instead of \"+r.data.type),!1):\"hasMany\"===i.type?a(t,e,r,i):\"hasOne\"===i.type?o(t,e,r,i):void 0}function r(t,e,r,o){return void 0===o?void n.error(\"Can't remove link not present in schema: \"+e):\"hasMany\"===o.type?s(c,e,t,o):\"hasOne\"===o.type?i(c,e,t,o):void 0}function o(e,r,o,a){return n.log(\"addHasOne\",e),e.relationships[r]===o?(n.warn(e,\"is already linked to\",o),!1):(e.relationships[r]=o,e.data.relationships[r].data=t(o),!0)}function a(e,r,o,a){return n.log(\"addHasMany\",e,r,o,a),e.relationships[r].indexOf(o)>-1?(n.warn(e,\"is already linked to\",o),!1):(e.relationships[r].push(o),e.data.relationships[r].data.push(t(o)),!0)}function i(t,e,r,o){return n.log(\"removeHasOne\",t,e,r,o),void 0!==r&&t.relationships[e]!==r?(n.warn(t,\"is not linked to\",r),!1):(t.relationships[e]=null,t.data.relationships[e].data=void 0,!0)}function s(t,e,r,o){if(n.log(\"removeHasMany\",t,e,r,o),void 0===r)t.relationships[e]=[],t.data.relationships[e].data=[];else{var a=t.relationships[e].indexOf(r);if(-1===a)return n.warn(t,\"is not linked to\",r),!1;t.relationships[e].splice(a,1),t.data.relationships[e].data.splice(a,1)}return!0}var c=this;return c.toLinkData=t,c.link=e,c.unlink=r,this}angular.module(\"angular-jsonapi\").service(\"AngularJsonAPIModelLinkerService\",n),n.$inject=[\"$log\"]}(),function(){\"use strict\";function n(n,t){function e(n){var t=this;t.data={attributes:{},relationships:{}},t.relationships={},t.parent=n,t.schema=n.schema,t.reset()}function r(){var n=this,t=angular.copy(n.data),e={};return angular.forEach(t.relationships,function(n,t){void 0!==n.data&&(e[t]=n)}),t.relationships=e,{data:t}}function o(){var n=this;return n.parent.save()}function a(){var n=this;angular.forEach(n.schema.attributes,function(t,e){n.data.attributes[e]=n.parent.data.attributes[e]||\"\"}),angular.forEach(n.schema.relationships,function(t,e){n.data.relationships[e]=n.parent.data.relationships[e]||{},n.relationships[e]=n.parent.relationships[e]}),n.errors={validation:{}}}function i(){var t,e=this;return t=n.validateForm(e.data),e.errors.validation=t,t}function s(t){var e,r=this;return e=n.validateField(r.data[t],t),r.errors.validation[t]=e,e}function c(n,e){var r=this,o=r.schema.relationships[n];return t.link(r,n,e,o)}function u(n,e){var r=this,o=r.schema.relationships[n];return t.unlink(r,n,e,o)}return e.prototype.save=o,e.prototype.reset=a,e.prototype.validate=i,e.prototype.validateField=s,e.prototype.link=c,e.prototype.unlink=u,e.prototype.toJson=r,e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelForm\",n),n.$inject=[\"AngularJsonAPIModelValidatorService\",\"AngularJsonAPIModelLinkerService\"]}(),function(){\"use strict\";function n(n,t,e,r,o,a){function i(t,e){var r=this;t.relationships=t.relationships||{},r.isNew=e||!1,r.removed=!1,r.loadingCount=0,r.data={relationships:{},attributes:{}},r.relationships={},r.errors={validation:{}},r.promises={},g(r,t,!0),r.form=new n(r)}function s(){function n(n){return g(e,e.form.data),n.finish(),e}function t(){return response.finish(),response.errors}var e=this,r=a.defer(),o=!1,i={action:\"update\",object:e};e.isNew===!0&&(i.action=\"add\");var s=e.form.validate();for(var c in s)s.hasOwnProperty(c)&&(o=!0);return o===!0?(r.reject(s),r.promise):(e.synchronize(i).then(n,t),r.promise)}function c(){var n=this;return n.form.reset()}function u(){function n(n){return r.update(n.data),n.finish(),r}function t(n){return n.finish(),n.errors}var e=a.defer(),r=this,i={action:\"refresh\",object:r,params:r.schema.params.get};return r.isNew===!0?(o.error(\"Can't refresh new object\"),e.reject(\"Can't refresh new object\")):r.synchronize(i).then(n,t),e.promise}function l(){var n=this,t=angular.copy(n.data),e={};return angular.forEach(t.relationships,function(n,t){void 0!==n.data&&(e[t]=n)}),t.relationships=e,{data:t}}function h(){var n=this;return n.parentFactory.remove(n.data.id)}function d(){var n=this;angular.forEach(n.relationships,function(e,r){t.unlink(n,r,void 0,n.schema.relationships[r])})}function p(n,e){function r(n){return s.resolve(c),n.finish(),n.data}function o(r){return t.unlink(c,n,e,u),t.unlink(e,l,c,h),s.reject(r.errors),r.finish(),r.errors}var i,s=a.defer(),c=this,u=c.schema.relationships[n],l=u.reflection,h=e.schema.relationships[l];return t.link(c,n,e,u)&&t.link(e,l,c,h)?(i=a.all(c.synchronize({action:\"link\",object:c,target:e,key:n}),c.synchronize({action:\"linkReflection\",object:c,target:e,key:n})),i.then(r,o),s.promise):(s.reject(),s.promise)}function f(n,e){function r(n){return s.resolve(c),n.finish(),n.data}function o(r){return t.unlink(c,n,e,u),t.unlink(e,l,c,h),s.reject(r.errors),r.finish(),r.errors}var i,s=a.defer(),c=this,u=c.schema.relationships[n],l=u.reflection,h=e.schema.relationships[l];return t.unlink(c,n,e,u)&&t.unlink(e,l,c,h)?(i=a.all(c.synchronize({action:\"unlink\",object:c,target:e,key:n}),c.synchronize({action:\"unlinkReflection\",object:c,target:e,key:n})),i.then(r,o),s.promise):(s.reject(),s.promise)}function y(n){var t=this;return g(t,n)}function g(n,a,i){function s(t,e){n.data.attributes[e]=a.attributes[e]}function c(t,e){void 0===a.relationships[e]?\"hasOne\"===t.type?n.data.relationships[e]={data:void 0}:\"hasMany\"===t.type&&(n.data.relationships[e]={data:[]}):(n.data.relationships[e]=a.relationships[e],\"hasOne\"===t.type?u(n,e,t,n.data.relationships[e].data):\"hasMany\"===t.type&&angular.forEach(n.data.relationships[e].data,u.bind(void 0,n,e,t)))}function u(n,e,r,o){if(null===o)return void t.link(n,e,null,r);var a=l.getFactory(o.type),s=a.cache.get(o.id),c=r.reflection,u=s.schema.relationships[c];t.link(n,e,s,r),i!==!0&&c!==!1&&t.link(n,c,s,u)}var l=r.get(\"$jsonapi\"),h=n.schema;return n.data.id=a.id,n.data.type=a.type,n.parentFactory.schema.type!==a.type?(o.error(\"Different type then factory\"),!1):e.validate(n.data.id)?(a.attributes=a.attributes||{},a.relationships=a.relationships||{},angular.forEach(h.attributes,s),angular.forEach(h.relationships,c),!0):(o.error(\"Invalid id\"),!1)}return i.prototype.refresh=u,i.prototype.remove=h,i.prototype.reset=c,i.prototype.save=s,i.prototype.update=y,i.prototype.link=p,i.prototype.unlink=f,i.prototype.unlinkAll=d,i.prototype.toJson=l,i}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractModel\",n),n.$inject=[\"AngularJsonAPIModelForm\",\"AngularJsonAPIModelLinkerService\",\"uuid4\",\"$injector\",\"$log\",\"$q\"]}(),function(){\"use strict\";function n(n){function t(n){var t=this;t.factory=n,t.data={},t.removed={},t.size=0}function e(t){var e=this,r=t.id;return void 0===r?void n.error(\"Can't add data without id!\",t):(void 0===e.data[r]?(e.data[r]=new e.factory.Model(t),e.size+=1):e.data[r].update(t),e.data[r])}function r(n){var t=this,e=angular.fromJson(n);null!==e&&void 0!==e.data&&(t.updatedAt=e.updatedAt,angular.forEach(e.data,function(n){var e=n.data;t.addOrUpdate(e,n.updatedAt)}))}function o(){var n=this,t={data:{},updatedAt:n.updatedAt};return angular.forEach(n.data,function(n,e){t.data[e]=n.toJson()}),angular.toJson(t)}function a(){var n=this;n.data={},n.removed={}}function i(n){var t=this;return void 0===t.data[n]&&(t.data[n]=new t.factory.Model({id:n,type:t.factory.Model.prototype.schema.type})),t.data[n]}function s(n){var t=this;return void 0!==t.data[n]&&(t.removed[n]=t.data[n],delete t.data[n],t.size-=1),t.removed[n]}function c(n){var t=this;return void 0!==t.removed[n]&&(t.data[n]=t.removed[n],delete t.removed[n],t.size+=1),t.data[n]}function u(n){var t=this;delete t.removed[n]}return t.prototype.get=i,t.prototype.addOrUpdate=e,t.prototype.fromJson=r,t.prototype.toJson=o,t.prototype.clear=a,t.prototype.remove=s,t.prototype.revertRemove=c,t.prototype.clearRemoved=u,t}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICache\",n),n.$inject=[\"$log\"]}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"lazyProperty\",function(n,t,e){var r,o;Object.defineProperty(n,t,{get:function(){return o||(o=!0,r=e.call(n)),r},enumerable:!0,configurable:!0})})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"toKebabCase\",function(n){return n.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase()})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$provide\",function(n){n.decorator(\"$q\",[\"$delegate\",function(n){var t=n;return t.allSettled=t.allSettled||function(n,e,r){function o(n){return t.when(n).then(function(n){return angular.isFunction(e)&&e(n),{success:!0,value:n}},function(n){return angular.isFunction(r)&&r(n),{success:!1,reason:n}})}var a=angular.isArray(n)?[]:{};return angular.forEach(n,function(n,t){a.hasOwnProperty(t)||(a[t]=o(n))}),t.all(a)},t}])}])}(),function(){\"use strict\";function n(n,t,e){function r(t){var e=this;e.state={},n.call(e,t),angular.forEach(t,function(n){n.synchronizer=e})}function o(r){function o(n){h.notify({step:\"synchronization\",data:n})}function a(n){h.notify({step:\"synchronization\",errors:n})}function i(n){u.state[d]=u.state[d]||{},u.state[d].success=!0,angular.forEach(n,function(n){n.success===!1&&(u.state[d].success=!1)}),angular.forEach(u.synchronizations,function(t){angular.forEach(t.afterHooks[d],function(t){h.notify({step:\"after\",errors:t.call(u,r,n)})})});var t,e=[];angular.forEach(n,function(n){n.success===!0?t=n.value:e.push(n.reason)}),void 0===t?h.reject({finish:s,errors:e}):h.resolve({data:t,finish:s,errors:e})}function s(){angular.forEach(u.synchronizations,function(n){angular.forEach(n.finishHooks[d],function(n){h.notify({step:\"finish\",errors:n.call(u,r)})})})}function c(n){e.error(\"All settled rejected! Something went wrong\"),h.reject({finish:angular.noop,errors:n})}var u=this,l=[],h=t.defer(),d=r.action;return n.prototype.synchronize.call(u,r),angular.forEach(u.synchronizations,function(n){angular.forEach(n.beginHooks[d],function(n){h.notify({step:\"begin\",data:n.call(u,r)})})}),angular.forEach(u.synchronizations,function(n){angular.forEach(n.beforeHooks[d],function(n){h.notify({step:\"before\",data:n.call(u,r)})})}),angular.forEach(u.synchronizations,function(n){angular.forEach(n.synchronizationHooks[d],function(n){l.push(n.call(u,r))})}),t.allSettled(l,o,a).then(i,c),h.promise}return r.prototype=Object.create(n.prototype),r.prototype.constructor=r,r.prototype.synchronize=o,r}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerSimple\",n),n.$inject=[\"AngularJsonAPISynchronizerPrototype\",\"$q\",\"$log\"]}(),function(){\"use strict\";function n(n){function t(n){var t=this;t.synchronizations=n}function e(t){var e=this;n.debug(\"Synchro Collection\",e.factory.Model.prototype.schema.type,t),void 0===t.action&&n.error(\"Can't synchronize undefined action\",t)}return t.prototype.synchronize=e,t}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerPrototype\",n),n.$inject=[\"$log\"]}(),function(){\"use strict\";function n(n,t,e,r,o){function a(a){function i(n){return o({method:\"GET\",headers:g,url:a,params:n.params||{}}).then(p,f)}function s(n){return o({method:\"GET\",headers:g,url:a+\"/\"+n.object.data.id,params:n.params||{}}).then(p,f)}function c(n){return o({method:\"DELETE\",headers:g,url:a+\"/\"+n.object.data.id}).then(p,f)}function u(n){var t=r.defer();return n.object.removed===!0||void 0===n.target?t.reject():o({method:\"DELETE\",headers:g,url:a+\"/\"+n.object.data.id+\"/relationships/\"+e(n.key)+\"/\"+n.target.data.id}).then(p,f).then(t.resolve,t.reject),t.promise}function l(n){var i=r.defer();return n.object.removed===!0||void 0===n.target?i.reject():o({method:\"POST\",headers:g,url:a+\"/\"+n.object.data.id+\"/relationships/\"+e(n.key),data:{data:[t.toLinkData(n.target)]}}).then(p,f).then(i.resolve,i.reject),i.promise}function h(n){return o({method:\"PUT\",headers:g,url:a+\"/\"+n.object.data.id,data:n.object.form.toJson()}).then(p,f)}function d(n){return o({method:\"POST\",headers:g,url:a+\"/\",data:n.object.form.toJson()}).then(p,f)}function p(n){return n.data}function f(n){return n.data}var y=this,g={Accept:\"application/vnd.api+json\",\"Content-Type\":\"application/vnd.api+json\"};n.call(y),y.synchronization(\"remove\",c),y.synchronization(\"unlink\",u),y.synchronization(\"link\",l),y.synchronization(\"update\",h),y.synchronization(\"add\",d),y.synchronization(\"all\",i),y.synchronization(\"get\",s),y.synchronization(\"refresh\",s)}return a.prototype=Object.create(n.prototype),a.prototype.constructor=a,a}angular.module(\"angular-jsonapi-rest\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationRest\",n),n.$inject=[\"AngularJsonAPISynchronizationPrototype\",\"AngularJsonAPIModelLinkerService\",\"toKebabCase\",\"$q\",\"$http\"]}(),function(){\"use strict\";function n(){function n(){var n=this,t=[\"add\",\"init\",\"get\",\"all\",\"clear\",\"remove\",\"unlink\",\"unlinkReflection\",\"link\",\"linkReflection\",\"update\",\"refresh\"];n.state={},n.beginHooks={},n.beforeHooks={},n.synchronizationHooks={},n.afterHooks={},n.finishHooks={},n.options={},angular.forEach(t,function(t){n.beginHooks[t]=[],n.beforeHooks[t]=[],n.synchronizationHooks[t]=[],n.afterHooks[t]=[],n.finishHooks[t]=[],n.state[t]={loading:!1,success:!0}})}function t(n,t){var e=this;e.beginHooks[n].push(t)}function e(n,t){var e=this;e.finishHooks[n].push(t)}function r(n,t){var e=this;e.beforeHooks[n].push(t)}function o(n,t){var e=this;e.afterHooks[n].push(t)}function a(n,t){var e=this;e.synchronizationHooks[n].push(t)}return n.prototype.before=r,n.prototype.after=o,n.prototype.begin=t,n.prototype.finish=e,n.prototype.synchronization=a,n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizationPrototype\",n)}(),function(){\"use strict\";function n(n,t){function e(e){function r(){var n=i.synchronizer.factory.schema.type;return t.localStorage.getItem(e+\".\"+n)}function o(){var n=i.synchronizer.factory.schema.type;t.localStorage.removeItem(e+\".\"+n)}function a(){var n=i.synchronizer.factory.schema.type,r=i.synchronizer.factory.cache;t.localStorage.setItem(e+\".\"+n,r.toJson())}var i=this;e=e||\"AngularJsonAPI\",i.__updateStorage=a,n.call(i),i.begin(\"init\",r),i.begin(\"clear\",o),i.begin(\"remove\",a),i.begin(\"unlink\",a),i.begin(\"unlinkReflection\",a),i.begin(\"link\",a),i.begin(\"linkReflection\",a),i.begin(\"update\",a),i.begin(\"add\",a),i.finish(\"get\",a),i.finish(\"all\",a),i.finish(\"init\",a),i.finish(\"clear\",a),i.finish(\"remove\",a),i.finish(\"unlink\",a),i.finish(\"unlinkReflection\",a),i.finish(\"link\",a),i.finish(\"linkReflection\",a),i.finish(\"update\",a),i.finish(\"add\",a),i.finish(\"get\",a),i.finish(\"all\",a)}return e.prototype=Object.create(n.prototype),e.prototype.constructor=e,e}angular.module(\"angular-jsonapi-local\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationLocal\",n),n.$inject=[\"AngularJsonAPISynchronizationPrototype\",\"$window\"]}(),function(){\"use strict\";function n(n,t,e){function r(n){var t=this,r=n.include||{};n.include=r,r.get=n.include.get||[],r.all=n.include.all||[],t.params={get:{},all:{}},angular.forEach(n.relationships,function(t,a){var i=new o(t,a,n.type);n.relationships[a]=i,i.included===!0&&(r.get.push(e(a)),\"hasOne\"===i.type&&r.all.push(e(a)))}),angular.extend(t,n),r.get.length>0&&(t.params.get.include=r.get.join(\",\")),r.all.length>0&&(t.params.all.include=r.all.join(\",\"))}function o(e,r,o){var a=this;angular.isString(e)?(a.model=t.plural(r),a.type=e,a.polymorphic=!1,a.reflection=o):(void 0===e.type&&n.error(\"Schema of link without a type: \",e,r),a.model=e.model||t.plural(r),a.type=e.type,a.polymorphic=e.polymorphic||!1,a.reflection=e.reflection||o,a.included=e.included||!1)}return r}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchema\",n),n.$inject=[\"$log\",\"pluralize\",\"toKebabCase\"]}(),function(){\"use strict\";function n(n,t,e){function r(t,r){var o=function(t,r,o){var a=this;t.type!==a.schema.type&&e.error(\"Data type other then declared in schema: \",t.type,\" instead of \",a.schema.type),n.call(a,t,r,o),a.form.parent=a};return o.prototype=Object.create(n.prototype),o.prototype.constructor=o,o.prototype.schema=t,o.prototype.parentFactory=r,o.prototype.synchronize=r.synchronizer.synchronize.bind(r.synchronizer),angular.forEach(t.functions,function(n,t){o.prototype[t]=function(){return n.apply(this,arguments)}}),o}return{model:r}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModel\",n),n.$inject=[\"AngularJsonAPIAbstractModel\",\"AngularJsonAPISchema\",\"$log\"]}(),function(){\"use strict\";function n(n,t,e,r,o,a,i){function s(r,o){function a(n){return s.cache.fromJson(n.data),n.finish(),n.data}function i(n){return n.finish(),n.errors}var s=this,c={action:\"init\"};s.schema=new t(r),s.cache=new e(s),s.synchronizer=o,s.synchronizer.factory=s,s.Model=n.model(s.schema,s),o.factory=s,s.synchronizer.synchronize(c).then(a,i)}function c(n){var t=this,e=t.cache.get(n);return e.refresh(),e}function u(n){var t=this;n=n||{};var e=new r(t,angular.extend(n,t.schema.params.all));return e.fetch(),e}function l(n){function t(t){return o.unlinkAll(),r.cache.clearRemoved(n),t.finish(),t.data}function e(t){return void 0!==o&&(o.removed=!1,r.cache.revertRemove(n)),t.finish(),t.errors}var r=this,o=r.cache.remove(n),s={action:\"remove\",object:o};if(void 0!==o){if(o.removed=!0,o.isNew)return i.when(void 0)}else a.error(\"Object with this id does not exist\");return r.synchronizer.synchronize(s).then(t,e)}function h(){var n=this,t=new n.Model({type:n.schema.type,id:o.generate(),attributes:{},relationships:{}},!0);return t}function d(){function n(n){return n.finish(),n.data}function t(n){return n.finish(),n.errors}var e=this;e.cache.clear();var r={action:\"clear\"};return e.synchronizer.synchronize(r).then(n,t)}return s.prototype.get=c,s.prototype.all=u,s.prototype.remove=l,s.prototype.initialize=h,s.prototype.clear=d,s}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIFactory\",n),n.$inject=[\"AngularJsonAPIModel\",\"AngularJsonAPISchema\",\"AngularJsonAPICache\",\"AngularJsonAPICollection\",\"uuid4\",\"$log\",\"$q\"]}(),function(){\"use strict\";function n(n,t){function e(n,t){var e=this;e.factory=n,e.params=t,e.errors={synchronization:[]},e.data=[],e.step=\"initialized\"}function r(n){var t=this;return t.factory.get(n)}function o(){function e(t){return n.$emit(\"angularJsonAPI:collection:fetch\",\"resolved\",t),a.errors.synchronization=[],a.data=i.proccesResults(t.data),t.finish(),a}function r(t){return n.$emit(\"angularJsonAPI:collection:fetch\",\"rejected\",t),a.errors.synchronization=t.errors,t.finish(),a}function o(t){return n.$emit(\"angularJsonAPI:collection:fetch\",\"notify\",t),a}var a=this,i=t.get(\"$jsonapi\"),s={action:\"all\",params:a.params};return a.factory.synchronizer.synchronize(s).then(e,r,o)}return e.prototype.fetch=o,e.prototype.refresh=o,e.prototype.get=r,e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICollection\",n),n.$inject=[\"$rootScope\",\"$injector\"]}(),function(){\"use strict\";function n(){function n(n,e){function r(n,r){var o=new e(n,r);t[n.type]=o}function o(n){return t[n]}function a(e){return void 0===t[e]&&n.error(\"Can\t add not existing object type: \"+e+\". Use initialize(Model, datas).\"),t[e].isNew.form}function i(e,r){return void 0===t[e]&&n.error(\"Can\t get not existing object type: \"+e+\". Use initialize(Model, datas).\"),t[e].get(r)}function s(e,r){return void 0===t[e]&&n.error(\"Can\t remove not existing object type: \"+e+\". Use initialize(Model, datas).\"),t[e].remove(r)}function c(e){return void 0===t[e]&&n.error(\"Can\t get all of not existing object type: \"+e+\". Use initialize(Model, datas).\"),t[e].all()}function u(){angular.forEach(t,function(n){n.clear()})}function l(t){void 0===t&&n.error(\"Can't proccess results:\",t),console.log(t);var e=[];return angular.forEach(t.data,function(n){e.push(o(n.type).cache.addOrUpdate(n))}),angular.forEach(t.included,function(n){o(n.type).cache.addOrUpdate(n)}),e}return{form:a,get:i,remove:s,all:c,addFactory:r,getFactory:o,clearAll:u,proccesResults:l}}var t={};this.$get=n,n.$inject=[\"$log\",\"AngularJsonAPIFactory\"]}angular.module(\"angular-jsonapi\").provider(\"$jsonapi\",n)}();\n//# sourceMappingURL=angular-jsonapi.min.js.map","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidatorService,\n    AngularJsonAPIModelLinkerService\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n    AngularJsonAPIModelForm.prototype.validateField = validateField;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return AngularJsonAPIModelForm;\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      angular.forEach(_this.schema.attributes, function(data, key) {\n        _this.data.attributes[key] = _this.parent.data.attributes[key] || '';\n      });\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = _this.parent.data.relationships[key] || {};\n        _this.relationships[key] = _this.parent.relationships[key];\n      });\n\n      _this.errors = {\n        validation: {}\n      };\n    }\n\n    /**\n     * Validates form\n     * @return {objec} Errors object indexed by keys\n     */\n    function validate() {\n      var _this = this;\n      var errors;\n\n      errors = AngularJsonAPIModelValidatorService.validateForm(_this.data);\n\n      _this.errors.validation = errors;\n\n      return errors;\n    }\n\n    /**\n     * Validates single field\n     * @param  {string} key Field key\n     * @return {array}     Errors array\n     */\n    function validateField(key) {\n      var _this = this;\n      var errors;\n      errors = AngularJsonAPIModelValidatorService.validateField(\n        _this.data[key],\n        key\n      );\n\n      _this.errors.validation[key] = errors;\n\n      return errors;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target) {\n      var _this = this;\n      var schema = _this.schema.relationships[key];\n\n      return AngularJsonAPIModelLinkerService.link(_this, key, target, schema);\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target) {\n      var _this = this;\n      var schema = _this.schema.relationships[key];\n\n      return AngularJsonAPIModelLinkerService.unlink(_this, key, target, schema);\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelForm,\n    AngularJsonAPIModelLinkerService,\n    uuid4,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {Boolean} isNew   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, isNew) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      _this.isNew = isNew || false;\n\n      _this.removed = false;\n      _this.loadingCount = 0;\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      _this.errors = {\n        validation: {}\n      };\n\n      _this.promises = {};\n\n      __setData(_this, data, true);\n      _this.form = new AngularJsonAPIModelForm(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save() {\n      var _this = this;\n      var deferred = $q.defer();\n      var hasErrors = false;\n      var config = {\n        action: 'update',\n        object: _this\n      };\n\n      if (_this.isNew === true) {\n        config.action = 'add';\n      }\n\n      var errors = _this.form.validate();\n\n      for (var error in errors) {\n        if (errors.hasOwnProperty(error)) {\n          hasErrors = true;\n        }\n      }\n\n      if (hasErrors === true) {\n        deferred.reject(errors);\n        return deferred.promise;\n      } else {\n        _this.synchronize(config).then(resolved, rejected);\n      }\n\n      return deferred.promise;\n\n      function resolved(response) {\n        __setData(_this, _this.form.data);\n        response.finish();\n\n        return _this;\n      }\n\n      function rejected() {\n        response.finish();\n\n        return response.errors;\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      return _this.form.reset();\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh() {\n      var deferred = $q.defer();\n      var _this = this;\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: _this.schema.params.get\n      };\n\n      if (_this.isNew === true) {\n        $log.error('Can\\'t refresh new object');\n        deferred.reject('Can\\'t refresh new object');\n      } else {\n        _this.synchronize(config).then(resolved, rejected);\n      }\n\n      function resolved(response) {\n        _this.update(response.data);\n        response.finish();\n\n        return _this;\n      }\n\n      function rejected(response) {\n        response.finish();\n\n        return response.errors;\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n\n      return _this.parentFactory.remove(_this.data.id);\n    }\n\n    /**\n     * Unlink all relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll() {\n      var _this = this;\n\n      angular.forEach(_this.relationships, function(link, key) {\n        AngularJsonAPIModelLinkerService.unlink(_this, key, undefined, _this.schema.relationships[key]);\n      });\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var schema = _this.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema = target.schema.relationships[reflectionKey];\n      var promise;\n\n      if (!AngularJsonAPIModelLinkerService.link(_this, key, target, schema) ||\n          !AngularJsonAPIModelLinkerService.link(target, reflectionKey, _this, reflectionSchema)) {\n\n        deferred.reject();\n        return deferred.promise;\n      }\n\n      promise = $q.all(_this.synchronize({\n        action: 'link',\n        object: _this,\n        target: target,\n        key: key\n      }),\n\n      _this.synchronize({\n        action: 'linkReflection',\n        object: _this,\n        target: target,\n        key: key\n      }));\n\n      promise.then(resolved, rejected);\n\n      function resolved(response) {\n        deferred.resolve(_this);\n\n        response.finish();\n        return response.data;\n      }\n\n      function rejected(response) {\n        AngularJsonAPIModelLinkerService.unlink(_this, key, target, schema);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        deferred.reject(response.errors);\n        response.finish();\n        return response.errors;\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var schema = _this.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema = target.schema.relationships[reflectionKey];\n      var promise;\n\n      if (!AngularJsonAPIModelLinkerService.unlink(_this, key, target, schema) ||\n          !AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema)) {\n\n        deferred.reject();\n        return deferred.promise;\n      }\n\n      promise = $q.all(_this.synchronize({\n        action: 'unlink',\n        object: _this,\n        target: target,\n        key: key\n      }),\n\n      _this.synchronize({\n        action: 'unlinkReflection',\n        object: _this,\n        target: target,\n        key: key\n      }));\n\n      promise.then(resolved, rejected);\n\n      function resolved(response) {\n        deferred.resolve(_this);\n\n        response.finish();\n        return response.data;\n      }\n\n      function rejected(response) {\n        AngularJsonAPIModelLinkerService.unlink(_this, key, target, schema);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        deferred.reject(response.errors);\n        response.finish();\n        return response.errors;\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData) {\n      var _this = this;\n\n      return __setData(_this, validatedData);\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData, initialize) {\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.parentFactory.schema.type !== validatedData.type) {\n        $log.error('Different type then factory');\n        return false;\n      }\n\n      if (!uuid4.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        if (validatedData.relationships[key] === undefined) {\n          if (schema.type === 'hasOne') {\n            object.data.relationships[key] = {data: undefined};\n          } else if (schema.type === 'hasMany') {\n            object.data.relationships[key] = {data: []};\n          }\n        } else {\n          object.data.relationships[key] = validatedData.relationships[key];\n          if (schema.type === 'hasOne') {\n            linkOne(object, key, schema, object.data.relationships[key].data);\n          } else if (schema.type === 'hasMany') {\n            angular.forEach(\n              object.data.relationships[key].data,\n              linkOne.bind(undefined, object, key, schema)\n            );\n          }\n        }\n      }\n\n      function linkOne(object, key, schema, data) {\n\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null, schema);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        var factory = $jsonapi.getFactory(data.type);\n        var target = factory.cache.get(data.id);\n        var reflectionKey = schema.reflection;\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n\n        AngularJsonAPIModelLinkerService.link(object, key, target, schema);\n\n        if (initialize !== true && reflectionKey !== false) {\n          AngularJsonAPIModelLinkerService.link(object, reflectionKey, target, reflectionSchema);\n        }\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICache', AngularJsonAPICacheWrapper);\n\n  function AngularJsonAPICacheWrapper(\n    $log\n  ) {\n\n    AngularJsonAPICache.prototype.get = get;\n    AngularJsonAPICache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPICache.prototype.fromJson = fromJson;\n    AngularJsonAPICache.prototype.toJson = toJson;\n    AngularJsonAPICache.prototype.clear = clear;\n\n    AngularJsonAPICache.prototype.remove = remove;\n    AngularJsonAPICache.prototype.revertRemove = revertRemove;\n    AngularJsonAPICache.prototype.clearRemoved = clearRemoved;\n\n    return AngularJsonAPICache;\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPICache(factory) {\n      var _this = this;\n\n      _this.factory = factory;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.factory.Model(validatedData);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      if (collection !== null && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, objectData.updatedAt);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: {},\n        updatedAt: _this.updatedAt\n      };\n\n      angular.forEach(_this.data, function(object, key) {\n        json.data[key] = object.toJson();\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.factory.Model({id: id, type: _this.factory.Model.prototype.schema.type});\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises, resolvedCallback, rejectedCallback) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.when(promise)\n            .then(function(value) {\n              if (angular.isFunction(resolvedCallback)) {\n                resolvedCallback(value);\n              }\n\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              if (angular.isFunction(rejectedCallback)) {\n                rejectedCallback(reason);\n              }\n\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerSimple;\n\n    function AngularJsonAPISynchronizerSimple(synchronizations) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, synchronizations);\n\n      angular.forEach(synchronizations, function(synchronization) {\n        synchronization.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push(result.reason);\n          }\n        });\n\n        if (data === undefined) {\n          deferred.reject({finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(synchronizations) {\n      var _this = this;\n\n      _this.synchronizations = synchronizations;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.factory.Model.prototype.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationRest', AngularJsonAPISynchronizationRestWrapper);\n\n  function AngularJsonAPISynchronizationRestWrapper(\n    AngularJsonAPISynchronizationPrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISynchronizationRest.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationRest.prototype.constructor = AngularJsonAPISynchronizationRest;\n\n    return AngularJsonAPISynchronizationRest;\n\n    function AngularJsonAPISynchronizationRest(url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISynchronizationPrototype.call(_this);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n\n        if (config.object.removed === true || config.target === undefined) {\n          deferred.reject();\n        } else {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + toKebabCase(config.key) + '/' + config.target.data.id\n          }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n\n        if (config.object.removed === true || config.target === undefined) {\n          deferred.reject();\n        } else {\n          $http({\n            method: 'POST',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + toKebabCase(config.key),\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]}\n          }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        return $http({\n          method: 'PUT',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url + '/',\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function resolveHttp(response) {\n        return response.data;\n      }\n\n      function rejectHttp(response) {\n        return response.data;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizationPrototype', AngularJsonAPISynchronizationPrototypeWrapper);\n\n  function AngularJsonAPISynchronizationPrototypeWrapper() {\n    AngularJsonAPISynchronizationPrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.after = afterSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.begin = begin;\n    AngularJsonAPISynchronizationPrototype.prototype.finish = finish;\n    AngularJsonAPISynchronizationPrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISynchronizationPrototype;\n\n    function AngularJsonAPISynchronizationPrototype() {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clear',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh'\n      ];\n\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationLocal', AngularJsonAPISynchronizationLocalWrapper);\n\n  function AngularJsonAPISynchronizationLocalWrapper(AngularJsonAPISynchronizationPrototype, $window) {\n\n    AngularJsonAPISynchronizationLocal.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationLocal.prototype.constructor = AngularJsonAPISynchronizationLocal;\n\n    return AngularJsonAPISynchronizationLocal;\n\n    function AngularJsonAPISynchronizationLocal(prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISynchronizationPrototype.call(_this);\n\n      _this.begin('init', init);\n      _this.begin('clear', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('unlink', updateStorage);\n      _this.begin('unlinkReflection', updateStorage);\n      _this.begin('link', updateStorage);\n      _this.begin('linkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clear', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.factory.schema.type;\n        return $window.localStorage.getItem(prefix + '.' + type);\n      }\n\n      function clear() {\n        var type = _this.synchronizer.factory.schema.type;\n        $window.localStorage.removeItem(prefix + '.' + type);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.factory.schema.type;\n        var cache = _this.synchronizer.factory.cache;\n        $window.localStorage.setItem(prefix + '.' + type, cache.toJson());\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper($log, pluralize, toKebabCase) {\n\n    return AngularJsonAPISchema;\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = new AngularJsonAPILinkSchema(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(toKebabCase(linkName));\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(toKebabCase(linkName));\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get.join(',');\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all.join(',');\n      }\n    }\n\n    function AngularJsonAPILinkSchema(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n        _this.reflection = linkSchema.reflection || type;\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(AngularJsonAPIAbstractModel, AngularJsonAPISchema, $log) {\n\n    return {\n      model: modelFactory\n    };\n\n    function modelFactory(schemaObj, parentFactory) {\n      var Model = function(data, updatedAt, isNew) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, updatedAt, isNew);\n\n        _this.form.parent = _this;\n      };\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.parentFactory = parentFactory;\n      Model.prototype.synchronize = parentFactory.synchronizer.synchronize.bind(parentFactory.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return Model;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIFactory', AngularJsonAPIFactoryWrapper);\n\n  function AngularJsonAPIFactoryWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPICache,\n    AngularJsonAPICollection,\n    uuid4,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIFactory.prototype.get = get;\n    AngularJsonAPIFactory.prototype.all = all;\n    AngularJsonAPIFactory.prototype.remove = remove;\n    AngularJsonAPIFactory.prototype.initialize = initialize;\n\n    AngularJsonAPIFactory.prototype.clear = clear;\n\n    return AngularJsonAPIFactory;\n\n    /**\n     * AngularJsonAPIFactory constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the factory\n     */\n    function AngularJsonAPIFactory(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = new AngularJsonAPISchema(schema);\n      _this.cache = new AngularJsonAPICache(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.factory = _this;\n\n      _this.Model = AngularJsonAPIModel.model(\n        _this.schema,\n        _this\n      );\n\n      synchronizer.factory = _this;\n\n      _this.synchronizer.synchronize(config).then(resolved, rejected);\n\n      function resolved(response) {\n        _this.cache.fromJson(response.data);\n\n        response.finish();\n        return response.data;\n      }\n\n      function rejected(response) {\n        response.finish();\n\n        return response.errors;\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id) {\n      var _this = this;\n      var object = _this.cache.get(id);\n\n      object.refresh();\n\n      return object;\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = params || {};\n\n      var collection = new AngularJsonAPICollection(\n        _this,\n        angular.extend(params, _this.schema.params.all)\n      );\n\n      collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n      var config = {\n        action: 'remove',\n        object: object\n      };\n\n      if (object !== undefined) {\n        object.removed = true;\n\n        if (object.isNew) {\n          return $q.when(undefined);\n        }\n      } else {\n        $log.error('Object with this id does not exist');\n      }\n\n      return _this.synchronizer.synchronize(config).then(resolved, rejected);\n\n      function resolved(response) {\n        object.unlinkAll();\n        _this.cache.clearRemoved(id);\n        response.finish();\n\n        return response.data;\n      }\n\n      function rejected(response) {\n        if (object !== undefined) {\n          object.removed = false;\n          _this.cache.revertRemove(id);\n        }\n\n        response.finish();\n        return response.errors;\n      }\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize() {\n      var _this = this;\n\n      var model = new _this.Model({\n        type: _this.schema.type,\n        id: uuid4.generate(),\n        attributes: {},\n        relationships: {}\n      }, true);\n\n      return model;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clear() {\n      var _this = this;\n      _this.cache.clear();\n      var config = {\n        action: 'clear'\n      };\n\n      return _this.synchronizer.synchronize(config).then(resolved, rejected);\n\n      function resolved(response) {\n        response.finish();\n\n        return response.data;\n      }\n\n      function rejected(response) {\n        response.finish();\n\n        return response.errors;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    $rootScope,\n    $injector\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n\n    return AngularJsonAPICollection;\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIFactory} factory Factory associated with the collection\n     * @param {object} params  Params associated with this factory (such as filters)\n     */\n    function AngularJsonAPICollection(factory, params) {\n      var _this = this;\n\n      _this.factory = factory;\n      _this.params = params;\n\n      _this.errors = {\n        synchronization: []\n      };\n      _this.data = [];\n      _this.step = 'initialized';\n    }\n\n    /**\n     * Shortcut to this.factory.get\n     * @param  {uuid4} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id) {\n      var _this = this;\n\n      return _this.factory.get(id);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params\n      };\n\n      return _this.factory.synchronizer.synchronize(config).then(resolved, rejected, notify);\n\n      function resolved(results) {\n        $rootScope.$emit('angularJsonAPI:collection:fetch', 'resolved', results);\n\n        _this.errors.synchronization = [];\n        _this.data = $jsonapi.proccesResults(results.data);\n\n        results.finish();\n\n        return _this;\n      }\n\n      function rejected(results) {\n        $rootScope.$emit('angularJsonAPI:collection:fetch', 'rejected', results);\n\n        _this.errors.synchronization = results.errors;\n\n        results.finish();\n\n        return _this;\n      }\n\n      function notify(results) {\n        $rootScope.$emit('angularJsonAPI:collection:fetch', 'notify', results);\n\n        return _this;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider() {\n    var memory = {};\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPIFactory) {\n      return {\n        form: form,\n        get: get,\n        remove: remove,\n        all: all,\n        addFactory: addFactory,\n        getFactory: getFactory,\n        clearAll: clearAll,\n        proccesResults: proccesResults\n      };\n\n      function addFactory(schema, synchronization) {\n        var factory = new AngularJsonAPIFactory(schema, synchronization);\n\n        memory[schema.type] = factory;\n      }\n\n      function getFactory(type) {\n        return memory[type];\n      }\n\n      function form(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t add not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].isNew.form;\n      }\n\n      function get(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].get(id);\n      }\n\n      function remove(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t remove not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].remove(id);\n      }\n\n      function all(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get all of not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].all();\n      }\n\n      function clearAll() {\n        angular.forEach(memory, function(factory) {\n          factory.clear();\n        });\n      }\n\n      function proccesResults(results) {\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n        }\n\n        console.log(results);\n\n        var objects = [];\n\n        angular.forEach(results.data, function(data) {\n          objects.push(getFactory(data.type).cache.addOrUpdate(data));\n        });\n\n        angular.forEach(results.included, function(data) {\n          getFactory(data.type).cache.addOrUpdate(data);\n        });\n\n        return objects;\n      }\n    }\n  }\n\n})();\n\n"],"sourceRoot":"/source/"}