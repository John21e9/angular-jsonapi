{"version":3,"sources":["/source/jsonapi.module.js","/source/model/model-validator/model-validator.js","/source/model/model-linker/model-linker.js","angular-jsonapi.min.js","/source/model/model-form/model-form.js","/source/model/abstract-model/abstract-model.js","/source/factory/factory-cache/factory-cache.factory.js","/source/utils/lazy-property.js","/source/utils/kebab-case.js","/source/utils/all-settled.js","/source/synchronizers/synchronizer-simple.js","/source/synchronizers/synchronizer-prototype.js","/source/synchronizations/synchronization-rest.js","/source/synchronizations/synchronization-prototype.js","/source/synchronizations/synchronization-local.js","/source/schema/schema.js","/source/schema/schema-link.js","/source/model/model.js","/source/factory/factory.js","/source/collection/collection.js","/source/jsonapi.provider.js","/source/jsonapi.config.js"],"names":["angular","module","constant","pluralize","AngularJsonAPIModelValidatorService","validateForm","schema","data","validateField","key","_this","this","service","AngularJsonAPIModelLinkerService","$log","toLinkData","object","type","id","link","target","undefined","error","polymorphic","model","__addHasMany","__addHasOne","unlink","__removeHasMany","__removeHasOne","debug","relationships","isArray","indexOf","push","log","index","splice","$inject","AngularJsonAPIModelFormWrapper","AngularJsonAPIModelForm","parent","attributes","reset","toJson","copy","forEach","value","save","validator","errors","validation","validate","prototype","factory","AngularJsonAPIAbstractModelWrapper","uuid4","$rootScope","$injector","$q","AngularJsonAPIAbstractModel","saved","unstable","removed","loadingCount","name","promises","__setData","form","resolve","response","$emit","update","finish","deferred","reject","notify","defer","hasErrors","config","action","hasOwnProperty","synchronize","then","promise","refresh","$jsonapi","proccesResults","get","params","remove","unlinkAll","parentFactory","cache","clearRemoved","revertRemove","removeReflectionLink","reflectionKey","reflectionSchema","linksObj","reflection","bind","isObject","all","status","statusText","validatedData","updatedAt","Date","now","initialize","setAttributes","validators","setRelationships","linkOne","getFactory","AngularJsonAPICacheWrapper","AngularJsonAPICache","size","indexIds","addOrUpdate","Model","fromJson","json","collection","objectData","clear","map","setIndexIds","array","element","isString","propertyName","callback","result","done","Object","defineProperty","call","enumerable","configurable","str","replace","toLowerCase","$provide","decorator","$delegate","allSettled","resolvedCallback","rejectedCallback","wrap","when","isFunction","success","reason","wrapped","AngularJsonAPISynchronizerSimpleWrapper","AngularJsonAPISynchronizerPrototype","AngularJsonAPISynchronizerSimple","synchronizations","state","synchronization","synchronizer","step","resolved","results","afterHooks","hook","length","finishHooks","rejected","noop","beginHooks","beforeHooks","synchronizationHooks","create","constructor","AngularJsonAPISynchronizerPrototypeWrapper","AngularJsonAPISynchronizationRestWrapper","AngularJsonAPISynchronizationPrototype","toKebabCase","$http","AngularJsonAPISynchronizationRest","url","method","headers","resolveHttp","rejectHttp","console","add","rejectServerOffline","rejectNoConnection","Accept","Content-Type","AngularJsonAPISynchronizationPrototypeWrapper","allHooks","options","hookName","loading","begin","beforeSynchro","afterSynchro","before","after","AngularJsonAPISynchronizationLocalWrapper","$window","AngularJsonAPISynchronizationLocal","prefix","init","localStorage","getItem","removeItem","updateStorage","setItem","__updateStorage","AngularJsonAPISchemaWrapper","AngularJsonAPISchemaLink","AngularJsonAPISchema","include","linkSchema","linkName","linkSchemaObj","included","extend","join","AngularJsonAPILinkSchrapperLink","plural","singular","AngularJsonAPIModel","modelFactory","schemaObj","functions","metaFunction","metaFunctionName","apply","arguments","AngularJsonAPIFactoryWrapper","AngularJsonAPICollection","AngularJsonAPIFactory","initialized","fetch","generate","AngularJsonAPICollectionWrapper","description","jsonapiProvider","jsonapiFactory","addFactory","memory","names","clearAll","objects","allFactories","factoriesNames","$get","provider","$logProvider","debugEnabled"],"mappings":"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","file":"angular-jsonapi.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false */\n  .constant('pluralize', pluralize);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelValidatorService', AngularJsonAPIModelValidatorService);\n\n  function AngularJsonAPIModelValidatorService() {\n    var _this = this;\n    _this.validateForm = validateForm;\n    _this.validateField = validateField;\n\n    return this;\n\n    /**\n     * Validates form\n     * @param  {object} data Form data\n     * @return {object} Errors object indexed by keys\n     */\n    function validateForm(schema, data) {\n      var _this = this;\n\n      return {};\n    }\n\n    /**\n     * Validates single field\n     * @param  {string} key Field key\n     * @return {array}     Errors array\n     */\n    function validateField(schema, key) {\n      var _this = this;\n\n      return [];\n    }\n\n    // function __validate(validator, attributeValue, attributeName) {\n    //   var errors = [];\n    //   if (angular.isArray(validator)) {\n    //     angular.forEach(validator, function(element) {\n    //       errors = errors.concat(__validate(element, attributeValue, attributeName));\n    //     });\n    //   } else if (angular.isFunction(validator)) {\n    //     var err = validator(attributeValue, attributeName);\n    //     if (angular.isArray(err)) {\n    //       errors.concat(err);\n    //     } else {\n    //       $log.error(\n    //         'Wrong validator type it should return array of errors instead of: ' +\n    //           err.toString()\n    //       );\n    //     }\n    //   } else if (angular.isString(validator)) {\n    //     if (validator === 'text' || validator === 'string') {\n    //       if (!angular.isString(attributeValue)) {\n    //         errors.push(attributeName + ' is not a string ');\n    //       }\n    //     } else if (validator === 'number' || validator === 'integer') {\n    //       if (parseInt(attributeValue).toString() !== attributeValue.toString()) {\n    //         errors.push(attributeName + ' is not a number');\n    //       }\n    //     } else if (validator === 'uuid4') {\n    //       if (!uuid4.validate(attributeValue)) {\n    //         errors.push(attributeName + ' is not a uuid4');\n    //       }\n    //     } else if (validator === 'required') {\n    //       if (attributeValue.toString().length === 0) {\n    //         errors.push(attributeName + ' is empty');\n    //       }\n    //     } else {\n    //       $log.error('Wrong validator type: ' + validator.toString());\n    //     }\n    //   } else if (angular.isObject(validator)) {\n    //     if (validator.maxlength !== undefined && attributeValue.length > validator.maxlength) {\n    //       errors.push(attributeName + ' is too long max ' + validator.maxlength);\n    //     }\n\n    //     if (validator.minlength !== undefined && attributeValue.length < validator.minlength) {\n    //       errors.push(attributeName + ' is too short min ' + validator.minlength);\n    //     }\n\n    //     if (validator.maxvalue !== undefined && parseInt(attributeValue) > validator.maxvalue) {\n    //       errors.push(attributeName + ' is too big max ' + validator.maxvalue);\n    //     }\n\n    //     if (validator.minvalue !== undefined && parseInt(attributeValue) < validator.minvalue) {\n    //       errors.push(attributeName + ' is too small min ' + validator.minvalue);\n    //     }\n    //   } else {\n    //     $log.error('Wrong validator type: ' + validator.toString());\n    //   }\n\n    //   return errors;\n    // }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, schema) {\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return false;\n      }\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return false;\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return false;\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return false;\n      }\n\n      if (schema.type === 'hasMany') {\n        return __addHasMany(object, key, target, schema);\n      } else if (schema.type === 'hasOne') {\n        return __addHasOne(object, key, target, schema);\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, schema) {\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema: ' + key);\n        return;\n      }\n\n      if (schema.type === 'hasMany') {\n        return __removeHasMany(object, key, target, schema);\n      } else if (schema.type === 'hasOne') {\n        return __removeHasOne(object, key, target, schema);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __addHasOne(object, key, target, schema) {\n      $log.debug('addHasOne', object, key, target, schema);\n\n      if (target !== null && object.relationships[key] === target) {\n        // $log.warn(target.data.type + ':' + target.data.id, 'is already linked to', object.data.type + ':' + object.data.id, 'as', key);\n        return false;\n      } else {\n        object.relationships[key] = target;\n        object.data.relationships[key].data = toLinkData(target);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, schema) {\n      $log.debug('addHasMany', object, key, target, schema);\n\n      if (angular.isArray(object.relationships[key]) && object.relationships[key].indexOf(target) > -1) {\n        // $log.warn(target.data.type + ':' + target.data.id, 'is already linked to', object.data.type + ':' + object.data.id, 'as', key);\n        return false;\n      } else {\n        object.relationships[key] = object.relationships[key] || [];\n        object.relationships[key].push(target);\n        object.data.relationships[key].data = object.data.relationships[key].data || [];\n        object.data.relationships[key].data.push(toLinkData(target));\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, schema) {\n      $log.log('removeHasOne', object, key, target, schema);\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        // $log.warn(target.data.type + ':' + target.data.id, 'is not linked to', object.data.type + ':' + object.data.id, 'as', key);\n        return false;\n      } else {\n        object.relationships[key] = null;\n        object.data.relationships[key].data = undefined;\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, schema) {\n      $log.debug('removeHasMany', object, key, target, schema);\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n      } else if (object.relationships[key] === undefined) {\n        return;\n      } else {\n        var index = object.relationships[key].indexOf(target);\n\n        if (index === -1) {\n          // $log.warn(target.data.type + ':' + target.data.id, 'is not linked to', object.data.type + ':' + object.data.id, 'as', key);\n          return false;\n        } else {\n          object.relationships[key].splice(index, 1);\n          object.data.relationships[key].data.splice(index, 1);\n        }\n      }\n\n      return true;\n    }\n\n  }\n})();\n","!function(){\"use strict\";angular.module(\"angular-jsonapi\",[\"uuid4\"]).constant(\"pluralize\",pluralize)}(),function(){\"use strict\";function t(){function t(t,n){return{}}function n(t,n){return[]}var e=this;return e.validateForm=t,e.validateField=n,this}angular.module(\"angular-jsonapi\").service(\"AngularJsonAPIModelValidatorService\",t)}(),function(){\"use strict\";function t(t){function n(t){return null===t?null:{type:t.data.type,id:t.data.id}}function e(n,e,r,i){return void 0===r?(t.error(\"Can't link non existing object\",n,e,r,i),t.error(\"Object:\",n.data.type,n),t.error(\"Target:\",r.data.type,r),t.error(\"Key:\",e),t.error(\"Schema:\",i),!1):void 0===n?(t.error(\"Can't add link to non existing object\",n,e,r,i),t.error(\"Object:\",n.data.type,n),t.error(\"Target:\",r.data.type,r),t.error(\"Key:\",e),t.error(\"Schema:\",i),!1):void 0===i?(t.error(\"Can't add link not present in schema:\",n,e,r,i),t.error(\"Object:\",n.data.type,n),t.error(\"Target:\",r.data.type,r),t.error(\"Key:\",e),t.error(\"Schema:\",i),!1):null!==r&&i.polymorphic===!1&&i.model!==r.data.type?(t.error(\"This relation is not polymorphic, expected: \"+i.model+\" instead of \"+r.data.type),t.error(\"Object:\",n.data.type,n),t.error(\"Target:\",r.data.type,r),t.error(\"Key:\",e),t.error(\"Schema:\",i),!1):\"hasMany\"===i.type?a(n,e,r,i):\"hasOne\"===i.type?o(n,e,r,i):void 0}function r(n,e,r,o){return void 0===o?void t.error(\"Can't remove link not present in schema: \"+e):\"hasMany\"===o.type?s(n,e,r,o):\"hasOne\"===o.type?i(n,e,r,o):void 0}function o(e,r,o,a){return t.debug(\"addHasOne\",e,r,o,a),null!==o&&e.relationships[r]===o?!1:(e.relationships[r]=o,e.data.relationships[r].data=n(o),!0)}function a(e,r,o,a){return t.debug(\"addHasMany\",e,r,o,a),angular.isArray(e.relationships[r])&&e.relationships[r].indexOf(o)>-1?!1:(e.relationships[r]=e.relationships[r]||[],e.relationships[r].push(o),e.data.relationships[r].data=e.data.relationships[r].data||[],e.data.relationships[r].data.push(n(o)),!0)}function i(n,e,r,o){return t.log(\"removeHasOne\",n,e,r,o),void 0!==r&&n.relationships[e]!==r?!1:(n.relationships[e]=null,n.data.relationships[e].data=void 0,!0)}function s(n,e,r,o){if(t.debug(\"removeHasMany\",n,e,r,o),void 0===r)n.relationships[e]=[],n.data.relationships[e].data=[];else{if(void 0===n.relationships[e])return;var a=n.relationships[e].indexOf(r);if(-1===a)return!1;n.relationships[e].splice(a,1),n.data.relationships[e].data.splice(a,1)}return!0}var c=this;return c.toLinkData=n,c.link=e,c.unlink=r,this}angular.module(\"angular-jsonapi\").service(\"AngularJsonAPIModelLinkerService\",t),t.$inject=[\"$log\"]}(),function(){\"use strict\";function t(t,n){function e(t){var n=this;n.data={id:t.data.id,type:t.data.type,attributes:{},relationships:{}},n.relationships={},n.parent=t,n.schema=t.schema,n.reset()}function r(){var t=this,n=angular.copy(t.data),e={};return angular.forEach(n.relationships,function(t,n){void 0!==t.data&&(e[n]=t)}),n.relationships=e,{data:n}}function o(){var t=this;return t.parent.save()}function a(){var t=this;angular.forEach(t.schema.attributes,function(n,e){t.data.attributes[e]=t.parent.data.attributes[e]||\"\"}),angular.forEach(t.schema.relationships,function(n,e){t.data.relationships[e]=t.parent.data.relationships[e]||{},t.relationships[e]=t.parent.relationships[e]}),t.errors={validation:{}}}function i(){var n,e=this;return n=t.validateForm(e.data),e.errors.validation=n,n}function s(n){var e,r=this;return e=t.validateField(r.data[n],n),r.errors.validation[n]=e,e}function c(t,e){var r=this,o=r.schema.relationships[t];return n.link(r,t,e,o)}function u(t,e){var r=this,o=r.schema.relationships[t];return n.unlink(r,t,e,o)}return e.prototype.save=o,e.prototype.reset=a,e.prototype.validate=i,e.prototype.validateField=s,e.prototype.link=c,e.prototype.unlink=u,e.prototype.toJson=r,e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelForm\",t),t.$inject=[\"AngularJsonAPIModelValidatorService\",\"AngularJsonAPIModelLinkerService\"]}(),function(){\"use strict\";function t(t,n,e,r,o,a,i){function s(n,e,r){var o=this;n.relationships=n.relationships||{},o.saved=e||!0,o[\"synchronized\"]=!1,o.unstable=r||!1,o.removed=!1,o.loadingCount=0,o.data={relationships:{},attributes:{}},o.relationships={},angular.forEach(o.schema.relationships,function(t,n){o.relationships[n]=void 0}),o.errors={validation:{}},o.promises={},v(o,n,!0),o.form=new t(o)}function c(){function t(t){r.$emit(\"angularJsonAPI:object:save\",\"resolved\",t),o.update(o.form.data),t.finish(),a.resolve(o)}function n(t){r.$emit(\"angularJsonAPI:object:save\",\"rejected\",t),t.finish(),a.reject(t.errors)}function e(t){r.$emit(\"angularJsonAPI:object:save\",\"notify\",t),a.notify(t.errors)}var o=this,a=i.defer(),s=!1,c={action:\"update\",object:o};o.saved===!1&&(c.action=\"add\");var u=o.form.validate();for(var l in u)u.hasOwnProperty(l)&&(s=!0);return s===!0?a.reject(u):o.synchronize(c).then(t,n,e),a.promise}function u(){var t=this;return t.form.reset()}function l(){function t(t){r.$emit(\"angularJsonAPI:object:refresh\",\"resolved\",t),s.proccesResults(t.data),t.finish(),u[\"synchronized\"]=!0,u.unstable=!1,c.resolve(t)}function n(t){r.$emit(\"angularJsonAPI:object:refresh\",\"rejected\",t),t.finish(),c.reject(t)}function e(t){r.$emit(\"angularJsonAPI:object:refresh\",\"notify\",t),c.notify(t)}var s=o.get(\"$jsonapi\"),c=i.defer(),u=this,l={action:\"refresh\",object:u,params:u.schema.params.get};return u.saved===!1?(a.error(\"Can't refresh new object\"),c.reject(\"Can't refresh new object\")):u.synchronize(l).then(t,n,e),c.promise}function d(){var t=this,n=angular.copy(t.data),e={};return angular.forEach(n.relationships,function(t,n){void 0!==t.data&&(e[n]=t)}),n.relationships=e,{data:n}}function h(){function t(t){r.$emit(\"angularJsonAPI:object:remove\",\"resolved\",t),o.removed=!0,o.unlinkAll(),o.parentFactory.cache.clearRemoved(o.data.id),t.finish(),a.resolve(t)}function n(t){r.$emit(\"angularJsonAPI:object:remove\",\"rejected\",t),o.parentFactory.cache.revertRemove(o.data.id),t.finish(),a.reject(t)}function e(t){r.$emit(\"angularJsonAPI:object:remove\",\"notify\",t),a.notify(t)}var o=this,a=i.defer(),s={action:\"remove\",object:o};return o.parentFactory.cache.remove(o.data.id),o.saved===!1?a.resolve():o.synchronize(s).then(t,n,e),a.promise}function f(){var t=this;angular.forEach(t.relationships,function(e,r){n.unlink(t,r,void 0,t.schema.relationships[r])})}function p(t,e){function o(t){r.$emit(\"angularJsonAPI:object:link\",\"resolved\",t),c.resolve(u),u.unstable=!1,t.finish(),c.resolve(t)}function a(o){r.$emit(\"angularJsonAPI:object:link\",\"rejected\",o),n.unlink(u,t,e,l),n.unlink(e,d,u,h),c.reject(o.errors),o.finish(),c.reject(o)}function s(t){r.$emit(\"angularJsonAPI:object:link\",\"notify\",t),c.notify(t)}var c=i.defer(),u=this,l=u.schema.relationships[t],d=l.reflection,h=e.schema.relationships[d];return n.link(u,t,e,l)&&n.link(e,d,u,h)?(i.all(u.synchronize({action:\"link\",object:u,target:e,key:t}),u.synchronize({action:\"linkReflection\",object:u,target:e,key:t})).then(o,a,s),c.promise):(c.reject({errors:[{status:0,statusText:\"Error when linking.\"}]}),c.promise)}function y(t,e){function o(t){r.$emit(\"angularJsonAPI:object:unlink\",\"resolved\",t),u.resolve(l),l.unstable=!1,t.finish(),u.resolve(t)}function a(o){r.$emit(\"angularJsonAPI:object:unlink\",\"rejected\",o),n.unlink(l,t,e,d),n.unlink(e,h,l,f),u.reject(o.errors),o.finish(),u.reject(o)}function s(t){r.$emit(\"angularJsonAPI:object:unlink\",\"notify\",t),u.notify(t)}var c,u=i.defer(),l=this,d=l.schema.relationships[t],h=d.reflection,f=e.schema.relationships[h];return n.unlink(l,t,e,d)&&n.unlink(e,h,l,f)?(c=i.all(l.synchronize({action:\"unlink\",object:l,target:e,key:t}),l.synchronize({action:\"unlinkReflection\",object:l,target:e,key:t})),c.then(o,a,s),u.promise):(u.reject({errors:[{status:0,statusText:\"Error when unlinking\"}]}),u.promise)}function g(t){var n=this;return v(n,t)===!0?(n.reset(),n[\"synchronized\"]=!0,n.updatedAt=Date.now(),!0):!1}function v(t,r,i){function s(n,e){t.data.attributes[e]=r.attributes[e]}function c(n,e){void 0===r.relationships[e]?\"hasOne\"===n.type?t.data.relationships[e]={data:void 0}:\"hasMany\"===n.type&&(t.data.relationships[e]={data:[]}):(t.data.relationships[e]=r.relationships[e],\"hasOne\"===n.type?u(t,e,n,t.data.relationships[e].data):\"hasMany\"===n.type&&angular.forEach(t.data.relationships[e].data,u.bind(void 0,t,e,n)))}function u(t,e,r,o){if(null===o)return void n.link(t,e,null,r);if(void 0!==o){var a=l.getFactory(o.type),s=a.cache.get(o.id),c=r.reflection,u=s.schema.relationships[c];n.link(t,e,s,r),i!==!0&&c!==!1&&n.link(s,c,t,u)}}var l=o.get(\"$jsonapi\"),d=t.schema;return t.data.id=r.id,t.data.type=r.type,t.parentFactory.schema.type!==r.type?(a.error(\"Different type then factory\",t.parentFactory.schema.type,r),!1):e.validate(t.data.id)?(r.attributes=r.attributes||{},r.relationships=r.relationships||{},angular.forEach(d.attributes,s),angular.forEach(d.relationships,c),!0):(a.error(\"Invalid id\"),!1)}return s.prototype.refresh=l,s.prototype.remove=h,s.prototype.reset=u,s.prototype.save=c,s.prototype.update=g,s.prototype.link=p,s.prototype.unlink=y,s.prototype.unlinkAll=f,s.prototype.toJson=d,s}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractModel\",t),t.$inject=[\"AngularJsonAPIModelForm\",\"AngularJsonAPIModelLinkerService\",\"uuid4\",\"$rootScope\",\"$injector\",\"$log\",\"$q\"]}(),function(){\"use strict\";function t(t,n){function e(t){var n=this;n.factory=t,n.data={},n.removed={},n.size=0,n.indexIds=[]}function r(t){var e=this,r=t.id;return void 0===r?void n.error(\"Can't add data without id!\",t):(void 0===e.data[r]?(e.data[r]=new e.factory.Model(t),e.size+=1):e.data[r].update(t),e.data[r])}function o(t){var n=this,e=angular.fromJson(t);angular.isObject(e)&&void 0!==e.data&&(n.updatedAt=e.updatedAt,n.indexIds=e.indexIds,angular.forEach(e.data,function(t){var e=t.data;n.addOrUpdate(e,t.updatedAt)}))}function a(){var t=this,n={data:{},updatedAt:t.updatedAt,indexIds:t.indexIds};return angular.forEach(t.data,function(t,e){n.data[e]=t.toJson()}),angular.toJson(n)}function i(){var t=this;t.data={},t.removed={}}function s(t){var n=this;return void 0===n.data[t]&&(n.data[t]=new n.factory.Model({id:t,type:n.factory.Model.prototype.schema.type},!0,!0)),n.data[t]}function c(t){var n=this;return n.indexIds.map(n.get.bind(n))}function u(n){var e=this;e.indexIds=[],angular.forEach(n,function(n){angular.isString(n)&&t.validate(n)?e.indexIds.push(n):angular.isObject(n)&&t.validate(n.data.id)&&e.indexIds.push(n.data.id)})}function l(t){var n=this;return void 0!==n.data[t]&&(n.removed[t]=n.data[t],delete n.data[t],n.size-=1),n.removed[t]}function d(t){var n=this;return void 0!==n.removed[t]&&(n.data[t]=n.removed[t],delete n.removed[t],n.size+=1),n.data[t]}function h(t){var n=this;delete n.removed[t]}return e.prototype.get=s,e.prototype.index=c,e.prototype.setIndexIds=u,e.prototype.addOrUpdate=r,e.prototype.fromJson=o,e.prototype.toJson=a,e.prototype.clear=i,e.prototype.remove=l,e.prototype.revertRemove=d,e.prototype.clearRemoved=h,e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICache\",t),t.$inject=[\"uuid4\",\"$log\"]}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"lazyProperty\",function(t,n,e){var r,o;Object.defineProperty(t,n,{get:function(){return o||(o=!0,r=e.call(t)),r},enumerable:!0,configurable:!0})})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"toKebabCase\",function(t){return t.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase()})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$provide\",function(t){t.decorator(\"$q\",[\"$delegate\",function(t){var n=t;return n.allSettled=n.allSettled||function(t,e,r){function o(t){return n.when(t).then(function(t){return angular.isFunction(e)&&e(t),{success:!0,value:t}},function(t){return angular.isFunction(r)&&r(t),{success:!1,reason:t}})}var a=angular.isArray(t)?[]:{};return angular.forEach(t,function(t,n){a.hasOwnProperty(n)||(a[n]=o(t))}),n.all(a)},n}])}])}(),function(){\"use strict\";function t(t,n,e){function r(n){var e=this;e.state={},t.call(e,n),angular.forEach(n,function(t){t.synchronizer=e})}function o(r){function o(t){d.notify({step:\"synchronization\",data:t})}function a(t){d.notify({step:\"synchronization\",errors:t})}function i(t){u.state[h]=u.state[h]||{},u.state[h].success=!0,angular.forEach(t,function(t){t.success===!1&&(u.state[h].success=!1)}),angular.forEach(u.synchronizations,function(n){angular.forEach(n.afterHooks[h],function(n){d.notify({step:\"after\",errors:n.call(u,r,t)})})});var n,e=[];angular.forEach(t,function(t){t.success===!0?n=t.value:e.push(t.reason)}),e.length>0?d.reject({data:n,finish:s,errors:e}):d.resolve({data:n,finish:s,errors:e})}function s(){angular.forEach(u.synchronizations,function(t){angular.forEach(t.finishHooks[h],function(t){d.notify({step:\"finish\",errors:t.call(u,r)})})})}function c(t){e.error(\"All settled rejected! Something went wrong\"),d.reject({finish:angular.noop,errors:t})}var u=this,l=[],d=n.defer(),h=r.action;return t.prototype.synchronize.call(u,r),angular.forEach(u.synchronizations,function(t){angular.forEach(t.beginHooks[h],function(t){d.notify({step:\"begin\",data:t.call(u,r)})})}),angular.forEach(u.synchronizations,function(t){angular.forEach(t.beforeHooks[h],function(t){d.notify({step:\"before\",data:t.call(u,r)})})}),angular.forEach(u.synchronizations,function(t){angular.forEach(t.synchronizationHooks[h],function(t){l.push(t.call(u,r))})}),n.allSettled(l,o,a).then(i,c),d.promise}return r.prototype=Object.create(t.prototype),r.prototype.constructor=r,r.prototype.synchronize=o,r}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerSimple\",t),t.$inject=[\"AngularJsonAPISynchronizerPrototype\",\"$q\",\"$log\"]}(),function(){\"use strict\";function t(t){function n(t){var n=this;n.synchronizations=t}function e(n){var e=this;t.debug(\"Synchro Collection\",e.factory.Model.prototype.schema.type,n),void 0===n.action&&t.error(\"Can't synchronize undefined action\",n)}return n.prototype.synchronize=e,n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerPrototype\",t),t.$inject=[\"$log\"]}(),function(){\"use strict\";function t(t,n,e,r,o){function a(a){function i(t){return o({method:\"GET\",headers:g,url:a,params:t.params||{}}).then(f,p)}function s(t){return o({method:\"GET\",headers:g,url:a+\"/\"+t.object.data.id,params:t.params||{}}).then(f,p)}function c(t){return o({method:\"DELETE\",headers:g,url:a+\"/\"+t.object.data.id}).then(f,p)}function u(t){var n=r.defer();return t.object.removed===!0?n.reject({errors:[{status:0,statusText:\"Object has been removed\"}]}):void 0===t.target||void 0===t.target.data.id?n.reject({errors:[{status:0,statusText:\"Can't unlink object without id through rest call\"}]}):o({method:\"DELETE\",headers:g,url:a+\"/\"+t.object.data.id+\"/relationships/\"+e(t.key)+\"/\"+t.target.data.id}).then(f,p).then(n.resolve,n.reject),n.promise}function l(t){var i=r.defer();return t.object.removed===!0?i.reject({errors:[{status:0,statusText:\"Object has been removed\"}]}):void 0===t.target||void 0===t.target.data.id?i.reject({errors:[{status:0,statusText:\"Can't link object without id through rest call\"}]}):o({method:\"POST\",headers:g,url:a+\"/\"+t.object.data.id+\"/relationships/\"+e(t.key),data:{data:[n.toLinkData(t.target)]}}).then(f,p).then(i.resolve,i.reject),i.promise}function d(t){return console.log(t.object.form.toJson()),o({method:\"PUT\",headers:g,url:a+\"/\"+t.object.data.id,data:t.object.form.toJson()}).then(f,p)}function h(t){return o({method:\"POST\",headers:g,url:a+\"/\",data:t.object.form.toJson()}).then(f,p)}function f(t){return r.resolve(t.data)}function p(t){function n(){a.reject({status:t.status,statusText:\"Server is offline\"})}function e(){a.reject({status:t.status,statusText:\"No internet connection\"})}var a=r.defer();return console.log(t),0===t.status?o({method:\"GET\",url:\"https://status.cloud.google.com/incidents.schema.json\"}).then(n,e):a.reject({status:t.status,statusText:t.statusText}),a.promise}var y=this,g={Accept:\"application/vnd.api+json\",\"Content-Type\":\"application/vnd.api+json\"};t.call(y),y.synchronization(\"remove\",c),y.synchronization(\"unlink\",u),y.synchronization(\"link\",l),y.synchronization(\"update\",d),y.synchronization(\"add\",h),y.synchronization(\"all\",i),y.synchronization(\"get\",s),y.synchronization(\"refresh\",s)}return a.prototype=Object.create(t.prototype),a.prototype.constructor=a,a}angular.module(\"angular-jsonapi-rest\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationRest\",t),t.$inject=[\"AngularJsonAPISynchronizationPrototype\",\"AngularJsonAPIModelLinkerService\",\"toKebabCase\",\"$q\",\"$http\"]}(),function(){\"use strict\";function t(){function t(){var t=this,n=[\"add\",\"init\",\"get\",\"all\",\"clear\",\"remove\",\"unlink\",\"unlinkReflection\",\"link\",\"linkReflection\",\"update\",\"refresh\"];t.state={},t.beginHooks={},t.beforeHooks={},t.synchronizationHooks={},t.afterHooks={},t.finishHooks={},t.options={},angular.forEach(n,function(n){t.beginHooks[n]=[],t.beforeHooks[n]=[],t.synchronizationHooks[n]=[],t.afterHooks[n]=[],t.finishHooks[n]=[],t.state[n]={loading:!1,success:!0}})}function n(t,n){var e=this;e.beginHooks[t].push(n)}function e(t,n){var e=this;e.finishHooks[t].push(n)}function r(t,n){var e=this;e.beforeHooks[t].push(n)}function o(t,n){var e=this;e.afterHooks[t].push(n)}function a(t,n){var e=this;e.synchronizationHooks[t].push(n)}return t.prototype.before=r,t.prototype.after=o,t.prototype.begin=n,t.prototype.finish=e,t.prototype.synchronization=a,t}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizationPrototype\",t)}(),function(){\"use strict\";function t(t,n,e){function r(r){function o(){var t=s.synchronizer.factory.schema.type;return e.when(n.localStorage.getItem(r+\".\"+t))}function a(){var t=s.synchronizer.factory.schema.type;n.localStorage.removeItem(r+\".\"+t)}function i(){var t=s.synchronizer.factory.schema.type,e=s.synchronizer.factory.cache;n.localStorage.setItem(r+\".\"+t,e.toJson())}var s=this;r=r||\"AngularJsonAPI\",s.__updateStorage=i,t.call(s),s.synchronization(\"init\",o),s.begin(\"clear\",a),s.begin(\"remove\",i),s.begin(\"refresh\",i),s.begin(\"unlink\",i),s.begin(\"unlinkReflection\",i),s.begin(\"link\",i),s.begin(\"linkReflection\",i),s.begin(\"update\",i),s.begin(\"add\",i),s.finish(\"get\",i),s.finish(\"all\",i),s.finish(\"init\",i),s.finish(\"clear\",i),s.finish(\"remove\",i),s.finish(\"refresh\",i),s.finish(\"unlink\",i),s.finish(\"unlinkReflection\",i),s.finish(\"link\",i),s.finish(\"linkReflection\",i),s.finish(\"update\",i),s.finish(\"add\",i),s.finish(\"get\",i),s.finish(\"all\",i)}return r.prototype=Object.create(t.prototype),r.prototype.constructor=r,r}angular.module(\"angular-jsonapi-local\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationLocal\",t),t.$inject=[\"AngularJsonAPISynchronizationPrototype\",\"$window\",\"$q\"]}(),function(){\"use strict\";function t(t,n,e){function r(t){var n=this,r=t.include||{};t.include=r,r.get=t.include.get||[],r.all=t.include.all||[],n.params={get:{},all:{}},angular.forEach(t.relationships,function(n,o){var a=new e(n,o,t.type);t.relationships[o]=a,a.included===!0&&(r.get.push(o),\"hasOne\"===a.type&&r.all.push(o))}),angular.extend(n,t),r.get.length>0&&(n.params.get.include=r.get.join(\",\")),r.all.length>0&&(n.params.all.include=r.all.join(\",\"))}return r}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchema\",t),t.$inject=[\"$log\",\"pluralize\",\"AngularJsonAPISchemaLink\"]}(),function(){\"use strict\";function t(t,n){function e(e,r,o){var a=this;angular.isString(e)?(a.model=n.plural(r),a.type=e,a.polymorphic=!1,a.reflection=o):(void 0===e.type&&t.error(\"Schema of link without a type: \",e,r),\"hasMany\"!==e.type&&\"hasOne\"!==e.type&&t.error(\"Schema of link with wrong type: \",e.type,\"available: hasOne, hasMany\"),a.model=e.model||n.plural(r),a.type=e.type,a.polymorphic=e.polymorphic||!1,a.reflection=void 0===e.reflection?\"hasMany\"===a.type?n.singular(o):o:e.reflection,a.included=e.included||!1)}return e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchemaLink\",t),t.$inject=[\"$log\",\"pluralize\"]}(),function(){\"use strict\";function t(t,n,e){function r(n,r){var o=function(n,r,o){var a=this;n.type!==a.schema.type&&e.error(\"Data type other then declared in schema: \",n.type,\" instead of \",a.schema.type),t.call(a,n,r,o),a.form.parent=a};return o.prototype=Object.create(t.prototype),o.prototype.constructor=o,o.prototype.schema=n,o.prototype.parentFactory=r,o.prototype.synchronize=r.synchronizer.synchronize.bind(r.synchronizer),angular.forEach(n.functions,function(t,n){o.prototype[n]=function(){return t.apply(this,arguments)}}),o}return{model:r}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModel\",t),t.$inject=[\"AngularJsonAPIAbstractModel\",\"AngularJsonAPISchema\",\"$log\"]}(),function(){\"use strict\";function t(t,n,e,r,o,a,i){function s(r,o){function i(t){a.$emit(\"angularJsonAPI:factory:init\",\"resolved\",t),u.cache.fromJson(t.data),u.initialized=!0,t.finish()}function s(t){a.$emit(\"angularJsonAPI:factory:init\",\"rejected\",t),t.finish(),u.initialized=!0}function c(t){a.$emit(\"angularJsonAPI:factory:init\",\"notify\",t)}var u=this,l={action:\"init\"};u.schema=new n(r),u.cache=new e(u),u.synchronizer=o,u.synchronizer.factory=u,u.Model=t.model(u.schema,u),u.initialized=!1,o.factory=u,u.synchronizer.synchronize(l).then(i,s,c)}function c(t){var n=this;return o.validate(t)?n.cache.get(t).refresh():i.reject({errors:[{status:0,statusText:\"Invalid id not uuid4\"}]})}function u(t){var n=this;t=t||{};var e=new r(n,angular.extend(t,n.schema.params.all));return e.fetch(),e}function l(t){var n=this,e=n.cache.remove(t);return e.remove()}function d(){var t=this,n=new t.Model({type:t.schema.type,id:o.generate(),attributes:{},relationships:{}},!1);return n}function h(){function t(t){a.$emit(\"angularJsonAPI:factory:clear\",\"resolved\",t),t.finish(),o.resolve(t)}function n(t){a.$emit(\"angularJsonAPI:factory:clear\",\"resolved\",t),t.finish(),o.reject(t)}function e(t){a.$emit(\"angularJsonAPI:factory:clear\",\"notify\",t),o.notify(t)}var r=this,o=i.defer(),s={action:\"clear\"};return r.cache.clear(),r.synchronizer.synchronize(s).then(t,n,e),o}return s.prototype.get=c,s.prototype.all=u,s.prototype.remove=l,s.prototype.initialize=d,s.prototype.clear=h,s}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIFactory\",t),t.$inject=[\"AngularJsonAPIModel\",\"AngularJsonAPISchema\",\"AngularJsonAPICache\",\"AngularJsonAPICollection\",\"uuid4\",\"$rootScope\",\"$q\"]}(),function(){\"use strict\";function t(t,n,e){function r(t,n){var e=this;e.factory=t,e.type=t.schema.type,e.params=n,e.errors={synchronization:{name:\"Synchronization\",description:\"Errors during synchronization\",errors:[]}},e.error=!1,e.data=e.factory.cache.index(e.params),e[\"synchronized\"]=!1}function o(t){var n=this;return n.factory.get(t)}function a(){function r(n){t.$emit(\"angularJsonAPI:collection:fetch\",\"resolved\",n),i.errors.synchronization.errors=[],i.data=c.proccesResults(n.data),i.error=!1,i.updatedAt=Date.now(),i[\"synchronized\"]=!0,i.factory.cache.setIndexIds(i.data),n.finish(),s.resolve(i)}function o(n){t.$emit(\"angularJsonAPI:collection:fetch\",\"rejected\",n),i.errors.synchronization.errors=n.errors,i.error=!0,n.finish(),s.reject(n)}function a(n){t.$emit(\"angularJsonAPI:collection:fetch\",\"notify\",n),s.notify(n)}var i=this,s=e.defer(),c=n.get(\"$jsonapi\"),u={action:\"all\",params:i.params};return i.factory.synchronizer.synchronize(u).then(r,o,a),s.promise}return r.prototype.fetch=a,r.prototype.refresh=a,r.prototype.get=o,r}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICollection\",t),t.$inject=[\"$rootScope\",\"$injector\",\"$q\"]}(),function(){\"use strict\";function t(){function t(t,r){function o(t,o){var a=new r(t,o);n[t.type]=a,e.push(t.type)}function a(t){return n[t]}function i(e){return void 0===n[e]&&t.error(\"Can\t add not existing object type: \"+e+\". Use initialize(Model, datas).\"),n[e].saved.form}function s(e,r){return void 0===n[e]&&t.error(\"Can\t get not existing object type: \"+e+\". Use initialize(Model, datas).\"),n[e].get(r)}function c(e,r){return void 0===n[e]&&t.error(\"Can\t remove not existing object type: \"+e+\". Use initialize(Model, datas).\"),n[e].remove(r)}function u(e){return void 0===n[e]&&t.error(\"Can\t get all of not existing object type: \"+e+\". Use initialize(Model, datas).\"),n[e].all()}function l(){angular.forEach(n,function(t){t.clear()})}function d(n){if(void 0===n&&t.error(\"Can't proccess results:\",n),angular.forEach(n.included,function(t){a(t.type).cache.addOrUpdate(t)}),angular.isArray(n.data)){var e=[];return angular.forEach(n.data,function(t){e.push(a(t.type).cache.addOrUpdate(t))}),e}return a(n.data.type).cache.addOrUpdate(n.data)}return{form:i,get:s,remove:c,all:u,addFactory:o,getFactory:a,clearAll:l,proccesResults:d,allFactories:n,factoriesNames:e}}var n={},e=[];this.$get=t,t.$inject=[\"$log\",\"AngularJsonAPIFactory\"]}angular.module(\"angular-jsonapi\").provider(\"$jsonapi\",t)}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$logProvider\",function(t){t.debugEnabled(!1)}])}();\n//# sourceMappingURL=angular-jsonapi.min.js.map","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidatorService,\n    AngularJsonAPIModelLinkerService\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n    AngularJsonAPIModelForm.prototype.validateField = validateField;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return AngularJsonAPIModelForm;\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        id: parent.data.id,\n        type: parent.data.type,\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        _this.data.attributes[key] = _this.parent.data.attributes[key] || '';\n      });\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = _this.parent.data.relationships[key] || {};\n        _this.relationships[key] = _this.parent.relationships[key];\n      });\n\n      _this.errors = {\n        validation: {}\n      };\n    }\n\n    /**\n     * Validates form\n     * @return {objec} Errors object indexed by keys\n     */\n    function validate() {\n      var _this = this;\n      var errors;\n\n      errors = AngularJsonAPIModelValidatorService.validateForm(_this.data);\n\n      _this.errors.validation = errors;\n\n      return errors;\n    }\n\n    /**\n     * Validates single field\n     * @param  {string} key Field key\n     * @return {array}     Errors array\n     */\n    function validateField(key) {\n      var _this = this;\n      var errors;\n      errors = AngularJsonAPIModelValidatorService.validateField(\n        _this.data[key],\n        key\n      );\n\n      _this.errors.validation[key] = errors;\n\n      return errors;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target) {\n      var _this = this;\n      var schema = _this.schema.relationships[key];\n\n      return AngularJsonAPIModelLinkerService.link(_this, key, target, schema);\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target) {\n      var _this = this;\n      var schema = _this.schema.relationships[key];\n\n      return AngularJsonAPIModelLinkerService.unlink(_this, key, target, schema);\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelForm,\n    AngularJsonAPIModelLinkerService,\n    uuid4,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {Boolean} saved   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, saved, unstable) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      _this.saved = saved || true;\n      _this.synchronized = false;\n      _this.unstable = unstable || false;\n\n      _this.removed = false;\n      _this.loadingCount = 0;\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(schema, name) {\n        _this.relationships[name] = undefined;\n      });\n\n      _this.errors = {\n        validation: {}\n      };\n\n      _this.promises = {};\n\n      __setData(_this, data, true);\n\n      _this.form = new AngularJsonAPIModelForm(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save() {\n      var _this = this;\n      var deferred = $q.defer();\n      var hasErrors = false;\n      var config = {\n        action: 'update',\n        object: _this\n      };\n\n      if (_this.saved === false) {\n        config.action = 'add';\n      }\n\n      var errors = _this.form.validate();\n\n      for (var error in errors) {\n        if (errors.hasOwnProperty(error)) {\n          hasErrors = true;\n        }\n      }\n\n      if (hasErrors === true) {\n        deferred.reject(errors);\n      } else {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:object:save', 'resolved', response);\n        _this.update(_this.form.data);\n\n        response.finish();\n\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:object:save', 'rejected', response);\n        response.finish();\n\n        deferred.reject(response.errors);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:object:save', 'notify', response);\n\n        deferred.notify(response.errors);\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      return _this.form.reset();\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh() {\n      var $jsonapi = $injector.get('$jsonapi');\n      var deferred = $q.defer();\n      var _this = this;\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: _this.schema.params.get\n      };\n\n      if (_this.saved === false) {\n        $log.error('Can\\'t refresh new object');\n        deferred.reject('Can\\'t refresh new object');\n      } else {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:object:refresh', 'resolved', response);\n        $jsonapi.proccesResults(response.data);\n        response.finish();\n\n        _this.synchronized = true;\n        _this.unstable = false;\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:object:refresh', 'rejected', response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:object:refresh', 'notify', response);\n\n        deferred.notify(response);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      var config = {\n        action: 'remove',\n        object: _this\n      };\n\n      _this.parentFactory.cache.remove(_this.data.id);\n\n      if (_this.saved === false) {\n        deferred.resolve();\n      } else {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:object:remove', 'resolved', response);\n        _this.removed = true;\n        _this.unlinkAll();\n        _this.parentFactory.cache.clearRemoved(_this.data.id);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:object:remove', 'rejected', response);\n        _this.parentFactory.cache.revertRemove(_this.data.id);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:object:remove', 'notify', response);\n\n        deferred.notify(response);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Unlink all reflection relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll() {\n      var _this = this;\n\n      angular.forEach(_this.relationships, function(linksObj, key) {\n        var schema = _this.schema.relationships[key];\n        var reflectionKey = schema.reflection;\n\n        if (angular.isArray(linksObj)) {\n          angular.forEach(linksObj, removeReflectionLink.bind(undefined, reflectionKey));\n        } else if (angular.isObject(linksObj)) {\n          removeReflectionLink(reflectionKey, linksObj);\n        }\n      });\n\n      return true;\n\n      function removeReflectionLink(reflectionKey, target) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n      }\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var schema = _this.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (!AngularJsonAPIModelLinkerService.link(_this, key, target, schema) ||\n          !AngularJsonAPIModelLinkerService.link(target, reflectionKey, _this, reflectionSchema)) {\n\n        deferred.reject({errors: [{status: 0, statusText: 'Error when linking.'}]});\n        return deferred.promise;\n      }\n\n      $q.all(_this.synchronize({\n        action: 'link',\n        object: _this,\n        target: target,\n        key: key\n      }),\n\n      _this.synchronize({\n        action: 'linkReflection',\n        object: _this,\n        target: target,\n        key: key\n      })).then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:object:link', 'resolved', response);\n        deferred.resolve(_this);\n\n        _this.unstable = false;\n\n        response.finish();\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:object:link', 'rejected', response);\n\n        AngularJsonAPIModelLinkerService.unlink(_this, key, target, schema);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        deferred.reject(response.errors);\n        response.finish();\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:object:link', 'notify', response);\n\n        deferred.notify(response);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var schema = _this.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema = target.schema.relationships[reflectionKey];\n      var promise;\n\n      if (!AngularJsonAPIModelLinkerService.unlink(_this, key, target, schema) ||\n          !AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema)) {\n\n        deferred.reject({errors: [{status: 0, statusText: 'Error when unlinking'}]});\n        return deferred.promise;\n      }\n\n      promise = $q.all(_this.synchronize({\n        action: 'unlink',\n        object: _this,\n        target: target,\n        key: key\n      }),\n\n      _this.synchronize({\n        action: 'unlinkReflection',\n        object: _this,\n        target: target,\n        key: key\n      }));\n\n      promise.then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:object:unlink', 'resolved', response);\n        deferred.resolve(_this);\n\n        _this.unstable = false;\n\n        response.finish();\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:object:unlink', 'rejected', response);\n\n        AngularJsonAPIModelLinkerService.unlink(_this, key, target, schema);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        deferred.reject(response.errors);\n        response.finish();\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:object:unlink', 'notify', response);\n\n        deferred.notify(response);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData) {\n      var _this = this;\n\n      if (__setData(_this, validatedData) === true) {\n        _this.reset();\n        _this.synchronized = true;\n        _this.updatedAt = Date.now();\n\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData, initialize) {\n\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.parentFactory.schema.type !== validatedData.type) {\n        $log.error('Different type then factory', object.parentFactory.schema.type, validatedData);\n        return false;\n      }\n\n      if (!uuid4.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        if (validatedData.relationships[key] === undefined) {\n          if (schema.type === 'hasOne') {\n            object.data.relationships[key] = {data: undefined};\n          } else if (schema.type === 'hasMany') {\n            object.data.relationships[key] = {data: []};\n          }\n        } else {\n          object.data.relationships[key] = validatedData.relationships[key];\n          if (schema.type === 'hasOne') {\n            linkOne(object, key, schema, object.data.relationships[key].data);\n          } else if (schema.type === 'hasMany') {\n            angular.forEach(\n              object.data.relationships[key].data,\n              linkOne.bind(undefined, object, key, schema)\n            );\n          }\n        }\n      }\n\n      function linkOne(object, key, schema, data) {\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null, schema);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        var factory = $jsonapi.getFactory(data.type);\n        var target = factory.cache.get(data.id);\n        var reflectionKey = schema.reflection;\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n\n        AngularJsonAPIModelLinkerService.link(object, key, target, schema);\n\n        if (initialize !== true && reflectionKey !== false) {\n          AngularJsonAPIModelLinkerService.link(target, reflectionKey, object, reflectionSchema);\n        }\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICache', AngularJsonAPICacheWrapper);\n\n  function AngularJsonAPICacheWrapper(\n    uuid4,\n    $log\n  ) {\n\n    AngularJsonAPICache.prototype.get = get;\n    AngularJsonAPICache.prototype.index = index;\n    AngularJsonAPICache.prototype.setIndexIds = setIndexIds;\n    AngularJsonAPICache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPICache.prototype.fromJson = fromJson;\n    AngularJsonAPICache.prototype.toJson = toJson;\n    AngularJsonAPICache.prototype.clear = clear;\n\n    AngularJsonAPICache.prototype.remove = remove;\n    AngularJsonAPICache.prototype.revertRemove = revertRemove;\n    AngularJsonAPICache.prototype.clearRemoved = clearRemoved;\n\n    return AngularJsonAPICache;\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPICache(factory) {\n      var _this = this;\n\n      _this.factory = factory;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n\n      _this.indexIds = [];\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.factory.Model(validatedData);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      if (angular.isObject(collection) && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n        _this.indexIds = collection.indexIds;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, objectData.updatedAt);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: {},\n        updatedAt: _this.updatedAt,\n        indexIds: _this.indexIds\n      };\n\n      angular.forEach(_this.data, function(object, key) {\n        json.data[key] = object.toJson();\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.factory.Model({id: id, type: _this.factory.Model.prototype.schema.type}, true, true);\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {objec} params\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function index(params) {\n      var _this = this;\n\n      return _this.indexIds.map(_this.get.bind(_this));\n    }\n\n    /**\n     * Cache ids of objects returned by index request\n     * @param {ids array or AngularJsonAPIModel array} array Objects or ids to be cached\n     */\n    function setIndexIds(array) {\n      var _this = this;\n\n      _this.indexIds = [];\n\n      angular.forEach(array, function(element) {\n        if (angular.isString(element) && uuid4.validate(element)) {\n          _this.indexIds.push(element);\n        } else if (angular.isObject(element) && uuid4.validate(element.data.id)) {\n          _this.indexIds.push(element.data.id);\n        }\n      });\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises, resolvedCallback, rejectedCallback) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.when(promise)\n            .then(function(value) {\n              if (angular.isFunction(resolvedCallback)) {\n                resolvedCallback(value);\n              }\n\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              if (angular.isFunction(rejectedCallback)) {\n                rejectedCallback(reason);\n              }\n\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerSimple;\n\n    function AngularJsonAPISynchronizerSimple(synchronizations) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, synchronizations);\n\n      angular.forEach(synchronizations, function(synchronization) {\n        synchronization.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push(result.reason);\n          }\n        });\n\n        if (errors.length > 0) {\n          deferred.reject({data: data, finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(synchronizations) {\n      var _this = this;\n\n      _this.synchronizations = synchronizations;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.factory.Model.prototype.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationRest', AngularJsonAPISynchronizationRestWrapper);\n\n  function AngularJsonAPISynchronizationRestWrapper(\n    AngularJsonAPISynchronizationPrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISynchronizationRest.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationRest.prototype.constructor = AngularJsonAPISynchronizationRest;\n\n    return AngularJsonAPISynchronizationRest;\n\n    function AngularJsonAPISynchronizationRest(url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISynchronizationPrototype.call(_this);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target === undefined || config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t unlink object without id through rest call'}]});\n        } else {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + toKebabCase(config.key) + '/' + config.target.data.id\n          }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target === undefined || config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link object without id through rest call'}]});\n        } else {\n          $http({\n            method: 'POST',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + toKebabCase(config.key),\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]}\n          }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        console.log(config.object.form.toJson());\n        return $http({\n          method: 'PUT',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url + '/',\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function resolveHttp(response) {\n        return $q.resolve(response.data);\n      }\n\n      function rejectHttp(response) {\n        var deferred = $q.defer();\n\n        console.log(response);\n\n        if (response.status === 0) {\n          $http({\n            method: 'GET',\n            url: 'https://status.cloud.google.com/incidents.schema.json'\n          }).then(rejectServerOffline, rejectNoConnection);\n        } else {\n          deferred.reject({status: response.status, statusText: response.statusText});\n        }\n\n        return deferred.promise;\n\n        function rejectServerOffline() {\n          deferred.reject({status: response.status, statusText: 'Server is offline'});\n        }\n\n        function rejectNoConnection() {\n          deferred.reject({status: response.status, statusText: 'No internet connection'});\n        }\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizationPrototype', AngularJsonAPISynchronizationPrototypeWrapper);\n\n  function AngularJsonAPISynchronizationPrototypeWrapper() {\n    AngularJsonAPISynchronizationPrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.after = afterSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.begin = begin;\n    AngularJsonAPISynchronizationPrototype.prototype.finish = finish;\n    AngularJsonAPISynchronizationPrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISynchronizationPrototype;\n\n    function AngularJsonAPISynchronizationPrototype() {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clear',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh'\n      ];\n\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationLocal', AngularJsonAPISynchronizationLocalWrapper);\n\n  function AngularJsonAPISynchronizationLocalWrapper(\n    AngularJsonAPISynchronizationPrototype,\n    $window,\n    $q\n  ) {\n\n    AngularJsonAPISynchronizationLocal.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationLocal.prototype.constructor = AngularJsonAPISynchronizationLocal;\n\n    return AngularJsonAPISynchronizationLocal;\n\n    function AngularJsonAPISynchronizationLocal(prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISynchronizationPrototype.call(_this);\n\n      _this.synchronization('init', init);\n\n      _this.begin('clear', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('refresh', updateStorage);\n      _this.begin('unlink', updateStorage);\n      _this.begin('unlinkReflection', updateStorage);\n      _this.begin('link', updateStorage);\n      _this.begin('linkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clear', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('refresh', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.factory.schema.type;\n        return $q.when($window.localStorage.getItem(prefix + '.' + type));\n      }\n\n      function clear() {\n        var type = _this.synchronizer.factory.schema.type;\n        $window.localStorage.removeItem(prefix + '.' + type);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.factory.schema.type;\n        var cache = _this.synchronizer.factory.cache;\n        $window.localStorage.setItem(prefix + '.' + type, cache.toJson());\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper($log, pluralize, AngularJsonAPISchemaLink) {\n\n    return AngularJsonAPISchema;\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = new AngularJsonAPISchemaLink(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get.join(',');\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all.join(',');\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchemaLink', AngularJsonAPILinkSchrapperLink);\n\n  function AngularJsonAPILinkSchrapperLink($log, pluralize) {\n\n    return AngularJsonAPISchemaLink;\n\n    function AngularJsonAPISchemaLink(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        if (linkSchema.type !== 'hasMany' && linkSchema.type !== 'hasOne') {\n          $log.error('Schema of link with wrong type: ', linkSchema.type, 'available: hasOne, hasMany');\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n\n        if (linkSchema.reflection === undefined) {\n          _this.reflection = _this.type === 'hasMany' ? pluralize.singular(type) : type;\n        } else {\n          _this.reflection = linkSchema.reflection;\n        }\n\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(AngularJsonAPIAbstractModel, AngularJsonAPISchema, $log) {\n\n    return {\n      model: modelFactory\n    };\n\n    function modelFactory(schemaObj, parentFactory) {\n      var Model = function(data, updatedAt, saved) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, updatedAt, saved);\n\n        _this.form.parent = _this;\n      };\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.parentFactory = parentFactory;\n      Model.prototype.synchronize = parentFactory.synchronizer.synchronize.bind(parentFactory.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return Model;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIFactory', AngularJsonAPIFactoryWrapper);\n\n  function AngularJsonAPIFactoryWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPICache,\n    AngularJsonAPICollection,\n    uuid4,\n    $rootScope,\n    $q\n  ) {\n    AngularJsonAPIFactory.prototype.get = get;\n    AngularJsonAPIFactory.prototype.all = all;\n    AngularJsonAPIFactory.prototype.remove = remove;\n    AngularJsonAPIFactory.prototype.initialize = initialize;\n\n    AngularJsonAPIFactory.prototype.clear = clear;\n\n    return AngularJsonAPIFactory;\n\n    /**\n     * AngularJsonAPIFactory constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the factory\n     */\n    function AngularJsonAPIFactory(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = new AngularJsonAPISchema(schema);\n      _this.cache = new AngularJsonAPICache(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.factory = _this;\n\n      _this.Model = AngularJsonAPIModel.model(\n        _this.schema,\n        _this\n      );\n\n      _this.initialized = false;\n\n      synchronizer.factory = _this;\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:factory:init', 'resolved', response);\n        _this.cache.fromJson(response.data);\n        _this.initialized = true;\n\n        response.finish();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:factory:init', 'rejected', response);\n        response.finish();\n        _this.initialized = true;\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:factory:init', 'notify', response);\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id) {\n      var _this = this;\n\n      if (!uuid4.validate(id)) {\n        return $q.reject({errors: [{status: 0, statusText: 'Invalid id not uuid4'}]});\n      }\n\n      return _this.cache.get(id).refresh();\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = params || {};\n\n      var collection = new AngularJsonAPICollection(\n        _this,\n        angular.extend(params, _this.schema.params.all)\n      );\n\n      collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n\n      return object.remove();\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize() {\n      var _this = this;\n\n      var model = new _this.Model({\n        type: _this.schema.type,\n        id: uuid4.generate(),\n        attributes: {},\n        relationships: {}\n      }, false);\n\n      return model;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clear() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: 'clear'\n      };\n\n      _this.cache.clear();\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:factory:clear', 'resolved', response);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:factory:clear', 'resolved', response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:factory:clear', 'notify', response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    $rootScope,\n    $injector,\n    $q\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n\n    return AngularJsonAPICollection;\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIFactory} factory Factory associated with the collection\n     * @param {object} params  Params associated with this factory (such as filters)\n     */\n    function AngularJsonAPICollection(factory, params) {\n      var _this = this;\n\n      _this.factory = factory;\n      _this.type = factory.schema.type;\n      _this.params = params;\n\n      _this.errors = {\n        synchronization: {\n          name: 'Synchronization',\n          description: 'Errors during synchronization',\n          errors: []\n        }\n      };\n\n      _this.error = false;\n\n      _this.data = _this.factory.cache.index(_this.params);\n      _this.synchronized = false;\n    }\n\n    /**\n     * Shortcut to this.factory.get\n     * @param  {uuid4} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id) {\n      var _this = this;\n\n      return _this.factory.get(id);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var deferred = $q.defer();\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params\n      };\n\n      _this.factory.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred.promise;\n\n      function resolve(results) {\n        $rootScope.$emit('angularJsonAPI:collection:fetch', 'resolved', results);\n\n        _this.errors.synchronization.errors = [];\n        _this.data = $jsonapi.proccesResults(results.data);\n        _this.error = false;\n\n        _this.updatedAt = Date.now();\n        _this.synchronized = true;\n\n        _this.factory.cache.setIndexIds(_this.data);\n\n        results.finish();\n\n        deferred.resolve(_this);\n      }\n\n      function reject(results) {\n        $rootScope.$emit('angularJsonAPI:collection:fetch', 'rejected', results);\n\n        _this.errors.synchronization.errors = results.errors;\n        _this.error = true;\n\n        results.finish();\n\n        deferred.reject(results);\n      }\n\n      function notify(results) {\n        $rootScope.$emit('angularJsonAPI:collection:fetch', 'notify', results);\n\n        deferred.notify(results);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider() {\n    var memory = {};\n    var names = [];\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPIFactory) {\n      return {\n        form: form,\n        get: get,\n        remove: remove,\n        all: all,\n        addFactory: addFactory,\n        getFactory: getFactory,\n        clearAll: clearAll,\n        proccesResults: proccesResults,\n\n        allFactories: memory,\n        factoriesNames: names\n      };\n\n      function addFactory(schema, synchronization) {\n        var factory = new AngularJsonAPIFactory(schema, synchronization);\n\n        memory[schema.type] = factory;\n        names.push(schema.type);\n      }\n\n      function getFactory(type) {\n        return memory[type];\n      }\n\n      function form(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t add not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].saved.form;\n      }\n\n      function get(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].get(id);\n      }\n\n      function remove(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t remove not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].remove(id);\n      }\n\n      function all(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get all of not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].all();\n      }\n\n      function clearAll() {\n        angular.forEach(memory, function(factory) {\n          factory.clear();\n        });\n      }\n\n      function proccesResults(results) {\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n        }\n\n        angular.forEach(results.included, function(data) {\n          getFactory(data.type).cache.addOrUpdate(data);\n        });\n\n        if (angular.isArray(results.data)) {\n          var objects = [];\n          angular.forEach(results.data, function(data) {\n            objects.push(getFactory(data.type).cache.addOrUpdate(data));\n          });\n\n          return objects;\n        } else {\n          return getFactory(results.data.type).cache.addOrUpdate(results.data);\n        }\n      }\n    }\n  }\n\n})();\n\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(function($logProvider) {\n    $logProvider.debugEnabled(false);\n  });\n})();\n"],"sourceRoot":"/source/"}