{"version":3,"sources":["/source/jsonapi.module.js","/source/utils/lazy-property.js","/source/utils/kebab-case.js","/source/utils/all-settled.js","/source/synchronization/synchronization.js","angular-jsonapi.min.js","/source/synchronization/synchronization-rest.js","/source/synchronization/synchronization-local.js","/source/collection/collection.factory.js","/source/abstract-data/schema.js","/source/abstract-data/model.factory.js","/source/abstract-data/abstract-data.js","/source/abstract-data/abstract-data-form.js","/source/jsonapi.provider.js"],"names":["angular","module","constant","pluralize","target","propertyName","callback","result","done","Object","defineProperty","get","call","enumerable","configurable","str","replace","toLowerCase","config","$provide","decorator","$delegate","$q","allSettled","promises","wrap","promise","when","then","value","success","reason","wrapped","isArray","forEach","key","hasOwnProperty","all","AngularJsonAPISynchronizationWrapper","AngularJsonAPISynchronization","_this","this","allHooks","state","beginHooks","beforeHooks","synchronizationHooks","afterHooks","finishHooks","options","hookName","loading","extend","synchronization","extendHooks","hooksKey","hooks","concat","begin","action","push","finish","beforeSynchro","afterSynchro","synchronize","collection","object","linkSchema","linkedObject","params","deferred","defer","undefined","loadingCount","hook","results","resolve","reject","prototype","before","after","factory","$inject","AngularJsonAPISynchronizationRestWrapper","$http","toKebabCase","AngularJsonAPISynchronizationRest","url","wrapResp","data","status","headers","afterAll","rawData","included","indexedData","id","addOrUpdate","__remove","allCollections","type","afterGet","method","errors","rest","error","ids","toString","remove","removeLink","linkKey","removed","addLink","toLinkData","update","toPatchData","add","toAddData","Accept","Content-Type","create","constructor","AngularJsonAPISynchronizationLocalWrapper","$window","AngularJsonAPISynchronizationLocal","prefix","init","datas","localStorage","getItem","Model","schema","fromJson","clear","removeItem","updateStorage","setItem","toJson","__updateStorage","AngularJsonAPICollectionWrapper","$log","uuid4","JsonAPIModelFactory","AngularJsonAPISchema","AngularJsonAPICollection","schemaObj","model","length","attributes","relationships","form","save","__saveNew","bind","__addLinkNew","__synchronize","hasErrors","json","updatedAt","objectData","validatedData","__setData","__setLinks","__setUpdated","__get","Date","now","newModel","validate","equals","copy","generate","parentCollection","reset","debug","refresh","AngularJsonAPISchemaWrapper","include","linkName","linkSchemaObj","AngularJsonAPILinkSchema","join","isString","plural","polymorphic","reflection","AngularJsonAPIAbstractData","modelFactory","linkedCollections","isNew","parent","functions","metaFunction","metaFunctionName","apply","arguments","AngularJsonAPIAbstractDataWrapper","lazyProperty","AngularJsonAPIAbstractDataForm","$timeout","validation","removeAllLinks","res","val","addLinkById","linkModelName","linkType","reflectionKey","linkAttributes","warn","duplicate","link","__setLinkInternal","index","splice","__updateAttributes","validatedAttributes","__setAttributes","getAll","linkedCollection","getSingle","__setLink","indexedLinks","__validateField","__validate","__validateData","validator","attributeName","safeData","attributeValue","element","isFunction","err","parseInt","isObject","maxlength","minlength","maxvalue","minvalue","AngularJsonAPIAbstractDataFormWrapper","validateField","log","jsonapiProvider","jsonapiFactory","addModel","memory","getModel","clearAll","$get","provider"],"mappings":"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","file":"angular-jsonapi.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false */\n  .constant('pluralize', pluralize);\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.when(promise)\n            .then(function(value) {\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronization', AngularJsonAPISynchronizationWrapper);\n\n  function AngularJsonAPISynchronizationWrapper($q) {\n    AngularJsonAPISynchronization.prototype.before = beforeSynchro;\n    AngularJsonAPISynchronization.prototype.after = afterSynchro;\n    AngularJsonAPISynchronization.prototype.begin = begin;\n    AngularJsonAPISynchronization.prototype.finish = finish;\n    AngularJsonAPISynchronization.prototype.synchronization = synchronization;\n    AngularJsonAPISynchronization.prototype.synchronize = synchronize;\n    AngularJsonAPISynchronization.prototype.extend = extend;\n\n    return AngularJsonAPISynchronization;\n\n    function AngularJsonAPISynchronization() {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clear',\n        'remove',\n        'removeLink',\n        'removeLinkReflection',\n        'addLink',\n        'addLinkReflection',\n        'update',\n        'refresh'\n      ];\n\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function extend(synchronization) {\n      var _this = this;\n\n      extendHooks('beginHooks');\n      extendHooks('beforeHooks');\n      extendHooks('synchronizationHooks');\n      extendHooks('afterHooks');\n      extendHooks('finishHooks');\n\n      function extendHooks(hooksKey) {\n        angular.forEach(synchronization[hooksKey], function(hooks, key) {\n          _this[hooksKey][key] = _this[hooksKey][key].concat(hooks);\n        });\n      }\n\n      angular.extend(_this.options, synchronization.options);\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n    function synchronize(action, collection, object, linkSchema, linkedObject, params) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n\n      _this.state[action].loading = true;\n\n      if (object !== undefined) {\n        object.loadingCount += 1;\n      }\n\n      if (collection !== undefined) {\n        collection.loadingCount += 1;\n      }\n\n      angular.forEach(_this.beginHooks[action], function(hook) {\n        hook.call(_this, collection, object, linkSchema, linkedObject, params);\n      });\n\n      angular.forEach(_this.beforeHooks[action], function(hook) {\n        hook.call(_this, collection, object, linkSchema, linkedObject, params);\n      });\n\n      angular.forEach(_this.synchronizationHooks[action], function(hook) {\n        promises.push(hook.call(_this, collection, object, linkSchema, linkedObject, params));\n      });\n\n      $q.allSettled(promises).then(function(results) {\n        _this.state[action].success = true;\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.afterHooks[action], function(hook) {\n          hook.call(_this, collection, object, linkSchema, linkedObject, params, results);\n        });\n\n        angular.forEach(_this.finishHooks[action], function(hook) {\n          hook.call(_this, collection, object, linkSchema, linkedObject, params);\n        });\n\n        _this.state[action].loading = false;\n\n        if (object !== undefined) {\n          object.loadingCount -= 1;\n        }\n\n        if (collection !== undefined) {\n          collection.loadingCount -= 1;\n        }\n\n        if (_this.state[action].success === true) {\n          deferred.resolve(results);\n        } else {\n          deferred.reject(results);\n        }\n\n      },\n\n      function(results) {\n        deferred.reject(results);\n      });\n\n      return deferred.promise;\n    }\n\n  }\n})();\n","!function(){\"use strict\";angular.module(\"angular-jsonapi\",[\"uuid4\"]).constant(\"pluralize\",pluralize)}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"lazyProperty\",function(t,e,r){var a,n;Object.defineProperty(t,e,{get:function(){return n||(n=!0,a=r.call(t)),a},enumerable:!0,configurable:!0})})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"toKebabCase\",function(t){return t.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase()})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$provide\",function(t){t.decorator(\"$q\",[\"$delegate\",function(t){var e=t;return e.allSettled=e.allSettled||function(t){function r(t){return e.when(t).then(function(t){return{success:!0,value:t}},function(t){return{success:!1,reason:t}})}var a=angular.isArray(t)?[]:{};return angular.forEach(t,function(t,e){a.hasOwnProperty(e)||(a[e]=r(t))}),e.all(a)},e}])}])}(),function(){\"use strict\";function t(t){function e(){var t=this,e=[\"add\",\"init\",\"get\",\"all\",\"clear\",\"remove\",\"removeLink\",\"removeLinkReflection\",\"addLink\",\"addLinkReflection\",\"update\",\"refresh\"];t.state={},t.beginHooks={},t.beforeHooks={},t.synchronizationHooks={},t.afterHooks={},t.finishHooks={},t.options={},angular.forEach(e,function(e){t.beginHooks[e]=[],t.beforeHooks[e]=[],t.synchronizationHooks[e]=[],t.afterHooks[e]=[],t.finishHooks[e]=[],t.state[e]={loading:!1,success:!0}})}function r(t){function e(e){angular.forEach(t[e],function(t,a){r[e][a]=r[e][a].concat(t)})}var r=this;e(\"beginHooks\"),e(\"beforeHooks\"),e(\"synchronizationHooks\"),e(\"afterHooks\"),e(\"finishHooks\"),angular.extend(r.options,t.options)}function a(t,e){var r=this;r.beginHooks[t].push(e)}function n(t,e){var r=this;r.finishHooks[t].push(e)}function o(t,e){var r=this;r.beforeHooks[t].push(e)}function i(t,e){var r=this;r.afterHooks[t].push(e)}function s(t,e){var r=this;r.synchronizationHooks[t].push(e)}function d(e,r,a,n,o,i){var s=this,d=[],l=t.defer();return s.state[e].loading=!0,void 0!==a&&(a.loadingCount+=1),void 0!==r&&(r.loadingCount+=1),angular.forEach(s.beginHooks[e],function(t){t.call(s,r,a,n,o,i)}),angular.forEach(s.beforeHooks[e],function(t){t.call(s,r,a,n,o,i)}),angular.forEach(s.synchronizationHooks[e],function(t){d.push(t.call(s,r,a,n,o,i))}),t.allSettled(d).then(function(t){s.state[e].success=!0,angular.forEach(t,function(t){t.success===!1&&(s.state[e].success=!1)}),angular.forEach(s.afterHooks[e],function(e){e.call(s,r,a,n,o,i,t)}),angular.forEach(s.finishHooks[e],function(t){t.call(s,r,a,n,o,i)}),s.state[e].loading=!1,void 0!==a&&(a.loadingCount-=1),void 0!==r&&(r.loadingCount-=1),s.state[e].success===!0?l.resolve(t):l.reject(t)},function(t){l.reject(t)}),l.promise}return e.prototype.before=o,e.prototype.after=i,e.prototype.begin=a,e.prototype.finish=n,e.prototype.synchronization=s,e.prototype.synchronize=d,e.prototype.extend=r,e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronization\",t),t.$inject=[\"$q\"]}(),function(){\"use strict\";function t(t,e,r,a){function n(n){function o(t,e,r,a){return{data:t,status:e,headers:r,config:a}}function i(t,e,r,a,n,o){var i,s,d;o[0].success===!0&&(i=o[0].value.data.data,s=o[0].value.data.included,d={},angular.forEach(i,function(e){d[e.id]=e,t.addOrUpdate(e)}),angular.forEach(t.data,function(e){void 0===d[e.data.id]&&t.__remove(e.data.id)}),angular.forEach(s,function(e){t.allCollections[e.type].addOrUpdate(e)}))}function s(t,e,r,a,n,o){var i,s;o[0].success===!0&&(i=o[0].value.data.data,s=o[0].value.data.included,t.addOrUpdate(i),angular.forEach(s,function(e){t.allCollections[e.type].addOrUpdate(e)}))}function d(t,a,i,s,d){var l=e.defer(),u={method:\"GET\",headers:g,url:n,params:d||{}};return t.errors.rest=t.errors.rest||{},r(u).success(function(e,r,a,n){t.errors.rest.all=void 0,l.resolve(o(e,r,a,n))}).error(function(e,r,a,n){t.errors.rest.all=e,l.reject(o(e,r,a,n))}),l.promise}function l(t,a,i,s,d){var l,u,c=e.defer();return angular.isArray(a)?(u=[],angular.forEach(a,function(t){u.push(t.data.id)})):u=a.data.id,l={method:\"GET\",headers:g,url:n+\"/\"+u.toString(),params:d||{}},a.errors.rest=a.errors.rest||{},r(l).success(function(t,e,r,n){a.errors.rest.get=void 0,c.resolve(o(t,e,r,n))}).error(function(t,e,r,n){a.errors.rest.get=t,c.reject(o(t,e,r,n))}),c.promise}function u(t,a){var i=e.defer(),s={method:\"DELETE\",headers:g,url:n+\"/\"+a.data.id};return a.errors.rest=a.errors.rest||{},r(s).success(function(t,e,r,n){a.errors.rest.remove=void 0,i.resolve(o(t,e,r,n))}).error(function(t,e,r,n){a.errors.rest.remove=t,i.reject(o(t,e,r,n))}),i.promise}function c(t,i,s,d){var l,u=e.defer();return i.errors.rest=i.errors.rest||{},i.removed===!0||void 0===d?u.resolve():(l={method:\"DELETE\",headers:g,url:n+\"/\"+i.data.id+\"/relationships/\"+a(s),data:{data:d.toLinkData()}},r(l).success(function(t,e,r,a){i.errors.rest.removeLink=void 0,u.resolve(o(t,e,r,a))}).error(function(t,e,r,a){i.errors.rest.removeLink=t,u.reject(o(t,e,r,a))})),u.promise}function p(t,i,s,d){var l=e.defer(),u={method:\"POST\",headers:g,url:n+\"/\"+i.data.id+\"/relationships/\"+a(s),data:{data:[d.toLinkData()]}};return i.errors.rest=i.errors.rest||{},r(u).success(function(t,e,r,a){i.errors.rest.addLink=void 0,l.resolve(o(t,e,r,a))}).error(function(t,e,r,a){i.errors.rest.addLink=t,l.reject(o(t,e,r,a))}),l.promise}function h(t,a){var i=e.defer(),s={method:\"PUT\",headers:g,url:n+\"/\"+a.data.id,data:a.toPatchData()};return a.errors.rest=a.errors.rest||{},r(s).success(function(t,e,r,n){a.errors.rest.update=void 0,i.resolve(o(t,e,r,n))}).error(function(t,e,r,n){a.errors.rest.update=t,i.reject(o(t,e,r,n))}),i.promise}function f(t,a){var i=e.defer(),s={method:\"POST\",headers:g,url:n+\"/\",data:a.toAddData()};return a.errors.rest=a.errors.rest||{},r(s).success(function(t,e,r,n){a.errors.rest.add=void 0,i.resolve(o(t,e,r,n))}).error(function(t,e,r,n){a.errors.rest.add=t,i.reject(o(t,e,r,n))}),i.promise}var v=this,g={Accept:\"application/vnd.api+json\",\"Content-Type\":\"application/vnd.api+json\"};t.call(v),v.synchronization(\"remove\",u),v.synchronization(\"removeLink\",c),v.synchronization(\"addLink\",p),v.synchronization(\"update\",h),v.synchronization(\"add\",f),v.synchronization(\"all\",d),v.synchronization(\"get\",l),v.synchronization(\"refresh\",l),v.after(\"all\",i),v.after(\"get\",s),v.after(\"refresh\",s)}return n.prototype=Object.create(t.prototype),n.prototype.constructor=n,n}angular.module(\"angular-jsonapi-rest\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationRest\",t),t.$inject=[\"AngularJsonAPISynchronization\",\"$q\",\"$http\",\"toKebabCase\"]}(),function(){\"use strict\";function t(t,e){function r(r){function a(t){var a=e.localStorage.getItem(r+\".\"+t.Model.prototype.schema.type);t.fromJson(a)}function n(t){e.localStorage.removeItem(r+\".\"+t.Model.prototype.schema.type)}function o(t){e.localStorage.setItem(r+\".\"+t.Model.prototype.schema.type,t.toJson())}var i=this;i.__updateStorage=o,t.call(i),i.begin(\"init\",a),i.begin(\"clear\",n),i.begin(\"remove\",o),i.begin(\"removeLink\",o),i.begin(\"removeLinkReflection\",o),i.begin(\"addLink\",o),i.begin(\"addLinkReflection\",o),i.begin(\"update\",o),i.begin(\"add\",o),i.finish(\"get\",o),i.finish(\"all\",o),i.finish(\"init\",o),i.finish(\"clear\",o),i.finish(\"remove\",o),i.finish(\"removeLink\",o),i.finish(\"removeLinkReflection\",o),i.finish(\"addLink\",o),i.finish(\"addLinkReflection\",o),i.finish(\"update\",o),i.finish(\"add\",o),i.finish(\"get\",o),i.finish(\"all\",o)}return r.prototype=Object.create(t.prototype),r.prototype.constructor=r,r}angular.module(\"angular-jsonapi-local\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationLocal\",t),t.$inject=[\"AngularJsonAPISynchronization\",\"$window\"]}(),function(){\"use strict\";function t(t,e,r,a){function n(t,e){var n=this,o=new a(t);n.Model=r.model(o,n.allCollections,n),n.synchronization=e,n.loadingCount=0,n.data={},n.removed={},n.promises={},n.schema=o,n.length=0,n[\"new\"]=new n.Model({type:t.type,attributes:{},relationships:{}},void 0,!0),n[\"new\"].form.save=v.bind(n[\"new\"]),n[\"new\"].form.addLink=g.bind(n[\"new\"]),n.allCollections[t.type]=n,n.__synchronize(\"init\"),n.errors={}}function o(){var t=this,e=!1;return angular.forEach(t.errors,function(t){void 0!==t&&(e=!0)}),e}function i(t){var e=this,r=angular.fromJson(t);null!==r&&void 0!==r.data&&(e.updatedAt=r.updatedAt,angular.forEach(r.data,function(t){var r=t.data;e.addOrUpdate(r,t.updatedAt)}))}function s(){var t=this,e={data:{},updatedAt:t.updatedAt};return angular.forEach(t.data,function(t,r){e.data[r]=t.toJson()}),angular.toJson(e)}function d(e,r){var a=this;return void 0===e.id?void t.error(\"Can't add data without id!\",e):(void 0===a.data[e.id]?(a.data[e.id]=new this.Model(e,r),a.length+=1):(a.data[e.id].__setData(e,r),a.data[e.id].__setLinks(e.relationships)),a.data[e.id].__setUpdated(r),a.data[e.id])}function l(t){var e=this;return void 0===e.data[t]&&(e.data[t]=new e.Model({id:t,type:e.Model.prototype.schema.type},void 0,!0)),e.data[t]}function u(t){var e,r=this,a=r.schema.params.get;return angular.isArray(t)?(e=[],angular.forEach(t,function(t){e.push(r.__get(t))})):e=r.__get(t),r.__synchronize(\"get\",e,void 0,void 0,a),e}function c(){var t=this;return t.__synchronize(\"all\",void 0,void 0,void 0,t.schema.params.all),t}function p(){var t=this;t.updatedAt=Date.now(),t.data={},t.length=0,t.__synchronize(\"clear\")}function h(t){var e=this,r=e.data[t];e.removed[t]=r,e.updatedAt=Date.now(),delete e.data[t],e.length-=1}function f(e){var r=this,a=r.data[e];void 0!==a?(r.__remove(e),a.__remove(e)):t.error(\"Object with this id does not exist\"),r.__synchronize(\"remove\",a)}function v(){var r,a=this,n=a.form.validate();if(angular.equals(n,{})){var o=angular.copy(a.form.data);if(void 0===o.id)o.id=e.generate();else if(!e.validate(o.id))return void t.error(\"Wrong id of new data!\");o.type=a.schema.type,r=a.parentCollection.addOrUpdate(o),a.form.reset(),a.relationships={},a.parentCollection.__synchronize(\"add\",r)}return r}function g(e,r){var a=this;return void 0===a.schema.relationships[e]?void t.error(\"Link'\",e,\"'not present in schema of\",a.data.type,a):void(\"hasOne\"===a.schema.relationships[e].type?a.form.data.relationships[e]={data:{type:r.data.type,id:r.data.id}}:(a.form.data.relationships[e].data=a.form.data.relationships[e].data||[],a.form.data.relationships[e].data.push({type:r.data.type,id:r.data.id})))}function y(e,r,a,n,o){var i,s=this;t.debug(\"Synchro Collection\",this.Model.prototype.schema.type,{action:e,object:r,linkKey:a,linkedObject:n,params:o}),i=s.synchronization.synchronize(e,s,r,a,n,o),void 0!==r?r.promises[e]=i:s.promises[e]=i}return n.prototype.allCollections={},n.prototype.__synchronize=y,n.prototype.__get=l,n.prototype.__remove=h,n.prototype.get=u,n.prototype.all=c,n.prototype.refresh=c,n.prototype.remove=f,n.prototype.clear=p,n.prototype.fromJson=i,n.prototype.toJson=s,n.prototype.addOrUpdate=d,n.prototype.hasErrors=o,n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICollection\",t),t.$inject=[\"$log\",\"uuid4\",\"JsonAPIModelFactory\",\"AngularJsonAPISchema\"]}(),function(){\"use strict\";function t(t,e){function r(t){var e=this,r=t.include||{};t.include=r,r.get=t.include.get||[],r.all=t.include.all||[],e.params={get:{},all:{}},angular.forEach(t.relationships,function(e,n){var o=new a(e,n,t.type);t.relationships[n]=o,o.included===!0&&(r.get.push(n),\"hasOne\"===o.type&&r.all.push(n))}),angular.extend(e,t),r.get.length>0&&(e.params.get.include=r.get.join(\",\")),r.all.length>0&&(e.params.all.include=r.all.join(\",\"))}function a(r,a,n){var o=this;angular.isString(r)?(o.model=e.plural(a),o.type=r,o.polymorphic=!1,o.reflection=n):(void 0===r.type&&t.error(\"Schema of link without a type: \",r,a),o.model=r.model||e.plural(a),o.type=r.type,o.polymorphic=r.polymorphic||!1,o.reflection=r.reflection||n,o.included=r.included||!1)}return r}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchema\",t),t.$inject=[\"$log\",\"pluralize\"]}(),function(){\"use strict\";function t(t,e,r){function a(e,a,n){var o=function(e,a,n){var o=this;e.type!==o.schema.type&&r.error(\"Data type other then declared in schema: \",e.type,\" instead of \",o.schema.type),t.call(o,e,a,n),o.form.parent=o};return o.prototype=Object.create(t.prototype),o.prototype.constructor=o,o.prototype.schema=e,o.prototype.linkedCollections=a,o.prototype.parentCollection=n,angular.forEach(e.functions,function(t,e){o.prototype[e]=function(){return t.apply(this,arguments)}}),o}return{model:a}}angular.module(\"angular-jsonapi\").factory(\"JsonAPIModelFactory\",t),t.$inject=[\"AngularJsonAPIAbstractData\",\"AngularJsonAPISchema\",\"$log\"]}(),function(){\"use strict\";function t(t,e,r,a,n){function o(t,e,r){var n=this;t.relationships=t.relationships||{},n.removed=!1,n.loadingCount=0,n.data={relationships:{},attributes:{}},n.relationships={},n.errors={validation:{}},n.promises={},n.isNew=r||!1,n.form=new a(n),n.__setUpdated(e),n.__setData(t,e)}function i(){var t=this;t.parentCollection.__synchronize(\"refresh\",t,void 0,void 0,t.schema.params.get)}function s(){var t=this,e=!1;return angular.forEach(t.errors,function(t){void 0!==t&&(e=!0)}),e}function d(){var t=this;return{data:t.data,updatedAt:t.updatedAt}}function l(){var t=this,e=angular.copy(t.data),r={};return angular.forEach(e.relationships,function(t,e){void 0!==t.data&&(r[e]=t)}),e.relationships=r,{data:e,updatedAt:t.updatedAt}}function u(t){var e=this;e.updatedAt=t||Date.now(),e.parentCollection.updatedAt=e.updatedAt}function c(){var t=this;t.__setUpdated(),t.removed=!0,t.removeAllLinks()}function p(){var t=this;t.__remove(),t.parentCollection.remove(t.data.id)}function h(){return{type:this.data.type,id:this.data.id}}function f(){var t=this,e={data:{}};return angular.forEach(t.data,function(t,r){\"relationships\"!==r&&(e.data[r]=t)}),e}function v(r,a,n){var o=this,i=o.linkedCollections[a].__get(n);return void 0===o.schema.relationships[r]?void t.error(\"Cannot add link not specified in schema: \"+r):void 0===o.linkedCollections[a]?void t.error(\"Cannot add link of not existing type: \"+a):e.validate(n)?void 0===i?void t.error(\"Cant find\",a,\"with\",n):void o.addLink(r,i):void t.error(\"Wrong link id, not uuid4: \"+n)}function g(e,r,a){var n,o,i,s=this,d=s.schema.relationships[e];if(void 0===r)return void t.error(\"Can't add non existing object\");if(void 0===d)return void(a===!1&&t.error(\"Can't add link not present in schema: \",e,s,a));if(d.polymorphic===!1&&d.model!==r.schema.type)return void t.error(\"This relation is not polymorphic, expected: \"+d.model+\" instead of \"+r.schema.type);if(n=d.type,o=d.reflection,\"hasOne\"===n){if(i=s.data.relationships[e].data,void 0!==i&&null!==i&&i.id===r.data.id)return;void 0!==i&&null!==i&&(t.warn(\"Swaping hasOne\",e,\"of\",s.toString()),s.removeLink(e)),i=r.toLinkData()}else{i=s.data.relationships[e].data||[];var l=!1;if(angular.forEach(i,function(t){t.id===r.data.id&&(l=!0)}),l===!0)return;i.push(r.toLinkData())}a===!0?s.parentCollection.__synchronize(\"addLinkReflection\",s,e,r):(r.addLink(o,s,!0),s.parentCollection.__synchronize(\"addLink\",s,e,r)),s.__setUpdated(),s.__setLinkInternal(i,e,d)}function y(){var t=this;angular.forEach(t.relationships,function(e,r){t.removeLink(r)})}function m(e,r,a){var n,o,i,s=this,d=s.schema.relationships[e],l=!1;return void 0===s.schema.relationships[e]?void(a===!1&&t.error(\"Can't remove link not present in schema: \"+e,s)):(n=d.type,i=d.reflection,o=s.data.relationships[e].data,\"hasOne\"===n?(void 0===r||r.data.id===o.id)&&(s.data.relationships[e].data=null,o=null,l=!0,a!==!0&&void 0!==s.relationships[e]&&s.relationships[e].removeLink(i,s,!0)):void 0===r?(s.data.relationships[e].data=[],o=[],l=!0,a!==!0&&angular.forEach(s.relationships[e],function(t){t.removeLink(i,s,!0)})):angular.forEach(o,function(t,e){t.id===r.data.id&&(a!==!0&&r.removeLink(i,s,!0),o.splice(e,1),l=!0)}),void(l===!0&&(s.__setUpdated(),a!==!0?s.parentCollection.__synchronize(\"removeLink\",s,e,r):s.parentCollection.__synchronize(\"removeLinkReflection\",s,e,r),s.__setLinkInternal(o,e,d))))}function _(t){var e=this;e.__setUpdated(),e.__setAttributes(t),e.parentCollection.__synchronize(\"update\",e)}function k(e,a,o){var i=this,s=o.type,d=o.reflection;if(null===e)delete i.relationships[a],i.relationships[a]=void 0;else if(\"hasMany\"===s&&angular.isArray(e)){var l=function(){var r=[];return angular.forEach(e,function(a){var n=i.linkedCollections[a.type];if(void 0===n)return void t.error(\"No angular-jsonapi schema for\",e.type);var o=n.__get(a.id);o.addLink(d,i,!0),r.push(o)}),r};n(l),r(i.relationships,a,l)}else if(\"hasOne\"===s&&null!==e){var u=function(){var r=i.linkedCollections[e.type];if(void 0===r)return void t.error(\"No angular-jsonapi schema for\",e.type);var a=r.__get(e.id);return a.addLink(d,i,!0),a};n(u),r(i.relationships,a,u)}}function b(t,e,r){var a=this,n=r.type,o=r.reflection;if(\"hasMany\"===n&&angular.isArray(t)){var i={};angular.forEach(t,function(t){i[t.id]=t}),angular.forEach(a.relationships[e],function(t){void 0===i[t.data.id]&&t.removeLink(o,a,!0)})}else\"hasOne\"===n&&null!==t&&void 0!==a.relationships[e]&&a.relationships[e].data.id!==t.id&&a.relationships[e].removeLink(o,a,!0);a.__setLinkInternal(t,e,r)}function A(t){var e=this;void 0!==t&&(angular.forEach(e.schema.relationships,function(r,a){e.data.relationships[a]=e.data.relationships[a]||{},void 0!==t[a]&&angular.extend(e.data.relationships[a],t[a])}),angular.forEach(e.schema.relationships,function(r,a){void 0!==t[a]&&void 0!==t[a].data&&e.__setLink(t[a].data,a,r)}))}function L(t,e){var r=this,a=[];return void 0!==t&&(a=C(r.schema.attributes[e],t,e)),a}function j(e){var r=this,a={};return angular.forEach(r.schema.attributes,function(n,o){var i=r.__validateField(e[o],o);i.length>0&&(a[o]=i,t.warn(\"Erorrs when validating \",e[o],a))}),a}function E(t){var e=this;angular.forEach(e.schema.attributes,function(r,a){void 0!==t[a]&&(e.data.attributes[a]=t[a])})}function z(t){var e=this,r=angular.copy(t);e.errors.validation=e.__validateData(r),r.relationships=r.relationships||{},r.attributes=r.attributes||{},e.data.id=r.id,e.data.type=r.type,e.__setAttributes(r.attributes),e.__setLinks(r.relationships),e.form.reset()}function C(r,a,n){var o=[];if(angular.isArray(r))angular.forEach(r,function(t){o=o.concat(C(t,a,n))});else if(angular.isFunction(r)){var i=r(a);angular.isArray(i)?o.concat(i):t.error(\"Wrong validator type it should return array of errors instead of: \"+i.toString())}else angular.isString(r)?\"text\"===r||\"string\"===r?angular.isString(a)||o.push(n+\" is not a string \"):\"number\"===r||\"integer\"===r?parseInt(a).toString()!==a.toString()&&o.push(n+\" is not a number\"):\"uuid4\"===r?e.validate(a)||o.push(n+\" is not a uuid4\"):\"required\"===r?0===a.toString().length&&o.push(n+\" is empty\"):t.error(\"Wrong validator type: \"+r.toString()):angular.isObject(r)?(void 0!==r.maxlength&&a.length>r.maxlength&&o.push(n+\" is too long max \"+r.maxlength),void 0!==r.minlength&&a.length<r.minlength&&o.push(n+\" is too short min \"+r.minlength),void 0!==r.maxvalue&&parseInt(a)>r.maxvalue&&o.push(n+\" is too big max \"+r.maxvalue),void 0!==r.minvalue&&parseInt(a)<r.minvalue&&o.push(n+\" is too small min \"+r.minvalue)):t.error(\"Wrong validator type: \"+r.toString());return o}return o.prototype.__setData=z,o.prototype.__setLinks=A,o.prototype.__setLink=b,o.prototype.__setAttributes=E,o.prototype.__validateData=j,o.prototype.__validateField=L,o.prototype.__updateAttributes=_,o.prototype.__remove=c,o.prototype.__setUpdated=u,o.prototype.__setLinkInternal=k,o.prototype.refresh=i,o.prototype.remove=p,o.prototype.addLinkById=v,o.prototype.addLink=g,o.prototype.removeLink=m,o.prototype.removeAllLinks=y,o.prototype.hasErrors=s,o.prototype.toLinkData=h,o.prototype.toPatchData=f,o.prototype.toAddData=l,o.prototype.toJson=d,o}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractData\",t),t.$inject=[\"$log\",\"uuid4\",\"lazyProperty\",\"AngularJsonAPIAbstractDataForm\",\"$timeout\"]}(),function(){\"use strict\";function t(t){function e(t){var e=this;e.data={attributes:{},relationships:{}},e.parent=t,e.reset()}function r(){var e=this,r=e.validate();return angular.equals(r,{})===!1?void t.error(\"Errors in form: \",r):void e.parent.__updateAttributes(e.data.attributes)}function a(){var t=this;angular.forEach(t.parent.schema.attributes,function(e,r){t.data.attributes[r]=t.parent.data.attributes[r]||\"\"}),angular.forEach(t.parent.schema.relationships,function(e,r){t.data.relationships[r]=t.parent.data.relationships[r]||{}}),t.errors={validation:{}}}function n(){var t,e=this;return t=e.parent.__validateData(e.data),e.errors.validation=t,t}function o(t){var e,r=this;return e=r.parent.__validateField(r.data[t],t),r.errors.validation[t]=e,e}function i(e){t.log(\"Synchro Collection \"+this.Model.prototype.schema.type,e)}return e.prototype.save=r,e.prototype.reset=a,e.prototype.validate=n,e.prototype.validateField=o,e.prototype.__synchronize=i,e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractDataForm\",t),t.$inject=[\"$log\"]}(),function(){\"use strict\";function t(){function t(t,r){function a(t,a){var n=new r(t,a);e[t.type]=n}function n(t){return e[t]}function o(r){return void 0===e[r]&&t.error(\"Can\t add not existing object type: \"+r+\". Use initialize(Model, datas).\"),e[r].isNew.form}function i(r,a){return void 0===e[r]&&t.error(\"Can\t get not existing object type: \"+r+\". Use initialize(Model, datas).\"),e[r].get(a)}function s(r,a){return void 0===e[r]&&t.error(\"Can\t remove not existing object type: \"+r+\". Use initialize(Model, datas).\"),e[r].remove(a)}function d(r){return void 0===e[r]&&t.error(\"Can\t get all of not existing object type: \"+r+\". Use initialize(Model, datas).\"),e[r].all()}function l(){angular.forEach(e,function(t){t.clear()})}return{form:o,get:i,remove:s,all:d,addModel:a,getModel:n,clearAll:l}}var e={};this.$get=t,t.$inject=[\"$log\",\"AngularJsonAPICollection\"]}angular.module(\"angular-jsonapi\").provider(\"$jsonapi\",t)}();\n//# sourceMappingURL=angular-jsonapi.min.js.map","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationRest', AngularJsonAPISynchronizationRestWrapper);\n\n  function AngularJsonAPISynchronizationRestWrapper(AngularJsonAPISynchronization, $q, $http, toKebabCase) {\n\n    AngularJsonAPISynchronizationRest.prototype = Object.create(AngularJsonAPISynchronization.prototype);\n    AngularJsonAPISynchronizationRest.prototype.constructor = AngularJsonAPISynchronizationRest;\n\n    return AngularJsonAPISynchronizationRest;\n\n    function AngularJsonAPISynchronizationRest(url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISynchronization.call(_this);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('removeLink', removeLink);\n      _this.synchronization('addLink', addLink);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n      _this.after('all', afterAll);\n      _this.after('get', afterGet);\n      _this.after('refresh', afterGet);\n\n      function wrapResp(data, status, headers, config) {\n        return {\n          data: data,\n          status: status,\n          headers: headers,\n          config: config\n        };\n      }\n\n      function afterAll(collection, object, linkSchema, linkedObject, params, results) {\n        var rawData;\n        var included;\n        var indexedData;\n\n        if (results[0].success === true) {\n          rawData = results[0].value.data.data;\n          included = results[0].value.data.included;\n          indexedData = {};\n          angular.forEach(rawData, function(data) {\n            indexedData[data.id] = data;\n            collection.addOrUpdate(data);\n          });\n\n          angular.forEach(collection.data, function(object) {\n            if (indexedData[object.data.id] === undefined) {\n              collection.__remove(object.data.id);\n            }\n          });\n\n          angular.forEach(included, function(object) {\n            collection.allCollections[object.type].addOrUpdate(object);\n          });\n        }\n      }\n\n      function afterGet(collection, object, linkSchema, linkedObject, params, results) {\n        var data;\n        var included;\n\n        if (results[0].success === true) {\n          data = results[0].value.data.data;\n          included = results[0].value.data.included;\n          collection.addOrUpdate(data);\n\n          angular.forEach(included, function(object) {\n            collection.allCollections[object.type].addOrUpdate(object);\n          });\n        }\n      }\n\n      function all(collection, object, linkSchema, linkedObject, params) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: params || {}\n        };\n\n        collection.errors.rest = collection.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            collection.errors.rest.all = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            collection.errors.rest.all = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function get(collection, object, linkSchema, linkedObject, params) {\n        var deferred = $q.defer();\n        var config;\n        var ids;\n\n        if (angular.isArray(object)) {\n          ids = [];\n          angular.forEach(object, function(object) {\n            ids.push(object.data.id);\n          });\n        } else {\n          ids = object.data.id;\n        }\n\n        config = {\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + ids.toString(),\n          params: params || {}\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.get = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.get = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function remove(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + object.data.id\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.remove = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.remove = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function removeLink(collection, object, linkKey, linkedObject) {\n        var deferred = $q.defer();\n        var config;\n\n        object.errors.rest = object.errors.rest || {};\n\n        if (object.removed === true || linkedObject === undefined) {\n          deferred.resolve();\n        } else {\n          config = {\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + object.data.id + '/relationships/' + toKebabCase(linkKey) + '/' + linkedObject.data.id\n          };\n\n          $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.removeLink = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.removeLink = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n        }\n\n        return deferred.promise;\n      }\n\n      function addLink(collection, object, linkKey, linkedObject) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'POST',\n          headers: headers,\n          url: url + '/' + object.data.id + '/relationships/' + toKebabCase(linkKey),\n          data: {data: [linkedObject.toLinkData()]}\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.addLink = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.addLink = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n\n      }\n\n      function update(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'PUT',\n          headers: headers,\n          url: url + '/' + object.data.id,\n          data: object.toPatchData()\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.update = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.update = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function add(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'POST',\n          headers: headers,\n          url: url + '/',\n          data: object.toAddData()\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.add = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.add = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationLocal', AngularJsonAPISynchronizationLocalWrapper);\n\n  function AngularJsonAPISynchronizationLocalWrapper(AngularJsonAPISynchronization, $window) {\n\n    AngularJsonAPISynchronizationLocal.prototype = Object.create(AngularJsonAPISynchronization.prototype);\n    AngularJsonAPISynchronizationLocal.prototype.constructor = AngularJsonAPISynchronizationLocal;\n\n    return AngularJsonAPISynchronizationLocal;\n\n    function AngularJsonAPISynchronizationLocal(prefix) {\n      var _this = this;\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISynchronization.call(_this);\n\n      _this.begin('init', init);\n      _this.begin('clear', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('removeLink', updateStorage);\n      _this.begin('removeLinkReflection', updateStorage);\n      _this.begin('addLink', updateStorage);\n      _this.begin('addLinkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clear', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('removeLink', updateStorage);\n      _this.finish('removeLinkReflection', updateStorage);\n      _this.finish('addLink', updateStorage);\n      _this.finish('addLinkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      function init(collection) {\n        var datas = $window.localStorage.getItem(prefix + '.' + collection.Model.prototype.schema.type);\n        collection.fromJson(datas);\n      }\n\n      function clear(collection) {\n        $window.localStorage.removeItem(prefix + '.' + collection.Model.prototype.schema.type);\n      }\n\n      function updateStorage(collection) {\n        $window.localStorage.setItem(prefix + '.' + collection.Model.prototype.schema.type, collection.toJson());\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    $log,\n    uuid4,\n    JsonAPIModelFactory,\n    AngularJsonAPISchema\n  ) {\n    AngularJsonAPICollection.prototype.allCollections = {};\n\n    AngularJsonAPICollection.prototype.__synchronize = __synchronize;\n    AngularJsonAPICollection.prototype.__get = __get;\n    AngularJsonAPICollection.prototype.__remove = __remove;\n\n    AngularJsonAPICollection.prototype.get = get;\n    AngularJsonAPICollection.prototype.all = all;\n    AngularJsonAPICollection.prototype.refresh = all;\n    AngularJsonAPICollection.prototype.remove = remove;\n    AngularJsonAPICollection.prototype.clear = clear;\n    AngularJsonAPICollection.prototype.fromJson = fromJson;\n    AngularJsonAPICollection.prototype.toJson = toJson;\n    AngularJsonAPICollection.prototype.addOrUpdate = addOrUpdate;\n    AngularJsonAPICollection.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPICollection;\n\n    function AngularJsonAPICollection(schema, synchronization) {\n      var _this = this;\n\n      var schemaObj = new AngularJsonAPISchema(schema);\n\n      _this.Model = JsonAPIModelFactory.model(\n        schemaObj,\n        _this.allCollections,\n        _this\n      );\n\n      _this.synchronization = synchronization;\n\n      _this.loadingCount = 0;\n      _this.data = {};\n      _this.removed = {};\n      _this.promises = {};\n      _this.schema = schemaObj;\n      _this.length = 0;\n\n      _this.new = new _this.Model({\n        type: schema.type,\n        attributes: {},\n        relationships: {}\n      }, undefined, true);\n\n      _this.new.form.save = __saveNew.bind(_this.new);\n      _this.new.form.addLink = __addLinkNew.bind(_this.new);\n      _this.allCollections[schema.type] = _this;\n\n      _this.__synchronize('init');\n\n      _this.errors = {};\n    }\n\n    function hasErrors() {\n      var _this = this;\n      var result = false;\n\n      angular.forEach(_this.errors, function(error) {\n        if (error !== undefined) {\n          result = true;\n        }\n      });\n\n      return result;\n    }\n\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      if (collection !== null && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, objectData.updatedAt);\n        });\n      }\n    }\n\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: {},\n        updatedAt: _this.updatedAt\n      };\n\n      angular.forEach(_this.data, function(object, key) {\n        json.data[key] = object.toJson();\n      });\n\n      return angular.toJson(json);\n    }\n\n    function addOrUpdate(validatedData, updatedAt) {\n      var _this = this;\n      if (validatedData.id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[validatedData.id] === undefined) {\n        _this.data[validatedData.id] = new this.Model(validatedData, updatedAt);\n        _this.length += 1;\n      } else {\n        _this.data[validatedData.id].__setData(validatedData, updatedAt);\n        _this.data[validatedData.id].__setLinks(validatedData.relationships);\n      }\n\n      _this.data[validatedData.id].__setUpdated(updatedAt);\n\n      return _this.data[validatedData.id];\n    }\n\n    function __get(id) {\n      var _this = this;\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.Model({id: id, type: _this.Model.prototype.schema.type}, undefined, true);\n      }\n\n      return _this.data[id];\n    }\n\n    function get(id) {\n      var _this = this;\n      var result;\n      var params = _this.schema.params.get;\n\n      if (angular.isArray(id)) {\n        result = [];\n        angular.forEach(id, function(id) {\n          result.push(_this.__get(id));\n        });\n      } else {\n        result = _this.__get(id);\n      }\n\n      _this.__synchronize('get', result, undefined, undefined, params);\n\n      return result;\n    }\n\n    function all() {\n      var _this = this;\n      _this.__synchronize('all', undefined, undefined, undefined, _this.schema.params.all);\n\n      return _this;\n    }\n\n    function clear() {\n      var _this = this;\n      _this.updatedAt = Date.now();\n      _this.data = {};\n      _this.length = 0;\n\n      _this.__synchronize('clear');\n    }\n\n    function __remove(id) {\n      var _this = this;\n      var object = _this.data[id];\n\n      _this.removed[id] = object;\n      _this.updatedAt = Date.now();\n\n      delete _this.data[id];\n\n      _this.length -= 1;\n    }\n\n    function remove(id) {\n      var _this = this;\n      var object = _this.data[id];\n\n      if (object !== undefined) {\n        _this.__remove(id);\n        object.__remove(id);\n      } else {\n        $log.error('Object with this id does not exist');\n      }\n\n      _this.__synchronize('remove', object);\n    }\n\n    function __saveNew() {\n      var _this = this;\n      var errors = _this.form.validate();\n      var newModel;\n\n      if (angular.equals(errors, {})) {\n        var data = angular.copy(_this.form.data);\n        if (data.id === undefined) {\n          data.id = uuid4.generate();\n        } else if (!uuid4.validate(data.id)) {\n          $log.error('Wrong id of new data!');\n          return;\n        }\n\n        data.type = _this.schema.type;\n        newModel = _this.parentCollection.addOrUpdate(data);\n        _this.form.reset();\n        _this.relationships = {};\n        _this.parentCollection.__synchronize('add', newModel);\n      }\n\n      return newModel;\n    }\n\n    function __addLinkNew(linkKey, linkedObject) {\n      var _this = this;\n      if (_this.schema.relationships[linkKey] === undefined) {\n        $log.error('Link\\'', linkKey, '\\'not present in schema of', _this.data.type, _this);\n        return;\n      }\n\n      if (_this.schema.relationships[linkKey].type === 'hasOne') {\n        _this.form.data.relationships[linkKey] = {\n          data: {\n            type: linkedObject.data.type,\n            id: linkedObject.data.id\n          }\n        };\n      } else {\n        _this.form.data.relationships[linkKey].data = _this.form.data.relationships[linkKey].data || [];\n        _this.form.data.relationships[linkKey].data.push({\n          type: linkedObject.data.type,\n          id: linkedObject.data.id\n        });\n      }\n    }\n\n    function __synchronize(action, object, linkKey, linkedObject, params) {\n      var _this = this;\n      var promise;\n\n      $log.debug('Synchro Collection', this.Model.prototype.schema.type, {action: action, object: object, linkKey: linkKey, linkedObject: linkedObject, params: params});\n\n      promise = _this.synchronization.synchronize(action, _this, object, linkKey, linkedObject, params);\n      if (object !== undefined) {\n        object.promises[action] = promise;\n      } else {\n        _this.promises[action] = promise;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper($log, pluralize) {\n\n    return AngularJsonAPISchema;\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = new AngularJsonAPILinkSchema(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get.join(',');\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all.join(',');\n      }\n    }\n\n    function AngularJsonAPILinkSchema(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n        _this.reflection = linkSchema.reflection || type;\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('JsonAPIModelFactory', JsonAPIModelFactory);\n\n  function JsonAPIModelFactory(AngularJsonAPIAbstractData, AngularJsonAPISchema, $log) {\n\n    return {\n      model: modelFactory\n    };\n\n    function modelFactory(schemaObj, linkedCollections, parentCollection) {\n      var Model = function(data, updatedAt, isNew) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractData.call(_this, data, updatedAt, isNew);\n\n        _this.form.parent = _this;\n      };\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractData.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.linkedCollections = linkedCollections;\n      Model.prototype.parentCollection = parentCollection;\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return Model;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractData', AngularJsonAPIAbstractDataWrapper);\n\n  function AngularJsonAPIAbstractDataWrapper(\n    $log,\n    uuid4,\n    lazyProperty,\n    AngularJsonAPIAbstractDataForm,\n    $timeout\n  ) {\n\n    AngularJsonAPIAbstractData.prototype.__setData = __setData;\n    AngularJsonAPIAbstractData.prototype.__setLinks   = __setLinks;\n    AngularJsonAPIAbstractData.prototype.__setLink = __setLink;\n    AngularJsonAPIAbstractData.prototype.__setAttributes = __setAttributes;\n    AngularJsonAPIAbstractData.prototype.__validateData = __validateData;\n    AngularJsonAPIAbstractData.prototype.__validateField = __validateField;\n    AngularJsonAPIAbstractData.prototype.__updateAttributes = __updateAttributes;\n    AngularJsonAPIAbstractData.prototype.__remove = __remove;\n    AngularJsonAPIAbstractData.prototype.__setUpdated = __setUpdated;\n    AngularJsonAPIAbstractData.prototype.__setLinkInternal = __setLinkInternal;\n\n    AngularJsonAPIAbstractData.prototype.refresh = refresh;\n    AngularJsonAPIAbstractData.prototype.remove = remove;\n    AngularJsonAPIAbstractData.prototype.addLinkById = addLinkById;\n    AngularJsonAPIAbstractData.prototype.addLink = addLink;\n    AngularJsonAPIAbstractData.prototype.removeLink = removeLink;\n\n    AngularJsonAPIAbstractData.prototype.removeAllLinks = removeAllLinks;\n    AngularJsonAPIAbstractData.prototype.hasErrors = hasErrors;\n\n    AngularJsonAPIAbstractData.prototype.toLinkData = toLinkData;\n    AngularJsonAPIAbstractData.prototype.toPatchData = toPatchData;\n    AngularJsonAPIAbstractData.prototype.toAddData = toAddData;\n\n    AngularJsonAPIAbstractData.prototype.toJson = toJson;\n\n    return AngularJsonAPIAbstractData;\n\n    function AngularJsonAPIAbstractData(data, updatedAt, isNew) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      _this.removed = false;\n      _this.loadingCount = 0;\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      _this.errors = {\n        validation: {}\n      };\n\n      _this.promises = {};\n\n      _this.isNew = isNew || false;\n\n      _this.form = new AngularJsonAPIAbstractDataForm(_this);\n\n      _this.__setUpdated(updatedAt);\n      _this.__setData(data, updatedAt);\n    }\n\n    function refresh() {\n      var _this = this;\n\n      _this.parentCollection.__synchronize('refresh', _this, undefined, undefined, _this.schema.params.get);\n    }\n\n    function hasErrors() {\n      var _this = this;\n      var result = false;\n\n      angular.forEach(_this.errors, function(error) {\n        if (error !== undefined) {\n          result = true;\n        }\n      });\n\n      return result;\n    }\n\n    function toJson() {\n      var _this = this;\n\n      return {\n        data: _this.data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    function toAddData() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    function __setUpdated(updatedAt) {\n      var _this = this;\n\n      _this.updatedAt = updatedAt || Date.now();\n      _this.parentCollection.updatedAt = _this.updatedAt;\n    }\n\n    function __remove() {\n      var _this = this;\n\n      _this.__setUpdated();\n      _this.removed = true;\n      _this.removeAllLinks();\n    }\n\n    function remove() {\n      var _this = this;\n\n      _this.__remove();\n      _this.parentCollection.remove(_this.data.id);\n    }\n\n    function toLinkData() {\n      return {type: this.data.type, id: this.data.id};\n    }\n\n    function toPatchData() {\n      var _this = this;\n      var res = {data: {}};\n      angular.forEach(_this.data, function(val, key) {\n        if (key !== 'relationships') {\n          res.data[key] = val;\n        }\n      });\n\n      return res;\n    }\n\n    function addLinkById(linkKey, linkModelName, id) {\n      var _this = this;\n      var linkedObject = _this.linkedCollections[linkModelName].__get(id);\n\n      if (_this.schema.relationships[linkKey] === undefined) {\n        $log.error('Cannot add link not specified in schema: ' + linkKey);\n        return;\n      }\n\n      if (_this.linkedCollections[linkModelName] === undefined) {\n        $log.error('Cannot add link of not existing type: ' + linkModelName);\n        return;\n      }\n\n      if (!uuid4.validate(id)) {\n        $log.error('Wrong link id, not uuid4: ' + id);\n        return;\n      }\n\n      if (linkedObject === undefined) {\n        $log.error('Cant find', linkModelName, 'with', id);\n        return;\n      }\n\n      _this.addLink(\n        linkKey,\n        linkedObject\n      );\n\n    }\n\n    function addLink(linkKey, linkedObject, reflection) {\n      var _this = this;\n      var linkSchema = _this.schema.relationships[linkKey];\n      var linkType;\n      var reflectionKey;\n      var linkAttributes;\n\n      if (linkedObject === undefined) {\n        $log.error('Can\\'t add non existing object');\n        return;\n      }\n\n      if (linkSchema === undefined) {\n        if (reflection === false) {\n          $log.error('Can\\'t add link not present in schema: ', linkKey, _this, reflection);\n        }\n\n        return;\n      }\n\n      if (linkSchema.polymorphic === false && linkSchema.model !== linkedObject.schema.type) {\n        $log.error('This relation is not polymorphic, expected: ' + linkSchema.model + ' instead of ' + linkedObject.schema.type);\n        return;\n      }\n\n      linkType = linkSchema.type;\n      reflectionKey = linkSchema.reflection;\n\n      if (linkType === 'hasOne') {\n        linkAttributes = _this.data.relationships[linkKey].data;\n\n        if (\n          linkAttributes !== undefined &&\n          linkAttributes !== null &&\n          linkAttributes.id === linkedObject.data.id\n        ) {\n          return;\n        }\n\n        if (linkAttributes !== undefined && linkAttributes !== null) {\n          $log.warn('Swaping hasOne', linkKey, 'of', _this.toString());\n          _this.removeLink(linkKey);\n        }\n\n        linkAttributes = linkedObject.toLinkData();\n      } else {\n        linkAttributes = _this.data.relationships[linkKey].data || [];\n        var duplicate = false;\n        angular.forEach(linkAttributes, function(link) {\n          if (link.id === linkedObject.data.id) {\n            duplicate = true;\n          }\n        });\n\n        if (duplicate === true) {\n          return;\n        }\n\n        linkAttributes.push(linkedObject.toLinkData());\n      }\n\n      if (reflection === true) {\n        _this.parentCollection.__synchronize('addLinkReflection', _this, linkKey, linkedObject);\n      } else {\n        linkedObject.addLink(reflectionKey, _this, true);\n        _this.parentCollection.__synchronize('addLink', _this, linkKey, linkedObject);\n      }\n\n      _this.__setUpdated();\n      _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n    }\n\n    function removeAllLinks() {\n      var _this = this;\n\n      angular.forEach(_this.relationships, function(link, key) {\n        _this.removeLink(key);\n      });\n    }\n\n    function removeLink(linkKey, linkedObject, reflection) {\n      var _this = this;\n      var linkSchema = _this.schema.relationships[linkKey];\n      var linkType;\n      var linkAttributes;\n      var reflectionKey;\n      var removed = false;\n\n      if (_this.schema.relationships[linkKey] === undefined) {\n        if (reflection === false) {\n          $log.error('Can\\'t remove link not present in schema: ' + linkKey, _this);\n        }\n\n        return;\n      }\n\n      linkType = linkSchema.type;\n      reflectionKey = linkSchema.reflection;\n      linkAttributes = _this.data.relationships[linkKey].data;\n\n      if (linkType === 'hasOne') {\n        if (linkedObject === undefined || linkedObject.data.id === linkAttributes.id) {\n          _this.data.relationships[linkKey].data = null;\n          linkAttributes = null;\n          removed = true;\n          if (reflection !== true && _this.relationships[linkKey] !== undefined) {\n            _this.relationships[linkKey].removeLink(reflectionKey, _this, true);\n          }\n        }\n      } else {\n        if (linkedObject === undefined) {\n          _this.data.relationships[linkKey].data = [];\n          linkAttributes = [];\n          removed = true;\n          if (reflection !== true) {\n            angular.forEach(_this.relationships[linkKey], function(link) {\n              link.removeLink(reflectionKey, _this, true);\n            });\n          }\n        } else {\n          angular.forEach(linkAttributes, function(link, index) {\n            if (link.id === linkedObject.data.id) {\n              if (reflection !== true) {\n                linkedObject.removeLink(reflectionKey, _this, true);\n              }\n\n              linkAttributes.splice(index, 1);\n              removed = true;\n            }\n          });\n        }\n      }\n\n      if (removed === true) {\n        _this.__setUpdated();\n\n        if (reflection !== true) {\n          _this.parentCollection.__synchronize('removeLink', _this, linkKey, linkedObject);\n        } else {\n          _this.parentCollection.__synchronize('removeLinkReflection',  _this, linkKey, linkedObject);\n        }\n\n        _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n      }\n    }\n\n    function __updateAttributes(validatedAttributes) {\n      var _this = this;\n\n      _this.__setUpdated();\n      _this.__setAttributes(validatedAttributes);\n      _this.parentCollection.__synchronize('update', _this);\n    }\n\n    function __setLinkInternal(linkAttributes, linkKey, linkSchema) {\n      var _this = this;\n      var linkType = linkSchema.type;\n      var reflectionKey = linkSchema.reflection;\n\n      if (linkAttributes === null) {\n        delete _this.relationships[linkKey];\n        _this.relationships[linkKey] = undefined;\n      } else if (linkType === 'hasMany' && angular.isArray(linkAttributes)) {\n        var getAll = function() {\n          var result = [];\n          angular.forEach(linkAttributes, function(link) {\n            var linkedCollection = _this.linkedCollections[link.type];\n            if (linkedCollection === undefined) {\n              $log.error('No angular-jsonapi schema for', linkAttributes.type);\n              return;\n            }\n\n            var linkedObject = linkedCollection.__get(link.id);\n            linkedObject.addLink(reflectionKey, _this, true);\n\n            result.push(linkedObject);\n          });\n\n          return result;\n        };\n\n        $timeout(getAll);\n        lazyProperty(_this.relationships, linkKey, getAll);\n      } else if (linkType === 'hasOne' && linkAttributes !== null) {\n\n        var getSingle = function() {\n          var linkedCollection = _this.linkedCollections[linkAttributes.type];\n          if (linkedCollection === undefined) {\n            $log.error('No angular-jsonapi schema for', linkAttributes.type);\n            return;\n          }\n\n          var linkedObject = linkedCollection.__get(linkAttributes.id);\n          linkedObject.addLink(reflectionKey, _this, true);\n\n          return linkedObject;\n        };\n\n        $timeout(getSingle);\n        lazyProperty(_this.relationships, linkKey, getSingle);\n      }\n    }\n\n    function __setLink(linkAttributes, linkKey, linkSchema) {\n      var _this = this;\n      var linkType = linkSchema.type;\n      var reflectionKey = linkSchema.reflection;\n\n      if (linkType === 'hasMany' && angular.isArray(linkAttributes)) {\n        var indexedLinks = {};\n        angular.forEach(linkAttributes, function(link) {\n          indexedLinks[link.id] = link;\n        });\n\n        angular.forEach(_this.relationships[linkKey], function(link) {\n          if (indexedLinks[link.data.id] === undefined) {\n            link.removeLink(reflectionKey, _this, true);\n          }\n        });\n      } else if (linkType === 'hasOne' && linkAttributes !== null) {\n        if (_this.relationships[linkKey] !== undefined && _this.relationships[linkKey].data.id !== linkAttributes.id) {\n          _this.relationships[linkKey].removeLink(reflectionKey, _this, true);\n        }\n      }\n\n      _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n    }\n\n    function __setLinks(relationships) {\n      var _this = this;\n      if (relationships === undefined) {\n        return;\n      }\n\n      angular.forEach(_this.schema.relationships, function(linkSchema, linkName) {\n        _this.data.relationships[linkName] = _this.data.relationships[linkName] || {};\n        if (relationships[linkName] !== undefined) {\n          angular.extend(_this.data.relationships[linkName], relationships[linkName]);\n        }\n      });\n\n      angular.forEach(_this.schema.relationships, function(linkSchema, linkKey) {\n        if (relationships[linkKey] !== undefined && relationships[linkKey].data !== undefined) {\n          _this.__setLink(relationships[linkKey].data, linkKey, linkSchema);\n        }\n      });\n    }\n\n    function __validateField(data, key) {\n      var _this = this;\n      var error = [];\n\n      if (data !== undefined) {\n        error = __validate(_this.schema.attributes[key], data, key);\n      }\n\n      return error;\n    }\n\n    function __validateData(data) {\n      var _this = this;\n      var errors = {};\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        var error = _this.__validateField(data[key], key);\n        if (error.length > 0) {\n          errors[key] = error;\n          $log.warn('Erorrs when validating ', data[key], errors);\n        }\n      });\n\n      return errors;\n    }\n\n    function __setAttributes(attributes) {\n      var _this = this;\n\n      angular.forEach(_this.schema.attributes, function(validator, attributeName) {\n        if (attributes[attributeName] !== undefined) {\n          _this.data.attributes[attributeName] = attributes[attributeName];\n        }\n      });\n    }\n\n    function __setData(data) {\n      var _this = this;\n      var safeData = angular.copy(data);\n\n      _this.errors.validation = _this.__validateData(safeData);\n\n      safeData.relationships = safeData.relationships || {};\n      safeData.attributes = safeData.attributes || {};\n\n      _this.data.id = safeData.id;\n      _this.data.type = safeData.type;\n\n      _this.__setAttributes(safeData.attributes);\n      _this.__setLinks(safeData.relationships);\n\n      _this.form.reset();\n    }\n\n    function __validate(validator, attributeValue, attributeName) {\n      var errors = [];\n      if (angular.isArray(validator)) {\n        angular.forEach(validator, function(element) {\n          errors = errors.concat(__validate(element, attributeValue, attributeName));\n        });\n      } else if (angular.isFunction(validator)) {\n        var err = validator(attributeValue);\n        if (angular.isArray(err)) {\n          errors.concat(err);\n        } else {\n          $log.error(\n            'Wrong validator type it should return array of errors instead of: ' +\n              err.toString()\n          );\n        }\n      } else if (angular.isString(validator)) {\n        if (validator === 'text' || validator === 'string') {\n          if (!angular.isString(attributeValue)) {\n            errors.push(attributeName + ' is not a string ');\n          }\n        } else if (validator === 'number' || validator === 'integer') {\n          if (parseInt(attributeValue).toString() !== attributeValue.toString()) {\n            errors.push(attributeName + ' is not a number');\n          }\n        } else if (validator === 'uuid4') {\n          if (!uuid4.validate(attributeValue)) {\n            errors.push(attributeName + ' is not a uuid4');\n          }\n        } else if (validator === 'required') {\n          if (attributeValue.toString().length === 0) {\n            errors.push(attributeName + ' is empty');\n          }\n        } else {\n          $log.error('Wrong validator type: ' + validator.toString());\n        }\n      } else if (angular.isObject(validator)) {\n        if (validator.maxlength !== undefined && attributeValue.length > validator.maxlength) {\n          errors.push(attributeName + ' is too long max ' + validator.maxlength);\n        }\n\n        if (validator.minlength !== undefined && attributeValue.length < validator.minlength) {\n          errors.push(attributeName + ' is too short min ' + validator.minlength);\n        }\n\n        if (validator.maxvalue !== undefined && parseInt(attributeValue) > validator.maxvalue) {\n          errors.push(attributeName + ' is too big max ' + validator.maxvalue);\n        }\n\n        if (validator.minvalue !== undefined && parseInt(attributeValue) < validator.minvalue) {\n          errors.push(attributeName + ' is too small min ' + validator.minvalue);\n        }\n      } else {\n        $log.error('Wrong validator type: ' + validator.toString());\n      }\n\n      return errors;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractDataForm', AngularJsonAPIAbstractDataFormWrapper);\n\n  function AngularJsonAPIAbstractDataFormWrapper($log) {\n\n    AngularJsonAPIAbstractDataForm.prototype.save = save;\n    AngularJsonAPIAbstractDataForm.prototype.reset = reset;\n    AngularJsonAPIAbstractDataForm.prototype.validate = validate;\n    AngularJsonAPIAbstractDataForm.prototype.validateField = validateField;\n\n    AngularJsonAPIAbstractDataForm.prototype.__synchronize = __synchronize;\n\n    return AngularJsonAPIAbstractDataForm;\n\n    function AngularJsonAPIAbstractDataForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        attributes: {},\n        relationships: {}\n      };\n      _this.parent = parent;\n      _this.reset();\n    }\n\n    function save() {\n      var _this = this;\n      var errors = _this.validate();\n\n      if (angular.equals(errors, {}) === false) {\n        $log.error('Errors in form: ', errors);\n        return;\n      }\n\n      _this.parent.__updateAttributes(_this.data.attributes);\n    }\n\n    function reset() {\n      var _this = this;\n\n      angular.forEach(_this.parent.schema.attributes, function(data, key) {\n        _this.data.attributes[key] = _this.parent.data.attributes[key] || '';\n      });\n\n      angular.forEach(_this.parent.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = _this.parent.data.relationships[key] || {};\n      });\n\n      _this.errors = {\n        validation: {}\n      };\n    }\n\n    function validate() {\n      var _this = this;\n      var errors;\n\n      errors = _this.parent.__validateData(_this.data);\n\n      _this.errors.validation = errors;\n\n      return errors;\n    }\n\n    function validateField(key) {\n      var _this = this;\n      var errors;\n      errors = _this.parent.__validateField(\n        _this.data[key],\n        key\n      );\n\n      _this.errors.validation[key] = errors;\n\n      return errors;\n    }\n\n    function __synchronize(key) {\n      $log.log('Synchro Collection ' + this.Model.prototype.schema.type, key);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider() {\n    var memory = {};\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPICollection) {\n      return {\n        form: form,\n        get: get,\n        remove: remove,\n        all: all,\n        addModel: addModel,\n        getModel: getModel,\n        clearAll: clearAll\n      };\n\n      function addModel(schema, synchronization) {\n        var collection = new AngularJsonAPICollection(schema, synchronization);\n\n        memory[schema.type] = collection;\n      }\n\n      function getModel(type) {\n        return memory[type];\n      }\n\n      function form(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t add not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].isNew.form;\n      }\n\n      function get(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].get(id);\n      }\n\n      function remove(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t remove not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].remove(id);\n      }\n\n      function all(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get all of not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].all();\n      }\n\n      function clearAll() {\n        angular.forEach(memory, function(collection) {\n          collection.clear();\n        });\n      }\n    }\n  }\n\n})();\n\n"],"sourceRoot":"/source/"}