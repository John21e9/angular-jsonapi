{"version":3,"sources":["/source/jsonapi.module.js","/source/collection/collection.factory.js","angular-jsonapi.min.js","/source/utils/lazy-property.js","/source/utils/all-settled.js","/source/synchronization/synchronization.js","/source/synchronization/synchronization-rest.js","/source/synchronization/synchronization-local.js","/source/abstract-data/schema.js","/source/abstract-data/model.factory.js","/source/abstract-data/abstract-data.js","/source/abstract-data/abstract-data-form.js","/source/jsonapi.provider.js"],"names":["angular","module","constant","pluralize","AngularJsonAPICollectionWrapper","$log","uuid4","JsonAPIModelFactory","AngularJsonAPISchema","AngularJsonAPICollection","schema","synchronization","_this","this","schemaObj","Model","model","allCollections","loadingCount","data","removed","dummy","type","undefined","form","save","__saveDummy","bind","__synchronize","fromJson","json","collection","updatedAt","forEach","objectData","addOrUpdate","toJson","object","key","validatedData","id","error","__setData","__setLinks","relationships","__setUpdated","__get","prototype","get","result","isArray","push","params","all","clear","Date","now","__remove","remove","newModel","errors","validate","equals","copy","generate","parentCollection","reset","action","linkKey","linkedObject","log","synchronize","factory","$inject","target","propertyName","callback","done","Object","defineProperty","call","enumerable","configurable","config","$provide","decorator","$delegate","$q","allSettled","promises","wrap","promise","when","then","value","success","reason","wrapped","hasOwnProperty","AngularJsonAPISynchronizationWrapper","AngularJsonAPISynchronization","allHooks","state","beginHooks","beforeHooks","synchronizationHooks","afterHooks","finishHooks","options","hookName","loading","extend","extendHooks","hooksKey","hooks","concat","begin","finish","beforeSynchro","afterSynchro","linkSchema","hook","results","before","after","AngularJsonAPISynchronizationRestWrapper","$http","AngularJsonAPISynchronizationRest","url","wrapResp","status","headers","afterAll","rawData","included","indexedData","afterGet","deferred","defer","method","resolve","reject","ids","toString","removeLink","toLink","addLink","update","toPatchData","add","console","create","constructor","AngularJsonAPISynchronizationLocalWrapper","$window","AngularJsonAPISynchronizationLocal","prefix","init","datas","localStorage","getItem","removeItem","updateStorage","setItem","__updateStorage","AngularJsonAPISchemaWrapper","include","linkName","linkSchemaObj","AngularJsonAPILinkSchema","length","join","isString","plural","polymorphic","reflection","AngularJsonAPIAbstractData","modelFactory","linkedCollections","parent","functions","metaFunction","metaFunctionName","AngularJsonAPIAbstractDataWrapper","lazyProperty","AngularJsonAPIAbstractDataForm","attributes","validation","refresh","removeAllLinks","res","val","addLinkById","linkModelName","linkType","reflectionKey","linkAttributes","warn","duplicate","link","__setLinkInternal","index","splice","__updateAttributes","validatedAttributes","__setAttributes","getAll","linkedCollection","getSingle","__setLink","indexedLinks","__validateField","__validate","__validateData","validator","attributeName","safeData","attributeValue","element","isFunction","err","parseInt","isObject","maxlength","minlength","maxvalue","minvalue","AngularJsonAPIAbstractDataFormWrapper","validateField","jsonapiProvider","jsonapiFactory","addModel","memory","getModel","$get","provider"],"mappings":"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","file":"angular-jsonapi.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false */\n  .constant('pluralize', pluralize);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    $log,\n    uuid4,\n    JsonAPIModelFactory,\n    AngularJsonAPISchema\n  ) {\n    AngularJsonAPICollection.prototype.allCollections = {};\n\n    AngularJsonAPICollection.prototype.__synchronize = __synchronize;\n    AngularJsonAPICollection.prototype.__get = __get;\n    AngularJsonAPICollection.prototype.__remove = __remove;\n\n    AngularJsonAPICollection.prototype.get = get;\n    AngularJsonAPICollection.prototype.all = all;\n    AngularJsonAPICollection.prototype.remove = remove;\n    AngularJsonAPICollection.prototype.clear = clear;\n    AngularJsonAPICollection.prototype.fromJson = fromJson;\n    AngularJsonAPICollection.prototype.toJson = toJson;\n    AngularJsonAPICollection.prototype.addOrUpdate = addOrUpdate;\n\n    return AngularJsonAPICollection;\n\n    function AngularJsonAPICollection(schema, synchronization) {\n      var _this = this;\n\n      var schemaObj = new AngularJsonAPISchema(schema);\n\n      _this.Model = JsonAPIModelFactory.model(\n        schemaObj,\n        _this.allCollections,\n        _this\n      );\n\n      _this.synchronization = synchronization;\n\n      _this.loadingCount = 0;\n      _this.data = {};\n      _this.removed = {};\n      _this.schema = schemaObj;\n\n      _this.dummy = new _this.Model({type: schema.type}, undefined, true);\n      _this.dummy.form.save = __saveDummy.bind(_this.dummy);\n      _this.allCollections[schema.type] = _this;\n\n      _this.__synchronize('init');\n    }\n\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      if (collection !== null && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, objectData.updatedAt);\n        });\n      }\n    }\n\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: {},\n        updatedAt: _this.updatedAt\n      };\n\n      angular.forEach(_this.data, function(object, key) {\n        json.data[key] = object.toJson();\n      });\n\n      return angular.toJson(json);\n    }\n\n    function addOrUpdate(validatedData, updatedAt) {\n      var _this = this;\n      if (validatedData.id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[validatedData.id] === undefined) {\n        _this.data[validatedData.id] = new this.Model(validatedData, updatedAt);\n      } else {\n        _this.data[validatedData.id].__setData(validatedData, updatedAt);\n        _this.data[validatedData.id].__setLinks(validatedData.relationships);\n      }\n\n      _this.data[validatedData.id].__setUpdated(updatedAt);\n\n      return _this.data[validatedData.id];\n    }\n\n    function __get(id) {\n      var _this = this;\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.Model({id: id, type: _this.Model.prototype.schema.type}, undefined, true);\n      }\n\n      return _this.data[id];\n    }\n\n    function get(id) {\n      var _this = this;\n      var result;\n\n      if (angular.isArray(id)) {\n        result = [];\n        angular.forEach(id, function(id) {\n          result.push(_this.__get(id));\n        });\n      } else {\n        result = _this.__get(id);\n      }\n\n      _this.__synchronize('get', result, undefined, undefined, _this.schema.params.get);\n\n      return result;\n    }\n\n    function all() {\n      var _this = this;\n      _this.__synchronize('all', undefined, undefined, undefined, _this.schema.params.all);\n\n      return _this;\n    }\n\n    function clear() {\n      var _this = this;\n      _this.updatedAt = Date.now();\n      _this.data = {};\n\n      _this.__synchronize('clear');\n    }\n\n    function __remove(id) {\n      var _this = this;\n      var object = _this.data[id];\n\n      _this.removed[id] = object;\n      _this.updatedAt = Date.now();\n\n      delete _this.data[id];\n    }\n\n    function remove(id) {\n      var _this = this;\n      var object = _this.data[id];\n\n      if (object !== undefined) {\n        _this.__remove(id);\n        object.__remove(id);\n      } else {\n        $log.error('Object with this id does not exist');\n      }\n\n      _this.__synchronize('remove', object);\n    }\n\n    function __saveDummy() {\n      var _this = this;\n      var errors = _this.form.validate();\n      var newModel;\n\n      if (angular.equals(errors, {})) {\n        var data = angular.copy(_this.form.data);\n        if (data.id === undefined) {\n          data.id = uuid4.generate();\n        } else if (!uuid4.validate(data.id)) {\n          $log.error('Wrong id of dummy data!');\n          return;\n        }\n\n        data.relationships = {};\n\n        data.type = _this.schema.type;\n        newModel = _this.parentCollection.addOrUpdate(data);\n        _this.form.reset();\n        _this.parentCollection.__synchronize('add', _this);\n      }\n    }\n\n    function __synchronize(action, object, linkKey, linkedObject, params) {\n      var _this = this;\n\n      $log.log('Synchro Collection', this.Model.prototype.schema.type, {action: action, object: object, linkKey: linkKey, linkedObject: linkedObject, params: params});\n\n      _this.synchronization.synchronize(action, _this, object, linkKey, linkedObject, params);\n    }\n  }\n})();\n","!function(){\"use strict\";angular.module(\"angular-jsonapi\",[\"uuid4\"]).constant(\"pluralize\",pluralize)}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"lazyProperty\",function(t,n,o){var e,a;Object.defineProperty(t,n,{get:function(){return a||(a=!0,e=o.call(t)),e},enumerable:!0,configurable:!0})})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$provide\",function(t){t.decorator(\"$q\",[\"$delegate\",function(t){var n=t;return n.allSettled=n.allSettled||function(t){function o(t){return n.when(t).then(function(t){return{success:!0,value:t}},function(t){return{success:!1,reason:t}})}var e=angular.isArray(t)?[]:{};return angular.forEach(t,function(t,n){e.hasOwnProperty(n)||(e[n]=o(t))}),n.all(e)},n}])}])}(),function(){\"use strict\";function t(t){function n(){var t=this,n=[\"add\",\"init\",\"get\",\"all\",\"clear\",\"remove\",\"removeLink\",\"removeLinkReflection\",\"addLink\",\"addLinkReflection\",\"update\",\"refresh\"];t.state={},t.beginHooks={},t.beforeHooks={},t.synchronizationHooks={},t.afterHooks={},t.finishHooks={},t.options={},angular.forEach(n,function(n){t.beginHooks[n]=[],t.beforeHooks[n]=[],t.synchronizationHooks[n]=[],t.afterHooks[n]=[],t.finishHooks[n]=[],t.state[n]={loading:!1,success:!0}})}function o(t){function n(n){angular.forEach(t[n],function(t,e){o[n][e]=o[n][e].concat(t)})}var o=this;n(\"beginHooks\"),n(\"beforeHooks\"),n(\"synchronizationHooks\"),n(\"afterHooks\"),n(\"finishHooks\"),angular.extend(o.options,t.options)}function e(t,n){var o=this;o.beginHooks[t].push(n)}function a(t,n){var o=this;o.finishHooks[t].push(n)}function r(t,n){var o=this;o.beforeHooks[t].push(n)}function i(t,n){var o=this;o.afterHooks[t].push(n)}function s(t,n){var o=this;o.synchronizationHooks[t].push(n)}function l(n,o,e,a,r,i){var s=this,l=[];s.state[n].loading=!0,void 0!==e&&(e.loadingCount+=1),void 0!==o&&(o.loadingCount+=1),angular.forEach(s.beginHooks[n],function(t){t.call(s,o,e,a,r,i)}),angular.forEach(s.beforeHooks[n],function(t){t.call(s,o,e,a,r,i)}),angular.forEach(s.synchronizationHooks[n],function(t){l.push(t.call(s,o,e,a,r,i))}),t.allSettled(l).then(function(t){s.state[n].success=!0,angular.forEach(t,function(t){t.success===!1&&(s.state[n].success=!1)}),angular.forEach(s.afterHooks[n],function(n){n.call(s,o,e,a,r,i,t)}),angular.forEach(s.finishHooks[n],function(t){t.call(s,o,e,a,r,i)}),s.state[n].loading=!1,void 0!==e&&(e.loadingCount-=1),void 0!==o&&(o.loadingCount-=1)})}return n.prototype.before=r,n.prototype.after=i,n.prototype.begin=e,n.prototype.finish=a,n.prototype.synchronization=s,n.prototype.synchronize=l,n.prototype.extend=o,n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronization\",t),t.$inject=[\"$q\"]}(),function(){\"use strict\";function t(t,n,o){function e(e){function a(t,n,o,e){return{data:t,status:n,headers:o,config:e}}function r(t,n,o,e,a,r){var i=r[0].value.data.data,s=r[0].value.data.included;if(r[0].success===!0&&void 0!==i){var l={};angular.forEach(i,function(n){l[n.id]=n,t.addOrUpdate(n)}),angular.forEach(t.data,function(n){void 0===l[n.id]&&t.__remove(n.id)}),angular.forEach(s,function(n){t.allCollections[n.type].addOrUpdate(n)})}}function i(t,n,o,e,a,r){var i,s;r[0].success===!0?(i=r[0].value.data.data,s=r[0].value.data.included,t.addOrUpdate(i),angular.forEach(s,function(n){t.allCollections[n.type].addOrUpdate(n)})):(n.error=!0,n.__remove(),t.__remove(n.data.id))}function s(t,r,i){var s=n.defer(),l={method:\"GET\",url:e,params:i||{}};return o(l).success(function(t,n,o,e){s.resolve(a(t,n,o,e))}).error(function(t,n,o,e){s.reject(a(t,n,o,e))}),s.promise}function l(t,r,i,s,l){var u,d,c=n.defer();return angular.isArray(r)?(d=[],angular.forEach(r,function(t){d.push(t.data.id)})):d=r.data.id,u={method:\"GET\",url:e+\"/\"+d.toString(),params:l||{}},o(u).success(function(t,n,o,e){c.resolve(a(t,n,o,e))}).error(function(t,n,o,e){c.reject(a(t,n,o,e))}),c.promise}function u(t,r){var i=n.defer(),s={method:\"DELETE\",url:e+\"/\"+r.data.id};return o(s).success(function(t,n,o,e){i.resolve(a(t,n,o,e))}).error(function(t,n,o,e){i.reject(a(t,n,o,e))}),i.promise}function d(t,r,i,s){var l,u=n.defer();return r.removed===!0||void 0===s?u.resolve():(l={method:\"DELETE\",url:e+\"/\"+r.data.id+\"/relationships/\"+i,data:{data:s.toLink()}},o(l).success(function(t,n,o,e){u.resolve(a(t,n,o,e))}).error(function(t,n,o,e){u.reject(a(t,n,o,e))})),u.promise}function c(t,r,i,s){var l=n.defer(),u={method:\"POST\",url:e+\"/\"+r.data.id+\"/relationships/\"+i,data:{data:s.toLink()}};return o(u).success(function(t,n,o,e){l.resolve(a(t,n,o,e))}).error(function(t,n,o,e){l.reject(a(t,n,o,e))}),l.promise}function p(t,r){var i=n.defer(),s={method:\"PATCH\",url:e+\"/\"+r.data.id,data:{data:r.toPatchData()}};return o(s).success(function(t,n,o,e){i.resolve(a(t,n,o,e))}).error(function(t,n,o,e){i.reject(a(t,n,o,e))}),i.promise}function f(t,r){var i=n.defer();console.log(r);var s={method:\"POST\",url:e+\"/\",data:{data:r.toJson()}};return o(s).success(function(t,n,o,e){i.resolve(a(t,n,o,e))}).error(function(t,n,o,e){i.reject(a(t,n,o,e))}),i.promise}var h=this;t.call(h),h.synchronization(\"remove\",u),h.synchronization(\"removeLink\",d),h.synchronization(\"addLink\",c),h.synchronization(\"update\",p),h.synchronization(\"add\",f),h.synchronization(\"all\",s),h.synchronization(\"get\",l),h.synchronization(\"refresh\",l),h.after(\"all\",r),h.after(\"get\",i),h.after(\"refresh\",i)}return e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e}angular.module(\"angular-jsonapi-rest\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationRest\",t),t.$inject=[\"AngularJsonAPISynchronization\",\"$q\",\"$http\"]}(),function(){\"use strict\";function t(t,n){function o(o){function e(t){var e=n.localStorage.getItem(o+\".\"+t.Model.prototype.schema.type);t.fromJson(e)}function a(t){n.localStorage.removeItem(o+\".\"+t.Model.prototype.schema.type)}function r(t){n.localStorage.setItem(o+\".\"+t.Model.prototype.schema.type,t.toJson())}var i=this;i.__updateStorage=r,t.call(i),i.begin(\"init\",e),i.begin(\"clear\",a),i.begin(\"remove\",r),i.begin(\"removeLink\",r),i.begin(\"removeLinkReflection\",r),i.begin(\"addLink\",r),i.begin(\"addLinkReflection\",r),i.begin(\"update\",r),i.begin(\"add\",r),i.finish(\"get\",r),i.finish(\"all\",r),i.finish(\"init\",r),i.finish(\"clear\",r),i.finish(\"remove\",r),i.finish(\"removeLink\",r),i.finish(\"removeLinkReflection\",r),i.finish(\"addLink\",r),i.finish(\"addLinkReflection\",r),i.finish(\"update\",r),i.finish(\"add\",r),i.finish(\"get\",r),i.finish(\"all\",r)}return o.prototype=Object.create(t.prototype),o.prototype.constructor=o,o}angular.module(\"angular-jsonapi-local\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationLocal\",t),t.$inject=[\"AngularJsonAPISynchronization\",\"$window\"]}(),function(){\"use strict\";function t(t,n,o,e){function a(t,n){var a=this,r=new e(t);a.Model=o.model(r,a.allCollections,a),a.synchronization=n,a.loadingCount=0,a.data={},a.removed={},a.schema=r,a.dummy=new a.Model({type:t.type},void 0,!0),a.dummy.form.save=h.bind(a.dummy),a.allCollections[t.type]=a,a.__synchronize(\"init\")}function r(t){var n=this,o=angular.fromJson(t);null!==o&&void 0!==o.data&&(n.updatedAt=o.updatedAt,angular.forEach(o.data,function(t){var o=t.data;n.addOrUpdate(o,t.updatedAt)}))}function i(){var t=this,n={data:{},updatedAt:t.updatedAt};return angular.forEach(t.data,function(t,o){n.data[o]=t.toJson()}),angular.toJson(n)}function s(n,o){var e=this;return void 0===n.id?void t.error(\"Can't add data without id!\",n):(void 0===e.data[n.id]?e.data[n.id]=new this.Model(n,o):(e.data[n.id].__setData(n,o),e.data[n.id].__setLinks(n.relationships)),e.data[n.id].__setUpdated(o),e.data[n.id])}function l(t){var n=this;return void 0===n.data[t]&&(n.data[t]=new n.Model({id:t,type:n.Model.prototype.schema.type},void 0,!0)),n.data[t]}function u(t){var n,o=this;return angular.isArray(t)?(n=[],angular.forEach(t,function(t){n.push(o.__get(t))})):n=o.__get(t),o.__synchronize(\"get\",n,void 0,void 0,o.schema.params.get),n}function d(){var t=this;return t.__synchronize(\"all\",void 0,void 0,void 0,t.schema.params.all),t}function c(){var t=this;t.updatedAt=Date.now(),t.data={},t.__synchronize(\"clear\")}function p(t){var n=this,o=n.data[t];n.removed[t]=o,n.updatedAt=Date.now(),delete n.data[t]}function f(n){var o=this,e=o.data[n];void 0!==e?(o.__remove(n),e.__remove(n)):t.error(\"Object with this id does not exist\"),o.__synchronize(\"remove\",e)}function h(){var o,e=this,a=e.form.validate();if(angular.equals(a,{})){var r=angular.copy(e.form.data);if(void 0===r.id)r.id=n.generate();else if(!n.validate(r.id))return void t.error(\"Wrong id of dummy data!\");r.relationships={},r.type=e.schema.type,o=e.parentCollection.addOrUpdate(r),e.form.reset(),e.parentCollection.__synchronize(\"add\",e)}}function v(n,o,e,a,r){var i=this;t.log(\"Synchro Collection\",this.Model.prototype.schema.type,{action:n,object:o,linkKey:e,linkedObject:a,params:r}),i.synchronization.synchronize(n,i,o,e,a,r)}return a.prototype.allCollections={},a.prototype.__synchronize=v,a.prototype.__get=l,a.prototype.__remove=p,a.prototype.get=u,a.prototype.all=d,a.prototype.remove=f,a.prototype.clear=c,a.prototype.fromJson=r,a.prototype.toJson=i,a.prototype.addOrUpdate=s,a}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICollection\",t),t.$inject=[\"$log\",\"uuid4\",\"JsonAPIModelFactory\",\"AngularJsonAPISchema\"]}(),function(){\"use strict\";function t(t,n){function o(t){var n=this,o=[];n.params={get:{},all:{}},angular.forEach(t.relationships,function(n,a){var r=new e(n,a,t.type);t.relationships[a]=r,r.included===!0&&o.push(a)}),angular.extend(n,t),o.length>0&&(n.params.get.include=o.join(\",\"))}function e(o,e,a){var r=this;angular.isString(o)?(r.model=n.plural(e),r.type=o,r.polymorphic=!1,r.reflection=a):(void 0===o.type&&t.error(\"Schema of link without a type: \",o,e),r.model=o.model||n.plural(e),r.type=o.type,r.polymorphic=o.polymorphic||!1,r.reflection=o.reflection||a,r.included=o.included||!1)}return o}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchema\",t),t.$inject=[\"$log\",\"pluralize\"]}(),function(){\"use strict\";function t(t,n,o){function e(n,e,a){var r=function(n,e,a){var r=this;n.type!==r.schema.type&&o.error(\"Data type other then declared in schema: \",n.type,\" instead of \",r.schema.type),t.call(r,n,e,a),r.form.parent=r};return r.prototype=Object.create(t.prototype),r.prototype.constructor=r,r.prototype.schema=n,r.prototype.linkedCollections=e,r.prototype.parentCollection=a,angular.forEach(n.functions,function(t,n){r.prototype[n]=function(){return t.call(this)}}),r}return{model:e}}angular.module(\"angular-jsonapi\").factory(\"JsonAPIModelFactory\",t),t.$inject=[\"AngularJsonAPIAbstractData\",\"AngularJsonAPISchema\",\"$log\"]}(),function(){\"use strict\";function t(t,n,o,e){function a(t,n,o){var a=this;t.relationships=t.relationships||{},a.removed=!1,a.loadingCount=0,a.data={relationships:{},attributes:{}},a.relationships={},a.errors={validation:{}},a.dummy=o||!1,a.error=!1,a.__setUpdated(n),a.__setData(t,n),a.form=new e(a)}function r(){var t=this;t.parentCollection.__synchronize(\"refresh\",t)}function i(){var t=this;return{data:t.data,updatedAt:t.updatedAt}}function s(t){var n=this;n.updatedAt=t||Date.now(),n.parentCollection.updatedAt=n.updatedAt}function l(){var t=this;t.__setUpdated(),t.removed=!0,t.removeAllLinks()}function u(){var t=this;t.__remove(),t.parentCollection.remove(t.data.id)}function d(){return{type:this.data.type,id:this.data.id}}function c(){var t=this,n={data:{}};return angular.forEach(t.data,function(t,o){\"relationships\"!==o&&(n.data[o]=t)}),n}function p(o,e,a){var r=this,i=r.linkedCollections[e].__get(a);return void 0===r.schema.relationships[o]?void t.error(\"Cannot add link not specified in schema: \"+o):void 0===r.linkedCollections[e]?void t.error(\"Cannot add link of not existing type: \"+e):n.validate(a)?void 0===i?void t.error(\"Cant find\",e,\"with\",a):void r.addLink(o,i):void t.error(\"Wrong link id, not uuid4: \"+a)}function f(n,o,e){var a,r,i,s=this,l=s.schema.relationships[n];if(void 0===o)return void t.error(\"Can't add non existing object\");if(void 0===l)return void t.error(\"Can't add link not present in schema: \",n,s,e);if(l.polymorphic===!1&&l.model!==o.schema.type)return void t.error(\"This relation is not polymorphic, expected: \"+l.model+\" instead of \"+o.schema.type);if(a=l.type,r=l.reflection,i=s.data.relationships[n].data,\"hasOne\"===a){if(null!==i&&i.id===o.data.id)return;void 0!==i&&null!==i&&(t.warn(\"Swaping hasOne\",n,\"of\",s.toString()),s.removeLink(n)),i=o.toLink(),i=o.toLink()}else{var u=!1;if(angular.forEach(i,function(t){t.id===o.data.id&&(u=!0)}),u===!0)return;i.push(o.toLink())}e===!0?s.parentCollection.__synchronize(\"addLinkReflection\",s,n,o):(o.addLink(r,s,!0),s.parentCollection.__synchronize(\"addLink\",s,n,o)),s.__setUpdated(),s.__setLinkInternal(i,n,l)}function h(){var t=this;angular.forEach(t.relationships,function(n,o){t.removeLink(o)})}function v(n,o,e){var a,r,i,s=this,l=s.schema.relationships[n],u=!1;return void 0===s.schema.relationships[n]?void t.error(\"Can't remove link not present in schema\"):(a=l.type,i=l.reflection,r=s.data.relationships[n].data,\"hasOne\"===a?null===o.data||void 0!==o&&o.data.id!==r.id||(s.data.relationships[n].data=null,r=null,u=!0,e!==!0&&void 0!==s.relationships[n]&&s.relationships[n].removeLink(i,s,!0)):void 0===o?(s.data.relationships[n].data=[],r=[],u=!0,e!==!0&&angular.forEach(s.relationships[n],function(t){t.removeLink(i,s,!0)})):angular.forEach(r,function(t,n){t.id===o.data.id&&(e!==!0&&o.removeLink(i,s,!0),r.splice(n,1),u=!0)}),void(u===!0&&(s.__setUpdated(),e!==!0?s.parentCollection.__synchronize(\"removeLink\",s,n,o):s.parentCollection.__synchronize(\"removeLinkReflection\",s,n,o),s.__setLinkInternal(r,n,l))))}function g(t){var n=this;n.__setUpdated(),n.__setAttributes(t),n.parentCollection.__synchronize(\"update\",n)}function y(n,e,a){var r=this,i=a.type,s=a.reflection;if(null===n)delete r.relationships[e],r.relationships[e]=void 0;else if(\"hasMany\"===i&&angular.isArray(n)){var l=function(){var o=[];return angular.forEach(n,function(e){var a=r.linkedCollections[e.type];if(void 0===a)return void t.error(\"No angular-jsonapi schema for\",n.type);var i=a.__get(e.id);i.addLink(s,r,!0),o.push(i)}),o};o(r.relationships,e,l)}else if(\"hasOne\"===i&&n.id){var u=function(){var o=r.linkedCollections[n.type];if(void 0===o)return void t.error(\"No angular-jsonapi schema for\",n.type);var e=o.__get(n.id);return e.addLink(s,r,!0),e};o(r.relationships,e,u)}}function m(t,n,o){var e=this,a=o.type,r=o.reflection;if(\"hasMany\"===a&&angular.isArray(t)){var i={};angular.forEach(t,function(t){i[t.id]=t}),angular.forEach(e.relationships[n],function(t){void 0===i[t.data.id]&&t.removeLink(r,e,!0)})}else\"hasOne\"===a&&null!==t&&t.id&&void 0!==e.relationships[n]&&e.relationships[n].data.id!==t.id&&e.relationships[n].removeLink(r,e,!0);e.__setLinkInternal(t,n,o)}function _(t){var n=this;angular.forEach(n.schema.relationships,function(o,e){n.data.relationships[e]=\"hasOne\"===o.type?t[e]||{data:null}:t[e]||{data:[]}}),angular.forEach(n.schema.relationships,function(o,e){void 0!==t[e]&&n.__setLink(t[e].data,e,o)})}function k(t,n){var o=this,e=[];return void 0!==t&&(e=j(o.schema.attributes[n],t,n)),e}function A(n){var o=this,e={};return angular.forEach(o.schema.attributes,function(a,r){var i=o.__validateField(n[r],r);i.length>0&&(e[r]=i,t.warn(\"Erorrs when validating \",n[r],e))}),e}function b(t){var n=this;angular.forEach(n.schema.attributes,function(o,e){t[e]&&(n.data.attributes[e]=t[e])})}function L(t){var n=this,o=angular.copy(t);n.errors.validation=n.__validateData(o),o.relationships=o.relationships||{},o.attributes=o.attributes||{},n.data.id=o.id,n.data.type=o.type,n.__setAttributes(o.attributes),n.__setLinks(o.relationships)}function j(o,e,a){var r=[];if(angular.isArray(o))angular.forEach(o,function(t){r=r.concat(j(t,e,a))});else if(angular.isFunction(o)){var i=o(e);angular.isArray(i)?r.concat(i):t.error(\"Wrong validator type it should return array of errors instead of: \"+i.toString())}else angular.isString(o)?\"text\"===o||\"string\"===o?angular.isString(e)||r.push(a+\" is not a string \"):\"number\"===o||\"integer\"===o?parseInt(e).toString()!==e.toString()&&r.push(a+\" is not a number\"):\"uuid4\"===o?n.validate(e)||r.push(a+\" is not a uuid4\"):\"required\"===o?0===e.toString().length&&r.push(a+\" is empty\"):t.error(\"Wrong validator type: \"+o.toString()):angular.isObject(o)?(void 0!==o.maxlength&&e.length>o.maxlength&&r.push(a+\" is too long max \"+o.maxlength),void 0!==o.minlength&&e.length<o.minlength&&r.push(a+\" is too short min \"+o.minlength),void 0!==o.maxvalue&&parseInt(e)>o.maxvalue&&r.push(a+\" is too big max \"+o.maxvalue),void 0!==o.minvalue&&parseInt(e)<o.minvalue&&r.push(a+\" is too small min \"+o.minvalue)):t.error(\"Wrong validator type: \"+o.toString());return r}return a.prototype.__setData=L,a.prototype.__setLinks=_,a.prototype.__setLink=m,a.prototype.__setAttributes=b,a.prototype.__validateData=A,a.prototype.__validateField=k,a.prototype.__updateAttributes=g,a.prototype.__remove=l,a.prototype.__setUpdated=s,a.prototype.__setLinkInternal=y,a.prototype.refresh=r,a.prototype.remove=u,a.prototype.addLinkById=p,a.prototype.addLink=f,a.prototype.removeLink=v,a.prototype.toLink=d,a.prototype.toPatchData=c,a.prototype.removeAllLinks=h,a.prototype.toJson=i,a}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractData\",t),t.$inject=[\"$log\",\"uuid4\",\"lazyProperty\",\"AngularJsonAPIAbstractDataForm\"]}(),function(){\"use strict\";function t(t){function n(t){var n=this;n.data={},n.parent=t,n.reset()}function o(){var n=this,o=n.validate();return angular.equals(o,{})===!1?void t.error(\"Errors in form: \",o):void n.parent.__updateAttributes(n.data)}function e(){var t=this;angular.forEach(t.parent.schema.attributes,function(n,o){t.data[o]=t.parent.data.attributes[o]||\"\"}),t.errors={validation:{}}}function a(){var t,n=this;return t=n.parent.__validateData(n.data),n.errors.validation=t,t}function r(t){var n,o=this;return n=o.parent.__validateField(o.data[t],t),o.errors.validation[t]=n,n}function i(n){t.log(\"Synchro Collection \"+this.Model.prototype.schema.type,n)}return n.prototype.save=o,n.prototype.reset=e,n.prototype.validate=a,n.prototype.validateField=r,n.prototype.__synchronize=i,n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractDataForm\",t),t.$inject=[\"$log\"]}(),function(){\"use strict\";function t(){function t(t,o){function e(t,e){var a=new o(t,e);n[t.type]=a}function a(t){return n[t]}function r(o){return void 0===n[o]&&t.error(\"Can\t add not existing object type: \"+o+\". Use initialize(Model, datas).\"),n[o].dummy.form}function i(o,e){return void 0===n[o]&&t.error(\"Can\t get not existing object type: \"+o+\". Use initialize(Model, datas).\"),n[o].get(e)}function s(o,e){return void 0===n[o]&&t.error(\"Can\t remove not existing object type: \"+o+\". Use initialize(Model, datas).\"),n[o].remove(e)}function l(o){return void 0===n[o]&&t.error(\"Can\t get all of not existing object type: \"+o+\". Use initialize(Model, datas).\"),n[o].all()}return{form:r,get:i,remove:s,all:l,addModel:e,getModel:a}}var n={};this.$get=t,t.$inject=[\"$log\",\"AngularJsonAPICollection\"]}angular.module(\"angular-jsonapi\").provider(\"$jsonapi\",t)}();\n//# sourceMappingURL=angular-jsonapi.min.js.map","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.when(promise)\n            .then(function(value) {\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronization', AngularJsonAPISynchronizationWrapper);\n\n  function AngularJsonAPISynchronizationWrapper($q) {\n    AngularJsonAPISynchronization.prototype.before = beforeSynchro;\n    AngularJsonAPISynchronization.prototype.after = afterSynchro;\n    AngularJsonAPISynchronization.prototype.begin = begin;\n    AngularJsonAPISynchronization.prototype.finish = finish;\n    AngularJsonAPISynchronization.prototype.synchronization = synchronization;\n    AngularJsonAPISynchronization.prototype.synchronize = synchronize;\n    AngularJsonAPISynchronization.prototype.extend = extend;\n\n    return AngularJsonAPISynchronization;\n\n    function AngularJsonAPISynchronization() {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clear',\n        'remove',\n        'removeLink',\n        'removeLinkReflection',\n        'addLink',\n        'addLinkReflection',\n        'update',\n        'refresh'\n      ];\n\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function extend(synchronization) {\n      var _this = this;\n\n      extendHooks('beginHooks');\n      extendHooks('beforeHooks');\n      extendHooks('synchronizationHooks');\n      extendHooks('afterHooks');\n      extendHooks('finishHooks');\n\n      function extendHooks(hooksKey) {\n        angular.forEach(synchronization[hooksKey], function(hooks, key) {\n          _this[hooksKey][key] = _this[hooksKey][key].concat(hooks);\n        });\n      }\n\n      angular.extend(_this.options, synchronization.options);\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n    function synchronize(action, collection, object, linkSchema, linkedObject, params) {\n      var _this = this;\n      var promises = [];\n\n      _this.state[action].loading = true;\n\n      if (object !== undefined) {\n        object.loadingCount += 1;\n      }\n\n      if (collection !== undefined) {\n        collection.loadingCount += 1;\n      }\n\n      angular.forEach(_this.beginHooks[action], function(hook) {\n        hook.call(_this, collection, object, linkSchema, linkedObject, params);\n      });\n\n      angular.forEach(_this.beforeHooks[action], function(hook) {\n        hook.call(_this, collection, object, linkSchema, linkedObject, params);\n      });\n\n      angular.forEach(_this.synchronizationHooks[action], function(hook) {\n        promises.push(hook.call(_this, collection, object, linkSchema, linkedObject, params));\n      });\n\n      $q.allSettled(promises).then(function(results) {\n        _this.state[action].success = true;\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.afterHooks[action], function(hook) {\n          hook.call(_this, collection, object, linkSchema, linkedObject, params, results);\n        });\n\n        angular.forEach(_this.finishHooks[action], function(hook) {\n          hook.call(_this, collection, object, linkSchema, linkedObject, params);\n        });\n\n        _this.state[action].loading = false;\n\n        if (object !== undefined) {\n          object.loadingCount -= 1;\n        }\n\n        if (collection !== undefined) {\n          collection.loadingCount -= 1;\n        }\n      });\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationRest', AngularJsonAPISynchronizationRestWrapper);\n\n  function AngularJsonAPISynchronizationRestWrapper(AngularJsonAPISynchronization, $q, $http) {\n\n    AngularJsonAPISynchronizationRest.prototype = Object.create(AngularJsonAPISynchronization.prototype);\n    AngularJsonAPISynchronizationRest.prototype.constructor = AngularJsonAPISynchronizationRest;\n\n    return AngularJsonAPISynchronizationRest;\n\n    function AngularJsonAPISynchronizationRest(url) {\n      var _this = this;\n\n      AngularJsonAPISynchronization.call(_this);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('removeLink', removeLink);\n      _this.synchronization('addLink', addLink);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n      _this.after('all', afterAll);\n      _this.after('get', afterGet);\n      _this.after('refresh', afterGet);\n\n      function wrapResp(data, status, headers, config) {\n        return {\n          data: data,\n          status: status,\n          headers: headers,\n          config: config\n        };\n      }\n\n      function afterAll(collection, object, linkSchema, linkedObject, params, results) {\n        var rawData = results[0].value.data.data;\n        var included = results[0].value.data.included;\n\n        if (results[0].success === true && rawData !== undefined) {\n          var indexedData = {};\n          angular.forEach(rawData, function(data) {\n            indexedData[data.id] = data;\n            collection.addOrUpdate(data);\n          });\n\n          angular.forEach(collection.data, function(data) {\n            if (indexedData[data.id] === undefined) {\n              collection.__remove(data.id);\n            }\n          });\n\n          angular.forEach(included, function(object) {\n            collection.allCollections[object.type].addOrUpdate(object);\n          });\n        }\n      }\n\n      function afterGet(collection, object, linkSchema, linkedObject, params, results) {\n        var data;\n        var included;\n\n        if (results[0].success === true) {\n          data = results[0].value.data.data;\n          included = results[0].value.data.included;\n          collection.addOrUpdate(data);\n\n          angular.forEach(included, function(object) {\n            collection.allCollections[object.type].addOrUpdate(object);\n          });\n        } else {\n          object.error = true;\n          object.__remove();\n          collection.__remove(object.data.id);\n        }\n      }\n\n      function all(collection, object, params) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'GET',\n          url: url,\n          params: params || {}\n        };\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function get(collection, object, linkSchema, linkedObject, params) {\n        var deferred = $q.defer();\n        var config;\n        var ids;\n\n        if (angular.isArray(object)) {\n          ids = [];\n          angular.forEach(object, function(object) {\n            ids.push(object.data.id);\n          });\n        } else {\n          ids = object.data.id;\n        }\n\n        config = {\n          method: 'GET',\n          url: url + '/' + ids.toString(),\n          params: params || {}\n        };\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function remove(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'DELETE',\n          url: url + '/' + object.data.id\n        };\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function removeLink(collection, object, linkKey, linkedObject) {\n        var deferred = $q.defer();\n        var config;\n\n        if (object.removed === true || linkedObject === undefined) {\n          deferred.resolve();\n        } else {\n          config = {\n            method: 'DELETE',\n            url: url + '/' + object.data.id + '/relationships/' + linkKey,\n            data: {data: linkedObject.toLink()}\n          };\n\n          $http(config).\n          success(function(data, status, headers, config) {\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n        }\n\n        return deferred.promise;\n      }\n\n      function addLink(collection, object, linkKey, linkedObject) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'POST',\n          url: url + '/' + object.data.id + '/relationships/' + linkKey,\n          data: {data: linkedObject.toLink()}\n        };\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n\n      }\n\n      function update(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'PATCH',\n          url: url + '/' + object.data.id,\n          data: {data: object.toPatchData()}\n        };\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function add(collection, object) {\n        var deferred = $q.defer();\n        console.log(object);\n        var config = {\n          method: 'POST',\n          url: url + '/',\n          data: {data: object.toJson()}\n        };\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationLocal', AngularJsonAPISynchronizationLocalWrapper);\n\n  function AngularJsonAPISynchronizationLocalWrapper(AngularJsonAPISynchronization, $window) {\n\n    AngularJsonAPISynchronizationLocal.prototype = Object.create(AngularJsonAPISynchronization.prototype);\n    AngularJsonAPISynchronizationLocal.prototype.constructor = AngularJsonAPISynchronizationLocal;\n\n    return AngularJsonAPISynchronizationLocal;\n\n    function AngularJsonAPISynchronizationLocal(prefix) {\n      var _this = this;\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISynchronization.call(_this);\n\n      _this.begin('init', init);\n      _this.begin('clear', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('removeLink', updateStorage);\n      _this.begin('removeLinkReflection', updateStorage);\n      _this.begin('addLink', updateStorage);\n      _this.begin('addLinkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clear', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('removeLink', updateStorage);\n      _this.finish('removeLinkReflection', updateStorage);\n      _this.finish('addLink', updateStorage);\n      _this.finish('addLinkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      function init(collection) {\n        var datas = $window.localStorage.getItem(prefix + '.' + collection.Model.prototype.schema.type);\n        collection.fromJson(datas);\n      }\n\n      function clear(collection) {\n        $window.localStorage.removeItem(prefix + '.' + collection.Model.prototype.schema.type);\n      }\n\n      function updateStorage(collection) {\n        $window.localStorage.setItem(prefix + '.' + collection.Model.prototype.schema.type, collection.toJson());\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper($log, pluralize) {\n\n    return AngularJsonAPISchema;\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = new AngularJsonAPILinkSchema(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.push(linkName);\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.length > 0) {\n        _this.params.get.include = include.join(',');\n      }\n    }\n\n    function AngularJsonAPILinkSchema(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n        _this.reflection = linkSchema.reflection || type;\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('JsonAPIModelFactory', JsonAPIModelFactory);\n\n  function JsonAPIModelFactory(AngularJsonAPIAbstractData, AngularJsonAPISchema, $log) {\n\n    return {\n      model: modelFactory\n    };\n\n    function modelFactory(schemaObj, linkedCollections, parentCollection) {\n      var Model = function(data, updatedAt, dummy) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractData.call(_this, data, updatedAt, dummy);\n\n        _this.form.parent = _this;\n      };\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractData.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.linkedCollections = linkedCollections;\n      Model.prototype.parentCollection = parentCollection;\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.call(this);\n        };\n      });\n\n      return Model;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractData', AngularJsonAPIAbstractDataWrapper);\n\n  function AngularJsonAPIAbstractDataWrapper(\n    $log,\n    uuid4,\n    lazyProperty,\n    AngularJsonAPIAbstractDataForm\n  ) {\n\n    AngularJsonAPIAbstractData.prototype.__setData = __setData;\n    AngularJsonAPIAbstractData.prototype.__setLinks   = __setLinks;\n    AngularJsonAPIAbstractData.prototype.__setLink = __setLink;\n    AngularJsonAPIAbstractData.prototype.__setAttributes = __setAttributes;\n    AngularJsonAPIAbstractData.prototype.__validateData = __validateData;\n    AngularJsonAPIAbstractData.prototype.__validateField = __validateField;\n    AngularJsonAPIAbstractData.prototype.__updateAttributes = __updateAttributes;\n    AngularJsonAPIAbstractData.prototype.__remove = __remove;\n    AngularJsonAPIAbstractData.prototype.__setUpdated = __setUpdated;\n    AngularJsonAPIAbstractData.prototype.__setLinkInternal = __setLinkInternal;\n\n    AngularJsonAPIAbstractData.prototype.refresh = refresh;\n    AngularJsonAPIAbstractData.prototype.remove = remove;\n    AngularJsonAPIAbstractData.prototype.addLinkById = addLinkById;\n    AngularJsonAPIAbstractData.prototype.addLink = addLink;\n    AngularJsonAPIAbstractData.prototype.removeLink = removeLink;\n    AngularJsonAPIAbstractData.prototype.toLink = toLink;\n    AngularJsonAPIAbstractData.prototype.toPatchData = toPatchData;\n    AngularJsonAPIAbstractData.prototype.removeAllLinks = removeAllLinks;\n\n    AngularJsonAPIAbstractData.prototype.toJson = toJson;\n\n    return AngularJsonAPIAbstractData;\n\n    function AngularJsonAPIAbstractData(data, updatedAt, dummy) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      _this.removed = false;\n      _this.loadingCount = 0;\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      _this.errors = {\n        validation: {}\n      };\n\n      _this.dummy = dummy || false;\n      _this.error = false;\n\n      _this.__setUpdated(updatedAt);\n      _this.__setData(data, updatedAt);\n\n      _this.form = new AngularJsonAPIAbstractDataForm(_this);\n    }\n\n    function refresh() {\n      var _this = this;\n\n      _this.parentCollection.__synchronize('refresh', _this);\n    }\n\n    function toJson() {\n      var _this = this;\n\n      return {\n        data: _this.data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    function __setUpdated(updatedAt) {\n      var _this = this;\n\n      _this.updatedAt = updatedAt || Date.now();\n      _this.parentCollection.updatedAt = _this.updatedAt;\n    }\n\n    function __remove() {\n      var _this = this;\n\n      _this.__setUpdated();\n      _this.removed = true;\n      _this.removeAllLinks();\n    }\n\n    function remove() {\n      var _this = this;\n\n      _this.__remove();\n      _this.parentCollection.remove(_this.data.id);\n    }\n\n    function toLink() {\n      return {type: this.data.type, id: this.data.id};\n    }\n\n    function toPatchData() {\n      var _this = this;\n      var res = {data: {}};\n      angular.forEach(_this.data, function(val, key) {\n        if (key !== 'relationships') {\n          res.data[key] = val;\n        }\n      });\n\n      return res;\n    }\n\n    function addLinkById(linkKey, linkModelName, id) {\n      var _this = this;\n      var linkedObject = _this.linkedCollections[linkModelName].__get(id);\n\n      if (_this.schema.relationships[linkKey] === undefined) {\n        $log.error('Cannot add link not specified in schema: ' + linkKey);\n        return;\n      }\n\n      if (_this.linkedCollections[linkModelName] === undefined) {\n        $log.error('Cannot add link of not existing type: ' + linkModelName);\n        return;\n      }\n\n      if (!uuid4.validate(id)) {\n        $log.error('Wrong link id, not uuid4: ' + id);\n        return;\n      }\n\n      if (linkedObject === undefined) {\n        $log.error('Cant find', linkModelName, 'with', id);\n        return;\n      }\n\n      _this.addLink(\n        linkKey,\n        linkedObject\n      );\n\n    }\n\n    function addLink(linkKey, linkedObject, reflection) {\n      var _this = this;\n      var linkSchema = _this.schema.relationships[linkKey];\n      var linkType;\n      var reflectionKey;\n      var linkAttributes;\n\n      if (linkedObject === undefined) {\n        $log.error('Can\\'t add non existing object');\n        return;\n      }\n\n      if (linkSchema === undefined) {\n        $log.error('Can\\'t add link not present in schema: ', linkKey, _this, reflection);\n        return;\n      }\n\n      if (linkSchema.polymorphic === false && linkSchema.model !== linkedObject.schema.type) {\n        $log.error('This relation is not polymorphic, expected: ' + linkSchema.model + ' instead of ' + linkedObject.schema.type);\n        return;\n      }\n\n      linkType = linkSchema.type;\n      reflectionKey = linkSchema.reflection;\n      linkAttributes = _this.data.relationships[linkKey].data;\n\n      if (linkType === 'hasOne') {\n        if (\n          linkAttributes !== null &&\n          linkAttributes.id === linkedObject.data.id\n        ) {\n          return;\n        }\n\n        if (linkAttributes !== undefined && linkAttributes !== null) {\n          $log.warn('Swaping hasOne', linkKey, 'of', _this.toString());\n          _this.removeLink(linkKey);\n        }\n\n        linkAttributes = linkedObject.toLink();\n      } else {\n        var duplicate = false;\n        angular.forEach(linkAttributes, function(link) {\n          if (link.id === linkedObject.data.id) {\n            duplicate = true;\n          }\n        });\n\n        if (duplicate === true) {\n          return;\n        }\n\n        linkAttributes.push(linkedObject.toLink());\n      }\n\n      if (reflection === true) {\n        _this.parentCollection.__synchronize('addLinkReflection', _this, linkKey, linkedObject);\n      } else {\n        linkedObject.addLink(reflectionKey, _this, true);\n        _this.parentCollection.__synchronize('addLink', _this, linkKey, linkedObject);\n      }\n\n      _this.__setUpdated();\n      _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n    }\n\n    function removeAllLinks() {\n      var _this = this;\n\n      angular.forEach(_this.relationships, function(link, key) {\n        _this.removeLink(key);\n      });\n    }\n\n    function removeLink(linkKey, linkedObject, reflection) {\n      var _this = this;\n      var linkSchema = _this.schema.relationships[linkKey];\n      var linkType;\n      var linkAttributes;\n      var reflectionKey;\n      var removed = false;\n\n      if (_this.schema.relationships[linkKey] === undefined) {\n        $log.error('Can\\'t remove link not present in schema');\n        return;\n      }\n\n      linkType = linkSchema.type;\n      reflectionKey = linkSchema.reflection;\n      linkAttributes = _this.data.relationships[linkKey].data;\n\n      if (linkType === 'hasOne') {\n        if (linkedObject.data !== null &&\n            (linkedObject === undefined || linkedObject.data.id === linkAttributes.id)\n        ) {\n          _this.data.relationships[linkKey].data = null;\n          linkAttributes = null;\n          removed = true;\n          if (reflection !== true && _this.relationships[linkKey] !== undefined) {\n            _this.relationships[linkKey].removeLink(reflectionKey, _this, true);\n          }\n        }\n      } else {\n        if (linkedObject === undefined) {\n          _this.data.relationships[linkKey].data = [];\n          linkAttributes = [];\n          removed = true;\n          if (reflection !== true) {\n            angular.forEach(_this.relationships[linkKey], function(link) {\n              link.removeLink(reflectionKey, _this, true);\n            });\n          }\n        } else {\n          angular.forEach(linkAttributes, function(link, index) {\n            if (link.id === linkedObject.data.id) {\n              if (reflection !== true) {\n                linkedObject.removeLink(reflectionKey, _this, true);\n              }\n\n              linkAttributes.splice(index, 1);\n              removed = true;\n            }\n          });\n        }\n      }\n\n      if (removed === true) {\n        _this.__setUpdated();\n\n        if (reflection !== true) {\n          _this.parentCollection.__synchronize('removeLink', _this, linkKey, linkedObject);\n        } else {\n          _this.parentCollection.__synchronize('removeLinkReflection',  _this, linkKey, linkedObject);\n        }\n\n        _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n      }\n    }\n\n    function __updateAttributes(validatedAttributes) {\n      var _this = this;\n\n      _this.__setUpdated();\n      _this.__setAttributes(validatedAttributes);\n      _this.parentCollection.__synchronize('update', _this);\n    }\n\n    function __setLinkInternal(linkAttributes, linkKey, linkSchema) {\n      var _this = this;\n      var linkType = linkSchema.type;\n      var reflectionKey = linkSchema.reflection;\n\n      if (linkAttributes === null) {\n        delete _this.relationships[linkKey];\n        _this.relationships[linkKey] = undefined;\n      } else if (linkType === 'hasMany' && angular.isArray(linkAttributes)) {\n        var getAll = function() {\n          var result = [];\n          angular.forEach(linkAttributes, function(link) {\n            var linkedCollection = _this.linkedCollections[link.type];\n            if (linkedCollection === undefined) {\n              $log.error('No angular-jsonapi schema for', linkAttributes.type);\n              return;\n            }\n\n            var linkedObject = linkedCollection.__get(link.id);\n            linkedObject.addLink(reflectionKey, _this, true);\n\n            result.push(linkedObject);\n          });\n\n          return result;\n        };\n\n        lazyProperty(_this.relationships, linkKey, getAll);\n      } else if (linkType === 'hasOne' && linkAttributes.id) {\n\n        var getSingle = function() {\n          var linkedCollection = _this.linkedCollections[linkAttributes.type];\n          if (linkedCollection === undefined) {\n            $log.error('No angular-jsonapi schema for', linkAttributes.type);\n            return;\n          }\n\n          var linkedObject = linkedCollection.__get(linkAttributes.id);\n          linkedObject.addLink(reflectionKey, _this, true);\n\n          return linkedObject;\n        };\n\n        lazyProperty(_this.relationships, linkKey, getSingle);\n      }\n    }\n\n    function __setLink(linkAttributes, linkKey, linkSchema) {\n      var _this = this;\n      var linkType = linkSchema.type;\n      var reflectionKey = linkSchema.reflection;\n\n      if (linkType === 'hasMany' && angular.isArray(linkAttributes)) {\n        var indexedLinks = {};\n        angular.forEach(linkAttributes, function(link) {\n          indexedLinks[link.id] = link;\n        });\n\n        angular.forEach(_this.relationships[linkKey], function(link) {\n          if (indexedLinks[link.data.id] === undefined) {\n            link.removeLink(reflectionKey, _this, true);\n          }\n        });\n      } else if (linkType === 'hasOne' && linkAttributes !== null && linkAttributes.id) {\n        if (_this.relationships[linkKey] !== undefined && _this.relationships[linkKey].data.id !== linkAttributes.id) {\n          _this.relationships[linkKey].removeLink(reflectionKey, _this, true);\n        }\n      }\n\n      _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n    }\n\n    function __setLinks(relationships) {\n      var _this = this;\n      angular.forEach(_this.schema.relationships, function(linkSchema, linkName) {\n        if (linkSchema.type === 'hasOne') {\n          _this.data.relationships[linkName] = relationships[linkName] || {};\n          _this.data.relationships[linkName].data = _this.data.relationships[linkName].data || null;\n        } else {\n          _this.data.relationships[linkName] = relationships[linkName] || {};\n          _this.data.relationships[linkName].data = _this.data.relationships[linkName].data || [];\n        }\n      });\n\n      angular.forEach(_this.schema.relationships, function(linkSchema, linkKey) {\n        if (relationships[linkKey] !== undefined) {\n          _this.__setLink(relationships[linkKey].data, linkKey, linkSchema);\n        }\n      });\n    }\n\n    function __validateField(data, key) {\n      var _this = this;\n      var error = [];\n\n      if (data !== undefined) {\n        error = __validate(_this.schema.attributes[key], data, key);\n      }\n\n      return error;\n    }\n\n    function __validateData(data) {\n      var _this = this;\n      var errors = {};\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        var error = _this.__validateField(data[key], key);\n        if (error.length > 0) {\n          errors[key] = error;\n          $log.warn('Erorrs when validating ', data[key], errors);\n        }\n      });\n\n      return errors;\n    }\n\n    function __setAttributes(attributes) {\n      var _this = this;\n\n      angular.forEach(_this.schema.attributes, function(validator, attributeName) {\n        if (attributes[attributeName]) {\n          _this.data.attributes[attributeName] = attributes[attributeName];\n        }\n      });\n    }\n\n    function __setData(data) {\n      var _this = this;\n      var safeData = angular.copy(data);\n\n      _this.errors.validation = _this.__validateData(safeData);\n\n      safeData.relationships = safeData.relationships || {};\n      safeData.attributes = safeData.attributes || {};\n\n      _this.data.id = safeData.id;\n      _this.data.type = safeData.type;\n\n      _this.__setAttributes(safeData.attributes);\n      _this.__setLinks(safeData.relationships);\n    }\n\n    function __validate(validator, attributeValue, attributeName) {\n      var errors = [];\n      if (angular.isArray(validator)) {\n        angular.forEach(validator, function(element) {\n          errors = errors.concat(__validate(element, attributeValue, attributeName));\n        });\n      } else if (angular.isFunction(validator)) {\n        var err = validator(attributeValue);\n        if (angular.isArray(err)) {\n          errors.concat(err);\n        } else {\n          $log.error(\n            'Wrong validator type it should return array of errors instead of: ' +\n              err.toString()\n          );\n        }\n      } else if (angular.isString(validator)) {\n        if (validator === 'text' || validator === 'string') {\n          if (!angular.isString(attributeValue)) {\n            errors.push(attributeName + ' is not a string ');\n          }\n        } else if (validator === 'number' || validator === 'integer') {\n          if (parseInt(attributeValue).toString() !== attributeValue.toString()) {\n            errors.push(attributeName + ' is not a number');\n          }\n        } else if (validator === 'uuid4') {\n          if (!uuid4.validate(attributeValue)) {\n            errors.push(attributeName + ' is not a uuid4');\n          }\n        } else if (validator === 'required') {\n          if (attributeValue.toString().length === 0) {\n            errors.push(attributeName + ' is empty');\n          }\n        } else {\n          $log.error('Wrong validator type: ' + validator.toString());\n        }\n      } else if (angular.isObject(validator)) {\n        if (validator.maxlength !== undefined && attributeValue.length > validator.maxlength) {\n          errors.push(attributeName + ' is too long max ' + validator.maxlength);\n        }\n\n        if (validator.minlength !== undefined && attributeValue.length < validator.minlength) {\n          errors.push(attributeName + ' is too short min ' + validator.minlength);\n        }\n\n        if (validator.maxvalue !== undefined && parseInt(attributeValue) > validator.maxvalue) {\n          errors.push(attributeName + ' is too big max ' + validator.maxvalue);\n        }\n\n        if (validator.minvalue !== undefined && parseInt(attributeValue) < validator.minvalue) {\n          errors.push(attributeName + ' is too small min ' + validator.minvalue);\n        }\n      } else {\n        $log.error('Wrong validator type: ' + validator.toString());\n      }\n\n      return errors;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractDataForm', AngularJsonAPIAbstractDataFormWrapper);\n\n  function AngularJsonAPIAbstractDataFormWrapper($log) {\n\n    AngularJsonAPIAbstractDataForm.prototype.save = save;\n    AngularJsonAPIAbstractDataForm.prototype.reset = reset;\n    AngularJsonAPIAbstractDataForm.prototype.validate = validate;\n    AngularJsonAPIAbstractDataForm.prototype.validateField = validateField;\n\n    AngularJsonAPIAbstractDataForm.prototype.__synchronize = __synchronize;\n\n    return AngularJsonAPIAbstractDataForm;\n\n    function AngularJsonAPIAbstractDataForm(parent) {\n      var _this = this;\n\n      _this.data = {};\n      _this.parent = parent;\n      _this.reset();\n    }\n\n    function save() {\n      var _this = this;\n      var errors = _this.validate();\n\n      if (angular.equals(errors, {}) === false) {\n        $log.error('Errors in form: ', errors);\n        return;\n      }\n\n      _this.parent.__updateAttributes(_this.data);\n    }\n\n    function reset() {\n      var _this = this;\n\n      angular.forEach(_this.parent.schema.attributes, function(data, key) {\n        _this.data[key] = _this.parent.data.attributes[key] || '';\n      });\n\n      _this.errors = {\n        validation: {}\n      };\n    }\n\n    function validate() {\n      var _this = this;\n      var errors;\n\n      errors = _this.parent.__validateData(_this.data);\n\n      _this.errors.validation = errors;\n\n      return errors;\n    }\n\n    function validateField(key) {\n      var _this = this;\n      var errors;\n      errors = _this.parent.__validateField(\n        _this.data[key],\n        key\n      );\n\n      _this.errors.validation[key] = errors;\n\n      return errors;\n    }\n\n    function __synchronize(key) {\n      $log.log('Synchro Collection ' + this.Model.prototype.schema.type, key);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider() {\n    var memory = {};\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPICollection) {\n      return {\n        form: form,\n        get: get,\n        remove: remove,\n        all: all,\n        addModel: addModel,\n        getModel: getModel\n      };\n\n      function addModel(schema, synchronization) {\n        var collection = new AngularJsonAPICollection(schema, synchronization);\n\n        memory[schema.type] = collection;\n      }\n\n      function getModel(type) {\n        return memory[type];\n      }\n\n      function form(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t add not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].dummy.form;\n      }\n\n      function get(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].get(id);\n      }\n\n      function remove(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t remove not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].remove(id);\n      }\n\n      function all(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get all of not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].all();\n      }\n    }\n  }\n\n})();\n\n"],"sourceRoot":"/source/"}