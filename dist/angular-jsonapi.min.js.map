{"version":3,"sources":["/source/jsonapi.module.js","/source/utils/lazy-property.js","/source/utils/all-settled.js","/source/synchronization/synchronization.js","angular-jsonapi.min.js","/source/synchronization/synchronization-rest.js","/source/synchronization/synchronization-local.js","/source/collection/collection.factory.js","/source/abstract-data/schema.js","/source/abstract-data/model.factory.js","/source/abstract-data/abstract-data.js","/source/abstract-data/abstract-data-form.js","/source/jsonapi.provider.js"],"names":["angular","module","constant","pluralize","target","propertyName","callback","result","done","Object","defineProperty","get","call","enumerable","configurable","config","$provide","decorator","$delegate","$q","allSettled","promises","wrap","promise","when","then","value","success","reason","wrapped","isArray","forEach","key","hasOwnProperty","all","AngularJsonAPISynchronizationWrapper","AngularJsonAPISynchronization","_this","this","allHooks","state","beginHooks","beforeHooks","synchronizationHooks","afterHooks","finishHooks","options","hookName","loading","extend","synchronization","extendHooks","hooksKey","hooks","concat","begin","action","push","finish","beforeSynchro","afterSynchro","synchronize","collection","object","linkSchema","linkedObject","params","undefined","loadingCount","hook","results","prototype","before","after","factory","$inject","AngularJsonAPISynchronizationRestWrapper","$http","AngularJsonAPISynchronizationRest","url","wrapResp","data","status","headers","afterAll","rawData","included","indexedData","id","addOrUpdate","__remove","allCollections","type","afterGet","deferred","defer","method","errors","rest","resolve","error","reject","ids","toString","remove","removeLink","linkKey","removed","toLink","addLink","update","toPatchData","add","toJson","create","constructor","AngularJsonAPISynchronizationLocalWrapper","$window","AngularJsonAPISynchronizationLocal","prefix","init","datas","localStorage","getItem","Model","schema","fromJson","clear","removeItem","updateStorage","setItem","__updateStorage","AngularJsonAPICollectionWrapper","$log","uuid4","JsonAPIModelFactory","AngularJsonAPISchema","AngularJsonAPICollection","schemaObj","model","dummy","attributes","relationships","form","save","__saveDummy","bind","__addLinkDummy","__synchronize","hasErrors","json","updatedAt","objectData","validatedData","__setData","__setLinks","__setUpdated","__get","Date","now","newModel","validate","equals","copy","generate","parentCollection","reset","debug","refresh","AngularJsonAPISchemaWrapper","include","linkName","linkSchemaObj","AngularJsonAPILinkSchema","length","join","isString","plural","polymorphic","reflection","AngularJsonAPIAbstractData","modelFactory","linkedCollections","parent","functions","metaFunction","metaFunctionName","AngularJsonAPIAbstractDataWrapper","lazyProperty","AngularJsonAPIAbstractDataForm","validation","removeAllLinks","res","val","addLinkById","linkModelName","linkType","reflectionKey","linkAttributes","warn","duplicate","link","__setLinkInternal","index","splice","__updateAttributes","validatedAttributes","__setAttributes","getAll","linkedCollection","getSingle","__setLink","indexedLinks","__validateField","__validate","__validateData","validator","attributeName","safeData","attributeValue","element","isFunction","err","parseInt","isObject","maxlength","minlength","maxvalue","minvalue","AngularJsonAPIAbstractDataFormWrapper","validateField","log","jsonapiProvider","jsonapiFactory","addModel","memory","getModel","clearAll","$get","provider"],"mappings":"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","file":"angular-jsonapi.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false */\n  .constant('pluralize', pluralize);\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.when(promise)\n            .then(function(value) {\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronization', AngularJsonAPISynchronizationWrapper);\n\n  function AngularJsonAPISynchronizationWrapper($q) {\n    AngularJsonAPISynchronization.prototype.before = beforeSynchro;\n    AngularJsonAPISynchronization.prototype.after = afterSynchro;\n    AngularJsonAPISynchronization.prototype.begin = begin;\n    AngularJsonAPISynchronization.prototype.finish = finish;\n    AngularJsonAPISynchronization.prototype.synchronization = synchronization;\n    AngularJsonAPISynchronization.prototype.synchronize = synchronize;\n    AngularJsonAPISynchronization.prototype.extend = extend;\n\n    return AngularJsonAPISynchronization;\n\n    function AngularJsonAPISynchronization() {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clear',\n        'remove',\n        'removeLink',\n        'removeLinkReflection',\n        'addLink',\n        'addLinkReflection',\n        'update',\n        'refresh'\n      ];\n\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function extend(synchronization) {\n      var _this = this;\n\n      extendHooks('beginHooks');\n      extendHooks('beforeHooks');\n      extendHooks('synchronizationHooks');\n      extendHooks('afterHooks');\n      extendHooks('finishHooks');\n\n      function extendHooks(hooksKey) {\n        angular.forEach(synchronization[hooksKey], function(hooks, key) {\n          _this[hooksKey][key] = _this[hooksKey][key].concat(hooks);\n        });\n      }\n\n      angular.extend(_this.options, synchronization.options);\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n    function synchronize(action, collection, object, linkSchema, linkedObject, params) {\n      var _this = this;\n      var promises = [];\n\n      _this.state[action].loading = true;\n\n      if (object !== undefined) {\n        object.loadingCount += 1;\n      }\n\n      if (collection !== undefined) {\n        collection.loadingCount += 1;\n      }\n\n      angular.forEach(_this.beginHooks[action], function(hook) {\n        hook.call(_this, collection, object, linkSchema, linkedObject, params);\n      });\n\n      angular.forEach(_this.beforeHooks[action], function(hook) {\n        hook.call(_this, collection, object, linkSchema, linkedObject, params);\n      });\n\n      angular.forEach(_this.synchronizationHooks[action], function(hook) {\n        promises.push(hook.call(_this, collection, object, linkSchema, linkedObject, params));\n      });\n\n      $q.allSettled(promises).then(function(results) {\n        _this.state[action].success = true;\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.afterHooks[action], function(hook) {\n          hook.call(_this, collection, object, linkSchema, linkedObject, params, results);\n        });\n\n        angular.forEach(_this.finishHooks[action], function(hook) {\n          hook.call(_this, collection, object, linkSchema, linkedObject, params);\n        });\n\n        _this.state[action].loading = false;\n\n        if (object !== undefined) {\n          object.loadingCount -= 1;\n        }\n\n        if (collection !== undefined) {\n          collection.loadingCount -= 1;\n        }\n      });\n    }\n\n  }\n})();\n","!function(){\"use strict\";angular.module(\"angular-jsonapi\",[\"uuid4\"]).constant(\"pluralize\",pluralize)}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"lazyProperty\",function(t,e,r){var n,o;Object.defineProperty(t,e,{get:function(){return o||(o=!0,n=r.call(t)),n},enumerable:!0,configurable:!0})})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$provide\",function(t){t.decorator(\"$q\",[\"$delegate\",function(t){var e=t;return e.allSettled=e.allSettled||function(t){function r(t){return e.when(t).then(function(t){return{success:!0,value:t}},function(t){return{success:!1,reason:t}})}var n=angular.isArray(t)?[]:{};return angular.forEach(t,function(t,e){n.hasOwnProperty(e)||(n[e]=r(t))}),e.all(n)},e}])}])}(),function(){\"use strict\";function t(t){function e(){var t=this,e=[\"add\",\"init\",\"get\",\"all\",\"clear\",\"remove\",\"removeLink\",\"removeLinkReflection\",\"addLink\",\"addLinkReflection\",\"update\",\"refresh\"];t.state={},t.beginHooks={},t.beforeHooks={},t.synchronizationHooks={},t.afterHooks={},t.finishHooks={},t.options={},angular.forEach(e,function(e){t.beginHooks[e]=[],t.beforeHooks[e]=[],t.synchronizationHooks[e]=[],t.afterHooks[e]=[],t.finishHooks[e]=[],t.state[e]={loading:!1,success:!0}})}function r(t){function e(e){angular.forEach(t[e],function(t,n){r[e][n]=r[e][n].concat(t)})}var r=this;e(\"beginHooks\"),e(\"beforeHooks\"),e(\"synchronizationHooks\"),e(\"afterHooks\"),e(\"finishHooks\"),angular.extend(r.options,t.options)}function n(t,e){var r=this;r.beginHooks[t].push(e)}function o(t,e){var r=this;r.finishHooks[t].push(e)}function a(t,e){var r=this;r.beforeHooks[t].push(e)}function i(t,e){var r=this;r.afterHooks[t].push(e)}function s(t,e){var r=this;r.synchronizationHooks[t].push(e)}function l(e,r,n,o,a,i){var s=this,l=[];s.state[e].loading=!0,void 0!==n&&(n.loadingCount+=1),void 0!==r&&(r.loadingCount+=1),angular.forEach(s.beginHooks[e],function(t){t.call(s,r,n,o,a,i)}),angular.forEach(s.beforeHooks[e],function(t){t.call(s,r,n,o,a,i)}),angular.forEach(s.synchronizationHooks[e],function(t){l.push(t.call(s,r,n,o,a,i))}),t.allSettled(l).then(function(t){s.state[e].success=!0,angular.forEach(t,function(t){t.success===!1&&(s.state[e].success=!1)}),angular.forEach(s.afterHooks[e],function(e){e.call(s,r,n,o,a,i,t)}),angular.forEach(s.finishHooks[e],function(t){t.call(s,r,n,o,a,i)}),s.state[e].loading=!1,void 0!==n&&(n.loadingCount-=1),void 0!==r&&(r.loadingCount-=1)})}return e.prototype.before=a,e.prototype.after=i,e.prototype.begin=n,e.prototype.finish=o,e.prototype.synchronization=s,e.prototype.synchronize=l,e.prototype.extend=r,e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronization\",t),t.$inject=[\"$q\"]}(),function(){\"use strict\";function t(t,e,r){function n(n){function o(t,e,r,n){return{data:t,status:e,headers:r,config:n}}function a(t,e,r,n,o,a){var i,s,l;a[0].success===!0&&(i=a[0].value.data.data,s=a[0].value.data.included,l={},angular.forEach(i,function(e){l[e.id]=e,t.addOrUpdate(e)}),angular.forEach(t.data,function(e){void 0===l[e.id]&&t.__remove(e.id)}),angular.forEach(s,function(e){t.allCollections[e.type].addOrUpdate(e)}))}function i(t,e,r,n,o,a){var i,s;a[0].success===!0&&(i=a[0].value.data.data,s=a[0].value.data.included,t.addOrUpdate(i),angular.forEach(s,function(e){t.allCollections[e.type].addOrUpdate(e)}))}function s(t,a,i,s,l){var d=e.defer(),u={method:\"GET\",url:n,params:l||{}};return t.errors.rest=t.errors.rest||{},r(u).success(function(e,r,n,a){t.errors.rest.all=void 0,d.resolve(o(e,r,n,a))}).error(function(e,r,n,a){t.errors.rest.all=e,d.reject(o(e,r,n,a))}),d.promise}function l(t,a,i,s,l){var d,u,c=e.defer();return angular.isArray(a)?(u=[],angular.forEach(a,function(t){u.push(t.data.id)})):u=a.data.id,d={method:\"GET\",url:n+\"/\"+u.toString(),params:l||{}},a.errors.rest=a.errors.rest||{},r(d).success(function(t,e,r,n){a.errors.rest.get=void 0,c.resolve(o(t,e,r,n))}).error(function(t,e,r,n){a.errors.rest.get=t,c.reject(o(t,e,r,n))}),c.promise}function d(t,a){var i=e.defer(),s={method:\"DELETE\",url:n+\"/\"+a.data.id};return a.errors.rest=a.errors.rest||{},r(s).success(function(t,e,r,n){a.errors.rest.remove=void 0,i.resolve(o(t,e,r,n))}).error(function(t,e,r,n){a.errors.rest.remove=t,i.reject(o(t,e,r,n))}),i.promise}function u(t,a,i,s){var l,d=e.defer();return a.errors.rest=a.errors.rest||{},a.removed===!0||void 0===s?d.resolve():(l={method:\"DELETE\",url:n+\"/\"+a.data.id+\"/relationships/\"+i,data:{data:s.toLink()}},r(l).success(function(t,e,r,n){a.errors.rest.removeLink=void 0,d.resolve(o(t,e,r,n))}).error(function(t,e,r,n){a.errors.rest.removeLink=t,d.reject(o(t,e,r,n))})),d.promise}function c(t,a,i,s){var l=e.defer(),d={method:\"POST\",url:n+\"/\"+a.data.id+\"/relationships/\"+i,data:{data:s.toLink()}};return a.errors.rest=a.errors.rest||{},r(d).success(function(t,e,r,n){a.errors.rest.addLink=void 0,l.resolve(o(t,e,r,n))}).error(function(t,e,r,n){a.errors.rest.addLink=t,l.reject(o(t,e,r,n))}),l.promise}function p(t,a){var i=e.defer(),s={method:\"PATCH\",url:n+\"/\"+a.data.id,data:{data:a.toPatchData()}};return a.errors.rest=a.errors.rest||{},r(s).success(function(t,e,r,n){a.errors.rest.update=void 0,i.resolve(o(t,e,r,n))}).error(function(t,e,r,n){a.errors.rest.update=t,i.reject(o(t,e,r,n))}),i.promise}function h(t,a){var i=e.defer(),s={method:\"POST\",url:n+\"/\",data:{data:a.toJson()}};return a.errors.rest=a.errors.rest||{},r(s).success(function(t,e,r,n){a.errors.rest.add=void 0,i.resolve(o(t,e,r,n))}).error(function(t,e,r,n){a.errors.rest.add=t,i.reject(o(t,e,r,n))}),i.promise}var f=this;t.call(f),f.synchronization(\"remove\",d),f.synchronization(\"removeLink\",u),f.synchronization(\"addLink\",c),f.synchronization(\"update\",p),f.synchronization(\"add\",h),f.synchronization(\"all\",s),f.synchronization(\"get\",l),f.synchronization(\"refresh\",l),f.after(\"all\",a),f.after(\"get\",i),f.after(\"refresh\",i)}return n.prototype=Object.create(t.prototype),n.prototype.constructor=n,n}angular.module(\"angular-jsonapi-rest\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationRest\",t),t.$inject=[\"AngularJsonAPISynchronization\",\"$q\",\"$http\"]}(),function(){\"use strict\";function t(t,e){function r(r){function n(t){var n=e.localStorage.getItem(r+\".\"+t.Model.prototype.schema.type);t.fromJson(n)}function o(t){e.localStorage.removeItem(r+\".\"+t.Model.prototype.schema.type)}function a(t){e.localStorage.setItem(r+\".\"+t.Model.prototype.schema.type,t.toJson())}var i=this;i.__updateStorage=a,t.call(i),i.begin(\"init\",n),i.begin(\"clear\",o),i.begin(\"remove\",a),i.begin(\"removeLink\",a),i.begin(\"removeLinkReflection\",a),i.begin(\"addLink\",a),i.begin(\"addLinkReflection\",a),i.begin(\"update\",a),i.begin(\"add\",a),i.finish(\"get\",a),i.finish(\"all\",a),i.finish(\"init\",a),i.finish(\"clear\",a),i.finish(\"remove\",a),i.finish(\"removeLink\",a),i.finish(\"removeLinkReflection\",a),i.finish(\"addLink\",a),i.finish(\"addLinkReflection\",a),i.finish(\"update\",a),i.finish(\"add\",a),i.finish(\"get\",a),i.finish(\"all\",a)}return r.prototype=Object.create(t.prototype),r.prototype.constructor=r,r}angular.module(\"angular-jsonapi-local\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationLocal\",t),t.$inject=[\"AngularJsonAPISynchronization\",\"$window\"]}(),function(){\"use strict\";function t(t,e,r,n){function o(t,e){var o=this,a=new n(t);o.Model=r.model(a,o.allCollections,o),o.synchronization=e,o.loadingCount=0,o.data={},o.removed={},o.schema=a,o.dummy=new o.Model({type:t.type,attributes:{},relationships:{}},void 0,!0),o.dummy.form.save=v.bind(o.dummy),o.dummy.form.addLink=g.bind(o.dummy),o.allCollections[t.type]=o,o.__synchronize(\"init\"),o.errors={}}function a(){var t=this,e=!1;return angular.forEach(t.errors,function(t){void 0!==t&&(e=!0)}),e}function i(t){var e=this,r=angular.fromJson(t);null!==r&&void 0!==r.data&&(e.updatedAt=r.updatedAt,angular.forEach(r.data,function(t){var r=t.data;e.addOrUpdate(r,t.updatedAt)}))}function s(){var t=this,e={data:{},updatedAt:t.updatedAt};return angular.forEach(t.data,function(t,r){e.data[r]=t.toJson()}),angular.toJson(e)}function l(e,r){var n=this;return void 0===e.id?void t.error(\"Can't add data without id!\",e):(void 0===n.data[e.id]?n.data[e.id]=new this.Model(e,r):(n.data[e.id].__setData(e,r),n.data[e.id].__setLinks(e.relationships)),n.data[e.id].__setUpdated(r),n.data[e.id])}function d(t){var e=this;return void 0===e.data[t]&&(e.data[t]=new e.Model({id:t,type:e.Model.prototype.schema.type},void 0,!0)),e.data[t]}function u(t){var e,r=this;return angular.isArray(t)?(e=[],angular.forEach(t,function(t){e.push(r.__get(t))})):e=r.__get(t),r.__synchronize(\"get\",e,void 0,void 0,r.schema.params.get),e}function c(){var t=this;return t.__synchronize(\"all\",void 0,void 0,void 0,t.schema.params.all),t}function p(){var t=this;t.updatedAt=Date.now(),t.data={},t.__synchronize(\"clear\")}function h(t){var e=this,r=e.data[t];e.removed[t]=r,e.updatedAt=Date.now(),delete e.data[t]}function f(e){var r=this,n=r.data[e];void 0!==n?(r.__remove(e),n.__remove(e)):t.error(\"Object with this id does not exist\"),r.__synchronize(\"remove\",n)}function v(){var r,n=this,o=n.form.validate();if(angular.equals(o,{})){var a=angular.copy(n.form.data);if(void 0===a.id)a.id=e.generate();else if(!e.validate(a.id))return void t.error(\"Wrong id of dummy data!\");a.type=n.schema.type,r=n.parentCollection.addOrUpdate(a),n.form.reset(),n.relationships={},n.parentCollection.__synchronize(\"add\",r)}}function g(e,r){var n=this;return void 0===n.schema.relationships[e]?void t.error(\"Link'\",e,\"'not present in schema of\",n.data.type,n):void(\"hasOne\"===n.schema.relationships[e].type?n.form.data.relationships[e]={data:{type:r.data.type,id:r.data.id}}:(n.form.data.relationships[e].data=n.form.data.relationships[e].data||[],n.form.data.relationships[e].data.push({type:r.data.type,id:r.data.id})))}function y(e,r,n,o,a){var i=this;t.debug(\"Synchro Collection\",this.Model.prototype.schema.type,{action:e,object:r,linkKey:n,linkedObject:o,params:a}),i.synchronization.synchronize(e,i,r,n,o,a)}return o.prototype.allCollections={},o.prototype.__synchronize=y,o.prototype.__get=d,o.prototype.__remove=h,o.prototype.get=u,o.prototype.all=c,o.prototype.refresh=c,o.prototype.remove=f,o.prototype.clear=p,o.prototype.fromJson=i,o.prototype.toJson=s,o.prototype.addOrUpdate=l,o.prototype.hasErrors=a,o}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICollection\",t),t.$inject=[\"$log\",\"uuid4\",\"JsonAPIModelFactory\",\"AngularJsonAPISchema\"]}(),function(){\"use strict\";function t(t,e){function r(t){var e=this,r=t.include||{};t.include=r,r.get=t.include.get||[],r.all=t.include.all||[],e.params={get:{},all:{}},angular.forEach(t.relationships,function(e,o){var a=new n(e,o,t.type);t.relationships[o]=a,a.included===!0&&(r.get.push(o),\"hasOne\"===a.type&&r.all.push(o))}),angular.extend(e,t),r.get.length>0&&(e.params.get.include=r.get.join(\",\")),r.all.length>0&&(e.params.all.include=r.all.join(\",\"))}function n(r,n,o){var a=this;angular.isString(r)?(a.model=e.plural(n),a.type=r,a.polymorphic=!1,a.reflection=o):(void 0===r.type&&t.error(\"Schema of link without a type: \",r,n),a.model=r.model||e.plural(n),a.type=r.type,a.polymorphic=r.polymorphic||!1,a.reflection=r.reflection||o,a.included=r.included||!1)}return r}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchema\",t),t.$inject=[\"$log\",\"pluralize\"]}(),function(){\"use strict\";function t(t,e,r){function n(e,n,o){var a=function(e,n,o){var a=this;e.type!==a.schema.type&&r.error(\"Data type other then declared in schema: \",e.type,\" instead of \",a.schema.type),t.call(a,e,n,o),a.form.parent=a};return a.prototype=Object.create(t.prototype),a.prototype.constructor=a,a.prototype.schema=e,a.prototype.linkedCollections=n,a.prototype.parentCollection=o,angular.forEach(e.functions,function(t,e){a.prototype[e]=function(){return t.call(this)}}),a}return{model:n}}angular.module(\"angular-jsonapi\").factory(\"JsonAPIModelFactory\",t),t.$inject=[\"AngularJsonAPIAbstractData\",\"AngularJsonAPISchema\",\"$log\"]}(),function(){\"use strict\";function t(t,e,r,n){function o(t,e,r){var o=this;t.relationships=t.relationships||{},o.removed=!1,o.loadingCount=0,o.data={relationships:{},attributes:{}},o.relationships={},o.errors={validation:{}},o.dummy=r||!1,o.__setUpdated(e),o.__setData(t,e),o.form=new n(o)}function a(){var t=this;t.parentCollection.__synchronize(\"refresh\",t)}function i(){var t=this,e=!1;return angular.forEach(t.errors,function(t){void 0!==t&&(e=!0)}),e}function s(){var t=this;return{data:t.data,updatedAt:t.updatedAt}}function l(t){var e=this;e.updatedAt=t||Date.now(),e.parentCollection.updatedAt=e.updatedAt}function d(){var t=this;t.__setUpdated(),t.removed=!0,t.removeAllLinks()}function u(){var t=this;t.__remove(),t.parentCollection.remove(t.data.id)}function c(){return{type:this.data.type,id:this.data.id}}function p(){var t=this,e={data:{}};return angular.forEach(t.data,function(t,r){\"relationships\"!==r&&(e.data[r]=t)}),e}function h(r,n,o){var a=this,i=a.linkedCollections[n].__get(o);return void 0===a.schema.relationships[r]?void t.error(\"Cannot add link not specified in schema: \"+r):void 0===a.linkedCollections[n]?void t.error(\"Cannot add link of not existing type: \"+n):e.validate(o)?void 0===i?void t.error(\"Cant find\",n,\"with\",o):void a.addLink(r,i):void t.error(\"Wrong link id, not uuid4: \"+o)}function f(e,r,n){var o,a,i,s=this,l=s.schema.relationships[e];if(void 0===r)return void t.error(\"Can't add non existing object\");if(void 0===l)return void(n===!1&&t.error(\"Can't add link not present in schema: \",e,s,n));if(l.polymorphic===!1&&l.model!==r.schema.type)return void t.error(\"This relation is not polymorphic, expected: \"+l.model+\" instead of \"+r.schema.type);if(o=l.type,a=l.reflection,\"hasOne\"===o){if(i=s.data.relationships[e].data,void 0!==i&&null!==i&&i.id===r.data.id)return;void 0!==i&&null!==i&&(t.warn(\"Swaping hasOne\",e,\"of\",s.toString()),s.removeLink(e)),i=r.toLink()}else{i=s.data.relationships[e].data||[];var d=!1;if(angular.forEach(i,function(t){t.id===r.data.id&&(d=!0)}),d===!0)return;i.push(r.toLink())}n===!0?s.parentCollection.__synchronize(\"addLinkReflection\",s,e,r):(r.addLink(a,s,!0),s.parentCollection.__synchronize(\"addLink\",s,e,r)),s.__setUpdated(),s.__setLinkInternal(i,e,l)}function v(){var t=this;angular.forEach(t.relationships,function(e,r){t.removeLink(r)})}function g(e,r,n){var o,a,i,s=this,l=s.schema.relationships[e],d=!1;return void 0===s.schema.relationships[e]?void t.error(\"Can't remove link not present in schema\"):(o=l.type,i=l.reflection,a=s.data.relationships[e].data,\"hasOne\"===o?void 0!==r&&r.data.id===a.id&&(s.data.relationships[e].data=null,a=null,d=!0,n!==!0&&void 0!==s.relationships[e]&&s.relationships[e].removeLink(i,s,!0)):void 0===r?(s.data.relationships[e].data=[],a=[],d=!0,n!==!0&&angular.forEach(s.relationships[e],function(t){t.removeLink(i,s,!0)})):angular.forEach(a,function(t,e){t.id===r.data.id&&(n!==!0&&r.removeLink(i,s,!0),a.splice(e,1),d=!0)}),void(d===!0&&(s.__setUpdated(),n!==!0?s.parentCollection.__synchronize(\"removeLink\",s,e,r):s.parentCollection.__synchronize(\"removeLinkReflection\",s,e,r),s.__setLinkInternal(a,e,l))))}function y(t){var e=this;e.__setUpdated(),e.__setAttributes(t),e.parentCollection.__synchronize(\"update\",e)}function m(e,n,o){var a=this,i=o.type,s=o.reflection;if(null===e)delete a.relationships[n],a.relationships[n]=void 0;else if(\"hasMany\"===i&&angular.isArray(e)){var l=function(){var r=[];return angular.forEach(e,function(n){var o=a.linkedCollections[n.type];if(void 0===o)return void t.error(\"No angular-jsonapi schema for\",e.type);var i=o.__get(n.id);i.addLink(s,a,!0),r.push(i)}),r};r(a.relationships,n,l)}else if(\"hasOne\"===i&&null!==e){var d=function(){var r=a.linkedCollections[e.type];if(void 0===r)return void t.error(\"No angular-jsonapi schema for\",e.type);var n=r.__get(e.id);return n.addLink(s,a,!0),n};r(a.relationships,n,d)}}function _(t,e,r){var n=this,o=r.type,a=r.reflection;if(\"hasMany\"===o&&angular.isArray(t)){var i={};angular.forEach(t,function(t){i[t.id]=t}),angular.forEach(n.relationships[e],function(t){void 0===i[t.data.id]&&t.removeLink(a,n,!0)})}else\"hasOne\"===o&&null!==t&&void 0!==n.relationships[e]&&n.relationships[e].data.id!==t.id&&n.relationships[e].removeLink(a,n,!0);n.__setLinkInternal(t,e,r)}function k(t){var e=this;void 0!==t&&(angular.forEach(e.schema.relationships,function(r,n){e.data.relationships[n]=e.data.relationships[n]||{},void 0!==t[n]&&angular.extend(e.data.relationships[n],t[n])}),angular.forEach(e.schema.relationships,function(r,n){void 0!==t[n]&&void 0!==t[n].data&&e.__setLink(t[n].data,n,r)}))}function b(t,e){var r=this,n=[];return void 0!==t&&(n=j(r.schema.attributes[e],t,e)),n}function A(e){var r=this,n={};return angular.forEach(r.schema.attributes,function(o,a){var i=r.__validateField(e[a],a);i.length>0&&(n[a]=i,t.warn(\"Erorrs when validating \",e[a],n))}),n}function L(t){var e=this;angular.forEach(e.schema.attributes,function(r,n){void 0!==t[n]&&(e.data.attributes[n]=t[n])})}function E(t){var e=this,r=angular.copy(t);e.errors.validation=e.__validateData(r),r.relationships=r.relationships||{},r.attributes=r.attributes||{},e.data.id=r.id,e.data.type=r.type,e.__setAttributes(r.attributes),e.__setLinks(r.relationships)}function j(r,n,o){var a=[];if(angular.isArray(r))angular.forEach(r,function(t){a=a.concat(j(t,n,o))});else if(angular.isFunction(r)){var i=r(n);angular.isArray(i)?a.concat(i):t.error(\"Wrong validator type it should return array of errors instead of: \"+i.toString())}else angular.isString(r)?\"text\"===r||\"string\"===r?angular.isString(n)||a.push(o+\" is not a string \"):\"number\"===r||\"integer\"===r?parseInt(n).toString()!==n.toString()&&a.push(o+\" is not a number\"):\"uuid4\"===r?e.validate(n)||a.push(o+\" is not a uuid4\"):\"required\"===r?0===n.toString().length&&a.push(o+\" is empty\"):t.error(\"Wrong validator type: \"+r.toString()):angular.isObject(r)?(void 0!==r.maxlength&&n.length>r.maxlength&&a.push(o+\" is too long max \"+r.maxlength),void 0!==r.minlength&&n.length<r.minlength&&a.push(o+\" is too short min \"+r.minlength),void 0!==r.maxvalue&&parseInt(n)>r.maxvalue&&a.push(o+\" is too big max \"+r.maxvalue),void 0!==r.minvalue&&parseInt(n)<r.minvalue&&a.push(o+\" is too small min \"+r.minvalue)):t.error(\"Wrong validator type: \"+r.toString());return a}return o.prototype.__setData=E,o.prototype.__setLinks=k,o.prototype.__setLink=_,o.prototype.__setAttributes=L,o.prototype.__validateData=A,o.prototype.__validateField=b,o.prototype.__updateAttributes=y,o.prototype.__remove=d,o.prototype.__setUpdated=l,o.prototype.__setLinkInternal=m,o.prototype.refresh=a,o.prototype.remove=u,o.prototype.addLinkById=h,o.prototype.addLink=f,o.prototype.removeLink=g,o.prototype.toLink=c,o.prototype.toPatchData=p,o.prototype.removeAllLinks=v,o.prototype.hasErrors=i,o.prototype.toJson=s,o}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractData\",t),t.$inject=[\"$log\",\"uuid4\",\"lazyProperty\",\"AngularJsonAPIAbstractDataForm\"]}(),function(){\"use strict\";function t(t){function e(t){var e=this;e.data={attributes:{},relationships:{}},e.parent=t,e.reset()}function r(){var e=this,r=e.validate();return angular.equals(r,{})===!1?void t.error(\"Errors in form: \",r):void e.parent.__updateAttributes(e.data)}function n(){var t=this;angular.forEach(t.parent.schema.attributes,function(e,r){t.data.attributes[r]=t.parent.data.attributes[r]||\"\"}),angular.forEach(t.parent.schema.relationships,function(e,r){t.data.relationships[r]=t.parent.data.relationships[r]||{}}),t.errors={validation:{}}}function o(){var t,e=this;return t=e.parent.__validateData(e.data),e.errors.validation=t,t}function a(t){var e,r=this;return e=r.parent.__validateField(r.data[t],t),r.errors.validation[t]=e,e}function i(e){t.log(\"Synchro Collection \"+this.Model.prototype.schema.type,e)}return e.prototype.save=r,e.prototype.reset=n,e.prototype.validate=o,e.prototype.validateField=a,e.prototype.__synchronize=i,e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractDataForm\",t),t.$inject=[\"$log\"]}(),function(){\"use strict\";function t(){function t(t,r){function n(t,n){var o=new r(t,n);e[t.type]=o}function o(t){return e[t]}function a(r){return void 0===e[r]&&t.error(\"Can\t add not existing object type: \"+r+\". Use initialize(Model, datas).\"),e[r].dummy.form}function i(r,n){return void 0===e[r]&&t.error(\"Can\t get not existing object type: \"+r+\". Use initialize(Model, datas).\"),e[r].get(n)}function s(r,n){return void 0===e[r]&&t.error(\"Can\t remove not existing object type: \"+r+\". Use initialize(Model, datas).\"),e[r].remove(n)}function l(r){return void 0===e[r]&&t.error(\"Can\t get all of not existing object type: \"+r+\". Use initialize(Model, datas).\"),e[r].all()}function d(){angular.forEach(e,function(t){t.clear()})}return{form:a,get:i,remove:s,all:l,addModel:n,getModel:o,clearAll:d}}var e={};this.$get=t,t.$inject=[\"$log\",\"AngularJsonAPICollection\"]}angular.module(\"angular-jsonapi\").provider(\"$jsonapi\",t)}();\n//# sourceMappingURL=angular-jsonapi.min.js.map","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationRest', AngularJsonAPISynchronizationRestWrapper);\n\n  function AngularJsonAPISynchronizationRestWrapper(AngularJsonAPISynchronization, $q, $http) {\n\n    AngularJsonAPISynchronizationRest.prototype = Object.create(AngularJsonAPISynchronization.prototype);\n    AngularJsonAPISynchronizationRest.prototype.constructor = AngularJsonAPISynchronizationRest;\n\n    return AngularJsonAPISynchronizationRest;\n\n    function AngularJsonAPISynchronizationRest(url) {\n      var _this = this;\n\n      AngularJsonAPISynchronization.call(_this);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('removeLink', removeLink);\n      _this.synchronization('addLink', addLink);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n      _this.after('all', afterAll);\n      _this.after('get', afterGet);\n      _this.after('refresh', afterGet);\n\n      function wrapResp(data, status, headers, config) {\n        return {\n          data: data,\n          status: status,\n          headers: headers,\n          config: config\n        };\n      }\n\n      function afterAll(collection, object, linkSchema, linkedObject, params, results) {\n        var rawData;\n        var included;\n        var indexedData;\n\n        if (results[0].success === true) {\n          rawData = results[0].value.data.data;\n          included = results[0].value.data.included;\n          indexedData = {};\n          angular.forEach(rawData, function(data) {\n            indexedData[data.id] = data;\n            collection.addOrUpdate(data);\n          });\n\n          angular.forEach(collection.data, function(data) {\n            if (indexedData[data.id] === undefined) {\n              collection.__remove(data.id);\n            }\n          });\n\n          angular.forEach(included, function(object) {\n            collection.allCollections[object.type].addOrUpdate(object);\n          });\n        }\n      }\n\n      function afterGet(collection, object, linkSchema, linkedObject, params, results) {\n        var data;\n        var included;\n\n        if (results[0].success === true) {\n          data = results[0].value.data.data;\n          included = results[0].value.data.included;\n          collection.addOrUpdate(data);\n\n          angular.forEach(included, function(object) {\n            collection.allCollections[object.type].addOrUpdate(object);\n          });\n        }\n      }\n\n      function all(collection, object, linkSchema, linkedObject, params) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'GET',\n          url: url,\n          params: params || {}\n        };\n\n        collection.errors.rest = collection.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            collection.errors.rest.all = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            collection.errors.rest.all = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function get(collection, object, linkSchema, linkedObject, params) {\n        var deferred = $q.defer();\n        var config;\n        var ids;\n\n        if (angular.isArray(object)) {\n          ids = [];\n          angular.forEach(object, function(object) {\n            ids.push(object.data.id);\n          });\n        } else {\n          ids = object.data.id;\n        }\n\n        config = {\n          method: 'GET',\n          url: url + '/' + ids.toString(),\n          params: params || {}\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.get = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.get = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function remove(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'DELETE',\n          url: url + '/' + object.data.id\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.remove = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.remove = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function removeLink(collection, object, linkKey, linkedObject) {\n        var deferred = $q.defer();\n        var config;\n\n        object.errors.rest = object.errors.rest || {};\n\n        if (object.removed === true || linkedObject === undefined) {\n          deferred.resolve();\n        } else {\n          config = {\n            method: 'DELETE',\n            url: url + '/' + object.data.id + '/relationships/' + linkKey,\n            data: {data: linkedObject.toLink()}\n          };\n\n          $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.removeLink = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.removeLink = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n        }\n\n        return deferred.promise;\n      }\n\n      function addLink(collection, object, linkKey, linkedObject) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'POST',\n          url: url + '/' + object.data.id + '/relationships/' + linkKey,\n          data: {data: linkedObject.toLink()}\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.addLink = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.addLink = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n\n      }\n\n      function update(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'PATCH',\n          url: url + '/' + object.data.id,\n          data: {data: object.toPatchData()}\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.update = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.update = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function add(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'POST',\n          url: url + '/',\n          data: {data: object.toJson()}\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.add = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.add = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationLocal', AngularJsonAPISynchronizationLocalWrapper);\n\n  function AngularJsonAPISynchronizationLocalWrapper(AngularJsonAPISynchronization, $window) {\n\n    AngularJsonAPISynchronizationLocal.prototype = Object.create(AngularJsonAPISynchronization.prototype);\n    AngularJsonAPISynchronizationLocal.prototype.constructor = AngularJsonAPISynchronizationLocal;\n\n    return AngularJsonAPISynchronizationLocal;\n\n    function AngularJsonAPISynchronizationLocal(prefix) {\n      var _this = this;\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISynchronization.call(_this);\n\n      _this.begin('init', init);\n      _this.begin('clear', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('removeLink', updateStorage);\n      _this.begin('removeLinkReflection', updateStorage);\n      _this.begin('addLink', updateStorage);\n      _this.begin('addLinkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clear', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('removeLink', updateStorage);\n      _this.finish('removeLinkReflection', updateStorage);\n      _this.finish('addLink', updateStorage);\n      _this.finish('addLinkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      function init(collection) {\n        var datas = $window.localStorage.getItem(prefix + '.' + collection.Model.prototype.schema.type);\n        collection.fromJson(datas);\n      }\n\n      function clear(collection) {\n        $window.localStorage.removeItem(prefix + '.' + collection.Model.prototype.schema.type);\n      }\n\n      function updateStorage(collection) {\n        $window.localStorage.setItem(prefix + '.' + collection.Model.prototype.schema.type, collection.toJson());\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    $log,\n    uuid4,\n    JsonAPIModelFactory,\n    AngularJsonAPISchema\n  ) {\n    AngularJsonAPICollection.prototype.allCollections = {};\n\n    AngularJsonAPICollection.prototype.__synchronize = __synchronize;\n    AngularJsonAPICollection.prototype.__get = __get;\n    AngularJsonAPICollection.prototype.__remove = __remove;\n\n    AngularJsonAPICollection.prototype.get = get;\n    AngularJsonAPICollection.prototype.all = all;\n    AngularJsonAPICollection.prototype.refresh = all;\n    AngularJsonAPICollection.prototype.remove = remove;\n    AngularJsonAPICollection.prototype.clear = clear;\n    AngularJsonAPICollection.prototype.fromJson = fromJson;\n    AngularJsonAPICollection.prototype.toJson = toJson;\n    AngularJsonAPICollection.prototype.addOrUpdate = addOrUpdate;\n    AngularJsonAPICollection.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPICollection;\n\n    function AngularJsonAPICollection(schema, synchronization) {\n      var _this = this;\n\n      var schemaObj = new AngularJsonAPISchema(schema);\n\n      _this.Model = JsonAPIModelFactory.model(\n        schemaObj,\n        _this.allCollections,\n        _this\n      );\n\n      _this.synchronization = synchronization;\n\n      _this.loadingCount = 0;\n      _this.data = {};\n      _this.removed = {};\n      _this.schema = schemaObj;\n\n      _this.dummy = new _this.Model({\n        type: schema.type,\n        attributes: {},\n        relationships: {}\n      }, undefined, true);\n\n      _this.dummy.form.save = __saveDummy.bind(_this.dummy);\n      _this.dummy.form.addLink = __addLinkDummy.bind(_this.dummy);\n      _this.allCollections[schema.type] = _this;\n\n      _this.__synchronize('init');\n\n      _this.errors = {};\n    }\n\n    function hasErrors() {\n      var _this = this;\n      var result = false;\n\n      angular.forEach(_this.errors, function(error) {\n        if (error !== undefined) {\n          result = true;\n        }\n      });\n\n      return result;\n    }\n\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      if (collection !== null && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, objectData.updatedAt);\n        });\n      }\n    }\n\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: {},\n        updatedAt: _this.updatedAt\n      };\n\n      angular.forEach(_this.data, function(object, key) {\n        json.data[key] = object.toJson();\n      });\n\n      return angular.toJson(json);\n    }\n\n    function addOrUpdate(validatedData, updatedAt) {\n      var _this = this;\n      if (validatedData.id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[validatedData.id] === undefined) {\n        _this.data[validatedData.id] = new this.Model(validatedData, updatedAt);\n      } else {\n        _this.data[validatedData.id].__setData(validatedData, updatedAt);\n        _this.data[validatedData.id].__setLinks(validatedData.relationships);\n      }\n\n      _this.data[validatedData.id].__setUpdated(updatedAt);\n\n      return _this.data[validatedData.id];\n    }\n\n    function __get(id) {\n      var _this = this;\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.Model({id: id, type: _this.Model.prototype.schema.type}, undefined, true);\n      }\n\n      return _this.data[id];\n    }\n\n    function get(id) {\n      var _this = this;\n      var result;\n\n      if (angular.isArray(id)) {\n        result = [];\n        angular.forEach(id, function(id) {\n          result.push(_this.__get(id));\n        });\n      } else {\n        result = _this.__get(id);\n      }\n\n      _this.__synchronize('get', result, undefined, undefined, _this.schema.params.get);\n\n      return result;\n    }\n\n    function all() {\n      var _this = this;\n      _this.__synchronize('all', undefined, undefined, undefined, _this.schema.params.all);\n\n      return _this;\n    }\n\n    function clear() {\n      var _this = this;\n      _this.updatedAt = Date.now();\n      _this.data = {};\n\n      _this.__synchronize('clear');\n    }\n\n    function __remove(id) {\n      var _this = this;\n      var object = _this.data[id];\n\n      _this.removed[id] = object;\n      _this.updatedAt = Date.now();\n\n      delete _this.data[id];\n    }\n\n    function remove(id) {\n      var _this = this;\n      var object = _this.data[id];\n\n      if (object !== undefined) {\n        _this.__remove(id);\n        object.__remove(id);\n      } else {\n        $log.error('Object with this id does not exist');\n      }\n\n      _this.__synchronize('remove', object);\n    }\n\n    function __saveDummy() {\n      var _this = this;\n      var errors = _this.form.validate();\n      var newModel;\n\n      if (angular.equals(errors, {})) {\n        var data = angular.copy(_this.form.data);\n        if (data.id === undefined) {\n          data.id = uuid4.generate();\n        } else if (!uuid4.validate(data.id)) {\n          $log.error('Wrong id of dummy data!');\n          return;\n        }\n\n        data.type = _this.schema.type;\n        newModel = _this.parentCollection.addOrUpdate(data);\n        _this.form.reset();\n        _this.relationships = {};\n        _this.parentCollection.__synchronize('add', newModel);\n      }\n    }\n\n    function __addLinkDummy(linkKey, linkedObject) {\n      var _this = this;\n      if (_this.schema.relationships[linkKey] === undefined) {\n        $log.error('Link\\'', linkKey, '\\'not present in schema of', _this.data.type, _this);\n        return;\n      }\n\n      if (_this.schema.relationships[linkKey].type === 'hasOne') {\n        _this.form.data.relationships[linkKey] = {\n          data: {\n            type: linkedObject.data.type,\n            id: linkedObject.data.id\n          }\n        };\n      } else {\n        _this.form.data.relationships[linkKey].data = _this.form.data.relationships[linkKey].data || [];\n        _this.form.data.relationships[linkKey].data.push({\n          type: linkedObject.data.type,\n          id: linkedObject.data.id\n        });\n      }\n    }\n\n    function __synchronize(action, object, linkKey, linkedObject, params) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', this.Model.prototype.schema.type, {action: action, object: object, linkKey: linkKey, linkedObject: linkedObject, params: params});\n\n      _this.synchronization.synchronize(action, _this, object, linkKey, linkedObject, params);\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper($log, pluralize) {\n\n    return AngularJsonAPISchema;\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = new AngularJsonAPILinkSchema(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get.join(',');\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all.join(',');\n      }\n    }\n\n    function AngularJsonAPILinkSchema(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n        _this.reflection = linkSchema.reflection || type;\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('JsonAPIModelFactory', JsonAPIModelFactory);\n\n  function JsonAPIModelFactory(AngularJsonAPIAbstractData, AngularJsonAPISchema, $log) {\n\n    return {\n      model: modelFactory\n    };\n\n    function modelFactory(schemaObj, linkedCollections, parentCollection) {\n      var Model = function(data, updatedAt, dummy) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractData.call(_this, data, updatedAt, dummy);\n\n        _this.form.parent = _this;\n      };\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractData.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.linkedCollections = linkedCollections;\n      Model.prototype.parentCollection = parentCollection;\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.call(this);\n        };\n      });\n\n      return Model;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractData', AngularJsonAPIAbstractDataWrapper);\n\n  function AngularJsonAPIAbstractDataWrapper(\n    $log,\n    uuid4,\n    lazyProperty,\n    AngularJsonAPIAbstractDataForm\n  ) {\n\n    AngularJsonAPIAbstractData.prototype.__setData = __setData;\n    AngularJsonAPIAbstractData.prototype.__setLinks   = __setLinks;\n    AngularJsonAPIAbstractData.prototype.__setLink = __setLink;\n    AngularJsonAPIAbstractData.prototype.__setAttributes = __setAttributes;\n    AngularJsonAPIAbstractData.prototype.__validateData = __validateData;\n    AngularJsonAPIAbstractData.prototype.__validateField = __validateField;\n    AngularJsonAPIAbstractData.prototype.__updateAttributes = __updateAttributes;\n    AngularJsonAPIAbstractData.prototype.__remove = __remove;\n    AngularJsonAPIAbstractData.prototype.__setUpdated = __setUpdated;\n    AngularJsonAPIAbstractData.prototype.__setLinkInternal = __setLinkInternal;\n\n    AngularJsonAPIAbstractData.prototype.refresh = refresh;\n    AngularJsonAPIAbstractData.prototype.remove = remove;\n    AngularJsonAPIAbstractData.prototype.addLinkById = addLinkById;\n    AngularJsonAPIAbstractData.prototype.addLink = addLink;\n    AngularJsonAPIAbstractData.prototype.removeLink = removeLink;\n    AngularJsonAPIAbstractData.prototype.toLink = toLink;\n    AngularJsonAPIAbstractData.prototype.toPatchData = toPatchData;\n    AngularJsonAPIAbstractData.prototype.removeAllLinks = removeAllLinks;\n    AngularJsonAPIAbstractData.prototype.hasErrors = hasErrors;\n\n    AngularJsonAPIAbstractData.prototype.toJson = toJson;\n\n    return AngularJsonAPIAbstractData;\n\n    function AngularJsonAPIAbstractData(data, updatedAt, dummy) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      _this.removed = false;\n      _this.loadingCount = 0;\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      _this.errors = {\n        validation: {}\n      };\n\n      _this.dummy = dummy || false;\n\n      _this.__setUpdated(updatedAt);\n      _this.__setData(data, updatedAt);\n\n      _this.form = new AngularJsonAPIAbstractDataForm(_this);\n    }\n\n    function refresh() {\n      var _this = this;\n\n      _this.parentCollection.__synchronize('refresh', _this);\n    }\n\n    function hasErrors() {\n      var _this = this;\n      var result = false;\n\n      angular.forEach(_this.errors, function(error) {\n        if (error !== undefined) {\n          result = true;\n        }\n      });\n\n      return result;\n    }\n\n    function toJson() {\n      var _this = this;\n\n      return {\n        data: _this.data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    function __setUpdated(updatedAt) {\n      var _this = this;\n\n      _this.updatedAt = updatedAt || Date.now();\n      _this.parentCollection.updatedAt = _this.updatedAt;\n    }\n\n    function __remove() {\n      var _this = this;\n\n      _this.__setUpdated();\n      _this.removed = true;\n      _this.removeAllLinks();\n    }\n\n    function remove() {\n      var _this = this;\n\n      _this.__remove();\n      _this.parentCollection.remove(_this.data.id);\n    }\n\n    function toLink() {\n      return {type: this.data.type, id: this.data.id};\n    }\n\n    function toPatchData() {\n      var _this = this;\n      var res = {data: {}};\n      angular.forEach(_this.data, function(val, key) {\n        if (key !== 'relationships') {\n          res.data[key] = val;\n        }\n      });\n\n      return res;\n    }\n\n    function addLinkById(linkKey, linkModelName, id) {\n      var _this = this;\n      var linkedObject = _this.linkedCollections[linkModelName].__get(id);\n\n      if (_this.schema.relationships[linkKey] === undefined) {\n        $log.error('Cannot add link not specified in schema: ' + linkKey);\n        return;\n      }\n\n      if (_this.linkedCollections[linkModelName] === undefined) {\n        $log.error('Cannot add link of not existing type: ' + linkModelName);\n        return;\n      }\n\n      if (!uuid4.validate(id)) {\n        $log.error('Wrong link id, not uuid4: ' + id);\n        return;\n      }\n\n      if (linkedObject === undefined) {\n        $log.error('Cant find', linkModelName, 'with', id);\n        return;\n      }\n\n      _this.addLink(\n        linkKey,\n        linkedObject\n      );\n\n    }\n\n    function addLink(linkKey, linkedObject, reflection) {\n      var _this = this;\n      var linkSchema = _this.schema.relationships[linkKey];\n      var linkType;\n      var reflectionKey;\n      var linkAttributes;\n\n      if (linkedObject === undefined) {\n        $log.error('Can\\'t add non existing object');\n        return;\n      }\n\n      if (linkSchema === undefined) {\n        if (reflection === false) {\n          $log.error('Can\\'t add link not present in schema: ', linkKey, _this, reflection);\n        }\n\n        return;\n      }\n\n      if (linkSchema.polymorphic === false && linkSchema.model !== linkedObject.schema.type) {\n        $log.error('This relation is not polymorphic, expected: ' + linkSchema.model + ' instead of ' + linkedObject.schema.type);\n        return;\n      }\n\n      linkType = linkSchema.type;\n      reflectionKey = linkSchema.reflection;\n\n      if (linkType === 'hasOne') {\n        linkAttributes = _this.data.relationships[linkKey].data;\n\n        if (\n          linkAttributes !== undefined &&\n          linkAttributes !== null &&\n          linkAttributes.id === linkedObject.data.id\n        ) {\n          return;\n        }\n\n        if (linkAttributes !== undefined && linkAttributes !== null) {\n          $log.warn('Swaping hasOne', linkKey, 'of', _this.toString());\n          _this.removeLink(linkKey);\n        }\n\n        linkAttributes = linkedObject.toLink();\n      } else {\n        linkAttributes = _this.data.relationships[linkKey].data || [];\n        var duplicate = false;\n        angular.forEach(linkAttributes, function(link) {\n          if (link.id === linkedObject.data.id) {\n            duplicate = true;\n          }\n        });\n\n        if (duplicate === true) {\n          return;\n        }\n\n        linkAttributes.push(linkedObject.toLink());\n      }\n\n      if (reflection === true) {\n        _this.parentCollection.__synchronize('addLinkReflection', _this, linkKey, linkedObject);\n      } else {\n        linkedObject.addLink(reflectionKey, _this, true);\n        _this.parentCollection.__synchronize('addLink', _this, linkKey, linkedObject);\n      }\n\n      _this.__setUpdated();\n      _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n    }\n\n    function removeAllLinks() {\n      var _this = this;\n\n      angular.forEach(_this.relationships, function(link, key) {\n        _this.removeLink(key);\n      });\n    }\n\n    function removeLink(linkKey, linkedObject, reflection) {\n      var _this = this;\n      var linkSchema = _this.schema.relationships[linkKey];\n      var linkType;\n      var linkAttributes;\n      var reflectionKey;\n      var removed = false;\n\n      if (_this.schema.relationships[linkKey] === undefined) {\n        $log.error('Can\\'t remove link not present in schema');\n        return;\n      }\n\n      linkType = linkSchema.type;\n      reflectionKey = linkSchema.reflection;\n      linkAttributes = _this.data.relationships[linkKey].data;\n\n      if (linkType === 'hasOne') {\n        if (linkedObject !== undefined && linkedObject.data.id === linkAttributes.id) {\n          _this.data.relationships[linkKey].data = null;\n          linkAttributes = null;\n          removed = true;\n          if (reflection !== true && _this.relationships[linkKey] !== undefined) {\n            _this.relationships[linkKey].removeLink(reflectionKey, _this, true);\n          }\n        }\n      } else {\n        if (linkedObject === undefined) {\n          _this.data.relationships[linkKey].data = [];\n          linkAttributes = [];\n          removed = true;\n          if (reflection !== true) {\n            angular.forEach(_this.relationships[linkKey], function(link) {\n              link.removeLink(reflectionKey, _this, true);\n            });\n          }\n        } else {\n          angular.forEach(linkAttributes, function(link, index) {\n            if (link.id === linkedObject.data.id) {\n              if (reflection !== true) {\n                linkedObject.removeLink(reflectionKey, _this, true);\n              }\n\n              linkAttributes.splice(index, 1);\n              removed = true;\n            }\n          });\n        }\n      }\n\n      if (removed === true) {\n        _this.__setUpdated();\n\n        if (reflection !== true) {\n          _this.parentCollection.__synchronize('removeLink', _this, linkKey, linkedObject);\n        } else {\n          _this.parentCollection.__synchronize('removeLinkReflection',  _this, linkKey, linkedObject);\n        }\n\n        _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n      }\n    }\n\n    function __updateAttributes(validatedAttributes) {\n      var _this = this;\n\n      _this.__setUpdated();\n      _this.__setAttributes(validatedAttributes);\n      _this.parentCollection.__synchronize('update', _this);\n    }\n\n    function __setLinkInternal(linkAttributes, linkKey, linkSchema) {\n      var _this = this;\n      var linkType = linkSchema.type;\n      var reflectionKey = linkSchema.reflection;\n\n      if (linkAttributes === null) {\n        delete _this.relationships[linkKey];\n        _this.relationships[linkKey] = undefined;\n      } else if (linkType === 'hasMany' && angular.isArray(linkAttributes)) {\n        var getAll = function() {\n          var result = [];\n          angular.forEach(linkAttributes, function(link) {\n            var linkedCollection = _this.linkedCollections[link.type];\n            if (linkedCollection === undefined) {\n              $log.error('No angular-jsonapi schema for', linkAttributes.type);\n              return;\n            }\n\n            var linkedObject = linkedCollection.__get(link.id);\n            linkedObject.addLink(reflectionKey, _this, true);\n\n            result.push(linkedObject);\n          });\n\n          return result;\n        };\n\n        lazyProperty(_this.relationships, linkKey, getAll);\n      } else if (linkType === 'hasOne' && linkAttributes !== null) {\n\n        var getSingle = function() {\n          var linkedCollection = _this.linkedCollections[linkAttributes.type];\n          if (linkedCollection === undefined) {\n            $log.error('No angular-jsonapi schema for', linkAttributes.type);\n            return;\n          }\n\n          var linkedObject = linkedCollection.__get(linkAttributes.id);\n          linkedObject.addLink(reflectionKey, _this, true);\n\n          return linkedObject;\n        };\n\n        lazyProperty(_this.relationships, linkKey, getSingle);\n      }\n    }\n\n    function __setLink(linkAttributes, linkKey, linkSchema) {\n      var _this = this;\n      var linkType = linkSchema.type;\n      var reflectionKey = linkSchema.reflection;\n\n      if (linkType === 'hasMany' && angular.isArray(linkAttributes)) {\n        var indexedLinks = {};\n        angular.forEach(linkAttributes, function(link) {\n          indexedLinks[link.id] = link;\n        });\n\n        angular.forEach(_this.relationships[linkKey], function(link) {\n          if (indexedLinks[link.data.id] === undefined) {\n            link.removeLink(reflectionKey, _this, true);\n          }\n        });\n      } else if (linkType === 'hasOne' && linkAttributes !== null) {\n        if (_this.relationships[linkKey] !== undefined && _this.relationships[linkKey].data.id !== linkAttributes.id) {\n          _this.relationships[linkKey].removeLink(reflectionKey, _this, true);\n        }\n      }\n\n      _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n    }\n\n    function __setLinks(relationships) {\n      var _this = this;\n      if (relationships === undefined) {\n        return;\n      }\n\n      angular.forEach(_this.schema.relationships, function(linkSchema, linkName) {\n        _this.data.relationships[linkName] = _this.data.relationships[linkName] || {};\n        if (relationships[linkName] !== undefined) {\n          angular.extend(_this.data.relationships[linkName], relationships[linkName]);\n        }\n      });\n\n      angular.forEach(_this.schema.relationships, function(linkSchema, linkKey) {\n        if (relationships[linkKey] !== undefined && relationships[linkKey].data !== undefined) {\n          _this.__setLink(relationships[linkKey].data, linkKey, linkSchema);\n        }\n      });\n    }\n\n    function __validateField(data, key) {\n      var _this = this;\n      var error = [];\n\n      if (data !== undefined) {\n        error = __validate(_this.schema.attributes[key], data, key);\n      }\n\n      return error;\n    }\n\n    function __validateData(data) {\n      var _this = this;\n      var errors = {};\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        var error = _this.__validateField(data[key], key);\n        if (error.length > 0) {\n          errors[key] = error;\n          $log.warn('Erorrs when validating ', data[key], errors);\n        }\n      });\n\n      return errors;\n    }\n\n    function __setAttributes(attributes) {\n      var _this = this;\n\n      angular.forEach(_this.schema.attributes, function(validator, attributeName) {\n        if (attributes[attributeName] !== undefined) {\n          _this.data.attributes[attributeName] = attributes[attributeName];\n        }\n      });\n    }\n\n    function __setData(data) {\n      var _this = this;\n      var safeData = angular.copy(data);\n\n      _this.errors.validation = _this.__validateData(safeData);\n\n      safeData.relationships = safeData.relationships || {};\n      safeData.attributes = safeData.attributes || {};\n\n      _this.data.id = safeData.id;\n      _this.data.type = safeData.type;\n\n      _this.__setAttributes(safeData.attributes);\n      _this.__setLinks(safeData.relationships);\n    }\n\n    function __validate(validator, attributeValue, attributeName) {\n      var errors = [];\n      if (angular.isArray(validator)) {\n        angular.forEach(validator, function(element) {\n          errors = errors.concat(__validate(element, attributeValue, attributeName));\n        });\n      } else if (angular.isFunction(validator)) {\n        var err = validator(attributeValue);\n        if (angular.isArray(err)) {\n          errors.concat(err);\n        } else {\n          $log.error(\n            'Wrong validator type it should return array of errors instead of: ' +\n              err.toString()\n          );\n        }\n      } else if (angular.isString(validator)) {\n        if (validator === 'text' || validator === 'string') {\n          if (!angular.isString(attributeValue)) {\n            errors.push(attributeName + ' is not a string ');\n          }\n        } else if (validator === 'number' || validator === 'integer') {\n          if (parseInt(attributeValue).toString() !== attributeValue.toString()) {\n            errors.push(attributeName + ' is not a number');\n          }\n        } else if (validator === 'uuid4') {\n          if (!uuid4.validate(attributeValue)) {\n            errors.push(attributeName + ' is not a uuid4');\n          }\n        } else if (validator === 'required') {\n          if (attributeValue.toString().length === 0) {\n            errors.push(attributeName + ' is empty');\n          }\n        } else {\n          $log.error('Wrong validator type: ' + validator.toString());\n        }\n      } else if (angular.isObject(validator)) {\n        if (validator.maxlength !== undefined && attributeValue.length > validator.maxlength) {\n          errors.push(attributeName + ' is too long max ' + validator.maxlength);\n        }\n\n        if (validator.minlength !== undefined && attributeValue.length < validator.minlength) {\n          errors.push(attributeName + ' is too short min ' + validator.minlength);\n        }\n\n        if (validator.maxvalue !== undefined && parseInt(attributeValue) > validator.maxvalue) {\n          errors.push(attributeName + ' is too big max ' + validator.maxvalue);\n        }\n\n        if (validator.minvalue !== undefined && parseInt(attributeValue) < validator.minvalue) {\n          errors.push(attributeName + ' is too small min ' + validator.minvalue);\n        }\n      } else {\n        $log.error('Wrong validator type: ' + validator.toString());\n      }\n\n      return errors;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractDataForm', AngularJsonAPIAbstractDataFormWrapper);\n\n  function AngularJsonAPIAbstractDataFormWrapper($log) {\n\n    AngularJsonAPIAbstractDataForm.prototype.save = save;\n    AngularJsonAPIAbstractDataForm.prototype.reset = reset;\n    AngularJsonAPIAbstractDataForm.prototype.validate = validate;\n    AngularJsonAPIAbstractDataForm.prototype.validateField = validateField;\n\n    AngularJsonAPIAbstractDataForm.prototype.__synchronize = __synchronize;\n\n    return AngularJsonAPIAbstractDataForm;\n\n    function AngularJsonAPIAbstractDataForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        attributes: {},\n        relationships: {}\n      };\n      _this.parent = parent;\n      _this.reset();\n    }\n\n    function save() {\n      var _this = this;\n      var errors = _this.validate();\n\n      if (angular.equals(errors, {}) === false) {\n        $log.error('Errors in form: ', errors);\n        return;\n      }\n\n      _this.parent.__updateAttributes(_this.data);\n    }\n\n    function reset() {\n      var _this = this;\n\n      angular.forEach(_this.parent.schema.attributes, function(data, key) {\n        _this.data.attributes[key] = _this.parent.data.attributes[key] || '';\n      });\n\n      angular.forEach(_this.parent.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = _this.parent.data.relationships[key] || {};\n      });\n\n      _this.errors = {\n        validation: {}\n      };\n    }\n\n    function validate() {\n      var _this = this;\n      var errors;\n\n      errors = _this.parent.__validateData(_this.data);\n\n      _this.errors.validation = errors;\n\n      return errors;\n    }\n\n    function validateField(key) {\n      var _this = this;\n      var errors;\n      errors = _this.parent.__validateField(\n        _this.data[key],\n        key\n      );\n\n      _this.errors.validation[key] = errors;\n\n      return errors;\n    }\n\n    function __synchronize(key) {\n      $log.log('Synchro Collection ' + this.Model.prototype.schema.type, key);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider() {\n    var memory = {};\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPICollection) {\n      return {\n        form: form,\n        get: get,\n        remove: remove,\n        all: all,\n        addModel: addModel,\n        getModel: getModel,\n        clearAll: clearAll\n      };\n\n      function addModel(schema, synchronization) {\n        var collection = new AngularJsonAPICollection(schema, synchronization);\n\n        memory[schema.type] = collection;\n      }\n\n      function getModel(type) {\n        return memory[type];\n      }\n\n      function form(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t add not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].dummy.form;\n      }\n\n      function get(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].get(id);\n      }\n\n      function remove(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t remove not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].remove(id);\n      }\n\n      function all(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get all of not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].all();\n      }\n\n      function clearAll() {\n        angular.forEach(memory, function(collection) {\n          collection.clear();\n        });\n      }\n    }\n  }\n\n})();\n\n"],"sourceRoot":"/source/"}