{"version":3,"sources":["/source/jsonapi.module.js","/source/model/model-validation-errors/model-validation-errors.js","/source/model/model-linker/model-linker.js","angular-jsonapi.min.js","/source/model/model-form/model-form.js","/source/model/abstract-model/abstract-model.js","/source/factory/factory-cache/factory-cache.factory.js","/source/utils/lazy-property.js","/source/utils/kebab-case.js","/source/utils/all-settled.js","/source/synchronizers/synchronizer-simple.js","/source/synchronizers/synchronizer-prototype.js","/source/synchronizations/synchronization-rest.js","/source/synchronizations/synchronization-prototype.js","/source/synchronizations/synchronization-local.js","/source/schema/schema.js","/source/schema/schema-link.js","/source/model/model.js","/source/factory/factory.js","/source/collection/collection.js","/source/jsonapi.provider.js","/source/jsonapi.config.js"],"names":["angular","module","constant","pluralize","validate","AngularJsonAPIModelValidationErrorsWrapper","ValidationErrors","errors","options","attributes","constraints","Error","captureStackTrace","this","constructor","prototype","Object","create","factory","AngularJsonAPIModelLinkerService","$log","toLinkData","object","type","data","id","link","key","target","oneWay","schema","undefined","error","relationships","polymorphic","model","__addHasMany","__processAddHasMany","__addHasOne","__processAddHasOne","unlink","__removeHasMany","__processRemove","reflectionSchema","reflectionKey","reflection","__swapResults","__wrapResults","oldReflectionSchema","oldReflection","result","__removeHasOne","push","reset","debug","linkData","isArray","indexOf","index","splice","value","newValue","array","forEach","item","i","_this","service","$inject","AngularJsonAPIModelFormWrapper","AngularJsonAPIModelValidationErrors","validateJS","$q","AngularJsonAPIModelForm","parent","toJson","copy","save","auto","slice","validator","validation","resolve","deferred","reject","errorsWrapper","extend","attributesWrapper","constraintsWrapper","defer","async","wrapErrors","then","promise","AngularJsonAPIAbstractModelWrapper","uuid4","$rootScope","$injector","AngularJsonAPIAbstractModel","config","updatedAt","saved","stable","pristine","removed","loading","saving","Date","now","loadingCount","savingCount","name","synchronization","promises","__setData","form","addToIndex","invalidate","__decrementSavingCounter","response","$emit","action","update","cache","indexIds","finish","notify","synchronize","bind","__incrementSavingCounter","refresh","synchronizeIncluded","__incrementLoadingCounter","__decrementLoadingCounter","resolveIncluded","includedResponse","operation","success","results","included","$jsonapi","proccesResults","allSettled","map","get","params","status","statusText","remove","unlinkAll","clearRemoved","revertRemove","removeLink","linksObj","removeReflectionLink","isObject","resolveReflection","targets","validatedData","initialization","setAttributes","validators","setRelationships","relationshipData","links","linkOne","length","unlinkOne","getFactory","AngularJsonAPICacheWrapper","AngularJsonAPICache","size","addOrUpdate","Model","fromJson","json","collection","synchronized","objectData","clear","setIndexIds","element","isString","propertyName","callback","done","defineProperty","call","enumerable","configurable","str","replace","toLowerCase","$provide","decorator","$delegate","resolvedCallback","rejectedCallback","wrap","isFunction","reason","wrapped","hasOwnProperty","all","AngularJsonAPISynchronizerSimpleWrapper","AngularJsonAPISynchronizerPrototype","AngularJsonAPISynchronizerSimple","synchronizations","state","synchronizer","step","resolved","afterHooks","hook","finishHooks","rejected","noop","beginHooks","beforeHooks","synchronizationHooks","AngularJsonAPISynchronizerPrototypeWrapper","AngularJsonAPISynchronizationRestWrapper","AngularJsonAPISynchronizationPrototype","toKebabCase","$http","AngularJsonAPISynchronizationRest","url","method","headers","resolveHttp","rejectHttp","add","rejectServerOffline","rejectNoConnection","Accept","Content-Type","AngularJsonAPISynchronizationPrototypeWrapper","allHooks","hookName","begin","beforeSynchro","afterSynchro","before","after","AngularJsonAPISynchronizationLocalWrapper","$window","AngularJsonAPISynchronizationLocal","prefix","init","localStorage","getItem","removeItem","updateStorage","setItem","__updateStorage","AngularJsonAPISchemaWrapper","AngularJsonAPISchemaLink","AngularJsonAPISchema","include","linkSchema","linkName","linkSchemaObj","join","AngularJsonAPILinkSchrapperLink","plural","singular","AngularJsonAPIModel","modelFactory","schemaObj","functions","metaFunction","metaFunctionName","apply","arguments","AngularJsonAPIFactoryWrapper","AngularJsonAPICollection","AngularJsonAPIFactory","initialized","fetch","initialize","relationshipSchema","relationshipName","warn","generate","clearCache","AngularJsonAPICollectionWrapper","event","description","$on","jsonapiProvider","jsonapiFactory","allFactories","memory","factoriesNames","names","addFactory","objects","$get","provider","$logProvider","debugEnabled","run","Promise"],"mappings":"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","file":"angular-jsonapi.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false, validate: false */\n  .constant('pluralize', pluralize)\n  .constant('validateJS', validate);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelValidationErrors', AngularJsonAPIModelValidationErrorsWrapper);\n\n  function AngularJsonAPIModelValidationErrorsWrapper() {\n    ValidationErrors.prototype = Object.create(Error.prototype);\n    ValidationErrors.prototype.constructor = ValidationErrors;\n\n    return ValidationErrors;\n\n    function ValidationErrors(errors, options, attributes, constraints) {\n      Error.captureStackTrace(this, this.constructor);\n      this.errors = errors;\n      this.options = options;\n      this.attributes = attributes;\n      this.constraints = constraints;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, oneWay) {\n      var schema;\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema.type === 'hasMany') {\n        if (oneWay === true) {\n          __addHasMany(object, key, target, false);\n          return [];\n        } else {\n          return __processAddHasMany(object, key, target);\n        }\n      } else if (schema.type === 'hasOne') {\n        if (oneWay === true) {\n          __addHasOne(object, key, target, false);\n          return [];\n        } else {\n          return __processAddHasOne(object, key, target);\n        }\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, oneWay) {\n      var schema;\n\n      if (object === undefined) {\n        $log.error('Can\\'t remove link from non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (oneWay === true) {\n        __removeHasMany(object, key, target, false);\n        return [];\n      } else {\n        return __processRemove(object, key, target);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __processAddHasMany(object, key, target) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var reflectionSchema;\n\n      if (reflectionKey === false) {\n        __addHasMany(object, key, target);\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        return __swapResults(\n          __wrapResults(object, key, target),\n          __wrapResults(target, reflectionKey, object),\n          __processAddHasOne(target, reflectionKey, object)\n        );\n      } else if (reflectionSchema.type === 'hasMany') {\n        __addHasMany(object, key, target);\n        __addHasMany(target, reflectionKey, object);\n        return [__wrapResults(target, reflectionKey, object)];\n      }\n    }\n\n    function __processAddHasOne(object, key, target) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var oldReflection = object.relationships[key];\n      var reflectionSchema;\n      var oldReflectionSchema;\n      var result = [];\n\n      __addHasOne(object, key, target);\n\n      if (oldReflection !== undefined && oldReflection !== null) {\n        oldReflectionSchema = oldReflection.schema.relationships[reflectionKey];\n\n        if (oldReflectionSchema.type === 'hasOne') {\n          __removeHasOne(oldReflection, reflectionKey, object);\n        } else if (oldReflectionSchema.type === 'hasMany') {\n          __removeHasMany(oldReflection, reflectionKey, object);\n        }\n\n        result.push(oldReflection, reflectionKey, object);\n      }\n\n      if (target !== undefined && target !== null && reflectionKey !== false) {\n        reflectionSchema = target.schema.relationships[reflectionKey];\n\n        if (reflectionSchema.type === 'hasOne') {\n          __addHasOne(target, reflectionKey, object);\n        } else if (reflectionSchema.type === 'hasMany') {\n          __addHasMany(target, reflectionKey, object);\n        }\n\n        result.push(target, reflectionKey, object);\n      }\n\n      return result;\n    }\n\n    function __processRemove(object, key, target) {\n      var schema = object.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema;\n\n      if (schema.type === 'hasMany') {\n        __removeHasMany(object, key, target);\n      } else if (schema.type === 'hasOne') {\n        __removeHasOne(object, key, target);\n      }\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        __removeHasOne(target, reflectionKey, object);\n      } else if (reflectionSchema.type === 'hasMany') {\n        __removeHasMany(target, reflectionKey, object);\n      }\n\n      return [__wrapResults(target, reflectionKey, object)];\n    }\n\n    function __addHasOne(object, key, target, reset) {\n      $log.debug('addHasOne', object, key, target);\n\n      object.relationships[key] = target;\n      object.data.relationships[key].data = toLinkData(target);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, reset) {\n      var linkData = toLinkData(target);\n      $log.debug('addHasMany', object, key, target);\n\n      if (angular.isArray(object.relationships[key]) && object.relationships[key].indexOf(target) > -1) {\n        return false;\n      }\n\n      object.relationships[key] = object.relationships[key] || [];\n      object.data.relationships[key].data = object.data.relationships[key].data || [];\n\n      object.relationships[key].push(target);\n      object.data.relationships[key].data.push(linkData);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, reset) {\n      $log.debug('removeHasOne', object, key, target);\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        return false;\n      }\n\n      object.relationships[key] = null;\n      object.data.relationships[key].data = undefined;\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, reset) {\n      $log.debug('removeHasMany', object, key, target);\n\n      if (object.relationships[key] === undefined) {\n        return;\n      }\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n        if (reset !== false) {\n          object.reset(true);\n        }\n\n        return true;\n      }\n\n      var index = object.relationships[key].indexOf(target);\n\n      if (index === -1) {\n        return false;\n      }\n\n      object.relationships[key].splice(index, 1);\n      object.data.relationships[key].data.splice(index, 1);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __wrapResults(object, key, target) {\n      return {\n        object: object,\n        key: key,\n        target: target\n      };\n    }\n\n    function __swapResults(value, newValue, array) {\n      var index = -1;\n      angular.forEach(array, function(item, i) {\n        if (item.object === value.object && item.key === value.key && item.target === value.target) {\n          index = i;\n        }\n      });\n\n      if (index > -1) {\n        array[index] = newValue;\n      } else {\n        array.push(newValue);\n      }\n\n      return array;\n    }\n  }\n})();\n","!function(){\"use strict\";angular.module(\"angular-jsonapi\",[\"uuid4\"]).constant(\"pluralize\",pluralize).constant(\"validateJS\",validate)}(),function(){\"use strict\";function t(){function t(t,e,n,a){Error.captureStackTrace(this,this.constructor),this.errors=t,this.options=e,this.attributes=n,this.constraints=a}return t.prototype=Object.create(Error.prototype),t.prototype.constructor=t,t}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelValidationErrors\",t)}(),function(){\"use strict\";function t(t){function e(t){return null===t?null:{type:t.data.type,id:t.data.id}}function n(e,n,a,i){var u;return void 0===e?(t.error(\"Can't add link to non existing object\",e,n,a),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),[]):(u=e.schema.relationships[n],void 0===a?(t.error(\"Can't link non existing object\",e,n,a,u),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),t.error(\"Schema:\",u),[]):void 0===u?(t.error(\"Can't add link not present in schema:\",e,n,a,u),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),t.error(\"Schema:\",u),[]):null!==a&&u.polymorphic===!1&&u.model!==a.data.type?(t.error(\"This relation is not polymorphic, expected: \"+u.model+\" instead of \"+a.data.type),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),t.error(\"Schema:\",u),[]):\"hasMany\"===u.type?i===!0?(c(e,n,a,!1),[]):r(e,n,a):\"hasOne\"===u.type?i===!0?(s(e,n,a,!1),[]):o(e,n,a):void 0)}function a(e,n,a,r){var o;return void 0===e?(t.error(\"Can't remove link from non existing object\",e,n,a),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),[]):(o=e.schema.relationships[n],void 0===o?(t.error(\"Can't remove link not present in schema:\",e,n,a,o),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),t.error(\"Schema:\",o),[]):r===!0?(l(e,n,a,!1),[]):i(e,n,a))}function r(t,e,n){var a,r=t.schema.relationships[e].reflection;return r===!1?(c(t,e,n),[]):(a=n.schema.relationships[r],\"hasOne\"===a.type?h(d(t,e,n),d(n,r,t),o(n,r,t)):\"hasMany\"===a.type?(c(t,e,n),c(n,r,t),[d(n,r,t)]):void 0)}function o(t,e,n){var a,r,o=t.schema.relationships[e].reflection,i=t.relationships[e],d=[];return s(t,e,n),void 0!==i&&null!==i&&(r=i.schema.relationships[o],\"hasOne\"===r.type?u(i,o,t):\"hasMany\"===r.type&&l(i,o,t),d.push(i,o,t)),void 0!==n&&null!==n&&o!==!1&&(a=n.schema.relationships[o],\"hasOne\"===a.type?s(n,o,t):\"hasMany\"===a.type&&c(n,o,t),d.push(n,o,t)),d}function i(t,e,n){var a,r=t.schema.relationships[e],o=r.reflection;return\"hasMany\"===r.type?l(t,e,n):\"hasOne\"===r.type&&u(t,e,n),o===!1?[]:(a=n.schema.relationships[o],\"hasOne\"===a.type?u(n,o,t):\"hasMany\"===a.type&&l(n,o,t),[d(n,o,t)])}function s(n,a,r,o){return t.debug(\"addHasOne\",n,a,r),n.relationships[a]=r,n.data.relationships[a].data=e(r),o!==!1&&n.reset(!0),!0}function c(n,a,r,o){var i=e(r);return t.debug(\"addHasMany\",n,a,r),angular.isArray(n.relationships[a])&&n.relationships[a].indexOf(r)>-1?!1:(n.relationships[a]=n.relationships[a]||[],n.data.relationships[a].data=n.data.relationships[a].data||[],n.relationships[a].push(r),n.data.relationships[a].data.push(i),o!==!1&&n.reset(!0),!0)}function u(e,n,a,r){return t.debug(\"removeHasOne\",e,n,a),void 0!==a&&e.relationships[n]!==a?!1:(e.relationships[n]=null,e.data.relationships[n].data=void 0,r!==!1&&e.reset(!0),!0)}function l(e,n,a,r){if(t.debug(\"removeHasMany\",e,n,a),void 0!==e.relationships[n]){if(void 0===a)return e.relationships[n]=[],e.data.relationships[n].data=[],r!==!1&&e.reset(!0),!0;var o=e.relationships[n].indexOf(a);return-1===o?!1:(e.relationships[n].splice(o,1),e.data.relationships[n].data.splice(o,1),r!==!1&&e.reset(!0),!0)}}function d(t,e,n){return{object:t,key:e,target:n}}function h(t,e,n){var a=-1;return angular.forEach(n,function(e,n){e.object===t.object&&e.key===t.key&&e.target===t.target&&(a=n)}),a>-1?n[a]=e:n.push(e),n}var p=this;return p.toLinkData=e,p.link=n,p.unlink=a,this}angular.module(\"angular-jsonapi\").service(\"AngularJsonAPIModelLinkerService\",t),t.$inject=[\"$log\"]}(),function(){\"use strict\";function t(t,e,n,a){function r(t){var e=this;e.data={id:t.data.id,type:t.data.type,attributes:{},relationships:{}},e.relationships={},e.parent=t,e.schema=t.schema,e.reset()}function o(){var t=this,e=angular.copy(t.data),n={};return angular.forEach(e.relationships,function(t,e){void 0!==t.data&&(n[e]=t)}),e.relationships=n,{data:e}}function i(){var t=this;return t.parent.save()}function s(t){var e=this;angular.forEach(e.schema.relationships,function(t,n){e.data.relationships[n]=angular.copy(e.parent.data.relationships[n])||{},e.relationships[n]=angular.isArray(e.relationships[n])?e.parent.relationships[n].slice():e.parent.relationships[n]}),(t!==!0||e.parent[\"synchronized\"]!==!0)&&(angular.forEach(e.schema.attributes,function(t,n){e.data.attributes[n]=angular.copy(e.parent.data.attributes[n])}),e.errors={validation:{}})}function c(e){function r(){void 0===e?(c.parent.errors.validation={},c.parent.error=!1):(c.parent.errors.validation[e]=[],c.parent.error=!1),u.resolve()}function o(t){c.parent.error=!0,angular.extend(c.parent.errors.validation,t.errors),u.reject(t)}var i,s,c=this,u=a.defer();return void 0===e?(i=c.data.attributes,s=c.schema.attributes):(i={},s={},i[e]=c.data.attributes[e],s[e]=c.schema.attributes[e]),n.async(i,s,{wrapErrors:t}).then(r,o),u.promise}function u(t,n){var r=this;return a.resolve(e.link(r,t,n,!0))}function l(t,n){var r=this;return a.resolve(e.unlink(r,t,n,!0))}return r.prototype.save=i,r.prototype.reset=s,r.prototype.validate=c,r.prototype.link=u,r.prototype.unlink=l,r.prototype.toJson=o,r}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelForm\",t),t.$inject=[\"AngularJsonAPIModelValidationErrors\",\"AngularJsonAPIModelLinkerService\",\"validateJS\",\"$q\"]}(),function(){\"use strict\";function t(t,o,i,s,c,u,l){function d(e,n,a){var r=this;e.relationships=e.relationships||{},r.saved=void 0===n.saved?!0:n.saved,r.stable=void 0===n.stable?!0:n.stable,r[\"synchronized\"]=void 0===n[\"synchronized\"]?!0:n[\"synchronized\"],r.pristine=void 0===n.pristine?!0:n.pristine,r.removed=!1,r.error=!1,r.loading=!1,r.saving=!1,r.updatedAt=r[\"synchronized\"]===!0?Date.now():a,r.loadingCount=0,r.savingCount=0,r.data={relationships:{},attributes:{}},r.relationships={},angular.forEach(r.schema.relationships,function(t,e){r.relationships[e]=void 0}),r.errors={validation:{},synchronization:{}},r.promises={},A(r,e),r.form=new t(r)}function h(t){function e(e){s.$emit(\"angularJsonAPI:\"+i.data.type+\":object:\"+u.action,\"resolved\",i,e,t),i.update(i.form.data),i.saved===!1&&t===!0&&(i.factory.cache.indexIds=i.factory.cache.indexIds||[],i.factory.cache.indexIds.push(i.data.id)),i[\"synchronized\"]=!0,i.saved=!0,i.stable=!0,e.finish(),c.resolve(i)}function n(t){s.$emit(\"angularJsonAPI:\"+i.data.type+\":object:save\",\"rejected\",i,t),t.finish(),c.reject(t)}function o(t){s.$emit(\"angularJsonAPI:\"+i.data.type+\":object:save\",\"notify\",i,t),c.notify(t)}var i=this,c=l.defer(),u={action:i.saved===!1?\"add\":\"update\",object:i};return t=void 0===t?!0:t,i.form.validate().then(i.synchronize(u).then(e,n,o)[\"finally\"](r.bind(i)),c.reject),a(i),c.promise}function p(){var t=this;void 0!==t.form&&t.form.reset()}function f(){function t(t){function a(t){return e.bind(t),t.synchronize({action:\"include\",object:t})[\"finally\"](n.bind(t))}function r(e){angular.forEach(e,function(t,e){t.success===!0&&(s.$emit(\"angularJsonAPI:\"+c.included[e].data.type+\":object:include\",\"resolved\",c.included[e],t),t.value.finish())}),i.resolve(t)}var c=o.proccesResults(t.data);s.$emit(\"angularJsonAPI:\"+u.data.type+\":object:refresh\",\"resolved\",u,t),l.allSettled(c.included.map(a)).then(r,i.reject),t.finish(),u[\"synchronized\"]=!0,u.stable=!0}function a(t){s.$emit(\"angularJsonAPI:\"+u.data.type+\":object:refresh\",\"rejected\",u,t),t.finish(),i.reject(t)}function r(t){s.$emit(\"angularJsonAPI:\"+u.data.type+\":object:refresh\",\"notify\",u,t),i.notify(t)}var o=c.get(\"$jsonapi\"),i=l.defer(),u=this,d={action:\"refresh\",object:u,params:u.schema.params.get};return u.saved===!1?i.reject({errors:[{status:0,statusText:\"Can't refresh new object\"}]}):(e(u),u.synchronize(d).then(t,a,r)[\"finally\"](n.bind(u))),i.promise}function y(){var t=this,e=angular.copy(t.data),n={};return angular.forEach(e.relationships,function(t,e){void 0!==t.data&&(n[e]=t)}),e.relationships=n,{data:e,updatedAt:t.updatedAt}}function g(){function t(t){s.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"resolved\",o,t),o.removed=!0,o.unlinkAll(),o.factory.cache.clearRemoved(o.data.id),t.finish(),i.resolve(t)}function e(t){s.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"rejected\",o,t),o.factory.cache.revertRemove(o.data.id),t.finish(),i.reject(t)}function n(t){s.$emit(\"angularJsonAPI:\"+o.data.type+\":object:remove\",\"notify\",o,t),i.notify(t)}var o=this,i=l.defer(),c={action:\"remove\",object:o};return o.factory.cache.remove(o.data.id),o.saved===!1?i.resolve():(a.bind(o),o.synchronize(c).then(t,e,n)[\"finally\"](r.bind(o))),i.promise}function v(t){function a(t,e){var n=i.schema.relationships[e],a=n.reflection;angular.isArray(t)?angular.forEach(t,r.bind(void 0,a)):angular.isObject(t)&&r(a,t),\"hasOne\"===n.type?i.relationships[e]=null:\"hasMany\"===n.type&&(i.relationships[e]=[])}function r(t,n){function a(t){s.$emit(\"angularJsonAPI:\"+i.data.type+\":object:unlinkReflection\",\"resolve\",i,t),t.finish(),c.resolve(i)}function r(t){s.$emit(\"angularJsonAPI:\"+i.data.type+\":object:unlinkReflection\",\"rejected\",i,t),t.finish(),c.reject(t)}function u(t){s.$emit(\"angularJsonAPI:\"+i.data.type+\":object:unlinkReflection\",\"notify\",i,t),t.finish(),c.notify(t)}var l=n.schema.relationships[t],d={action:\"unlinkReflection\",object:n,target:i,key:t};e(n),o.unlink(n,t,i,l),n.synchronize(d).then(a,r,u).__decrementLoadingCounter.bind(n)}var i=this,c=l.defer();return e(i),void 0===t?angular.forEach(i.relationships,a):a(i.relationships[t],t),n(i),c.promise}function m(t,i){function c(a){function r(t){return e(i),i.synchronize({action:\"linkReflection\",object:t.object,target:t.target,key:t.key})[\"finally\"](n.bind(i))}function c(e){angular.forEach(e,function(n){n.success===!0&&(s.$emit(\"angularJsonAPI:\"+u[t].data.type+\":object:linkReflection\",\"resolved\",u[t],n),e.value.finish())}),p.resolve(f)}s.$emit(\"angularJsonAPI:\"+f.data.type+\":object:link\",\"resolved\",f,a);var u=o.link(f,t,i);f.stable=!0,a.finish(),l.allSettled(u.map(r)).then(c,p.reject)}function d(t){s.$emit(\"angularJsonAPI:\"+f.data.type+\":object:link\",\"rejected\",f,t),p.reject(t.errors),t.finish(),p.reject(t)}function h(t){s.$emit(\"angularJsonAPI:\"+f.data.type+\":object:link\",\"notify\",f,t),p.notify(t)}var p=l.defer(),f=this,y={action:\"link\",object:f,target:i,key:t};return void 0===i?(u.error(\"Can't link undefined\"),p.reject({errors:[{status:0,statusText:\"Can't link undefined\"}]})):f.saved===!1?(u.error(\"Can't link new object\"),p.reject({errors:[{status:0,statusText:\"Can't link new object\"}]})):(a(f),f.synchronize(y).then(c,d,h)[\"finally\"](r.bind(f))),p.promise}function j(t,i){function c(a){function r(t){return e(i),i.synchronize({action:\"unlinkReflection\",object:t.object,target:t.target,key:t.key})[\"finally\"](n.bind(i))}function c(e){angular.forEach(e,function(n){n.success===!0&&(s.$emit(\"angularJsonAPI:\"+u[t].data.type+\":object:unlinkReflection\",\"resolved\",u[t],n),e.value.finish())}),h.resolve(p)}s.$emit(\"angularJsonAPI:\"+p.data.type+\":object:unlink\",\"resolved\",p,a);var u=o.link(p,t,i);p.stable=!0,a.finish(),l.allSettled(u.map(r)).then(c,h.reject)}function u(t){s.$emit(\"angularJsonAPI:\"+p.data.type+\":object:unlink\",\"rejected\",p,t),h.reject(t.errors),t.finish(),h.reject(t)}function d(t){s.$emit(\"angularJsonAPI:\"+p.data.type+\":object:unlink\",\"notify\",p,t),h.notify(t)}var h=l.defer(),p=this,f={action:\"unlink\",object:p,target:i,key:t};return void 0===i?h.reject({errors:[{status:0,statusText:\"Can't unlink undefined\"}]}):p.saved===!1?h.reject({errors:[{status:0,statusText:\"Can't unlink new object\"}]}):(a(p),p.synchronize(f).then(c,u,d)[\"finally\"](r.bind(p))),h.promise}function b(t,a,r){var o=this;e(o),A(o,t),o.reset(a),o[\"synchronized\"]=r===!0?!1:!0,o.stable=r===!0?!1:!0,o.updatedAt=Date.now(),n(o)}function A(t,e){function n(n,a){t.data.attributes[a]=e.attributes[a]}function a(n,a){var o=e.relationships[a];return void 0===o?void(t.data.relationships[a]={data:void 0}):(t.data.relationships[a]=t.data.relationships[a]||{},t.data.relationships[a].links=o.links,void(\"hasOne\"===n.type?r(t,a,o.data):\"hasMany\"===n.type&&angular.isArray(o.data)&&(0===o.data.length?(t.data.relationships[a].data=[],t.unlinkAll(a)):(angular.forEach(t.relationships[a],s.bind(void 0,t,a,o.data)),angular.forEach(o.data,r.bind(void 0,t,a))))))}function r(t,e,n){var a;if(null===n)return void o.link(t,e,null);if(void 0!==n){if(a=l.getFactory(n.type),void 0===a)return void u.error(\"Factory not found\",n.type,n);var r=a.cache.get(n.id);o.link(t,e,r)}}function s(t,e,n,a){n.indexOf(a.data.id)>-1||o.unlink(t,e,a)}var l=c.get(\"$jsonapi\"),d=t.schema;return t.data.id=e.id,t.data.type=e.type,t.factory.schema.type!==e.type?(u.error(\"Different type then factory\",t.factory.schema.type,e),!1):i.validate(t.data.id)?(e.attributes=e.attributes||{},e.relationships=e.relationships||{},angular.forEach(d.attributes,n),angular.forEach(d.relationships,a),!0):(u.error(\"Invalid id\"),!1)}return d.prototype.refresh=f,d.prototype.remove=g,d.prototype.reset=p,d.prototype.save=h,d.prototype.update=b,d.prototype.link=m,d.prototype.unlink=j,d.prototype.unlinkAll=v,d.prototype.toJson=y,d}function e(t){t=void 0===t?this:t,t.loadingCount+=1,t.loading=!0}function n(t){t=void 0===t?this:t,t.loadingCount-=1,t.loading=t.loadingCount>0}function a(t){t=void 0===t?this:t,t.savingCount+=1,t.saving=!0}function r(t){t=void 0===t?this:t,t.savingCount-=1,t.saving=t.savingCount>0}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractModel\",t),t.$inject=[\"AngularJsonAPIModelForm\",\"AngularJsonAPIModelLinkerService\",\"uuid4\",\"$rootScope\",\"$injector\",\"$log\",\"$q\"]}(),function(){\"use strict\";function t(t,e){function n(t){var e=this;e.factory=t,e.data={},e.removed={},e.size=0,e.indexIds=void 0}function a(t,n){var a=this,r=t.id;return void 0===r?void e.error(\"Can't add data without id!\",t):(void 0===a.data[r]?(a.data[r]=new a.factory.Model(t,n),a.size+=1):a.data[r].update(t,n.saved,n.initialization),a.data[r])}function r(t){var e=this,n=angular.fromJson(t),a={saved:!0,\"synchronized\":!1,stable:!1,pristine:!1,initialization:!0};angular.isObject(n)&&void 0!==n.data&&(e.updatedAt=n.updatedAt,e.indexIds=n.indexIds,angular.forEach(n.data,function(t){var n=t.data;e.addOrUpdate(n,a,t.updatedAt)}))}function o(){var t=this,e={data:[],updatedAt:t.updatedAt,indexIds:t.indexIds};return angular.forEach(t.data,function(t){t.error===!1&&e.data.push(t.toJson())}),angular.toJson(e)}function i(){var t=this;t.indexIds=void 0,t.data={},t.removed={}}function s(t){var e=this,n={id:t,type:e.factory.Model.prototype.schema.type},a={saved:!0,\"synchronized\":!1,stable:!1,pristine:!0};return void 0===e.data[t]&&(e.data[t]=new e.factory.Model(n,a)),e.data[t]}function c(t){var n=this;return e.debug(\"Unused params\",t),void 0===n.indexIds?n.indexIds:n.indexIds.map(n.get.bind(n))}function u(e){var n=this;n.indexIds=[],angular.forEach(e,function(e){angular.isString(e)&&t.validate(e)?n.indexIds.push(e):angular.isObject(e)&&t.validate(e.data.id)&&n.indexIds.push(e.data.id)})}function l(t){var e=this;return void 0!==e.data[t]&&(e.removed[t]=e.data[t],delete e.data[t],e.size-=1),e.removed[t]}function d(t){var e=this;return void 0!==e.removed[t]&&(e.data[t]=e.removed[t],delete e.removed[t],e.size+=1),e.data[t]}function h(t){var e=this;delete e.removed[t]}return n.prototype.get=s,n.prototype.index=c,n.prototype.setIndexIds=u,n.prototype.addOrUpdate=a,n.prototype.fromJson=r,n.prototype.toJson=o,n.prototype.clear=i,n.prototype.remove=l,n.prototype.revertRemove=d,n.prototype.clearRemoved=h,n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICache\",t),t.$inject=[\"uuid4\",\"$log\"]}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"lazyProperty\",function(t,e,n){var a,r;Object.defineProperty(t,e,{get:function(){return r||(r=!0,a=n.call(t)),a},enumerable:!0,configurable:!0})})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"toKebabCase\",function(t){return t.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase()})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$provide\",function(t){t.decorator(\"$q\",[\"$delegate\",function(t){var e=t;return e.allSettled=e.allSettled||function(t,n,a){function r(t){return e.resolve(t).then(function(t){return angular.isFunction(n)&&n(t),{success:!0,value:t}},function(t){return angular.isFunction(a)&&a(t),{success:!1,reason:t}})}var o=angular.isArray(t)?[]:{};return angular.forEach(t,function(t,e){o.hasOwnProperty(e)||(o[e]=r(t))}),e.all(o)},e}])}])}(),function(){\"use strict\";function t(t,e,n){function a(e){var n=this;n.state={},t.call(n,e),angular.forEach(e,function(t){t.synchronizer=n})}function r(a){function r(t){d.notify({step:\"synchronization\",data:t})}function o(t){d.notify({step:\"synchronization\",errors:t})}function i(t){u.state[h]=u.state[h]||{},u.state[h].success=!0,angular.forEach(t,function(t){t.success===!1&&(u.state[h].success=!1)}),angular.forEach(u.synchronizations,function(e){angular.forEach(e.afterHooks[h],function(e){d.notify({step:\"after\",errors:e.call(u,a,t)})})});var e,n=[];angular.forEach(t,function(t){t.success===!0?e=t.value:n.push(t.reason)}),n.length>0?d.reject({data:e,finish:s,errors:n}):d.resolve({data:e,finish:s,errors:n})}function s(){angular.forEach(u.synchronizations,function(t){angular.forEach(t.finishHooks[h],function(t){d.notify({step:\"finish\",errors:t.call(u,a)})})})}function c(t){n.error(\"All settled rejected! Something went wrong\"),d.reject({finish:angular.noop,errors:t})}var u=this,l=[],d=e.defer(),h=a.action;return t.prototype.synchronize.call(u,a),angular.forEach(u.synchronizations,function(t){angular.forEach(t.beginHooks[h],function(t){d.notify({step:\"begin\",data:t.call(u,a)})})}),angular.forEach(u.synchronizations,function(t){angular.forEach(t.beforeHooks[h],function(t){d.notify({step:\"before\",data:t.call(u,a)})})}),angular.forEach(u.synchronizations,function(t){angular.forEach(t.synchronizationHooks[h],function(t){l.push(t.call(u,a))})}),e.allSettled(l,r,o).then(i,c),d.promise}return a.prototype=Object.create(t.prototype),a.prototype.constructor=a,a.prototype.synchronize=r,a}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerSimple\",t),t.$inject=[\"AngularJsonAPISynchronizerPrototype\",\"$q\",\"$log\"]}(),function(){\"use strict\";function t(t){function e(t){var e=this;e.synchronizations=t}function n(e){var n=this;t.debug(\"Synchro Collection\",n.factory.Model.prototype.schema.type,e),void 0===e.action&&t.error(\"Can't synchronize undefined action\",e)}return e.prototype.synchronize=n,e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerPrototype\",t),t.$inject=[\"$log\"]}(),function(){\"use strict\";function t(t,e,n,a,r){function o(n){function o(t){return r({method:\"GET\",headers:y,url:n,params:t.params||{}}).then(h,p)}function i(t){return r({method:\"GET\",headers:y,url:n+\"/\"+t.object.data.id,params:t.params||{}}).then(h,p)}function s(t){return r({method:\"DELETE\",headers:y,url:n+\"/\"+t.object.data.id}).then(h,p)}function c(t){var e=a.defer(),o=t.object.schema.relationships[t.key];return t.object.removed===!0?e.reject({errors:[{status:0,statusText:\"Object has been removed\"}]}):void 0!==t.target&&void 0===t.target.data.id?e.reject({errors:[{status:0,statusText:\"Can't unlink object without id through rest call\"}]}):\"hasOne\"===o.type?r({method:\"DELETE\",headers:y,url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(h,p).then(e.resolve,e.reject):\"hasMany\"===o.type&&(void 0===t.target?r({method:\"PUT\",headers:y,data:{data:[]},url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(h,p).then(e.resolve,e.reject):r({method:\"DELETE\",headers:y,url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key+\"/\"+t.target.data.id}).then(h,p).then(e.resolve,e.reject)),e.promise}function u(t){var o=a.defer(),i=t.object.schema.relationships[t.key];return t.object.removed===!0?o.reject({errors:[{status:0,statusText:\"Object has been removed\"}]}):void 0===t.target||void 0===t.target.data.id?o.reject({errors:[{status:0,statusText:\"Can't link object without id through rest call\"}]}):\"hasOne\"===i.type?r({method:\"PUT\",headers:y,data:{data:e.toLinkData(t.target)},url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(h,p).then(o.resolve,o.reject):\"hasMany\"===i.type&&r({method:\"POST\",headers:y,data:{data:[e.toLinkData(t.target)]},url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(h,p).then(o.resolve,o.reject),o.promise}function l(t){return r({method:\"PUT\",headers:y,url:n+\"/\"+t.object.data.id,data:t.object.form.toJson()}).then(h,p)}function d(t){return r({method:\"POST\",headers:y,url:n+\"/\",data:t.object.form.toJson()}).then(h,p)}function h(t){return a.resolve(t.data)}function p(t){function e(){o.reject({status:t.status,statusText:\"Server is offline\"})}function n(){o.reject({status:t.status,statusText:\"No internet connection\"})}var o=a.defer();return 0===t.status?r({method:\"GET\",url:\"https://status.cloud.google.com/incidents.schema.json\"}).then(e,n):o.reject({status:t.status,statusText:t.statusText}),o.promise}var f=this,y={Accept:\"application/vnd.api+json\",\"Content-Type\":\"application/vnd.api+json\"};t.call(f),f.synchronization(\"remove\",s),f.synchronization(\"unlink\",c),f.synchronization(\"link\",u),f.synchronization(\"update\",l),f.synchronization(\"add\",d),f.synchronization(\"all\",o),f.synchronization(\"get\",i),f.synchronization(\"refresh\",i)}return o.prototype=Object.create(t.prototype),o.prototype.constructor=o,o}angular.module(\"angular-jsonapi-rest\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationRest\",t),t.$inject=[\"AngularJsonAPISynchronizationPrototype\",\"AngularJsonAPIModelLinkerService\",\"toKebabCase\",\"$q\",\"$http\"]}(),function(){\"use strict\";function t(){function t(){var t=this,e=[\"add\",\"init\",\"get\",\"all\",\"clearCache\",\"remove\",\"unlink\",\"unlinkReflection\",\"link\",\"linkReflection\",\"update\",\"refresh\",\"include\"];t.state={},t.beginHooks={},t.beforeHooks={},t.synchronizationHooks={},t.afterHooks={},t.finishHooks={},t.options={},angular.forEach(e,function(e){t.beginHooks[e]=[],t.beforeHooks[e]=[],t.synchronizationHooks[e]=[],t.afterHooks[e]=[],t.finishHooks[e]=[],t.state[e]={loading:!1,success:!0}})}function e(t,e){var n=this;n.beginHooks[t].push(e)}function n(t,e){var n=this;n.finishHooks[t].push(e)}function a(t,e){var n=this;n.beforeHooks[t].push(e)}function r(t,e){var n=this;n.afterHooks[t].push(e)}function o(t,e){var n=this;n.synchronizationHooks[t].push(e)}return t.prototype.before=a,t.prototype.after=r,t.prototype.begin=e,t.prototype.finish=n,t.prototype.synchronization=o,t}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizationPrototype\",t)}(),function(){\"use strict\";function t(t,e,n){function a(a){function r(){var t=s.synchronizer.factory.schema.type;return n.resolve(e.localStorage.getItem(a+\".\"+t))}function o(){var t=s.synchronizer.factory.schema.type;e.localStorage.removeItem(a+\".\"+t)}function i(){var t=s.synchronizer.factory.schema.type,n=s.synchronizer.factory.cache;e.localStorage.setItem(a+\".\"+t,n.toJson())}var s=this;a=a||\"AngularJsonAPI\",s.__updateStorage=i,t.call(s),s.synchronization(\"init\",r),s.begin(\"clearCache\",o),s.begin(\"remove\",i),s.begin(\"refresh\",i),s.begin(\"unlink\",i),s.begin(\"unlinkReflection\",i),s.begin(\"link\",i),s.begin(\"linkReflection\",i),s.begin(\"update\",i),s.begin(\"add\",i),s.begin(\"get\",i),s.begin(\"all\",i),s.begin(\"include\",i),s.finish(\"init\",i),s.finish(\"clearCache\",i),s.finish(\"remove\",i),s.finish(\"refresh\",i),s.finish(\"unlink\",i),s.finish(\"unlinkReflection\",i),s.finish(\"link\",i),s.finish(\"linkReflection\",i),s.finish(\"update\",i),s.finish(\"add\",i),s.finish(\"get\",i),s.finish(\"all\",i),s.finish(\"include\",i)}return a.prototype=Object.create(t.prototype),a.prototype.constructor=a,a}angular.module(\"angular-jsonapi-local\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationLocal\",t),t.$inject=[\"AngularJsonAPISynchronizationPrototype\",\"$window\",\"$q\"]}(),function(){\"use strict\";function t(t,e,n){function a(t){var e=this,a=t.include||{};t.include=a,a.get=t.include.get||[],a.all=t.include.all||[],e.params={get:{},all:{}},angular.forEach(t.relationships,function(e,r){var o=new n(e,r,t.type);t.relationships[r]=o,o.included===!0&&(a.get.push(r),\"hasOne\"===o.type&&a.all.push(r))}),angular.extend(e,t),a.get.length>0&&(e.params.get.include=a.get.join(\",\")),a.all.length>0&&(e.params.all.include=a.all.join(\",\"))}return a}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchema\",t),t.$inject=[\"$log\",\"pluralize\",\"AngularJsonAPISchemaLink\"]}(),function(){\"use strict\";function t(t,e){function n(n,a,r){var o=this;angular.isString(n)?(o.model=e.plural(a),o.type=n,o.polymorphic=!1,o.reflection=r):(void 0===n.type&&t.error(\"Schema of link without a type: \",n,a),\"hasMany\"!==n.type&&\"hasOne\"!==n.type&&t.error(\"Schema of link with wrong type: \",n.type,\"available: hasOne, hasMany\"),o.model=n.model||e.plural(a),o.type=n.type,o.polymorphic=n.polymorphic||!1,o.reflection=void 0===n.reflection?\"hasMany\"===o.type?e.singular(r):r:n.reflection,o.included=n.included||!1)}return n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchemaLink\",t),t.$inject=[\"$log\",\"pluralize\"]}(),function(){\"use strict\";function t(t,e,n){function a(e,a){var r=function(e,a,r){var o=this;e.type!==o.schema.type&&n.error(\"Data type other then declared in schema: \",e.type,\" instead of \",o.schema.type),t.call(o,e,a,r),o.form.parent=o};return r.prototype=Object.create(t.prototype),r.prototype.constructor=r,r.prototype.schema=e,r.prototype.factory=a,r.prototype.synchronize=a.synchronizer.synchronize.bind(a.synchronizer),angular.forEach(e.functions,function(t,e){r.prototype[e]=function(){return t.apply(this,arguments)}}),r}return{model:a}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModel\",t),t.$inject=[\"AngularJsonAPIAbstractModel\",\"AngularJsonAPISchema\",\"$log\"]}(),function(){\"use strict\";function t(t,e,n,a,r,o,i,s){function c(a,r){function i(t){o.$emit(\"angularJsonAPI:\"+u.type+\":factory:init\",\"resolved\",t),u.cache.fromJson(t.data),u.initialized=!0,t.finish()}function s(t){o.$emit(\"angularJsonAPI:\"+u.type+\":factory:init\",\"rejected\",t),t.finish(),u.initialized=!0}function c(t){o.$emit(\"angularJsonAPI:\"+u.type+\":factory:init\",\"notify\",t)}var u=this,l={action:\"init\"};u.schema=new e(a),u.cache=new n(u),u.synchronizer=r,u.synchronizer.factory=u,u.Model=t.model(u.schema,u),u.initialized=!1,u.type=u.schema.type,r.factory=u,u.synchronizer.synchronize(l).then(i,s,c)}function u(t){var e=this;if(!r.validate(t))return s.reject({errors:[{status:0,statusText:\"Invalid id not uuid4\"}]});var n=e.cache.get(t);return n.refresh(),n}function l(t){var e=this;t=t||{};var n=new a(e,angular.extend(t,e.schema.params.all));return n.fetch(),n}function d(t){var e=this,n=e.cache.remove(t);return n.remove()}function h(t,e){var n=this,a={};if(angular.forEach(n.schema.relationships,function(t,e){\"hasOne\"===t.type?a[e]={data:null}:\"hasMany\"===t.type&&(a[e]={data:[]})}),void 0!==t&&void 0!==e){var s=n.schema[t];\"hasOne\"===s.type?a[t]={data:e.data.id}:\"hasMany\"===s.type&&i.warn(\"Initialize with relationship disallowed for hasMany relationships\")}var c={type:n.type,id:r.generate(),attributes:{},relationships:a},u={saved:!1,\"synchronized\":!1,stable:!1,pristine:!1,initialization:!1},l=n.cache.addOrUpdate(c,u);return o.$emit(\"angularJsonAPI:\"+n.type+\":factory:initialize\",\"resolved\",l),l}function p(){function t(t){o.$emit(\"angularJsonAPI:\"+a.type+\":factory:clearCache\",\"resolved\",t),t.finish(),r.resolve(t)}function e(t){o.$emit(\"angularJsonAPI:\"+a.type+\":factory:clearCache\",\"resolved\",t),t.finish(),r.reject(t)}function n(t){o.$emit(\"angularJsonAPI:\"+a.type+\":factory:clearCache\",\"notify\",t),r.notify(t)}var a=this,r=s.defer(),i={action:\"clearCache\"};return a.cache.clear(),a.synchronizer.synchronize(i).then(t,e,n),r}return c.prototype.get=u,c.prototype.all=l,c.prototype.remove=d,c.prototype.initialize=h,c.prototype.clearCache=p,c}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIFactory\",t),t.$inject=[\"AngularJsonAPIModel\",\"AngularJsonAPISchema\",\"AngularJsonAPICache\",\"AngularJsonAPICollection\",\"uuid4\",\"$rootScope\",\"$log\",\"$q\"]}(),function(){\"use strict\";function t(t,a,r){function o(e,n){function a(t,e,n){var a;\"resolved\"===e&&void 0!==i.data&&(a=i.data.indexOf(n),a>-1&&(i.data.splice(a,1),i.factory.cache.setIndexIds(i.data)))}function r(){i.data=void 0,i.pristine=!0}function o(t,e,n,a,r){r===!0&&\"resolved\"===e&&(i.data=i.data||[],i.data.push(n))}var i=this;i.factory=e,i.type=e.schema.type,i.params=n,i.errors={synchronization:{name:\"Synchronization\",description:\"Errors during synchronization\",errors:[]}},i.data=i.factory.cache.index(i.params),i.error=!1,i.loading=!1,i.loadingCount=0,i[\"synchronized\"]=!1,i.pristine=void 0===i.data,t.$on(\"angularJsonAPI:\"+i.type+\":object:remove\",a),t.$on(\"angularJsonAPI:\"+i.type+\":factory:clearCache\",r),t.$on(\"angularJsonAPI:\"+i.type+\":factory:add\",o)}function i(t){var e=this;return e.factory.get(t)}function s(){function o(a){function o(t){return e.bind(t),t.synchronize({action:\"include\",object:t})[\"finally\"](n.bind(t))}function i(e){angular.forEach(e,function(e,n){e.success===!0&&(t.$emit(\"angularJsonAPI:\"+s.included[n].data.type+\":object:include\",\"resolved\",s.included[n],e),e.value.finish())}),u.resolve(a)}var s=l.proccesResults(a.data);t.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"resolved\",c,a),r.allSettled(s.included.map(o)).then(i,u.reject),angular.forEach(c.data,n),c.data=s.data,c.errors.synchronization.errors=[],c.error=!1,c.updatedAt=Date.now(),c[\"synchronized\"]=!0,c.factory.cache.setIndexIds(c.data),a.finish(),u.resolve(c)}function i(e){t.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"rejected\",c,e),angular.forEach(c.data,n),c.errors.synchronization.errors=e.errors,c.error=!0,e.finish(),u.reject(e)}function s(e){t.$emit(\"angularJsonAPI:\"+c.type+\":collection:fetch\",\"notify\",c,e),u.notify(e)}var c=this,u=r.defer(),l=a.get(\"$jsonapi\"),d={action:\"all\",params:c.params};return e(this),angular.forEach(c.data,e),c.factory.synchronizer.synchronize(d).then(o,i,s)[\"finally\"](n.bind(c)),u.promise}return o.prototype.fetch=s,o.prototype.refresh=s,o.prototype.get=i,o}function e(t){t=void 0===t?this:t,t.loadingCount+=1,t.loading=!0}function n(t){t=void 0===t?this:t,t.loadingCount-=1,t.loading=t.loadingCount>0}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICollection\",t),t.$inject=[\"$rootScope\",\"$injector\",\"$q\"]}(),function(){\"use strict\";function t(){function t(t,a){function r(){return e}function o(){return n}function i(t,r){var o=new a(t,r);e[t.type]=o,n.push(t.type)}function s(t){return e[t]}function c(n){return void 0===e[n]&&t.error(\"Can\t add not existing object type: \"+n+\". Use initialize(Model, datas).\"),e[n].saved.form}function u(n,a){return void 0===e[n]&&t.error(\"Can\t get not existing object type: \"+n+\". Use initialize(Model, datas).\"),e[n].get(a)}function l(n,a){return void 0===e[n]&&t.error(\"Can\t remove not existing object type: \"+n+\". Use initialize(Model, datas).\"),e[n].remove(a)}function d(n){return void 0===e[n]&&t.error(\"Can\t get all of not existing object type: \"+n+\". Use initialize(Model, datas).\"),e[n].all()}function h(){angular.forEach(e,function(t){t.clearCache()})}function p(e){var n={data:[],included:[]};void 0===e&&t.error(\"Can't proccess results:\",e);var a={saved:!0,\"synchronized\":!0,stable:!0,pristine:!1,initialization:!1};return angular.forEach(e.included,function(t){n.included.push(s(t.type).cache.addOrUpdate(t,a))}),angular.isArray(e.data)?angular.forEach(e.data,function(t){n.data.push(s(t.type).cache.addOrUpdate(t,a))}):n.data.push(s(e.data.type).cache.addOrUpdate(e.data,a)),n}return{form:c,get:u,remove:l,all:d,addFactory:i,getFactory:s,clearCache:h,proccesResults:p,allFactories:r,factoriesNames:o\n}}var e={},n=[];this.$get=t,t.$inject=[\"$log\",\"AngularJsonAPIFactory\"]}angular.module(\"angular-jsonapi\").provider(\"$jsonapi\",t)}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$logProvider\",function(t){t.debugEnabled(!1)}]).run([\"validateJS\",\"$q\",function(t,e){t.Promise=e}])}();\n//# sourceMappingURL=angular-jsonapi.min.js.map","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidationErrors,\n    AngularJsonAPIModelLinkerService,\n    validateJS,\n    $q\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return AngularJsonAPIModelForm;\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        id: parent.data.id,\n        type: parent.data.type,\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset(auto) {\n      var _this = this;\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = angular.copy(_this.parent.data.relationships[key]) || {};\n        if (angular.isArray(_this.relationships[key])) {\n          _this.relationships[key] = _this.parent.relationships[key].slice();\n        } else {\n          _this.relationships[key] = _this.parent.relationships[key];\n        }\n      });\n\n      if (auto === true && _this.parent.synchronized === true) {\n        return;\n      }\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        _this.data.attributes[key] = angular.copy(_this.parent.data.attributes[key]);\n      });\n\n      _this.errors = {\n        validation: {}\n      };\n    }\n\n    /**\n     * Validates form\n     * @return {promise} Promise rejected to errors object indexed by keys. If the\n     * key param i stated it only validates an attribute, else all attributes.\n     */\n    function validate(key) {\n      var _this = this;\n      var attributesWrapper;\n      var constraintsWrapper;\n      var deferred = $q.defer();\n\n      if (key === undefined) {\n        attributesWrapper = _this.data.attributes;\n        constraintsWrapper = _this.schema.attributes;\n      } else {\n        attributesWrapper = {};\n        constraintsWrapper = {};\n\n        attributesWrapper[key] = _this.data.attributes[key];\n        constraintsWrapper[key] = _this.schema.attributes[key];\n      }\n\n      validateJS.async(\n        attributesWrapper,\n        constraintsWrapper,\n        {wrapErrors: AngularJsonAPIModelValidationErrors}\n      ).then(resolve, reject);\n\n      function resolve() {\n        // TODO make it better\n        if (key === undefined) {\n          _this.parent.errors.validation = {};\n          _this.parent.error = false;\n        } else {\n          _this.parent.errors.validation[key] = [];\n          _this.parent.error = false;\n        }\n\n        deferred.resolve();\n      }\n\n      function reject(errorsWrapper) {\n        _this.parent.error = true;\n        angular.extend(_this.parent.errors.validation, errorsWrapper.errors);\n\n        deferred.reject(errorsWrapper);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target) {\n      var _this = this;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.link(_this, key, target, true));\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target) {\n      var _this = this;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.unlink(_this, key, target, true));\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelForm,\n    AngularJsonAPIModelLinkerService,\n    uuid4,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {object} config   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, config, updatedAt) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      /**\n       * Is not a new record\n       * @type {Boolean}\n       */\n      _this.saved = config.saved === undefined ? true : config.saved;\n\n      /**\n       * Is present on the server\n       * @type {Boolean}\n       */\n      _this.stable = config.stable === undefined ? true : config.stable;\n\n      /**\n       * Has been synchronized with the server\n       * @type {Boolean}\n       */\n      _this.synchronized = config.synchronized === undefined ? true : config.synchronized;\n\n      /**\n       * Has just been created by request and may not exist on the server\n       * @type {Boolean}\n       */\n      _this.pristine = config.pristine === undefined ? true : config.pristine;\n\n      _this.removed = false;\n      _this.error = false;\n      _this.loading = false;\n      _this.saving = false;\n      _this.updatedAt = _this.synchronized === true ? Date.now() : updatedAt;\n\n      _this.loadingCount = 0;\n      _this.savingCount = 0;\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(schema, name) {\n        _this.relationships[name] = undefined;\n      });\n\n      _this.errors = {\n        validation: {},\n        synchronization: {}\n      };\n\n      _this.promises = {};\n\n      __setData(_this, data);\n\n      _this.form = new AngularJsonAPIModelForm(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save(addToIndex) {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: _this.saved === false ? 'add' : 'update',\n        object: _this\n      };\n\n      addToIndex = addToIndex === undefined ? true : addToIndex;\n\n      _this.form.validate().then(\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this)),\n        invalidate\n      );\n\n      __incrementSavingCounter(_this);\n\n      return deferred.promise;\n\n      function invalidate() {\n        __decrementSavingCounter(_this);\n        deferred.reject();\n      }\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:' + config.action, 'resolved', _this, response, addToIndex);\n        _this.update(_this.form.data);\n\n        if (_this.saved === false && addToIndex === true) {\n          _this.factory.cache.indexIds = _this.factory.cache.indexIds || [];\n          _this.factory.cache.indexIds.push(_this.data.id);\n        }\n\n        _this.synchronized = true;\n        _this.saved = true;\n        _this.stable = true;\n\n        response.finish();\n\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'rejected', _this, response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      if (_this.form !== undefined) {\n        _this.form.reset();\n      }\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh() {\n      var $jsonapi = $injector.get('$jsonapi');\n      var deferred = $q.defer();\n      var _this = this;\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: _this.schema.params.get\n      };\n\n      if (_this.saved === false) {\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t refresh new object'}]});\n      } else {\n        __incrementLoadingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(_this));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        response.finish();\n        _this.synchronized = true;\n        _this.stable = true;\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter.bind(object);\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'rejected', _this, response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      var config = {\n        action: 'remove',\n        object: _this\n      };\n\n      _this.factory.cache.remove(_this.data.id);\n\n      if (_this.saved === false) {\n        deferred.resolve();\n      } else {\n        __incrementSavingCounter.bind(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'resolved', _this, response);\n        _this.removed = true;\n        _this.unlinkAll();\n        _this.factory.cache.clearRemoved(_this.data.id);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'rejected', _this, response);\n        _this.factory.cache.revertRemove(_this.data.id);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlink all reflection relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      __incrementLoadingCounter(_this);\n\n      if (key === undefined) {\n        angular.forEach(_this.relationships, removeLink);\n      } else {\n        removeLink(_this.relationships[key], key);\n      }\n\n      __decrementLoadingCounter(_this);\n\n      return deferred.promise;\n\n      function removeLink(linksObj, key) {\n        var schema = _this.schema.relationships[key];\n        var reflectionKey = schema.reflection;\n\n        if (angular.isArray(linksObj)) {\n          angular.forEach(linksObj, removeReflectionLink.bind(undefined, reflectionKey));\n        } else if (angular.isObject(linksObj)) {\n          removeReflectionLink(reflectionKey, linksObj);\n        }\n\n        if (schema.type === 'hasOne') {\n          _this.relationships[key] = null;\n        } else if (schema.type === 'hasMany') {\n          _this.relationships[key] = [];\n        }\n      }\n\n      function removeReflectionLink(reflectionKey, target) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n        var config = {\n          action: 'unlinkReflection',\n          object: target,\n          target: _this,\n          key: reflectionKey\n        };\n\n        __incrementLoadingCounter(target);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        target.synchronize(config)\n          .then(resolve, reject, notify)\n          .__decrementLoadingCounter.bind(target);\n\n        function resolve(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'resolve', _this, response);\n\n          response.finish();\n          deferred.resolve(_this);\n        }\n\n        function reject(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'rejected', _this, response);\n\n          response.finish();\n          deferred.reject(response);\n        }\n\n        function notify(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var config = {\n        action: 'link',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        $log.error('Can\\'t link undefined');\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link undefined'}]});\n      } else if (_this.saved === false) {\n        $log.error('Can\\'t link new object');\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link new object'}]});\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        response.finish();\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'linkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:linkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked if undefined unlinks all\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var config = {\n        action: 'unlink',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t unlink undefined'}]});\n      } else if (_this.saved === false) {\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t unlink new object'}]});\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        response.finish();\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'unlinkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:unlinkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve(_this);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData, auto, initialization) {\n      var _this = this;\n\n      __incrementLoadingCounter(_this);\n\n      __setData(_this, validatedData);\n      _this.reset(auto);\n      _this.synchronized = initialization === true ? false : true;\n      _this.stable = initialization === true ? false : true;\n      _this.updatedAt = Date.now();\n\n      __decrementLoadingCounter(_this);\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData) {\n\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.factory.schema.type !== validatedData.type) {\n        $log.error('Different type then factory', object.factory.schema.type, validatedData);\n        return false;\n      }\n\n      if (!uuid4.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        var relationshipData = validatedData.relationships[key];\n\n        if (relationshipData === undefined) {\n          object.data.relationships[key] = {data: undefined};\n          return;\n        }\n\n        object.data.relationships[key] = object.data.relationships[key] || {};\n        object.data.relationships[key].links = relationshipData.links;\n\n        if (schema.type === 'hasOne') {\n          linkOne(object, key, relationshipData.data);\n        } else if (schema.type === 'hasMany') {\n          if (angular.isArray(relationshipData.data)) {\n            if (relationshipData.data.length === 0) {\n              object.data.relationships[key].data = [];\n              object.unlinkAll(key);\n            } else {\n              angular.forEach(\n                object.relationships[key],\n                unlinkOne.bind(undefined, object, key, relationshipData.data)\n              );\n              angular.forEach(\n                relationshipData.data,\n                linkOne.bind(undefined, object, key)\n              );\n            }\n          }\n        }\n      }\n\n      function linkOne(object, key, data) {\n        var factory;\n\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        factory = $jsonapi.getFactory(data.type);\n\n        if (factory === undefined) {\n          $log.error('Factory not found', data.type, data);\n          return;\n        }\n\n        var target = factory.cache.get(data.id);\n\n        AngularJsonAPIModelLinkerService.link(object, key, target);\n      }\n\n      function unlinkOne(object, key, relationshipData, target) {\n        if (relationshipData.indexOf(target.data.id) > -1) {\n          return;\n        }\n\n        AngularJsonAPIModelLinkerService.unlink(object, key, target);\n      }\n    }\n  }\n\n  /////////////\n  // Private //\n  /////////////\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n\n  function __incrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount += 1;\n    object.saving = true;\n  }\n\n  function __decrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount -= 1;\n    object.saving = object.savingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICache', AngularJsonAPICacheWrapper);\n\n  function AngularJsonAPICacheWrapper(\n    uuid4,\n    $log\n  ) {\n\n    AngularJsonAPICache.prototype.get = get;\n    AngularJsonAPICache.prototype.index = index;\n    AngularJsonAPICache.prototype.setIndexIds = setIndexIds;\n    AngularJsonAPICache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPICache.prototype.fromJson = fromJson;\n    AngularJsonAPICache.prototype.toJson = toJson;\n    AngularJsonAPICache.prototype.clear = clear;\n\n    AngularJsonAPICache.prototype.remove = remove;\n    AngularJsonAPICache.prototype.revertRemove = revertRemove;\n    AngularJsonAPICache.prototype.clearRemoved = clearRemoved;\n\n    return AngularJsonAPICache;\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPICache(factory) {\n      var _this = this;\n\n      _this.factory = factory;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n\n      _this.indexIds = undefined;\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData, config) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.factory.Model(validatedData, config);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData, config.saved, config.initialization);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      var config = {\n        saved: true,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: true\n      };\n\n      if (angular.isObject(collection) && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n        _this.indexIds = collection.indexIds;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, config, objectData.updatedAt);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: [],\n        updatedAt: _this.updatedAt,\n        indexIds: _this.indexIds\n      };\n\n      angular.forEach(_this.data, function(object) {\n        if (object.error === false) {\n          json.data.push(object.toJson());\n        }\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.indexIds = undefined;\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      var data = {\n        id: id,\n        type: _this.factory.Model.prototype.schema.type\n      };\n\n      var config = {\n        saved: true,\n        synchronized: false,\n        stable: false,\n        pristine: true\n      };\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.factory.Model(data, config);\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization, used for index requests\n     * @param  {objec} params\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function index(params) {\n      var _this = this;\n\n      $log.debug('Unused params', params);\n\n      if (_this.indexIds === undefined) {\n        return _this.indexIds;\n      }\n\n      return _this.indexIds.map(_this.get.bind(_this));\n    }\n\n    /**\n     * Cache ids of objects returned by index request\n     * @param {ids array or AngularJsonAPIModel array} array Objects or ids to be cached\n     */\n    function setIndexIds(array) {\n      var _this = this;\n\n      _this.indexIds = [];\n\n      angular.forEach(array, function(element) {\n        if (angular.isString(element) && uuid4.validate(element)) {\n          _this.indexIds.push(element);\n        } else if (angular.isObject(element) && uuid4.validate(element.data.id)) {\n          _this.indexIds.push(element.data.id);\n        }\n      });\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises, resolvedCallback, rejectedCallback) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.resolve(promise)\n            .then(function(value) {\n              if (angular.isFunction(resolvedCallback)) {\n                resolvedCallback(value);\n              }\n\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              if (angular.isFunction(rejectedCallback)) {\n                rejectedCallback(reason);\n              }\n\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerSimple;\n\n    function AngularJsonAPISynchronizerSimple(synchronizations) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, synchronizations);\n\n      angular.forEach(synchronizations, function(synchronization) {\n        synchronization.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push(result.reason);\n          }\n        });\n\n        if (errors.length > 0) {\n          deferred.reject({data: data, finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(synchronizations) {\n      var _this = this;\n\n      _this.synchronizations = synchronizations;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.factory.Model.prototype.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationRest', AngularJsonAPISynchronizationRestWrapper);\n\n  function AngularJsonAPISynchronizationRestWrapper(\n    AngularJsonAPISynchronizationPrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISynchronizationRest.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationRest.prototype.constructor = AngularJsonAPISynchronizationRest;\n\n    return AngularJsonAPISynchronizationRest;\n\n    function AngularJsonAPISynchronizationRest(url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISynchronizationPrototype.call(_this);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target !== undefined && config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t unlink object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          if (config.target === undefined) {\n            $http({\n              method: 'PUT',\n              headers: headers,\n              data: {data: []},\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key\n            }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n          } else {\n            $http({\n              method: 'DELETE',\n              headers: headers,\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key + '/' + config.target.data.id\n            }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n          }\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target === undefined || config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'PUT',\n            headers: headers,\n            data: {data: AngularJsonAPIModelLinkerService.toLinkData(config.target)},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          $http({\n            method: 'POST',\n            headers: headers,\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        return $http({\n          method: 'PUT',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url + '/',\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function resolveHttp(response) {\n        return $q.resolve(response.data);\n      }\n\n      function rejectHttp(response) {\n        var deferred = $q.defer();\n\n        if (response.status === 0) {\n          $http({\n            method: 'GET',\n            url: 'https://status.cloud.google.com/incidents.schema.json'\n          }).then(rejectServerOffline, rejectNoConnection);\n        } else {\n          deferred.reject({status: response.status, statusText: response.statusText});\n        }\n\n        return deferred.promise;\n\n        function rejectServerOffline() {\n          deferred.reject({status: response.status, statusText: 'Server is offline'});\n        }\n\n        function rejectNoConnection() {\n          deferred.reject({status: response.status, statusText: 'No internet connection'});\n        }\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizationPrototype', AngularJsonAPISynchronizationPrototypeWrapper);\n\n  function AngularJsonAPISynchronizationPrototypeWrapper() {\n    AngularJsonAPISynchronizationPrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.after = afterSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.begin = begin;\n    AngularJsonAPISynchronizationPrototype.prototype.finish = finish;\n    AngularJsonAPISynchronizationPrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISynchronizationPrototype;\n\n    function AngularJsonAPISynchronizationPrototype() {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clearCache',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh',\n        'include'\n      ];\n\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationLocal', AngularJsonAPISynchronizationLocalWrapper);\n\n  function AngularJsonAPISynchronizationLocalWrapper(\n    AngularJsonAPISynchronizationPrototype,\n    $window,\n    $q\n  ) {\n\n    AngularJsonAPISynchronizationLocal.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationLocal.prototype.constructor = AngularJsonAPISynchronizationLocal;\n\n    return AngularJsonAPISynchronizationLocal;\n\n    function AngularJsonAPISynchronizationLocal(prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISynchronizationPrototype.call(_this);\n\n      _this.synchronization('init', init);\n\n      _this.begin('clearCache', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('refresh', updateStorage);\n      _this.begin('unlink', updateStorage);\n      _this.begin('unlinkReflection', updateStorage);\n      _this.begin('link', updateStorage);\n      _this.begin('linkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.begin('get', updateStorage);\n      _this.begin('all', updateStorage);\n      _this.begin('include', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clearCache', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('refresh', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n      _this.finish('include', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.factory.schema.type;\n        return $q.resolve($window.localStorage.getItem(prefix + '.' + type));\n      }\n\n      function clear() {\n        var type = _this.synchronizer.factory.schema.type;\n        $window.localStorage.removeItem(prefix + '.' + type);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.factory.schema.type;\n        var cache = _this.synchronizer.factory.cache;\n        $window.localStorage.setItem(prefix + '.' + type, cache.toJson());\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper($log, pluralize, AngularJsonAPISchemaLink) {\n\n    return AngularJsonAPISchema;\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = new AngularJsonAPISchemaLink(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get.join(',');\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all.join(',');\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchemaLink', AngularJsonAPILinkSchrapperLink);\n\n  function AngularJsonAPILinkSchrapperLink($log, pluralize) {\n\n    return AngularJsonAPISchemaLink;\n\n    function AngularJsonAPISchemaLink(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        if (linkSchema.type !== 'hasMany' && linkSchema.type !== 'hasOne') {\n          $log.error('Schema of link with wrong type: ', linkSchema.type, 'available: hasOne, hasMany');\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n\n        if (linkSchema.reflection === undefined) {\n          _this.reflection = _this.type === 'hasMany' ? pluralize.singular(type) : type;\n        } else {\n          _this.reflection = linkSchema.reflection;\n        }\n\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(AngularJsonAPIAbstractModel, AngularJsonAPISchema, $log) {\n\n    return {\n      model: modelFactory\n    };\n\n    function modelFactory(schemaObj, factory) {\n      var Model = function(data, updatedAt, saved) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, updatedAt, saved);\n\n        _this.form.parent = _this;\n      };\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.factory = factory;\n      Model.prototype.synchronize = factory.synchronizer.synchronize.bind(factory.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return Model;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIFactory', AngularJsonAPIFactoryWrapper);\n\n  function AngularJsonAPIFactoryWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPICache,\n    AngularJsonAPICollection,\n    uuid4,\n    $rootScope,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIFactory.prototype.get = get;\n    AngularJsonAPIFactory.prototype.all = all;\n    AngularJsonAPIFactory.prototype.remove = remove;\n    AngularJsonAPIFactory.prototype.initialize = initialize;\n\n    AngularJsonAPIFactory.prototype.clearCache = clearCache;\n\n    return AngularJsonAPIFactory;\n\n    /**\n     * AngularJsonAPIFactory constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the factory\n     */\n    function AngularJsonAPIFactory(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = new AngularJsonAPISchema(schema);\n      _this.cache = new AngularJsonAPICache(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.factory = _this;\n\n      _this.Model = AngularJsonAPIModel.model(\n        _this.schema,\n        _this\n      );\n\n      _this.initialized = false;\n      _this.type = _this.schema.type;\n\n      synchronizer.factory = _this;\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'resolved', response);\n        _this.cache.fromJson(response.data);\n        _this.initialized = true;\n\n        response.finish();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'rejected', response);\n        response.finish();\n        _this.initialized = true;\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'notify', response);\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id) {\n      var _this = this;\n\n      if (!uuid4.validate(id)) {\n        return $q.reject({errors: [{status: 0, statusText: 'Invalid id not uuid4'}]});\n      }\n\n      var object = _this.cache.get(id);\n\n      object.refresh();\n\n      return object;\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = params || {};\n\n      var collection = new AngularJsonAPICollection(\n        _this,\n        angular.extend(params, _this.schema.params.all)\n      );\n\n      collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n\n      return object.remove();\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize(key, target) {\n      var _this = this;\n      var relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(relationshipSchema, relationshipName) {\n        if (relationshipSchema.type === 'hasOne') {\n          relationships[relationshipName] = {\n            data: null\n          };\n        } else if (relationshipSchema.type === 'hasMany') {\n          relationships[relationshipName] = {\n            data: []\n          };\n        }\n      });\n\n      if (key !== undefined && target !== undefined) {\n        var schema = _this.schema[key];\n\n        if (schema.type === 'hasOne') {\n          relationships[key] = {\n            data: target.data.id\n          };\n        } else if (schema.type === 'hasMany') {\n          $log.warn('Initialize with relationship disallowed for hasMany relationships');\n        }\n      }\n\n      var data = {\n        type: _this.type,\n        id: uuid4.generate(),\n        attributes: {},\n        relationships: relationships\n      };\n\n      var config = {\n        saved: false,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: false\n      };\n\n      var object = _this.cache.addOrUpdate(data, config);\n\n      $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:initialize', 'resolved', object);\n\n      return object;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clearCache() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: 'clearCache'\n      };\n\n      _this.cache.clear();\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clearCache', 'notify', response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    $rootScope,\n    $injector,\n    $q\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n\n    return AngularJsonAPICollection;\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIFactory} factory Factory associated with the collection\n     * @param {object} params  Params associated with this factory (such as filters)\n     */\n    function AngularJsonAPICollection(factory, params) {\n      var _this = this;\n\n      _this.factory = factory;\n      _this.type = factory.schema.type;\n      _this.params = params;\n\n      _this.errors = {\n        synchronization: {\n          name: 'Synchronization',\n          description: 'Errors during synchronization',\n          errors: []\n        }\n      };\n\n      _this.data = _this.factory.cache.index(_this.params);\n\n      _this.error = false;\n      _this.loading = false;\n      _this.loadingCount = 0;\n      _this.synchronized = false;\n      _this.pristine = _this.data === undefined;\n\n      $rootScope.$on('angularJsonAPI:' + _this.type + ':object:remove', remove);\n      $rootScope.$on('angularJsonAPI:' + _this.type + ':factory:clearCache', clear);\n      $rootScope.$on('angularJsonAPI:' + _this.type + ':factory:add', add);\n\n      function remove(event, status, object) {\n        var index;\n\n        if (status === 'resolved' && _this.data !== undefined) {\n          index = _this.data.indexOf(object);\n          if (index > -1) {\n            _this.data.splice(index, 1);\n            _this.factory.cache.setIndexIds(_this.data);\n          }\n        }\n      }\n\n      function clear() {\n        _this.data = undefined;\n        _this.pristine = true;\n      }\n\n      function add(event, status, object, response, addToIndex) {\n        if (addToIndex === true && status === 'resolved') {\n          _this.data = _this.data || [];\n          _this.data.push(object);\n        }\n      }\n    }\n\n    /**\n     * Shortcut to this.factory.get\n     * @param  {uuid4} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id) {\n      var _this = this;\n\n      return _this.factory.get(id);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var deferred = $q.defer();\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params\n      };\n\n      __incrementLoadingCounter(this);\n\n      angular.forEach(_this.data, __incrementLoadingCounter);\n\n      _this.factory.synchronizer.synchronize(config)\n        .then(resolve, reject, notify)\n        .finally(__decrementLoadingCounter.bind(_this));\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n\n        _this.data = results.data;\n        _this.errors.synchronization.errors = [];\n        _this.error = false;\n\n        _this.updatedAt = Date.now();\n        _this.synchronized = true;\n\n        _this.factory.cache.setIndexIds(_this.data);\n        response.finish();\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter.bind(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response);\n        }\n\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'rejected', _this, response);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n        _this.errors.synchronization.errors = response.errors;\n        _this.error = true;\n\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider() {\n    var memory = {};\n    var names = [];\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPIFactory) {\n      return {\n        form: form,\n        get: get,\n        remove: remove,\n        all: all,\n        addFactory: addFactory,\n        getFactory: getFactory,\n        clearCache: clearCache,\n        proccesResults: proccesResults,\n\n        allFactories: allFactories,\n        factoriesNames: factoriesNames\n      };\n\n      function allFactories() {\n        return memory;\n      }\n\n      function factoriesNames() {\n        return names;\n      }\n\n      function addFactory(schema, synchronization) {\n        var factory = new AngularJsonAPIFactory(schema, synchronization);\n\n        memory[schema.type] = factory;\n        names.push(schema.type);\n      }\n\n      function getFactory(type) {\n        return memory[type];\n      }\n\n      function form(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t add not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].saved.form;\n      }\n\n      function get(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].get(id);\n      }\n\n      function remove(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t remove not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].remove(id);\n      }\n\n      function all(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get all of not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].all();\n      }\n\n      function clearCache() {\n        angular.forEach(memory, function(factory) {\n          factory.clearCache();\n        });\n      }\n\n      function proccesResults(results) {\n        var objects = {\n          data: [],\n          included: []\n        };\n\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n        }\n\n        var config = {\n          saved: true,\n          synchronized: true,\n          stable: true,\n          pristine: false,\n          initialization: false\n        };\n\n        angular.forEach(results.included, function(data) {\n          objects.included.push(getFactory(data.type).cache.addOrUpdate(data, config));\n        });\n\n        if (angular.isArray(results.data)) {\n          angular.forEach(results.data, function(data) {\n            objects.data.push(getFactory(data.type).cache.addOrUpdate(data, config));\n          });\n        } else {\n          objects.data.push(getFactory(results.data.type).cache.addOrUpdate(results.data, config));\n        }\n\n        return objects;\n      }\n    }\n  }\n\n})();\n\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(function($logProvider) {\n    $logProvider.debugEnabled(false);\n  })\n  .run(function(validateJS, $q) {\n    validateJS.Promise = $q;\n  });\n})();\n"],"sourceRoot":"/source/"}