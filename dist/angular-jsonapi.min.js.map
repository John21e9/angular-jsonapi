{"version":3,"sources":["/source/jsonapi.module.js","/source/model/model-validator/model-validator.js","angular-jsonapi.min.js","/source/model/model-linker/model-linker.js","/source/model/model-form/model-form.js","/source/model/abstract-model/abstract-model.js","/source/factory/factory-cache/factory-cache.factory.js","/source/utils/lazy-property.js","/source/utils/kebab-case.js","/source/utils/all-settled.js","/source/synchronizers/synchronizer-simple.js","/source/synchronizers/synchronizer-prototype.js","/source/synchronizations/synchronization-rest.js","/source/synchronizations/synchronization-prototype.js","/source/synchronizations/synchronization-local.js","/source/schema/schema.js","/source/schema/schema-link.js","/source/model/model.js","/source/factory/factory.js","/source/collection/collection.js","/source/jsonapi.provider.js","/source/jsonapi.config.js"],"names":["angular","module","constant","pluralize","AngularJsonAPIModelValidatorService","$q","validateForm","schema","data","resolve","validateField","key","_this","this","service","$inject","AngularJsonAPIModelLinkerService","$log","toLinkData","object","type","id","link","target","oneWay","undefined","error","relationships","polymorphic","model","__addHasMany","__processAddHasMany","__addHasOne","__processAddHasOne","unlink","__removeHasMany","__processRemove","reflectionSchema","reflectionKey","reflection","__swapResults","__wrapResults","oldReflectionSchema","oldReflection","result","__removeHasOne","push","reset","debug","linkData","isArray","indexOf","index","splice","value","newValue","array","forEach","item","i","AngularJsonAPIModelFormWrapper","AngularJsonAPIModelForm","parent","attributes","toJson","copy","save","auto","slice","validator","errors","validation","validate","reject","erorrs","deferred","defer","then","promise","prototype","factory","AngularJsonAPIAbstractModelWrapper","uuid4","$rootScope","$injector","AngularJsonAPIAbstractModel","saved","synchronized","stable","removed","loadingCount","updatedAt","Date","now","name","promises","__setData","form","addToIndex","response","$emit","config","action","update","cache","indexIds","finish","notify","synchronize","refresh","synchronizeIncluded","resolveIncluded","includedResponse","operation","success","results","included","$jsonapi","proccesResults","allSettled","map","get","params","status","statusText","remove","unlinkAll","clearRemoved","revertRemove","removeLink","linksObj","removeReflectionLink","bind","isObject","console","log","resolveReflection","rejectReflection","notifyReflection","targets","validatedData","initialization","setAttributes","validators","setRelationships","relationshipData","links","linkOne","length","unlinkOne","getFactory","AngularJsonAPICacheWrapper","AngularJsonAPICache","size","addOrUpdate","Model","fromJson","json","collection","objectData","clear","warn","setIndexIds","element","isString","propertyName","callback","done","Object","defineProperty","call","enumerable","configurable","str","replace","toLowerCase","$provide","decorator","$delegate","resolvedCallback","rejectedCallback","wrap","isFunction","reason","wrapped","hasOwnProperty","all","AngularJsonAPISynchronizerSimpleWrapper","AngularJsonAPISynchronizerPrototype","AngularJsonAPISynchronizerSimple","synchronizations","state","synchronization","synchronizer","step","resolved","afterHooks","hook","finishHooks","rejected","noop","beginHooks","beforeHooks","synchronizationHooks","create","constructor","AngularJsonAPISynchronizerPrototypeWrapper","AngularJsonAPISynchronizationRestWrapper","AngularJsonAPISynchronizationPrototype","toKebabCase","$http","AngularJsonAPISynchronizationRest","url","method","headers","resolveHttp","rejectHttp","add","rejectServerOffline","rejectNoConnection","Accept","Content-Type","AngularJsonAPISynchronizationPrototypeWrapper","allHooks","options","hookName","loading","begin","beforeSynchro","afterSynchro","before","after","AngularJsonAPISynchronizationLocalWrapper","$window","AngularJsonAPISynchronizationLocal","prefix","init","localStorage","getItem","removeItem","updateStorage","setItem","__updateStorage","AngularJsonAPISchemaWrapper","AngularJsonAPISchemaLink","AngularJsonAPISchema","include","linkSchema","linkName","linkSchemaObj","extend","join","AngularJsonAPILinkSchrapperLink","plural","singular","AngularJsonAPIModel","modelFactory","schemaObj","functions","metaFunction","metaFunctionName","apply","arguments","AngularJsonAPIFactoryWrapper","AngularJsonAPICollection","AngularJsonAPIFactory","initialized","fetch","initialize","relationshipSchema","relationshipName","generate","clearCache","AngularJsonAPICollectionWrapper","event","description","$on","jsonapiProvider","jsonapiFactory","allFactories","memory","factoriesNames","names","addFactory","objects","$get","provider","$logProvider","debugEnabled"],"mappings":"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","file":"angular-jsonapi.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false */\n  .constant('pluralize', pluralize);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelValidatorService', AngularJsonAPIModelValidatorService);\n\n  function AngularJsonAPIModelValidatorService(\n    $q\n  ) {\n    var _this = this;\n    _this.validateForm = validateForm;\n    _this.validateField = validateField;\n\n    return this;\n\n    /**\n     * Validates form\n     * @param  {object} data Form data\n     * @return {object} Errors object indexed by keys\n     */\n    function validateForm(schema, data) {\n      var _this = this;\n\n      return $q.resolve({});\n    }\n\n    /**\n     * Validates single field\n     * @param  {string} key Field key\n     * @return {array}     Errors array\n     */\n    function validateField(schema, key) {\n      var _this = this;\n\n      return $q.resolve([]);\n    }\n\n    // function __validate(validator, attributeValue, attributeName) {\n    //   var errors = [];\n    //   if (angular.isArray(validator)) {\n    //     angular.forEach(validator, function(element) {\n    //       errors = errors.concat(__validate(element, attributeValue, attributeName));\n    //     });\n    //   } else if (angular.isFunction(validator)) {\n    //     var err = validator(attributeValue, attributeName);\n    //     if (angular.isArray(err)) {\n    //       errors.concat(err);\n    //     } else {\n    //       $log.error(\n    //         'Wrong validator type it should return array of errors instead of: ' +\n    //           err.toString()\n    //       );\n    //     }\n    //   } else if (angular.isString(validator)) {\n    //     if (validator === 'text' || validator === 'string') {\n    //       if (!angular.isString(attributeValue)) {\n    //         errors.push(attributeName + ' is not a string ');\n    //       }\n    //     } else if (validator === 'number' || validator === 'integer') {\n    //       if (parseInt(attributeValue).toString() !== attributeValue.toString()) {\n    //         errors.push(attributeName + ' is not a number');\n    //       }\n    //     } else if (validator === 'uuid4') {\n    //       if (!uuid4.validate(attributeValue)) {\n    //         errors.push(attributeName + ' is not a uuid4');\n    //       }\n    //     } else if (validator === 'required') {\n    //       if (attributeValue.toString().length === 0) {\n    //         errors.push(attributeName + ' is empty');\n    //       }\n    //     } else {\n    //       $log.error('Wrong validator type: ' + validator.toString());\n    //     }\n    //   } else if (angular.isObject(validator)) {\n    //     if (validator.maxlength !== undefined && attributeValue.length > validator.maxlength) {\n    //       errors.push(attributeName + ' is too long max ' + validator.maxlength);\n    //     }\n\n    //     if (validator.minlength !== undefined && attributeValue.length < validator.minlength) {\n    //       errors.push(attributeName + ' is too short min ' + validator.minlength);\n    //     }\n\n    //     if (validator.maxvalue !== undefined && parseInt(attributeValue) > validator.maxvalue) {\n    //       errors.push(attributeName + ' is too big max ' + validator.maxvalue);\n    //     }\n\n    //     if (validator.minvalue !== undefined && parseInt(attributeValue) < validator.minvalue) {\n    //       errors.push(attributeName + ' is too small min ' + validator.minvalue);\n    //     }\n    //   } else {\n    //     $log.error('Wrong validator type: ' + validator.toString());\n    //   }\n\n    //   return errors;\n    // }\n  }\n})();\n","!function(){\"use strict\";angular.module(\"angular-jsonapi\",[\"uuid4\"]).constant(\"pluralize\",pluralize)}(),function(){\"use strict\";function t(t){function e(e,n){return t.resolve({})}function n(e,n){return t.resolve([])}var a=this;return a.validateForm=e,a.validateField=n,this}angular.module(\"angular-jsonapi\").service(\"AngularJsonAPIModelValidatorService\",t),t.$inject=[\"$q\"]}(),function(){\"use strict\";function t(t){function e(t){return null===t?null:{type:t.data.type,id:t.data.id}}function n(e,n,a,i){var u;return void 0===e?(t.error(\"Can't add link to non existing object\",e,n,a),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),[]):(u=e.schema.relationships[n],void 0===a?(t.error(\"Can't link non existing object\",e,n,a,u),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),t.error(\"Schema:\",u),[]):void 0===u?(t.error(\"Can't add link not present in schema:\",e,n,a,u),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),t.error(\"Schema:\",u),[]):null!==a&&u.polymorphic===!1&&u.model!==a.data.type?(t.error(\"This relation is not polymorphic, expected: \"+u.model+\" instead of \"+a.data.type),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),t.error(\"Schema:\",u),[]):\"hasMany\"===u.type?i===!0?(c(e,n,a,!1),[]):r(e,n,a):\"hasOne\"===u.type?i===!0?(s(e,n,a,!1),[]):o(e,n,a):void 0)}function a(e,n,a,r){var o;return void 0===e?(t.error(\"Can't remove link from non existing object\",e,n,a),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),[]):(o=e.schema.relationships[n],void 0===o?(t.error(\"Can't remove link not present in schema:\",e,n,a,o),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),t.error(\"Schema:\",o),[]):r===!0?(l(e,n,a,!1),[]):i(e,n,a))}function r(t,e,n){var a,r=t.schema.relationships[e].reflection;return r===!1?(c(t,e,n),[]):(a=n.schema.relationships[r],\"hasOne\"===a.type?h(d(t,e,n),d(n,r,t),o(n,r,t)):\"hasMany\"===a.type?(c(t,e,n),c(n,r,t),[d(n,r,t)]):void 0)}function o(t,e,n){var a,r,o=t.schema.relationships[e].reflection,i=t.relationships[e],d=[];return s(t,e,n),void 0!==i&&null!==i&&(r=i.schema.relationships[o],\"hasOne\"===r.type?u(i,o,t):\"hasMany\"===r.type&&l(i,o,t),d.push(i,o,t)),void 0!==n&&null!==n&&o!==!1&&(a=n.schema.relationships[o],\"hasOne\"===a.type?s(n,o,t):\"hasMany\"===a.type&&c(n,o,t),d.push(n,o,t)),d}function i(t,e,n){var a,r=t.schema.relationships[e],o=r.reflection;return\"hasMany\"===r.type?l(t,e,n):\"hasOne\"===r.type&&u(t,e,n),o===!1?[]:(a=n.schema.relationships[o],\"hasOne\"===a.type?u(n,o,t):\"hasMany\"===a.type&&l(n,o,t),[d(n,o,t)])}function s(n,a,r,o){return t.debug(\"addHasOne\",n,a,r),n.relationships[a]=r,n.data.relationships[a].data=e(r),o!==!1&&n.reset(!0),!0}function c(n,a,r,o){var i=e(r);return t.debug(\"addHasMany\",n,a,r),angular.isArray(n.relationships[a])&&n.relationships[a].indexOf(r)>-1?!1:(n.relationships[a]=n.relationships[a]||[],n.data.relationships[a].data=n.data.relationships[a].data||[],n.relationships[a].push(r),n.data.relationships[a].data.push(i),o!==!1&&n.reset(!0),!0)}function u(e,n,a,r){return t.debug(\"removeHasOne\",e,n,a),void 0!==a&&e.relationships[n]!==a?!1:(e.relationships[n]=null,e.data.relationships[n].data=void 0,r!==!1&&e.reset(!0),!0)}function l(e,n,a,r){if(t.debug(\"removeHasMany\",e,n,a),void 0!==e.relationships[n]){if(void 0===a)return e.relationships[n]=[],e.data.relationships[n].data=[],r!==!1&&e.reset(!0),!0;var o=e.relationships[n].indexOf(a);return-1===o?!1:(e.relationships[n].splice(o,1),e.data.relationships[n].data.splice(o,1),r!==!1&&e.reset(!0),!0)}}function d(t,e,n){return{object:t,key:e,target:n}}function h(t,e,n){var a=-1;return angular.forEach(n,function(e,n){e.object===t.object&&e.key===t.key&&e.target===t.target&&(a=n)}),a>-1?n[a]=e:n.push(e),n}var f=this;return f.toLinkData=e,f.link=n,f.unlink=a,this}angular.module(\"angular-jsonapi\").service(\"AngularJsonAPIModelLinkerService\",t),t.$inject=[\"$log\"]}(),function(){\"use strict\";function t(t,e,n){function a(t){var e=this;e.data={id:t.data.id,type:t.data.type,attributes:{},relationships:{}},e.relationships={},e.parent=t,e.schema=t.schema,e.reset()}function r(){var t=this,e=angular.copy(t.data),n={};return angular.forEach(e.relationships,function(t,e){void 0!==t.data&&(n[e]=t)}),e.relationships=n,{data:e}}function o(){var t=this;return t.parent.save()}function i(t){var e=this;angular.forEach(e.schema.relationships,function(t,n){e.data.relationships[n]=angular.copy(e.parent.data.relationships[n])||{},e.relationships[n]=angular.isArray(e.relationships[n])?e.parent.relationships[n].slice():e.parent.relationships[n]}),(t!==!0||e.parent[\"synchronized\"]!==!0)&&(angular.forEach(e.schema.attributes,function(t,n){e.data.attributes[n]=angular.copy(e.parent.data.attributes[n])||\"\"}),e.errors={validation:{}})}function s(){function e(t){a.errors.validation=t,r.reject(t)}var a=this,r=n.defer();return t.validateForm(a.data).then(r.resolve,e),r.promise}function c(e){function a(t){r.errors.validation[e]=t,o.reject(t)}var r=this,o=n.defer();return t.validateForm(r.data[e],e).then(o.resolve,a),o.promise}function u(t,a){var r=this;return n.resolve(e.link(r,t,a,!0))}function l(t,a){var r=this;return n.resolve(e.unlink(r,t,a,!0))}return a.prototype.save=o,a.prototype.reset=i,a.prototype.validate=s,a.prototype.validateField=c,a.prototype.link=u,a.prototype.unlink=l,a.prototype.toJson=r,a}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelForm\",t),t.$inject=[\"AngularJsonAPIModelValidatorService\",\"AngularJsonAPIModelLinkerService\",\"$q\"]}(),function(){\"use strict\";function t(t,e,n,a,r,o,i){function s(e,n,a){var r=this;e.relationships=e.relationships||{},r.saved=void 0===n?!0:n,r.stable=void 0===a?!0:a,r[\"synchronized\"]=void 0===a?!0:a,r.removed=!1,r.loadingCount=0,r.updatedAt=Date.now(),r.data={relationships:{},attributes:{}},r.relationships={},angular.forEach(r.schema.relationships,function(t,e){r.relationships[e]=void 0}),r.errors={validation:{}},r.promises={},v(r,e),r.form=new t(r)}function c(t){function e(e){a.$emit(\"angularJsonAPI:\"+o.data.type+\":object:\"+c.action,\"resolved\",o,e,t),o.update(o.form.data),o.saved===!1&&t===!0&&(o.factory.cache.indexIds=o.factory.cache.indexIds||[],o.factory.cache.indexIds.push(o.data.id)),o[\"synchronized\"]=!0,o.saved=!0,o.stable=!0,e.finish(),s.resolve(o)}function n(t){a.$emit(\"angularJsonAPI:\"+o.data.type+\":object:save\",\"rejected\",o,t),t.finish(),s.reject(t.errors)}function r(t){a.$emit(\"angularJsonAPI:\"+o.data.type+\":object:save\",\"notify\",o,t),s.notify(t.errors)}var o=this,s=i.defer(),c={action:o.saved===!1?\"add\":\"update\",object:o};return t=void 0===t?!0:t,o.form.validate().then(o.synchronize(c).then(e,n,r),s.reject),s.promise}function u(){var t=this;void 0!==t.form&&t.form.reset()}function l(){function t(t){function e(t){return t.synchronize({action:\"include\",object:t})}function n(e){angular.forEach(e,function(t,e){t.success===!0&&(a.$emit(\"angularJsonAPI:\"+r.included[e].data.type+\":object:include\",\"resolved\",r.included[e],t),t.value.finish())}),s.resolve(t)}var r=o.proccesResults(t.data);a.$emit(\"angularJsonAPI:\"+c.data.type+\":object:refresh\",\"resolved\",c,t),i.allSettled(r.included.map(e)).then(n,s.reject),t.finish(),c[\"synchronized\"]=!0,c.stable=!0}function e(t){a.$emit(\"angularJsonAPI:\"+c.data.type+\":object:refresh\",\"rejected\",c,t),t.finish(),s.reject(t)}function n(t){a.$emit(\"angularJsonAPI:\"+c.data.type+\":object:refresh\",\"notify\",c,t),s.notify(t)}var o=r.get(\"$jsonapi\"),s=i.defer(),c=this,u={action:\"refresh\",object:c,params:c.schema.params.get};return c.saved===!1?s.reject({errors:[{status:0,statusText:\"Can't refresh new object\"}]}):c.synchronize(u).then(t,e,n),s.promise}function d(){var t=this,e=angular.copy(t.data),n={};return angular.forEach(e.relationships,function(t,e){void 0!==t.data&&(n[e]=t)}),e.relationships=n,{data:e}}function h(){function t(t){a.$emit(\"angularJsonAPI:\"+r.data.type+\":object:remove\",\"resolved\",r,t),r.removed=!0,r.unlinkAll(),r.factory.cache.clearRemoved(r.data.id),t.finish(),o.resolve(t)}function e(t){a.$emit(\"angularJsonAPI:\"+r.data.type+\":object:remove\",\"rejected\",r,t),r.factory.cache.revertRemove(r.data.id),t.finish(),o.reject(t)}function n(t){a.$emit(\"angularJsonAPI:\"+r.data.type+\":object:remove\",\"notify\",r,t),o.notify(t)}var r=this,o=i.defer(),s={action:\"remove\",object:r};return r.factory.cache.remove(r.data.id),r.saved===!1?o.resolve():r.synchronize(s).then(t,e,n),o.promise}function f(t){function n(t,e){var n=o.schema.relationships[e],a=n.reflection;angular.isArray(t)?angular.forEach(t,r.bind(void 0,a)):angular.isObject(t)&&r(a,t),\"hasOne\"===n.type?o.relationships[e]=null:\"hasMany\"===n.type&&(o.relationships[e]=[])}function r(t,n){function r(t){a.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"resolve\",o,t),t.finish(),s.resolve(o)}function i(t){a.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"rejected\",o,t),t.finish(),s.reject(t)}function c(t){a.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"notify\",o,t),t.finish(),s.notify(t)}var u=n.schema.relationships[t];e.unlink(n,t,o,u),n.synchronize({action:\"unlinkReflection\",object:n,target:o,key:t}).then(r,i,c)}var o=this,s=i.defer();return void 0===t?angular.forEach(o.relationships,n):n(o.relationships[t],t),s.promise}function p(t,n){function r(r){function o(t){return console.log(t),n.synchronize({action:\"linkReflection\",object:t.object,target:t.target,key:t.key})}function s(t){a.$emit(\"angularJsonAPI:\"+l.data.type+\":object:linkReflection\",\"resolve\",l,t),t.finish(),u.resolve(l)}function c(t){a.$emit(\"angularJsonAPI:\"+l.data.type+\":object:linkReflection\",\"rejected\",l,t),t.finish(),u.reject(t)}function d(t){a.$emit(\"angularJsonAPI:\"+l.data.type+\":object:linkReflection\",\"notify\",l,t),t.finish(),u.notify(t)}a.$emit(\"angularJsonAPI:\"+l.data.type+\":object:link\",\"resolved\",l,r);var h=e.link(l,t,n);console.log(h),l.stable=!0,r.finish(),i.allSettled(h.map(o)).then(s,c,d)}function s(t){a.$emit(\"angularJsonAPI:\"+l.data.type+\":object:link\",\"rejected\",l,t),u.reject(t.errors),t.finish(),u.reject(t)}function c(t){a.$emit(\"angularJsonAPI:\"+l.data.type+\":object:link\",\"notify\",l,t),u.notify(t)}var u=i.defer(),l=this,d={action:\"link\",object:l,target:n,key:t};return void 0===n?(o.error(\"Can't link undefined\"),u.reject({errors:[{status:0,statusText:\"Can't link undefined\"}]})):l.saved===!1?(o.error(\"Can't link new object\"),u.reject({errors:[{status:0,statusText:\"Can't link new object\"}]})):l.synchronize(d).then(r,s,c),u.promise}function y(t,n){function r(r){function o(t){return console.log(t),n.synchronize({action:\"unlinkReflection\",object:t.object,target:t.target,key:t.key})}function s(t){a.$emit(\"angularJsonAPI:\"+u.data.type+\":object:unlinkReflection\",\"resolve\",u,t),t.finish(),c.resolve(u)}function l(t){a.$emit(\"angularJsonAPI:\"+u.data.type+\":object:unlinkReflection\",\"rejected\",u,t),t.finish(),c.reject(t)}function d(t){a.$emit(\"angularJsonAPI:\"+u.data.type+\":object:unlinkReflection\",\"notify\",u,t),t.finish(),c.notify(t)}a.$emit(\"angularJsonAPI:\"+u.data.type+\":object:unlink\",\"resolved\",u,r);var h=e.link(u,t,n);u.stable=!0,r.finish(),i.allSettled(h.map(o)).then(s,l,d)}function o(t){a.$emit(\"angularJsonAPI:\"+u.data.type+\":object:unlink\",\"rejected\",u,t),c.reject(t.errors),t.finish(),c.reject(t)}function s(t){a.$emit(\"angularJsonAPI:\"+u.data.type+\":object:unlink\",\"notify\",u,t),c.notify(t)}var c=i.defer(),u=this,l={action:\"unlink\",object:u,target:n,key:t};return void 0===n?c.reject({errors:[{status:0,statusText:\"Can't unlink undefined\"}]}):u.saved===!1?c.reject({errors:[{status:0,statusText:\"Can't unlink new object\"}]}):u.synchronize(l).then(r,o,s),c.promise}function g(t,e,n){var a=this;return v(a,t)===!0?(a.reset(e),a[\"synchronized\"]=n===!0?!1:!0,a.stable=n===!0?!1:!0,a.updatedAt=Date.now(),!0):!1}function v(t,a){function i(e,n){t.data.attributes[n]=a.attributes[n]}function s(e,n){var r=a.relationships[n];return void 0===r?void(t.data.relationships[n]={data:void 0}):(t.data.relationships[n]=t.data.relationships[n]||{},t.data.relationships[n].links=r.links,void(\"hasOne\"===e.type?c(t,n,r.data):\"hasMany\"===e.type&&angular.isArray(r.data)&&(0===r.data.length?(t.data.relationships[n].data=[],t.unlinkAll(n)):(angular.forEach(t.relationships[n],u.bind(void 0,t,n,r.data)),angular.forEach(r.data,c.bind(void 0,t,n))))))}function c(t,n,a){var r;if(null===a)return void e.link(t,n,null);if(void 0!==a){if(r=l.getFactory(a.type),void 0===r)return void o.error(\"Factory not found\",a.type,a);var i=r.cache.get(a.id);e.link(t,n,i)}}function u(t,n,a,r){a.indexOf(r.data.id)>-1||e.unlink(t,n,r)}var l=r.get(\"$jsonapi\"),d=t.schema;return t.data.id=a.id,t.data.type=a.type,t.factory.schema.type!==a.type?(o.error(\"Different type then factory\",t.factory.schema.type,a),!1):n.validate(t.data.id)?(a.attributes=a.attributes||{},a.relationships=a.relationships||{},angular.forEach(d.attributes,i),angular.forEach(d.relationships,s),!0):(o.error(\"Invalid id\"),!1)}return s.prototype.refresh=l,s.prototype.remove=h,s.prototype.reset=u,s.prototype.save=c,s.prototype.update=g,s.prototype.link=p,s.prototype.unlink=y,s.prototype.unlinkAll=f,s.prototype.toJson=d,s}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractModel\",t),t.$inject=[\"AngularJsonAPIModelForm\",\"AngularJsonAPIModelLinkerService\",\"uuid4\",\"$rootScope\",\"$injector\",\"$log\",\"$q\"]}(),function(){\"use strict\";function t(t,e){function n(t){var e=this;e.factory=t,e.data={},e.removed={},e.size=0,e.indexIds=void 0}function a(t,n){var a=this,r=t.id;return void 0===r?void e.error(\"Can't add data without id!\",t):(void 0===a.data[r]?(a.data[r]=new a.factory.Model(t,n.saved,n[\"synchronized\"]),a.size+=1):a.data[r].update(t,n.saved,n.initialization),a.data[r])}function r(t){var e=this,n=angular.fromJson(t),a={saved:!0,\"synchronized\":!1,initialization:!0};angular.isObject(n)&&void 0!==n.data&&(e.updatedAt=n.updatedAt,e.indexIds=n.indexIds,angular.forEach(n.data,function(t){var n=t.data;e.addOrUpdate(n,a)}))}function o(){var t=this,e={data:{},updatedAt:t.updatedAt,indexIds:t.indexIds};return angular.forEach(t.data,function(t,n){e.data[n]=t.toJson()}),angular.toJson(e)}function i(){var t=this;t.indexIds=void 0,t.data={},t.removed={}}function s(t){var e=this;return void 0===e.data[t]&&(e.data[t]=new e.factory.Model({id:t,type:e.factory.Model.prototype.schema.type},!0,!1)),e.data[t]}function c(t){var n=this;return e.warn(\"Unused params\",t),void 0===n.indexIds?n.indexIds:n.indexIds.map(n.get.bind(n))}function u(e){var n=this;n.indexIds=[],angular.forEach(e,function(e){angular.isString(e)&&t.validate(e)?n.indexIds.push(e):angular.isObject(e)&&t.validate(e.data.id)&&n.indexIds.push(e.data.id)})}function l(t){var e=this;return void 0!==e.data[t]&&(e.removed[t]=e.data[t],delete e.data[t],e.size-=1),e.removed[t]}function d(t){var e=this;return void 0!==e.removed[t]&&(e.data[t]=e.removed[t],delete e.removed[t],e.size+=1),e.data[t]}function h(t){var e=this;delete e.removed[t]}return n.prototype.get=s,n.prototype.index=c,n.prototype.setIndexIds=u,n.prototype.addOrUpdate=a,n.prototype.fromJson=r,n.prototype.toJson=o,n.prototype.clear=i,n.prototype.remove=l,n.prototype.revertRemove=d,n.prototype.clearRemoved=h,n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICache\",t),t.$inject=[\"uuid4\",\"$log\"]}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"lazyProperty\",function(t,e,n){var a,r;Object.defineProperty(t,e,{get:function(){return r||(r=!0,a=n.call(t)),a},enumerable:!0,configurable:!0})})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"toKebabCase\",function(t){return t.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase()})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$provide\",function(t){t.decorator(\"$q\",[\"$delegate\",function(t){var e=t;return e.allSettled=e.allSettled||function(t,n,a){function r(t){return e.resolve(t).then(function(t){return angular.isFunction(n)&&n(t),{success:!0,value:t}},function(t){return angular.isFunction(a)&&a(t),{success:!1,reason:t}})}var o=angular.isArray(t)?[]:{};return angular.forEach(t,function(t,e){o.hasOwnProperty(e)||(o[e]=r(t))}),e.all(o)},e}])}])}(),function(){\"use strict\";function t(t,e,n){function a(e){var n=this;n.state={},t.call(n,e),angular.forEach(e,function(t){t.synchronizer=n})}function r(a){function r(t){d.notify({step:\"synchronization\",data:t})}function o(t){d.notify({step:\"synchronization\",errors:t})}function i(t){u.state[h]=u.state[h]||{},u.state[h].success=!0,angular.forEach(t,function(t){t.success===!1&&(u.state[h].success=!1)}),angular.forEach(u.synchronizations,function(e){angular.forEach(e.afterHooks[h],function(e){d.notify({step:\"after\",errors:e.call(u,a,t)})})});var e,n=[];angular.forEach(t,function(t){t.success===!0?e=t.value:n.push(t.reason)}),n.length>0?d.reject({data:e,finish:s,errors:n}):d.resolve({data:e,finish:s,errors:n})}function s(){angular.forEach(u.synchronizations,function(t){angular.forEach(t.finishHooks[h],function(t){d.notify({step:\"finish\",errors:t.call(u,a)})})})}function c(t){n.error(\"All settled rejected! Something went wrong\"),d.reject({finish:angular.noop,errors:t})}var u=this,l=[],d=e.defer(),h=a.action;return t.prototype.synchronize.call(u,a),angular.forEach(u.synchronizations,function(t){angular.forEach(t.beginHooks[h],function(t){d.notify({step:\"begin\",data:t.call(u,a)})})}),angular.forEach(u.synchronizations,function(t){angular.forEach(t.beforeHooks[h],function(t){d.notify({step:\"before\",data:t.call(u,a)})})}),angular.forEach(u.synchronizations,function(t){angular.forEach(t.synchronizationHooks[h],function(t){l.push(t.call(u,a))})}),e.allSettled(l,r,o).then(i,c),d.promise}return a.prototype=Object.create(t.prototype),a.prototype.constructor=a,a.prototype.synchronize=r,a}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerSimple\",t),t.$inject=[\"AngularJsonAPISynchronizerPrototype\",\"$q\",\"$log\"]}(),function(){\"use strict\";function t(t){function e(t){var e=this;e.synchronizations=t}function n(e){var n=this;t.debug(\"Synchro Collection\",n.factory.Model.prototype.schema.type,e),void 0===e.action&&t.error(\"Can't synchronize undefined action\",e)}return e.prototype.synchronize=n,e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerPrototype\",t),t.$inject=[\"$log\"]}(),function(){\"use strict\";function t(t,e,n,a,r){function o(n){function o(t){return r({method:\"GET\",headers:y,url:n,params:t.params||{}}).then(h,f)}function i(t){return r({method:\"GET\",headers:y,url:n+\"/\"+t.object.data.id,params:t.params||{}}).then(h,f)}function s(t){return r({method:\"DELETE\",headers:y,url:n+\"/\"+t.object.data.id}).then(h,f)}function c(t){var e=a.defer(),o=t.object.schema.relationships[t.key];return t.object.removed===!0?e.reject({errors:[{status:0,statusText:\"Object has been removed\"}]}):void 0!==t.target&&void 0===t.target.data.id?e.reject({errors:[{status:0,statusText:\"Can't unlink object without id through rest call\"}]}):\"hasOne\"===o.type?r({method:\"DELETE\",headers:y,url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(h,f).then(e.resolve,e.reject):\"hasMany\"===o.type&&(void 0===t.target?r({method:\"PUT\",headers:y,data:{data:[]},url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(h,f).then(e.resolve,e.reject):r({method:\"DELETE\",headers:y,url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key+\"/\"+t.target.data.id}).then(h,f).then(e.resolve,e.reject)),e.promise}function u(t){var o=a.defer(),i=t.object.schema.relationships[t.key];return t.object.removed===!0?o.reject({errors:[{status:0,statusText:\"Object has been removed\"}]}):void 0===t.target||void 0===t.target.data.id?o.reject({errors:[{status:0,statusText:\"Can't link object without id through rest call\"}]}):\"hasOne\"===i.type?r({method:\"PUT\",headers:y,data:{data:e.toLinkData(t.target)},url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(h,f).then(o.resolve,o.reject):\"hasMany\"===i.type&&r({method:\"POST\",headers:y,data:{data:[e.toLinkData(t.target)]},url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(h,f).then(o.resolve,o.reject),o.promise}function l(t){return r({method:\"PUT\",headers:y,url:n+\"/\"+t.object.data.id,data:t.object.form.toJson()}).then(h,f)}function d(t){return r({method:\"POST\",headers:y,url:n+\"/\",data:t.object.form.toJson()}).then(h,f)}function h(t){return a.resolve(t.data)}function f(t){function e(){o.reject({status:t.status,statusText:\"Server is offline\"})}function n(){o.reject({status:t.status,statusText:\"No internet connection\"})}var o=a.defer();return 0===t.status?r({method:\"GET\",url:\"https://status.cloud.google.com/incidents.schema.json\"}).then(e,n):o.reject({status:t.status,statusText:t.statusText}),o.promise}var p=this,y={Accept:\"application/vnd.api+json\",\"Content-Type\":\"application/vnd.api+json\"};t.call(p),p.synchronization(\"remove\",s),p.synchronization(\"unlink\",c),p.synchronization(\"link\",u),p.synchronization(\"update\",l),p.synchronization(\"add\",d),p.synchronization(\"all\",o),p.synchronization(\"get\",i),p.synchronization(\"refresh\",i)}return o.prototype=Object.create(t.prototype),o.prototype.constructor=o,o}angular.module(\"angular-jsonapi-rest\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationRest\",t),t.$inject=[\"AngularJsonAPISynchronizationPrototype\",\"AngularJsonAPIModelLinkerService\",\"toKebabCase\",\"$q\",\"$http\"]}(),function(){\"use strict\";function t(){function t(){var t=this,e=[\"add\",\"init\",\"get\",\"all\",\"clearCache\",\"remove\",\"unlink\",\"unlinkReflection\",\"link\",\"linkReflection\",\"update\",\"refresh\",\"include\"];t.state={},t.beginHooks={},t.beforeHooks={},t.synchronizationHooks={},t.afterHooks={},t.finishHooks={},t.options={},angular.forEach(e,function(e){t.beginHooks[e]=[],t.beforeHooks[e]=[],t.synchronizationHooks[e]=[],t.afterHooks[e]=[],t.finishHooks[e]=[],t.state[e]={loading:!1,success:!0}})}function e(t,e){var n=this;n.beginHooks[t].push(e)}function n(t,e){var n=this;n.finishHooks[t].push(e)}function a(t,e){var n=this;n.beforeHooks[t].push(e)}function r(t,e){var n=this;n.afterHooks[t].push(e)}function o(t,e){var n=this;n.synchronizationHooks[t].push(e)}return t.prototype.before=a,t.prototype.after=r,t.prototype.begin=e,t.prototype.finish=n,t.prototype.synchronization=o,t}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizationPrototype\",t)}(),function(){\"use strict\";function t(t,e,n){function a(a){function r(){var t=s.synchronizer.factory.schema.type;return n.resolve(e.localStorage.getItem(a+\".\"+t))}function o(){var t=s.synchronizer.factory.schema.type;e.localStorage.removeItem(a+\".\"+t)}function i(){var t=s.synchronizer.factory.schema.type,n=s.synchronizer.factory.cache;e.localStorage.setItem(a+\".\"+t,n.toJson())}var s=this;a=a||\"AngularJsonAPI\",s.__updateStorage=i,t.call(s),s.synchronization(\"init\",r),s.begin(\"clearCache\",o),s.begin(\"remove\",i),s.begin(\"refresh\",i),s.begin(\"unlink\",i),s.begin(\"unlinkReflection\",i),s.begin(\"link\",i),s.begin(\"linkReflection\",i),s.begin(\"update\",i),s.begin(\"add\",i),s.begin(\"get\",i),s.begin(\"all\",i),s.begin(\"include\",i),s.finish(\"init\",i),s.finish(\"clearCache\",i),s.finish(\"remove\",i),s.finish(\"refresh\",i),s.finish(\"unlink\",i),s.finish(\"unlinkReflection\",i),s.finish(\"link\",i),s.finish(\"linkReflection\",i),s.finish(\"update\",i),s.finish(\"add\",i),s.finish(\"get\",i),s.finish(\"all\",i),s.finish(\"include\",i)}return a.prototype=Object.create(t.prototype),a.prototype.constructor=a,a}angular.module(\"angular-jsonapi-local\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationLocal\",t),t.$inject=[\"AngularJsonAPISynchronizationPrototype\",\"$window\",\"$q\"]}(),function(){\"use strict\";function t(t,e,n){function a(t){var e=this,a=t.include||{};t.include=a,a.get=t.include.get||[],a.all=t.include.all||[],e.params={get:{},all:{}},angular.forEach(t.relationships,function(e,r){var o=new n(e,r,t.type);t.relationships[r]=o,o.included===!0&&(a.get.push(r),\"hasOne\"===o.type&&a.all.push(r))}),angular.extend(e,t),a.get.length>0&&(e.params.get.include=a.get.join(\",\")),a.all.length>0&&(e.params.all.include=a.all.join(\",\"))}return a}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchema\",t),t.$inject=[\"$log\",\"pluralize\",\"AngularJsonAPISchemaLink\"]}(),function(){\"use strict\";function t(t,e){function n(n,a,r){var o=this;angular.isString(n)?(o.model=e.plural(a),o.type=n,o.polymorphic=!1,o.reflection=r):(void 0===n.type&&t.error(\"Schema of link without a type: \",n,a),\"hasMany\"!==n.type&&\"hasOne\"!==n.type&&t.error(\"Schema of link with wrong type: \",n.type,\"available: hasOne, hasMany\"),o.model=n.model||e.plural(a),o.type=n.type,o.polymorphic=n.polymorphic||!1,o.reflection=void 0===n.reflection?\"hasMany\"===o.type?e.singular(r):r:n.reflection,o.included=n.included||!1)}return n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchemaLink\",t),t.$inject=[\"$log\",\"pluralize\"]}(),function(){\"use strict\";function t(t,e,n){function a(e,a){var r=function(e,a,r){var o=this;e.type!==o.schema.type&&n.error(\"Data type other then declared in schema: \",e.type,\" instead of \",o.schema.type),t.call(o,e,a,r),o.form.parent=o};return r.prototype=Object.create(t.prototype),r.prototype.constructor=r,r.prototype.schema=e,r.prototype.factory=a,r.prototype.synchronize=a.synchronizer.synchronize.bind(a.synchronizer),angular.forEach(e.functions,function(t,e){r.prototype[e]=function(){return t.apply(this,arguments)}}),r}return{model:a}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModel\",t),t.$inject=[\"AngularJsonAPIAbstractModel\",\"AngularJsonAPISchema\",\"$log\"]}(),function(){\"use strict\";function t(t,e,n,a,r,o,i,s){function c(a,r){function i(t){o.$emit(\"angularJsonAPI:\"+u.type+\":factory:init\",\"resolved\",t),u.cache.fromJson(t.data),u.initialized=!0,t.finish()}function s(t){o.$emit(\"angularJsonAPI:\"+u.type+\":factory:init\",\"rejected\",t),t.finish(),u.initialized=!0}function c(t){o.$emit(\"angularJsonAPI:\"+u.type+\":factory:init\",\"notify\",t)}var u=this,l={action:\"init\"};u.schema=new e(a),u.cache=new n(u),u.synchronizer=r,u.synchronizer.factory=u,u.Model=t.model(u.schema,u),u.initialized=!1,u.type=u.schema.type,r.factory=u,u.synchronizer.synchronize(l).then(i,s,c)}function u(t){var e=this;if(!r.validate(t))return s.reject({errors:[{status:0,statusText:\"Invalid id not uuid4\"}]});var n=e.cache.get(t);return n.refresh(),n}function l(t){var e=this;t=t||{};var n=new a(e,angular.extend(t,e.schema.params.all));return n.fetch(),n}function d(t){var e=this,n=e.cache.remove(t);return n.remove()}function h(t,e){var n=this,a={};if(angular.forEach(n.schema.relationships,function(t,e){\"hasOne\"===t.type?a[e]={data:null}:\"hasMany\"===t.type&&(a[e]={data:[]})}),void 0!==t&&void 0!==e){var s=n.schema[t];\"hasOne\"===s.type?a[t]={data:e.data.id}:\"hasMany\"===s.type&&i.warn(\"Initialize with relationship disallowed for hasMany relationships\")}var c={type:n.type,id:r.generate(),attributes:{},relationships:a},u={saved:!1,\"synchronized\":!1,initialization:!1},l=n.cache.addOrUpdate(c,u);return o.$emit(\"angularJsonAPI:\"+n.type+\":factory:initialize\",\"resolved\",l),l}function f(){function t(t){o.$emit(\"angularJsonAPI:\"+a.type+\":factory:clearCache\",\"resolved\",t),t.finish(),r.resolve(t)}function e(t){o.$emit(\"angularJsonAPI:\"+a.type+\":factory:clearCache\",\"resolved\",t),t.finish(),r.reject(t)}function n(t){o.$emit(\"angularJsonAPI:\"+a.type+\":factory:clearCache\",\"notify\",t),r.notify(t)}var a=this,r=s.defer(),i={action:\"clearCache\"};return a.cache.clear(),a.synchronizer.synchronize(i).then(t,e,n),r}return c.prototype.get=u,c.prototype.all=l,c.prototype.remove=d,c.prototype.initialize=h,c.prototype.clearCache=f,c}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIFactory\",t),t.$inject=[\"AngularJsonAPIModel\",\"AngularJsonAPISchema\",\"AngularJsonAPICache\",\"AngularJsonAPICollection\",\"uuid4\",\"$rootScope\",\"$log\",\"$q\"]}(),function(){\"use strict\";function t(t,e,n){function a(e,n){function a(t,e,n){var a;\"resolved\"===e&&(a=i.data.indexOf(n),a>-1&&(i.data.splice(a,1),i.factory.cache.setIndexIds(i.data)))}function r(){i.data=void 0}function o(t,e,n,a){a===!0&&\"resolved\"===e&&i.data.push(n)}var i=this;i.factory=e,i.type=e.schema.type,i.params=n,i.errors={synchronization:{name:\"Synchronization\",description:\"Errors during synchronization\",errors:[]}},i.error=!1,i.data=i.factory.cache.index(i.params),i[\"synchronized\"]=!1,t.$on(\"angularJsonAPI:\"+i.type+\":object:remove\",a),t.$on(\"angularJsonAPI:\"+i.type+\":factory:clearCache\",r),t.$on(\"angularJsonAPI:\"+i.type+\":factory:add\",o)}function r(t){var e=this;return e.factory.get(t)}function o(){function a(e){function a(t){return t.synchronize({action:\"include\",object:t})}function r(n){angular.forEach(n,function(e,n){e.success===!0&&(t.$emit(\"angularJsonAPI:\"+o.included[n].data.type+\":object:include\",\"resolved\",o.included[n],e),e.value.finish())}),s.resolve(e)}var o=c.proccesResults(e.data);t.$emit(\"angularJsonAPI:\"+i.type+\":collection:fetch\",\"resolved\",i,e),n.allSettled(o.included.map(a)).then(r,s.reject),i.data=o.data,i.errors.synchronization.errors=[],i.error=!1,i.updatedAt=Date.now(),i[\"synchronized\"]=!0,i.factory.cache.setIndexIds(i.data),e.finish(),s.resolve(i)}function r(e){t.$emit(\"angularJsonAPI:\"+i.type+\":collection:fetch\",\"rejected\",i,e),i.errors.synchronization.errors=e.errors,i.error=!0,e.finish(),s.reject(e)}function o(e){t.$emit(\"angularJsonAPI:\"+i.type+\":collection:fetch\",\"notify\",i,e),s.notify(e)}var i=this,s=n.defer(),c=e.get(\"$jsonapi\"),u={action:\"all\",params:i.params};return i.factory.synchronizer.synchronize(u).then(a,r,o),s.promise}return a.prototype.fetch=o,a.prototype.refresh=o,a.prototype.get=r,a}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICollection\",t),t.$inject=[\"$rootScope\",\"$injector\",\"$q\"]}(),function(){\"use strict\";function t(){function t(t,a){function r(){return e}function o(){return n}function i(t,r){var o=new a(t,r);e[t.type]=o,n.push(t.type)}function s(t){return e[t]}function c(n){return void 0===e[n]&&t.error(\"Can\t add not existing object type: \"+n+\". Use initialize(Model, datas).\"),e[n].saved.form}function u(n,a){return void 0===e[n]&&t.error(\"Can\t get not existing object type: \"+n+\". Use initialize(Model, datas).\"),e[n].get(a)}function l(n,a){return void 0===e[n]&&t.error(\"Can\t remove not existing object type: \"+n+\". Use initialize(Model, datas).\"),e[n].remove(a)}function d(n){return void 0===e[n]&&t.error(\"Can\t get all of not existing object type: \"+n+\". Use initialize(Model, datas).\"),e[n].all()}function h(){angular.forEach(e,function(t){t.clearCache()})}function f(e){var n={data:[],included:[]};void 0===e&&t.error(\"Can't proccess results:\",e);var a={saved:!0,\"synchronized\":!0,initialization:!1};return angular.forEach(e.included,function(t){n.included.push(s(t.type).cache.addOrUpdate(t,a))}),angular.isArray(e.data)?angular.forEach(e.data,function(t){n.data.push(s(t.type).cache.addOrUpdate(t,a))}):n.data.push(s(e.data.type).cache.addOrUpdate(e.data,a)),n}return{form:c,get:u,remove:l,all:d,addFactory:i,getFactory:s,clearCache:h,proccesResults:f,allFactories:r,factoriesNames:o}}var e={},n=[];this.$get=t,t.$inject=[\"$log\",\"AngularJsonAPIFactory\"]}angular.module(\"angular-jsonapi\").provider(\"$jsonapi\",t)}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$logProvider\",function(t){t.debugEnabled(!1)}])}();\n//# sourceMappingURL=angular-jsonapi.min.js.map","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, oneWay) {\n      var schema;\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema.type === 'hasMany') {\n        if (oneWay === true) {\n          __addHasMany(object, key, target, false);\n          return [];\n        } else {\n          return __processAddHasMany(object, key, target);\n        }\n      } else if (schema.type === 'hasOne') {\n        if (oneWay === true) {\n          __addHasOne(object, key, target, false);\n          return [];\n        } else {\n          return __processAddHasOne(object, key, target);\n        }\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, oneWay) {\n      var schema;\n\n      if (object === undefined) {\n        $log.error('Can\\'t remove link from non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (oneWay === true) {\n        __removeHasMany(object, key, target, false);\n        return [];\n      } else {\n        return __processRemove(object, key, target);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __processAddHasMany(object, key, target) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var reflectionSchema;\n\n      if (reflectionKey === false) {\n        __addHasMany(object, key, target);\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        return __swapResults(\n          __wrapResults(object, key, target),\n          __wrapResults(target, reflectionKey, object),\n          __processAddHasOne(target, reflectionKey, object)\n        );\n      } else if (reflectionSchema.type === 'hasMany') {\n        __addHasMany(object, key, target);\n        __addHasMany(target, reflectionKey, object);\n        return [__wrapResults(target, reflectionKey, object)];\n      }\n    }\n\n    function __processAddHasOne(object, key, target) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var oldReflection = object.relationships[key];\n      var reflectionSchema;\n      var oldReflectionSchema;\n      var result = [];\n\n      __addHasOne(object, key, target);\n\n      if (oldReflection !== undefined && oldReflection !== null) {\n        oldReflectionSchema = oldReflection.schema.relationships[reflectionKey];\n\n        if (oldReflectionSchema.type === 'hasOne') {\n          __removeHasOne(oldReflection, reflectionKey, object);\n        } else if (oldReflectionSchema.type === 'hasMany') {\n          __removeHasMany(oldReflection, reflectionKey, object);\n        }\n\n        result.push(oldReflection, reflectionKey, object);\n      }\n\n      if (target !== undefined && target !== null && reflectionKey !== false) {\n        reflectionSchema = target.schema.relationships[reflectionKey];\n\n        if (reflectionSchema.type === 'hasOne') {\n          __addHasOne(target, reflectionKey, object);\n        } else if (reflectionSchema.type === 'hasMany') {\n          __addHasMany(target, reflectionKey, object);\n        }\n\n        result.push(target, reflectionKey, object);\n      }\n\n      return result;\n    }\n\n    function __processRemove(object, key, target) {\n      var schema = object.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema;\n\n      if (schema.type === 'hasMany') {\n        __removeHasMany(object, key, target);\n      } else if (schema.type === 'hasOne') {\n        __removeHasOne(object, key, target);\n      }\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        __removeHasOne(target, reflectionKey, object);\n      } else if (reflectionSchema.type === 'hasMany') {\n        __removeHasMany(target, reflectionKey, object);\n      }\n\n      return [__wrapResults(target, reflectionKey, object)];\n    }\n\n    function __addHasOne(object, key, target, reset) {\n      $log.debug('addHasOne', object, key, target);\n\n      object.relationships[key] = target;\n      object.data.relationships[key].data = toLinkData(target);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, reset) {\n      var linkData = toLinkData(target);\n      $log.debug('addHasMany', object, key, target);\n\n      if (angular.isArray(object.relationships[key]) && object.relationships[key].indexOf(target) > -1) {\n        return false;\n      }\n\n      object.relationships[key] = object.relationships[key] || [];\n      object.data.relationships[key].data = object.data.relationships[key].data || [];\n\n      object.relationships[key].push(target);\n      object.data.relationships[key].data.push(linkData);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, reset) {\n      $log.debug('removeHasOne', object, key, target);\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        return false;\n      }\n\n      object.relationships[key] = null;\n      object.data.relationships[key].data = undefined;\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, reset) {\n      $log.debug('removeHasMany', object, key, target);\n\n      if (object.relationships[key] === undefined) {\n        return;\n      }\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n        if (reset !== false) {\n          object.reset(true);\n        }\n\n        return true;\n      }\n\n      var index = object.relationships[key].indexOf(target);\n\n      if (index === -1) {\n        return false;\n      }\n\n      object.relationships[key].splice(index, 1);\n      object.data.relationships[key].data.splice(index, 1);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __wrapResults(object, key, target) {\n      return {\n        object: object,\n        key: key,\n        target: target\n      };\n    }\n\n    function __swapResults(value, newValue, array) {\n      var index = -1;\n      angular.forEach(array, function(item, i) {\n        if (item.object === value.object && item.key === value.key && item.target === value.target) {\n          index = i;\n        }\n      });\n\n      if (index > -1) {\n        array[index] = newValue;\n      } else {\n        array.push(newValue);\n      }\n\n      return array;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidatorService,\n    AngularJsonAPIModelLinkerService,\n    $q\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n    AngularJsonAPIModelForm.prototype.validateField = validateField;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return AngularJsonAPIModelForm;\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        id: parent.data.id,\n        type: parent.data.type,\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset(auto) {\n      var _this = this;\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = angular.copy(_this.parent.data.relationships[key]) || {};\n        if (angular.isArray(_this.relationships[key])) {\n          _this.relationships[key] = _this.parent.relationships[key].slice();\n        } else {\n          _this.relationships[key] = _this.parent.relationships[key];\n        }\n      });\n\n      if (auto === true && _this.parent.synchronized === true) {\n        return;\n      }\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        _this.data.attributes[key] = angular.copy(_this.parent.data.attributes[key]) || '';\n      });\n\n      _this.errors = {\n        validation: {}\n      };\n    }\n\n    /**\n     * Validates form\n     * @return {promise} Promise rejected to errors object indexed by keys\n     */\n    function validate() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      AngularJsonAPIModelValidatorService.validateForm(_this.data).then(deferred.resolve, reject);\n\n      function reject(erorrs) {\n        _this.errors.validation = erorrs;\n\n        deferred.reject(erorrs);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Validates single field\n     * @param  {string} key Field key\n     * @return {promise} Promise rejected to errors array\n     */\n    function validateField(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      AngularJsonAPIModelValidatorService.validateForm(_this.data[key], key).then(deferred.resolve, reject);\n\n      function reject(erorrs) {\n        _this.errors.validation[key] = erorrs;\n\n        deferred.reject(erorrs);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target) {\n      var _this = this;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.link(_this, key, target, true));\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target) {\n      var _this = this;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.unlink(_this, key, target, true));\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelForm,\n    AngularJsonAPIModelLinkerService,\n    uuid4,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {Boolean} saved   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, saved, synchronized) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      /**\n       * Is not a new record\n       * @type {Boolean}\n       */\n      _this.saved = saved === undefined ? true : saved;\n\n      /**\n       * Is present on the server\n       * @type {Boolean}\n       */\n      _this.stable = synchronized === undefined ? true : synchronized;\n\n      /**\n       * Has been synchronized with the server\n       * @type {Boolean}\n       */\n      _this.synchronized = synchronized === undefined ? true : synchronized;\n\n      _this.removed = false;\n      _this.loadingCount = 0;\n      _this.updatedAt = Date.now();\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(schema, name) {\n        _this.relationships[name] = undefined;\n      });\n\n      _this.errors = {\n        validation: {}\n      };\n\n      _this.promises = {};\n\n      __setData(_this, data);\n\n      _this.form = new AngularJsonAPIModelForm(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save(addToIndex) {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: _this.saved === false ? 'add' : 'update',\n        object: _this\n      };\n\n      addToIndex = addToIndex === undefined ? true : addToIndex;\n\n      _this.form.validate().then(\n        _this.synchronize(config).then(resolve, reject, notify),\n        deferred.reject\n      );\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:' + config.action, 'resolved', _this, response, addToIndex);\n        _this.update(_this.form.data);\n\n        if (_this.saved === false && addToIndex === true) {\n          _this.factory.cache.indexIds = _this.factory.cache.indexIds || [];\n          _this.factory.cache.indexIds.push(_this.data.id);\n        }\n\n        _this.synchronized = true;\n        _this.saved = true;\n        _this.stable = true;\n\n        response.finish();\n\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'rejected', _this, response);\n        response.finish();\n\n        deferred.reject(response.errors);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'notify', _this, response);\n\n        deferred.notify(response.errors);\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      if (_this.form !== undefined) {\n        _this.form.reset();\n      }\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh() {\n      var $jsonapi = $injector.get('$jsonapi');\n      var deferred = $q.defer();\n      var _this = this;\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: _this.schema.params.get\n      };\n\n      if (_this.saved === false) {\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t refresh new object'}]});\n      } else {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        response.finish();\n        _this.synchronized = true;\n        _this.stable = true;\n\n        function synchronizeIncluded(object) {\n          return object.synchronize({\n            action: 'include',\n            object: object\n          });\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'rejected', _this, response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      var config = {\n        action: 'remove',\n        object: _this\n      };\n\n      _this.factory.cache.remove(_this.data.id);\n\n      if (_this.saved === false) {\n        deferred.resolve();\n      } else {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'resolved', _this, response);\n        _this.removed = true;\n        _this.unlinkAll();\n        _this.factory.cache.clearRemoved(_this.data.id);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'rejected', _this, response);\n        _this.factory.cache.revertRemove(_this.data.id);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlink all reflection relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      if (key === undefined) {\n        angular.forEach(_this.relationships, removeLink);\n      } else {\n        removeLink(_this.relationships[key], key);\n      }\n\n      return deferred.promise;\n\n      function removeLink(linksObj, key) {\n        var schema = _this.schema.relationships[key];\n        var reflectionKey = schema.reflection;\n\n        if (angular.isArray(linksObj)) {\n          angular.forEach(linksObj, removeReflectionLink.bind(undefined, reflectionKey));\n        } else if (angular.isObject(linksObj)) {\n          removeReflectionLink(reflectionKey, linksObj);\n        }\n\n        if (schema.type === 'hasOne') {\n          _this.relationships[key] = null;\n        } else if (schema.type === 'hasMany') {\n          _this.relationships[key] = [];\n        }\n      }\n\n      function removeReflectionLink(reflectionKey, target) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        target.synchronize({\n          action: 'unlinkReflection',\n          object: target,\n          target: _this,\n          key: reflectionKey\n        }).then(resolve, reject, notify);\n\n        function resolve(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'resolve', _this, response);\n\n          response.finish();\n          deferred.resolve(_this);\n        }\n\n        function reject(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'rejected', _this, response);\n\n          response.finish();\n          deferred.reject(response);\n        }\n\n        function notify(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var config = {\n        action: 'link',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        $log.error('Can\\'t link undefined');\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link undefined'}]});\n      } else if (_this.saved === false) {\n        $log.error('Can\\'t link new object');\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link new object'}]});\n      } else {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        console.log(targets);\n\n        _this.stable = true;\n        response.finish();\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, rejectReflection, notifyReflection);\n\n        function synchronize(result) {\n          console.log(result);\n          return target.synchronize({\n            action: 'linkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          });\n        }\n\n        function resolveReflection(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:linkReflection', 'resolve', _this, response);\n\n          response.finish();\n          deferred.resolve(_this);\n        }\n\n        function rejectReflection(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:linkReflection', 'rejected', _this, response);\n\n          response.finish();\n          deferred.reject(response);\n        }\n\n        function notifyReflection(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:linkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked if undefined unlinks all\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var config = {\n        action: 'unlink',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t unlink undefined'}]});\n      } else if (_this.saved === false) {\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t unlink new object'}]});\n      } else {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        response.finish();\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, rejectReflection, notifyReflection);\n\n        function synchronize(result) {\n          console.log(result);\n          return target.synchronize({\n            action: 'unlinkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          });\n        }\n\n        function resolveReflection(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'resolve', _this, response);\n\n          response.finish();\n          deferred.resolve(_this);\n        }\n\n        function rejectReflection(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'rejected', _this, response);\n\n          response.finish();\n          deferred.reject(response);\n        }\n\n        function notifyReflection(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData, auto, initialization) {\n      var _this = this;\n\n      if (__setData(_this, validatedData) === true) {\n        _this.reset(auto);\n        _this.synchronized = initialization === true ? false : true;\n        _this.stable = initialization === true ? false : true;\n        _this.updatedAt = Date.now();\n\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData) {\n\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.factory.schema.type !== validatedData.type) {\n        $log.error('Different type then factory', object.factory.schema.type, validatedData);\n        return false;\n      }\n\n      if (!uuid4.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        var relationshipData = validatedData.relationships[key];\n\n        if (relationshipData === undefined) {\n          object.data.relationships[key] = {data: undefined};\n          return;\n        }\n\n        object.data.relationships[key] = object.data.relationships[key] || {};\n        object.data.relationships[key].links = relationshipData.links;\n\n        if (schema.type === 'hasOne') {\n          linkOne(object, key, relationshipData.data);\n        } else if (schema.type === 'hasMany') {\n          if (angular.isArray(relationshipData.data)) {\n            if (relationshipData.data.length === 0) {\n              object.data.relationships[key].data = [];\n              object.unlinkAll(key);\n            } else {\n              angular.forEach(\n                object.relationships[key],\n                unlinkOne.bind(undefined, object, key, relationshipData.data)\n              );\n              angular.forEach(\n                relationshipData.data,\n                linkOne.bind(undefined, object, key)\n              );\n            }\n          }\n        }\n      }\n\n      function linkOne(object, key, data) {\n        var factory;\n\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        factory = $jsonapi.getFactory(data.type);\n\n        if (factory === undefined) {\n          $log.error('Factory not found', data.type, data);\n          return;\n        }\n\n        var target = factory.cache.get(data.id);\n\n        AngularJsonAPIModelLinkerService.link(object, key, target);\n      }\n\n      function unlinkOne(object, key, relationshipData, target) {\n        if (relationshipData.indexOf(target.data.id) > -1) {\n          return;\n        }\n\n        AngularJsonAPIModelLinkerService.unlink(object, key, target);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICache', AngularJsonAPICacheWrapper);\n\n  function AngularJsonAPICacheWrapper(\n    uuid4,\n    $log\n  ) {\n\n    AngularJsonAPICache.prototype.get = get;\n    AngularJsonAPICache.prototype.index = index;\n    AngularJsonAPICache.prototype.setIndexIds = setIndexIds;\n    AngularJsonAPICache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPICache.prototype.fromJson = fromJson;\n    AngularJsonAPICache.prototype.toJson = toJson;\n    AngularJsonAPICache.prototype.clear = clear;\n\n    AngularJsonAPICache.prototype.remove = remove;\n    AngularJsonAPICache.prototype.revertRemove = revertRemove;\n    AngularJsonAPICache.prototype.clearRemoved = clearRemoved;\n\n    return AngularJsonAPICache;\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPICache(factory) {\n      var _this = this;\n\n      _this.factory = factory;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n\n      _this.indexIds = undefined;\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData, config) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.factory.Model(validatedData, config.saved, config.synchronized);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData, config.saved, config.initialization);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      var config = {\n        saved: true,\n        synchronized: false,\n        initialization: true\n      };\n\n      if (angular.isObject(collection) && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n        _this.indexIds = collection.indexIds;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, config);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: {},\n        updatedAt: _this.updatedAt,\n        indexIds: _this.indexIds\n      };\n\n      angular.forEach(_this.data, function(object, key) {\n        json.data[key] = object.toJson();\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.indexIds = undefined;\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.factory.Model({id: id, type: _this.factory.Model.prototype.schema.type}, true, false);\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization, used for index requests\n     * @param  {objec} params\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function index(params) {\n      var _this = this;\n\n      $log.warn('Unused params', params);\n\n      if (_this.indexIds === undefined) {\n        return _this.indexIds;\n      }\n\n      return _this.indexIds.map(_this.get.bind(_this));\n    }\n\n    /**\n     * Cache ids of objects returned by index request\n     * @param {ids array or AngularJsonAPIModel array} array Objects or ids to be cached\n     */\n    function setIndexIds(array) {\n      var _this = this;\n\n      _this.indexIds = [];\n\n      angular.forEach(array, function(element) {\n        if (angular.isString(element) && uuid4.validate(element)) {\n          _this.indexIds.push(element);\n        } else if (angular.isObject(element) && uuid4.validate(element.data.id)) {\n          _this.indexIds.push(element.data.id);\n        }\n      });\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises, resolvedCallback, rejectedCallback) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.resolve(promise)\n            .then(function(value) {\n              if (angular.isFunction(resolvedCallback)) {\n                resolvedCallback(value);\n              }\n\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              if (angular.isFunction(rejectedCallback)) {\n                rejectedCallback(reason);\n              }\n\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerSimple;\n\n    function AngularJsonAPISynchronizerSimple(synchronizations) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, synchronizations);\n\n      angular.forEach(synchronizations, function(synchronization) {\n        synchronization.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push(result.reason);\n          }\n        });\n\n        if (errors.length > 0) {\n          deferred.reject({data: data, finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(synchronizations) {\n      var _this = this;\n\n      _this.synchronizations = synchronizations;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.factory.Model.prototype.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationRest', AngularJsonAPISynchronizationRestWrapper);\n\n  function AngularJsonAPISynchronizationRestWrapper(\n    AngularJsonAPISynchronizationPrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISynchronizationRest.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationRest.prototype.constructor = AngularJsonAPISynchronizationRest;\n\n    return AngularJsonAPISynchronizationRest;\n\n    function AngularJsonAPISynchronizationRest(url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISynchronizationPrototype.call(_this);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target !== undefined && config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t unlink object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          if (config.target === undefined) {\n            $http({\n              method: 'PUT',\n              headers: headers,\n              data: {data: []},\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key\n            }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n          } else {\n            $http({\n              method: 'DELETE',\n              headers: headers,\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key + '/' + config.target.data.id\n            }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n          }\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target === undefined || config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'PUT',\n            headers: headers,\n            data: {data: AngularJsonAPIModelLinkerService.toLinkData(config.target)},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          $http({\n            method: 'POST',\n            headers: headers,\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        return $http({\n          method: 'PUT',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url + '/',\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function resolveHttp(response) {\n        return $q.resolve(response.data);\n      }\n\n      function rejectHttp(response) {\n        var deferred = $q.defer();\n\n        if (response.status === 0) {\n          $http({\n            method: 'GET',\n            url: 'https://status.cloud.google.com/incidents.schema.json'\n          }).then(rejectServerOffline, rejectNoConnection);\n        } else {\n          deferred.reject({status: response.status, statusText: response.statusText});\n        }\n\n        return deferred.promise;\n\n        function rejectServerOffline() {\n          deferred.reject({status: response.status, statusText: 'Server is offline'});\n        }\n\n        function rejectNoConnection() {\n          deferred.reject({status: response.status, statusText: 'No internet connection'});\n        }\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizationPrototype', AngularJsonAPISynchronizationPrototypeWrapper);\n\n  function AngularJsonAPISynchronizationPrototypeWrapper() {\n    AngularJsonAPISynchronizationPrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.after = afterSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.begin = begin;\n    AngularJsonAPISynchronizationPrototype.prototype.finish = finish;\n    AngularJsonAPISynchronizationPrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISynchronizationPrototype;\n\n    function AngularJsonAPISynchronizationPrototype() {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clearCache',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh',\n        'include'\n      ];\n\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationLocal', AngularJsonAPISynchronizationLocalWrapper);\n\n  function AngularJsonAPISynchronizationLocalWrapper(\n    AngularJsonAPISynchronizationPrototype,\n    $window,\n    $q\n  ) {\n\n    AngularJsonAPISynchronizationLocal.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationLocal.prototype.constructor = AngularJsonAPISynchronizationLocal;\n\n    return AngularJsonAPISynchronizationLocal;\n\n    function AngularJsonAPISynchronizationLocal(prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISynchronizationPrototype.call(_this);\n\n      _this.synchronization('init', init);\n\n      _this.begin('clearCache', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('refresh', updateStorage);\n      _this.begin('unlink', updateStorage);\n      _this.begin('unlinkReflection', updateStorage);\n      _this.begin('link', updateStorage);\n      _this.begin('linkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.begin('get', updateStorage);\n      _this.begin('all', updateStorage);\n      _this.begin('include', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clearCache', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('refresh', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n      _this.finish('include', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.factory.schema.type;\n        return $q.resolve($window.localStorage.getItem(prefix + '.' + type));\n      }\n\n      function clear() {\n        var type = _this.synchronizer.factory.schema.type;\n        $window.localStorage.removeItem(prefix + '.' + type);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.factory.schema.type;\n        var cache = _this.synchronizer.factory.cache;\n        $window.localStorage.setItem(prefix + '.' + type, cache.toJson());\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper($log, pluralize, AngularJsonAPISchemaLink) {\n\n    return AngularJsonAPISchema;\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = new AngularJsonAPISchemaLink(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get.join(',');\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all.join(',');\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchemaLink', AngularJsonAPILinkSchrapperLink);\n\n  function AngularJsonAPILinkSchrapperLink($log, pluralize) {\n\n    return AngularJsonAPISchemaLink;\n\n    function AngularJsonAPISchemaLink(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        if (linkSchema.type !== 'hasMany' && linkSchema.type !== 'hasOne') {\n          $log.error('Schema of link with wrong type: ', linkSchema.type, 'available: hasOne, hasMany');\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n\n        if (linkSchema.reflection === undefined) {\n          _this.reflection = _this.type === 'hasMany' ? pluralize.singular(type) : type;\n        } else {\n          _this.reflection = linkSchema.reflection;\n        }\n\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(AngularJsonAPIAbstractModel, AngularJsonAPISchema, $log) {\n\n    return {\n      model: modelFactory\n    };\n\n    function modelFactory(schemaObj, factory) {\n      var Model = function(data, updatedAt, saved) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, updatedAt, saved);\n\n        _this.form.parent = _this;\n      };\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.factory = factory;\n      Model.prototype.synchronize = factory.synchronizer.synchronize.bind(factory.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return Model;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIFactory', AngularJsonAPIFactoryWrapper);\n\n  function AngularJsonAPIFactoryWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPICache,\n    AngularJsonAPICollection,\n    uuid4,\n    $rootScope,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIFactory.prototype.get = get;\n    AngularJsonAPIFactory.prototype.all = all;\n    AngularJsonAPIFactory.prototype.remove = remove;\n    AngularJsonAPIFactory.prototype.initialize = initialize;\n\n    AngularJsonAPIFactory.prototype.clearCache = clearCache;\n\n    return AngularJsonAPIFactory;\n\n    /**\n     * AngularJsonAPIFactory constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the factory\n     */\n    function AngularJsonAPIFactory(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = new AngularJsonAPISchema(schema);\n      _this.cache = new AngularJsonAPICache(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.factory = _this;\n\n      _this.Model = AngularJsonAPIModel.model(\n        _this.schema,\n        _this\n      );\n\n      _this.initialized = false;\n      _this.type = _this.schema.type;\n\n      synchronizer.factory = _this;\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'resolved', response);\n        _this.cache.fromJson(response.data);\n        _this.initialized = true;\n\n        response.finish();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'rejected', response);\n        response.finish();\n        _this.initialized = true;\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'notify', response);\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id) {\n      var _this = this;\n\n      if (!uuid4.validate(id)) {\n        return $q.reject({errors: [{status: 0, statusText: 'Invalid id not uuid4'}]});\n      }\n\n      var object = _this.cache.get(id);\n\n      object.refresh();\n\n      return object;\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = params || {};\n\n      var collection = new AngularJsonAPICollection(\n        _this,\n        angular.extend(params, _this.schema.params.all)\n      );\n\n      collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n\n      return object.remove();\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize(key, target) {\n      var _this = this;\n      var relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(relationshipSchema, relationshipName) {\n        if (relationshipSchema.type === 'hasOne') {\n          relationships[relationshipName] = {\n            data: null\n          };\n        } else if (relationshipSchema.type === 'hasMany') {\n          relationships[relationshipName] = {\n            data: []\n          };\n        }\n      });\n\n      if (key !== undefined && target !== undefined) {\n        var schema = _this.schema[key];\n\n        if (schema.type === 'hasOne') {\n          relationships[key] = {\n            data: target.data.id\n          };\n        } else if (schema.type === 'hasMany') {\n          $log.warn('Initialize with relationship disallowed for hasMany relationships');\n        }\n      }\n\n      var data = {\n        type: _this.type,\n        id: uuid4.generate(),\n        attributes: {},\n        relationships: relationships\n      };\n\n      var config = {\n        saved: false,\n        synchronized: false,\n        initialization: false\n      };\n\n      var object = _this.cache.addOrUpdate(data, config);\n\n      $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:initialize', 'resolved', object);\n\n      return object;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clearCache() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: 'clearCache'\n      };\n\n      _this.cache.clear();\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clearCache', 'notify', response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    $rootScope,\n    $injector,\n    $q\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n\n    return AngularJsonAPICollection;\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIFactory} factory Factory associated with the collection\n     * @param {object} params  Params associated with this factory (such as filters)\n     */\n    function AngularJsonAPICollection(factory, params) {\n      var _this = this;\n\n      _this.factory = factory;\n      _this.type = factory.schema.type;\n      _this.params = params;\n\n      _this.errors = {\n        synchronization: {\n          name: 'Synchronization',\n          description: 'Errors during synchronization',\n          errors: []\n        }\n      };\n\n      _this.error = false;\n\n      _this.data = _this.factory.cache.index(_this.params);\n      _this.synchronized = false;\n\n      $rootScope.$on('angularJsonAPI:' + _this.type + ':object:remove', remove);\n      $rootScope.$on('angularJsonAPI:' + _this.type + ':factory:clearCache', clear);\n      $rootScope.$on('angularJsonAPI:' + _this.type + ':factory:add', add);\n\n      function remove(event, status, object) {\n        var index;\n\n        if (status === 'resolved') {\n\n          index = _this.data.indexOf(object);\n          if (index > -1) {\n            _this.data.splice(index, 1);\n            _this.factory.cache.setIndexIds(_this.data);\n          }\n        }\n      }\n\n      function clear() {\n        _this.data = undefined;\n      }\n\n      function add(event, status, object, response, addToIndex) {\n        if (addToIndex === true && status === 'resolved') {\n          _this.data.push(object);\n        }\n      }\n    }\n\n    /**\n     * Shortcut to this.factory.get\n     * @param  {uuid4} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id) {\n      var _this = this;\n\n      return _this.factory.get(id);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var deferred = $q.defer();\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params\n      };\n\n      _this.factory.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        _this.data = results.data;\n        _this.errors.synchronization.errors = [];\n        _this.error = false;\n\n        _this.updatedAt = Date.now();\n        _this.synchronized = true;\n\n        _this.factory.cache.setIndexIds(_this.data);\n        response.finish();\n\n        function synchronizeIncluded(object) {\n          return object.synchronize({\n            action: 'include',\n            object: object\n          });\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response);\n        }\n\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'rejected', _this, response);\n\n        _this.errors.synchronization.errors = response.errors;\n        _this.error = true;\n\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider() {\n    var memory = {};\n    var names = [];\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPIFactory) {\n      return {\n        form: form,\n        get: get,\n        remove: remove,\n        all: all,\n        addFactory: addFactory,\n        getFactory: getFactory,\n        clearCache: clearCache,\n        proccesResults: proccesResults,\n\n        allFactories: allFactories,\n        factoriesNames: factoriesNames\n      };\n\n      function allFactories() {\n        return memory;\n      }\n\n      function factoriesNames() {\n        return names;\n      }\n\n      function addFactory(schema, synchronization) {\n        var factory = new AngularJsonAPIFactory(schema, synchronization);\n\n        memory[schema.type] = factory;\n        names.push(schema.type);\n      }\n\n      function getFactory(type) {\n        return memory[type];\n      }\n\n      function form(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t add not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].saved.form;\n      }\n\n      function get(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].get(id);\n      }\n\n      function remove(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t remove not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].remove(id);\n      }\n\n      function all(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get all of not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].all();\n      }\n\n      function clearCache() {\n        angular.forEach(memory, function(factory) {\n          factory.clearCache();\n        });\n      }\n\n      function proccesResults(results) {\n        var objects = {\n          data: [],\n          included: []\n        };\n\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n        }\n\n        var config = {\n          saved: true,\n          synchronized: true,\n          initialization: false\n        };\n\n        angular.forEach(results.included, function(data) {\n          objects.included.push(getFactory(data.type).cache.addOrUpdate(data, config));\n        });\n\n        if (angular.isArray(results.data)) {\n          angular.forEach(results.data, function(data) {\n            objects.data.push(getFactory(data.type).cache.addOrUpdate(data, config));\n          });\n        } else {\n          objects.data.push(getFactory(results.data.type).cache.addOrUpdate(results.data, config));\n        }\n\n        return objects;\n      }\n    }\n  }\n\n})();\n\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(function($logProvider) {\n    $logProvider.debugEnabled(false);\n  });\n})();\n"],"sourceRoot":"/source/"}