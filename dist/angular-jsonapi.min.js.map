{"version":3,"sources":["/source/jsonapi.module.js","/source/utils/lazy-property.js","/source/utils/all-settled.js","/source/synchronization/synchronization.js","angular-jsonapi.min.js","/source/synchronization/synchronization-rest.js","/source/synchronization/synchronization-local.js","/source/collection/collection.factory.js","/source/abstract-data/schema.js","/source/abstract-data/model.factory.js","/source/abstract-data/abstract-data.js","/source/abstract-data/abstract-data-form.js","/source/jsonapi.provider.js"],"names":["angular","module","constant","pluralize","target","propertyName","callback","result","done","Object","defineProperty","get","call","enumerable","configurable","config","$provide","decorator","$delegate","$q","allSettled","promises","wrap","promise","when","then","value","success","reason","wrapped","isArray","forEach","key","hasOwnProperty","all","AngularJsonAPISynchronizationWrapper","AngularJsonAPISynchronization","_this","this","allHooks","state","beginHooks","beforeHooks","synchronizationHooks","afterHooks","finishHooks","options","hookName","loading","extend","synchronization","extendHooks","hooksKey","hooks","concat","begin","action","push","finish","beforeSynchro","afterSynchro","synchronize","collection","object","linkSchema","linkedObject","params","deferred","defer","undefined","loadingCount","hook","results","resolve","reject","prototype","before","after","factory","$inject","AngularJsonAPISynchronizationRestWrapper","$http","AngularJsonAPISynchronizationRest","url","wrapResp","data","status","headers","afterAll","rawData","included","indexedData","id","addOrUpdate","__remove","allCollections","type","afterGet","method","errors","rest","error","ids","toString","remove","removeLink","linkKey","removed","toLink","addLink","update","toPatchData","add","toJson","Accept","Content-Type","create","constructor","AngularJsonAPISynchronizationLocalWrapper","$window","AngularJsonAPISynchronizationLocal","prefix","init","datas","localStorage","getItem","Model","schema","fromJson","clear","removeItem","updateStorage","setItem","__updateStorage","AngularJsonAPICollectionWrapper","$log","uuid4","JsonAPIModelFactory","AngularJsonAPISchema","AngularJsonAPICollection","schemaObj","model","attributes","relationships","form","save","__saveNew","bind","__addLinkNew","__synchronize","hasErrors","json","updatedAt","objectData","validatedData","__setData","__setLinks","__setUpdated","__get","filters","length","join","Date","now","newModel","validate","equals","copy","generate","parentCollection","reset","debug","refresh","AngularJsonAPISchemaWrapper","include","linkName","linkSchemaObj","AngularJsonAPILinkSchema","isString","plural","polymorphic","reflection","AngularJsonAPIAbstractData","modelFactory","linkedCollections","isNew","parent","functions","metaFunction","metaFunctionName","AngularJsonAPIAbstractDataWrapper","lazyProperty","AngularJsonAPIAbstractDataForm","validation","removeAllLinks","res","val","addLinkById","linkModelName","linkType","reflectionKey","linkAttributes","warn","duplicate","link","__setLinkInternal","index","splice","__updateAttributes","validatedAttributes","__setAttributes","getAll","linkedCollection","getSingle","__setLink","indexedLinks","__validateField","__validate","__validateData","validator","attributeName","safeData","attributeValue","element","isFunction","err","parseInt","isObject","maxlength","minlength","maxvalue","minvalue","AngularJsonAPIAbstractDataFormWrapper","validateField","log","jsonapiProvider","jsonapiFactory","addModel","memory","getModel","clearAll","$get","provider"],"mappings":"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","file":"angular-jsonapi.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false */\n  .constant('pluralize', pluralize);\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.when(promise)\n            .then(function(value) {\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronization', AngularJsonAPISynchronizationWrapper);\n\n  function AngularJsonAPISynchronizationWrapper($q) {\n    AngularJsonAPISynchronization.prototype.before = beforeSynchro;\n    AngularJsonAPISynchronization.prototype.after = afterSynchro;\n    AngularJsonAPISynchronization.prototype.begin = begin;\n    AngularJsonAPISynchronization.prototype.finish = finish;\n    AngularJsonAPISynchronization.prototype.synchronization = synchronization;\n    AngularJsonAPISynchronization.prototype.synchronize = synchronize;\n    AngularJsonAPISynchronization.prototype.extend = extend;\n\n    return AngularJsonAPISynchronization;\n\n    function AngularJsonAPISynchronization() {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clear',\n        'remove',\n        'removeLink',\n        'removeLinkReflection',\n        'addLink',\n        'addLinkReflection',\n        'update',\n        'refresh'\n      ];\n\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function extend(synchronization) {\n      var _this = this;\n\n      extendHooks('beginHooks');\n      extendHooks('beforeHooks');\n      extendHooks('synchronizationHooks');\n      extendHooks('afterHooks');\n      extendHooks('finishHooks');\n\n      function extendHooks(hooksKey) {\n        angular.forEach(synchronization[hooksKey], function(hooks, key) {\n          _this[hooksKey][key] = _this[hooksKey][key].concat(hooks);\n        });\n      }\n\n      angular.extend(_this.options, synchronization.options);\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n    function synchronize(action, collection, object, linkSchema, linkedObject, params) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n\n      _this.state[action].loading = true;\n\n      if (object !== undefined) {\n        object.loadingCount += 1;\n      }\n\n      if (collection !== undefined) {\n        collection.loadingCount += 1;\n      }\n\n      angular.forEach(_this.beginHooks[action], function(hook) {\n        hook.call(_this, collection, object, linkSchema, linkedObject, params);\n      });\n\n      angular.forEach(_this.beforeHooks[action], function(hook) {\n        hook.call(_this, collection, object, linkSchema, linkedObject, params);\n      });\n\n      angular.forEach(_this.synchronizationHooks[action], function(hook) {\n        promises.push(hook.call(_this, collection, object, linkSchema, linkedObject, params));\n      });\n\n      $q.allSettled(promises).then(function(results) {\n        _this.state[action].success = true;\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.afterHooks[action], function(hook) {\n          hook.call(_this, collection, object, linkSchema, linkedObject, params, results);\n        });\n\n        angular.forEach(_this.finishHooks[action], function(hook) {\n          hook.call(_this, collection, object, linkSchema, linkedObject, params);\n        });\n\n        _this.state[action].loading = false;\n\n        if (object !== undefined) {\n          object.loadingCount -= 1;\n        }\n\n        if (collection !== undefined) {\n          collection.loadingCount -= 1;\n        }\n\n        if (_this.state[action].success === true) {\n          deferred.resolve(results);\n        } else {\n          deferred.reject(results);\n        }\n\n      },\n\n      function(results) {\n        deferred.reject(results);\n      });\n\n      return deferred.promise;\n    }\n\n  }\n})();\n","!function(){\"use strict\";angular.module(\"angular-jsonapi\",[\"uuid4\"]).constant(\"pluralize\",pluralize)}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"lazyProperty\",function(t,e,r){var n,o;Object.defineProperty(t,e,{get:function(){return o||(o=!0,n=r.call(t)),n},enumerable:!0,configurable:!0})})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$provide\",function(t){t.decorator(\"$q\",[\"$delegate\",function(t){var e=t;return e.allSettled=e.allSettled||function(t){function r(t){return e.when(t).then(function(t){return{success:!0,value:t}},function(t){return{success:!1,reason:t}})}var n=angular.isArray(t)?[]:{};return angular.forEach(t,function(t,e){n.hasOwnProperty(e)||(n[e]=r(t))}),e.all(n)},e}])}])}(),function(){\"use strict\";function t(t){function e(){var t=this,e=[\"add\",\"init\",\"get\",\"all\",\"clear\",\"remove\",\"removeLink\",\"removeLinkReflection\",\"addLink\",\"addLinkReflection\",\"update\",\"refresh\"];t.state={},t.beginHooks={},t.beforeHooks={},t.synchronizationHooks={},t.afterHooks={},t.finishHooks={},t.options={},angular.forEach(e,function(e){t.beginHooks[e]=[],t.beforeHooks[e]=[],t.synchronizationHooks[e]=[],t.afterHooks[e]=[],t.finishHooks[e]=[],t.state[e]={loading:!1,success:!0}})}function r(t){function e(e){angular.forEach(t[e],function(t,n){r[e][n]=r[e][n].concat(t)})}var r=this;e(\"beginHooks\"),e(\"beforeHooks\"),e(\"synchronizationHooks\"),e(\"afterHooks\"),e(\"finishHooks\"),angular.extend(r.options,t.options)}function n(t,e){var r=this;r.beginHooks[t].push(e)}function o(t,e){var r=this;r.finishHooks[t].push(e)}function a(t,e){var r=this;r.beforeHooks[t].push(e)}function i(t,e){var r=this;r.afterHooks[t].push(e)}function s(t,e){var r=this;r.synchronizationHooks[t].push(e)}function d(e,r,n,o,a,i){var s=this,d=[],l=t.defer();return s.state[e].loading=!0,void 0!==n&&(n.loadingCount+=1),void 0!==r&&(r.loadingCount+=1),angular.forEach(s.beginHooks[e],function(t){t.call(s,r,n,o,a,i)}),angular.forEach(s.beforeHooks[e],function(t){t.call(s,r,n,o,a,i)}),angular.forEach(s.synchronizationHooks[e],function(t){d.push(t.call(s,r,n,o,a,i))}),t.allSettled(d).then(function(t){s.state[e].success=!0,angular.forEach(t,function(t){t.success===!1&&(s.state[e].success=!1)}),angular.forEach(s.afterHooks[e],function(e){e.call(s,r,n,o,a,i,t)}),angular.forEach(s.finishHooks[e],function(t){t.call(s,r,n,o,a,i)}),s.state[e].loading=!1,void 0!==n&&(n.loadingCount-=1),void 0!==r&&(r.loadingCount-=1),s.state[e].success===!0?l.resolve(t):l.reject(t)},function(t){l.reject(t)}),l.promise}return e.prototype.before=a,e.prototype.after=i,e.prototype.begin=n,e.prototype.finish=o,e.prototype.synchronization=s,e.prototype.synchronize=d,e.prototype.extend=r,e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronization\",t),t.$inject=[\"$q\"]}(),function(){\"use strict\";function t(t,e,r){function n(n){function o(t,e,r,n){return{data:t,status:e,headers:r,config:n}}function a(t,e,r,n,o,a){var i,s,d;a[0].success===!0&&(i=a[0].value.data.data,s=a[0].value.data.included,d={},angular.forEach(i,function(e){d[e.id]=e,t.addOrUpdate(e)}),angular.forEach(t.data,function(e){void 0===d[e.id]&&t.__remove(e.id)}),angular.forEach(s,function(e){t.allCollections[e.type].addOrUpdate(e)}))}function i(t,e,r,n,o,a){var i,s;a[0].success===!0&&(i=a[0].value.data.data,s=a[0].value.data.included,t.addOrUpdate(i),angular.forEach(s,function(e){t.allCollections[e.type].addOrUpdate(e)}))}function s(t,a,i,s,d){var l=e.defer(),u={method:\"GET\",headers:v,url:n,params:d||{}};return t.errors.rest=t.errors.rest||{},r(u).success(function(e,r,n,a){t.errors.rest.all=void 0,l.resolve(o(e,r,n,a))}).error(function(e,r,n,a){t.errors.rest.all=e,l.reject(o(e,r,n,a))}),l.promise}function d(t,a,i,s,d){var l,u,c=e.defer();return angular.isArray(a)?(u=[],angular.forEach(a,function(t){u.push(t.data.id)})):u=a.data.id,l={method:\"GET\",headers:v,url:n+\"/\"+u.toString(),params:d||{}},a.errors.rest=a.errors.rest||{},r(l).success(function(t,e,r,n){a.errors.rest.get=void 0,c.resolve(o(t,e,r,n))}).error(function(t,e,r,n){a.errors.rest.get=t,c.reject(o(t,e,r,n))}),c.promise}function l(t,a){var i=e.defer(),s={method:\"DELETE\",headers:v,url:n+\"/\"+a.data.id};return a.errors.rest=a.errors.rest||{},r(s).success(function(t,e,r,n){a.errors.rest.remove=void 0,i.resolve(o(t,e,r,n))}).error(function(t,e,r,n){a.errors.rest.remove=t,i.reject(o(t,e,r,n))}),i.promise}function u(t,a,i,s){var d,l=e.defer();return a.errors.rest=a.errors.rest||{},a.removed===!0||void 0===s?l.resolve():(d={method:\"DELETE\",headers:v,url:n+\"/\"+a.data.id+\"/relationships/\"+i,data:{data:s.toLink()}},r(d).success(function(t,e,r,n){a.errors.rest.removeLink=void 0,l.resolve(o(t,e,r,n))}).error(function(t,e,r,n){a.errors.rest.removeLink=t,l.reject(o(t,e,r,n))})),l.promise}function c(t,a,i,s){var d=e.defer(),l={method:\"POST\",headers:v,url:n+\"/\"+a.data.id+\"/relationships/\"+i,data:{data:s.toLink()}};return a.errors.rest=a.errors.rest||{},r(l).success(function(t,e,r,n){a.errors.rest.addLink=void 0,d.resolve(o(t,e,r,n))}).error(function(t,e,r,n){a.errors.rest.addLink=t,d.reject(o(t,e,r,n))}),d.promise}function p(t,a){var i=e.defer(),s={method:\"PATCH\",headers:v,url:n+\"/\"+a.data.id,data:a.toPatchData()};return a.errors.rest=a.errors.rest||{},r(s).success(function(t,e,r,n){a.errors.rest.update=void 0,i.resolve(o(t,e,r,n))}).error(function(t,e,r,n){a.errors.rest.update=t,i.reject(o(t,e,r,n))}),i.promise}function h(t,a){var i=e.defer(),s={method:\"POST\",headers:v,url:n+\"/\",data:a.toJson()};return a.errors.rest=a.errors.rest||{},r(s).success(function(t,e,r,n){a.errors.rest.add=void 0,i.resolve(o(t,e,r,n))}).error(function(t,e,r,n){a.errors.rest.add=t,i.reject(o(t,e,r,n))}),i.promise}var f=this,v={Accept:\"application/vnd.api+json\",\"Content-Type\":\"application/vnd.api+json\"};t.call(f),f.synchronization(\"remove\",l),f.synchronization(\"removeLink\",u),f.synchronization(\"addLink\",c),f.synchronization(\"update\",p),f.synchronization(\"add\",h),f.synchronization(\"all\",s),f.synchronization(\"get\",d),f.synchronization(\"refresh\",d),f.after(\"all\",a),f.after(\"get\",i),f.after(\"refresh\",i)}return n.prototype=Object.create(t.prototype),n.prototype.constructor=n,n}angular.module(\"angular-jsonapi-rest\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationRest\",t),t.$inject=[\"AngularJsonAPISynchronization\",\"$q\",\"$http\"]}(),function(){\"use strict\";function t(t,e){function r(r){function n(t){var n=e.localStorage.getItem(r+\".\"+t.Model.prototype.schema.type);t.fromJson(n)}function o(t){e.localStorage.removeItem(r+\".\"+t.Model.prototype.schema.type)}function a(t){e.localStorage.setItem(r+\".\"+t.Model.prototype.schema.type,t.toJson())}var i=this;i.__updateStorage=a,t.call(i),i.begin(\"init\",n),i.begin(\"clear\",o),i.begin(\"remove\",a),i.begin(\"removeLink\",a),i.begin(\"removeLinkReflection\",a),i.begin(\"addLink\",a),i.begin(\"addLinkReflection\",a),i.begin(\"update\",a),i.begin(\"add\",a),i.finish(\"get\",a),i.finish(\"all\",a),i.finish(\"init\",a),i.finish(\"clear\",a),i.finish(\"remove\",a),i.finish(\"removeLink\",a),i.finish(\"removeLinkReflection\",a),i.finish(\"addLink\",a),i.finish(\"addLinkReflection\",a),i.finish(\"update\",a),i.finish(\"add\",a),i.finish(\"get\",a),i.finish(\"all\",a)}return r.prototype=Object.create(t.prototype),r.prototype.constructor=r,r}angular.module(\"angular-jsonapi-local\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationLocal\",t),t.$inject=[\"AngularJsonAPISynchronization\",\"$window\"]}(),function(){\"use strict\";function t(t,e,r,n){function o(t,e){var o=this,a=new n(t);o.Model=r.model(a,o.allCollections,o),o.synchronization=e,o.loadingCount=0,o.data={},o.removed={},o.promises={},o.schema=a,o.dummy=new o.Model({type:t.type,attributes:{},relationships:{}},void 0,!0),o.dummy.form.save=v.bind(o.dummy),o.dummy.form.addLink=g.bind(o.dummy),o.allCollections[t.type]=o,o.__synchronize(\"init\"),o.errors={}}function a(){var t=this,e=!1;return angular.forEach(t.errors,function(t){void 0!==t&&(e=!0)}),e}function i(t){var e=this,r=angular.fromJson(t);null!==r&&void 0!==r.data&&(e.updatedAt=r.updatedAt,angular.forEach(r.data,function(t){var r=t.data;e.addOrUpdate(r,t.updatedAt)}))}function s(){var t=this,e={data:{},updatedAt:t.updatedAt};return angular.forEach(t.data,function(t,r){e.data[r]=t.toJson()}),angular.toJson(e)}function d(e,r){var n=this;return void 0===e.id?void t.error(\"Can't add data without id!\",e):(void 0===n.data[e.id]?n.data[e.id]=new this.Model(e,r):(n.data[e.id].__setData(e,r),n.data[e.id].__setLinks(e.relationships)),n.data[e.id].__setUpdated(r),n.data[e.id])}function l(t){var e=this;return void 0===e.data[t]&&(e.data[t]=new e.Model({id:t,type:e.Model.prototype.schema.type},void 0,!0)),e.data[t]}function u(t){var e,r=this;return angular.isArray(t)?(e=[],angular.forEach(t,function(t){e.push(r.__get(t))})):e=r.__get(t),r.__synchronize(\"get\",e,void 0,void 0,r.schema.params.get),e}function c(){var t=this;return t.__synchronize(\"all\",void 0,void 0,void 0,t.schema.params.all),t}function p(){var t=this;t.updatedAt=Date.now(),t.data={},t.__synchronize(\"clear\")}function h(t){var e=this,r=e.data[t];e.removed[t]=r,e.updatedAt=Date.now(),delete e.data[t]}function f(e){var r=this,n=r.data[e];void 0!==n?(r.__remove(e),n.__remove(e)):t.error(\"Object with this id does not exist\"),r.__synchronize(\"remove\",n)}function v(){var r,n=this,o=n.form.validate();if(angular.equals(o,{})){var a=angular.copy(n.form.data);if(void 0===a.id)a.id=e.generate();else if(!e.validate(a.id))return void t.error(\"Wrong id of dummy data!\");a.type=n.schema.type,r=n.parentCollection.addOrUpdate(a),n.form.reset(),n.relationships={},n.parentCollection.__synchronize(\"add\",r)}return r}function g(e,r){var n=this;return void 0===n.schema.relationships[e]?void t.error(\"Link'\",e,\"'not present in schema of\",n.data.type,n):void(\"hasOne\"===n.schema.relationships[e].type?n.form.data.relationships[e]={data:{type:r.data.type,id:r.data.id}}:(n.form.data.relationships[e].data=n.form.data.relationships[e].data||[],n.form.data.relationships[e].data.push({type:r.data.type,id:r.data.id})))}function y(e,r,n,o,a){var i,s=this;t.debug(\"Synchro Collection\",this.Model.prototype.schema.type,{action:e,object:r,linkKey:n,linkedObject:o,params:a}),i=s.synchronization.synchronize(e,s,r,n,o,a),void 0!==r?r.promises[e]=i:s.promises[e]=i}return o.prototype.allCollections={},o.prototype.__synchronize=y,o.prototype.__get=l,o.prototype.__remove=h,o.prototype.get=u,o.prototype.all=c,o.prototype.refresh=c,o.prototype.remove=f,o.prototype.clear=p,o.prototype.fromJson=i,o.prototype.toJson=s,o.prototype.addOrUpdate=d,o.prototype.hasErrors=a,o}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICollection\",t),t.$inject=[\"$log\",\"uuid4\",\"JsonAPIModelFactory\",\"AngularJsonAPISchema\"]}(),function(){\"use strict\";function t(t,e){function r(t){var e=this,r=t.include||{};t.include=r,r.get=t.include.get||[],r.all=t.include.all||[],e.params={get:{},all:{}},angular.forEach(t.relationships,function(e,o){var a=new n(e,o,t.type);t.relationships[o]=a,a.included===!0&&(r.get.push(o),\"hasOne\"===a.type&&r.all.push(o))}),angular.extend(e,t),r.get.length>0&&(e.params.get.include=r.get.join(\",\")),r.all.length>0&&(e.params.all.include=r.all.join(\",\"))}function n(r,n,o){var a=this;angular.isString(r)?(a.model=e.plural(n),a.type=r,a.polymorphic=!1,a.reflection=o):(void 0===r.type&&t.error(\"Schema of link without a type: \",r,n),a.model=r.model||e.plural(n),a.type=r.type,a.polymorphic=r.polymorphic||!1,a.reflection=r.reflection||o,a.included=r.included||!1)}return r}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchema\",t),t.$inject=[\"$log\",\"pluralize\"]}(),function(){\"use strict\";function t(t,e,r){function n(e,n,o){var a=function(e,n,o){var a=this;e.type!==a.schema.type&&r.error(\"Data type other then declared in schema: \",e.type,\" instead of \",a.schema.type),t.call(a,e,n,o),a.form.parent=a};return a.prototype=Object.create(t.prototype),a.prototype.constructor=a,a.prototype.schema=e,a.prototype.linkedCollections=n,a.prototype.parentCollection=o,angular.forEach(e.functions,function(t,e){a.prototype[e]=function(){return t.call(this)}}),a}return{model:n}}angular.module(\"angular-jsonapi\").factory(\"JsonAPIModelFactory\",t),t.$inject=[\"AngularJsonAPIAbstractData\",\"AngularJsonAPISchema\",\"$log\"]}(),function(){\"use strict\";function t(t,e,r,n){function o(t,e,r){var o=this;t.relationships=t.relationships||{},o.removed=!1,o.loadingCount=0,o.data={relationships:{},attributes:{}},o.relationships={},o.errors={validation:{}},o.promises={},o.dummy=r||!1,o.__setUpdated(e),o.__setData(t,e),o.form=new n(o)}function a(){var t=this;t.parentCollection.__synchronize(\"refresh\",t)}function i(){var t=this,e=!1;return angular.forEach(t.errors,function(t){void 0!==t&&(e=!0)}),e}function s(){var t=this;return{data:t.data,updatedAt:t.updatedAt}}function d(t){var e=this;e.updatedAt=t||Date.now(),e.parentCollection.updatedAt=e.updatedAt}function l(){var t=this;t.__setUpdated(),t.removed=!0,t.removeAllLinks()}function u(){var t=this;t.__remove(),t.parentCollection.remove(t.data.id)}function c(){return{type:this.data.type,id:this.data.id}}function p(){var t=this,e={data:{}};return angular.forEach(t.data,function(t,r){\"relationships\"!==r&&(e.data[r]=t)}),e}function h(r,n,o){var a=this,i=a.linkedCollections[n].__get(o);return void 0===a.schema.relationships[r]?void t.error(\"Cannot add link not specified in schema: \"+r):void 0===a.linkedCollections[n]?void t.error(\"Cannot add link of not existing type: \"+n):e.validate(o)?void 0===i?void t.error(\"Cant find\",n,\"with\",o):void a.addLink(r,i):void t.error(\"Wrong link id, not uuid4: \"+o)}function f(e,r,n){var o,a,i,s=this,d=s.schema.relationships[e];if(void 0===r)return void t.error(\"Can't add non existing object\");if(void 0===d)return void(n===!1&&t.error(\"Can't add link not present in schema: \",e,s,n));if(d.polymorphic===!1&&d.model!==r.schema.type)return void t.error(\"This relation is not polymorphic, expected: \"+d.model+\" instead of \"+r.schema.type);if(o=d.type,a=d.reflection,\"hasOne\"===o){if(i=s.data.relationships[e].data,void 0!==i&&null!==i&&i.id===r.data.id)return;void 0!==i&&null!==i&&(t.warn(\"Swaping hasOne\",e,\"of\",s.toString()),s.removeLink(e)),i=r.toLink()}else{i=s.data.relationships[e].data||[];var l=!1;if(angular.forEach(i,function(t){t.id===r.data.id&&(l=!0)}),l===!0)return;i.push(r.toLink())}n===!0?s.parentCollection.__synchronize(\"addLinkReflection\",s,e,r):(r.addLink(a,s,!0),s.parentCollection.__synchronize(\"addLink\",s,e,r)),s.__setUpdated(),s.__setLinkInternal(i,e,d)}function v(){var t=this;angular.forEach(t.relationships,function(e,r){t.removeLink(r)})}function g(e,r,n){var o,a,i,s=this,d=s.schema.relationships[e],l=!1;return void 0===s.schema.relationships[e]?void t.error(\"Can't remove link not present in schema\"):(o=d.type,i=d.reflection,a=s.data.relationships[e].data,\"hasOne\"===o?void 0!==r&&r.data.id===a.id&&(s.data.relationships[e].data=null,a=null,l=!0,n!==!0&&void 0!==s.relationships[e]&&s.relationships[e].removeLink(i,s,!0)):void 0===r?(s.data.relationships[e].data=[],a=[],l=!0,n!==!0&&angular.forEach(s.relationships[e],function(t){t.removeLink(i,s,!0)})):angular.forEach(a,function(t,e){t.id===r.data.id&&(n!==!0&&r.removeLink(i,s,!0),a.splice(e,1),l=!0)}),void(l===!0&&(s.__setUpdated(),n!==!0?s.parentCollection.__synchronize(\"removeLink\",s,e,r):s.parentCollection.__synchronize(\"removeLinkReflection\",s,e,r),s.__setLinkInternal(a,e,d))))}function y(t){var e=this;e.__setUpdated(),e.__setAttributes(t),e.parentCollection.__synchronize(\"update\",e)}function m(e,n,o){var a=this,i=o.type,s=o.reflection;if(null===e)delete a.relationships[n],a.relationships[n]=void 0;else if(\"hasMany\"===i&&angular.isArray(e)){var d=function(){var r=[];return angular.forEach(e,function(n){var o=a.linkedCollections[n.type];if(void 0===o)return void t.error(\"No angular-jsonapi schema for\",e.type);var i=o.__get(n.id);i.addLink(s,a,!0),r.push(i)}),r};r(a.relationships,n,d)}else if(\"hasOne\"===i&&null!==e){var l=function(){var r=a.linkedCollections[e.type];if(void 0===r)return void t.error(\"No angular-jsonapi schema for\",e.type);var n=r.__get(e.id);return n.addLink(s,a,!0),n};r(a.relationships,n,l)}}function _(t,e,r){var n=this,o=r.type,a=r.reflection;if(\"hasMany\"===o&&angular.isArray(t)){var i={};angular.forEach(t,function(t){i[t.id]=t}),angular.forEach(n.relationships[e],function(t){void 0===i[t.data.id]&&t.removeLink(a,n,!0)})}else\"hasOne\"===o&&null!==t&&void 0!==n.relationships[e]&&n.relationships[e].data.id!==t.id&&n.relationships[e].removeLink(a,n,!0);n.__setLinkInternal(t,e,r)}function k(t){var e=this;void 0!==t&&(angular.forEach(e.schema.relationships,function(r,n){e.data.relationships[n]=e.data.relationships[n]||{},void 0!==t[n]&&angular.extend(e.data.relationships[n],t[n])}),angular.forEach(e.schema.relationships,function(r,n){void 0!==t[n]&&void 0!==t[n].data&&e.__setLink(t[n].data,n,r)}))}function b(t,e){var r=this,n=[];return void 0!==t&&(n=E(r.schema.attributes[e],t,e)),n}function A(e){var r=this,n={};return angular.forEach(r.schema.attributes,function(o,a){var i=r.__validateField(e[a],a);i.length>0&&(n[a]=i,t.warn(\"Erorrs when validating \",e[a],n))}),n}function L(t){var e=this;angular.forEach(e.schema.attributes,function(r,n){void 0!==t[n]&&(e.data.attributes[n]=t[n])})}function j(t){var e=this,r=angular.copy(t);e.errors.validation=e.__validateData(r),r.relationships=r.relationships||{},r.attributes=r.attributes||{},e.data.id=r.id,e.data.type=r.type,e.__setAttributes(r.attributes),e.__setLinks(r.relationships)}function E(r,n,o){var a=[];if(angular.isArray(r))angular.forEach(r,function(t){a=a.concat(E(t,n,o))});else if(angular.isFunction(r)){var i=r(n);angular.isArray(i)?a.concat(i):t.error(\"Wrong validator type it should return array of errors instead of: \"+i.toString())}else angular.isString(r)?\"text\"===r||\"string\"===r?angular.isString(n)||a.push(o+\" is not a string \"):\"number\"===r||\"integer\"===r?parseInt(n).toString()!==n.toString()&&a.push(o+\" is not a number\"):\"uuid4\"===r?e.validate(n)||a.push(o+\" is not a uuid4\"):\"required\"===r?0===n.toString().length&&a.push(o+\" is empty\"):t.error(\"Wrong validator type: \"+r.toString()):angular.isObject(r)?(void 0!==r.maxlength&&n.length>r.maxlength&&a.push(o+\" is too long max \"+r.maxlength),void 0!==r.minlength&&n.length<r.minlength&&a.push(o+\" is too short min \"+r.minlength),void 0!==r.maxvalue&&parseInt(n)>r.maxvalue&&a.push(o+\" is too big max \"+r.maxvalue),void 0!==r.minvalue&&parseInt(n)<r.minvalue&&a.push(o+\" is too small min \"+r.minvalue)):t.error(\"Wrong validator type: \"+r.toString());return a}return o.prototype.__setData=j,o.prototype.__setLinks=k,o.prototype.__setLink=_,o.prototype.__setAttributes=L,o.prototype.__validateData=A,o.prototype.__validateField=b,o.prototype.__updateAttributes=y,o.prototype.__remove=l,o.prototype.__setUpdated=d,o.prototype.__setLinkInternal=m,o.prototype.refresh=a,o.prototype.remove=u,o.prototype.addLinkById=h,o.prototype.addLink=f,o.prototype.removeLink=g,o.prototype.toLink=c,o.prototype.toPatchData=p,o.prototype.removeAllLinks=v,o.prototype.hasErrors=i,o.prototype.toJson=s,o}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractData\",t),t.$inject=[\"$log\",\"uuid4\",\"lazyProperty\",\"AngularJsonAPIAbstractDataForm\"]}(),function(){\"use strict\";function t(t){function e(t){var e=this;e.data={attributes:{},relationships:{}},e.parent=t,e.reset()}function r(){var e=this,r=e.validate();return angular.equals(r,{})===!1?void t.error(\"Errors in form: \",r):void e.parent.__updateAttributes(e.data)}function n(){var t=this;angular.forEach(t.parent.schema.attributes,function(e,r){t.data.attributes[r]=t.parent.data.attributes[r]||\"\"}),angular.forEach(t.parent.schema.relationships,function(e,r){t.data.relationships[r]=t.parent.data.relationships[r]||{}}),t.errors={validation:{}}}function o(){var t,e=this;return t=e.parent.__validateData(e.data),e.errors.validation=t,t}function a(t){var e,r=this;return e=r.parent.__validateField(r.data[t],t),r.errors.validation[t]=e,e}function i(e){t.log(\"Synchro Collection \"+this.Model.prototype.schema.type,e)}return e.prototype.save=r,e.prototype.reset=n,e.prototype.validate=o,e.prototype.validateField=a,e.prototype.__synchronize=i,e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractDataForm\",t),t.$inject=[\"$log\"]}(),function(){\"use strict\";function t(){function t(t,r){function n(t,n){var o=new r(t,n);e[t.type]=o}function o(t){return e[t]}function a(r){return void 0===e[r]&&t.error(\"Can\t add not existing object type: \"+r+\". Use initialize(Model, datas).\"),e[r].dummy.form}function i(r,n){return void 0===e[r]&&t.error(\"Can\t get not existing object type: \"+r+\". Use initialize(Model, datas).\"),e[r].get(n)}function s(r,n){return void 0===e[r]&&t.error(\"Can\t remove not existing object type: \"+r+\". Use initialize(Model, datas).\"),e[r].remove(n)}function d(r){return void 0===e[r]&&t.error(\"Can\t get all of not existing object type: \"+r+\". Use initialize(Model, datas).\"),e[r].all()}function l(){angular.forEach(e,function(t){t.clear()})}return{form:a,get:i,remove:s,all:d,addModel:n,getModel:o,clearAll:l}}var e={};this.$get=t,t.$inject=[\"$log\",\"AngularJsonAPICollection\"]}angular.module(\"angular-jsonapi\").provider(\"$jsonapi\",t)}();\n//# sourceMappingURL=angular-jsonapi.min.js.map","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationRest', AngularJsonAPISynchronizationRestWrapper);\n\n  function AngularJsonAPISynchronizationRestWrapper(AngularJsonAPISynchronization, $q, $http) {\n\n    AngularJsonAPISynchronizationRest.prototype = Object.create(AngularJsonAPISynchronization.prototype);\n    AngularJsonAPISynchronizationRest.prototype.constructor = AngularJsonAPISynchronizationRest;\n\n    return AngularJsonAPISynchronizationRest;\n\n    function AngularJsonAPISynchronizationRest(url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISynchronization.call(_this);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('removeLink', removeLink);\n      _this.synchronization('addLink', addLink);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n      _this.after('all', afterAll);\n      _this.after('get', afterGet);\n      _this.after('refresh', afterGet);\n\n      function wrapResp(data, status, headers, config) {\n        return {\n          data: data,\n          status: status,\n          headers: headers,\n          config: config\n        };\n      }\n\n      function afterAll(collection, object, linkSchema, linkedObject, params, results) {\n        var rawData;\n        var included;\n        var indexedData;\n\n        if (results[0].success === true) {\n          rawData = results[0].value.data.data;\n          included = results[0].value.data.included;\n          indexedData = {};\n          angular.forEach(rawData, function(data) {\n            indexedData[data.id] = data;\n            collection.addOrUpdate(data);\n          });\n\n          angular.forEach(collection.data, function(data) {\n            if (indexedData[data.id] === undefined) {\n              collection.__remove(data.id);\n            }\n          });\n\n          angular.forEach(included, function(object) {\n            collection.allCollections[object.type].addOrUpdate(object);\n          });\n        }\n      }\n\n      function afterGet(collection, object, linkSchema, linkedObject, params, results) {\n        var data;\n        var included;\n\n        if (results[0].success === true) {\n          data = results[0].value.data.data;\n          included = results[0].value.data.included;\n          collection.addOrUpdate(data);\n\n          angular.forEach(included, function(object) {\n            collection.allCollections[object.type].addOrUpdate(object);\n          });\n        }\n      }\n\n      function all(collection, object, linkSchema, linkedObject, params) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: params || {}\n        };\n\n        collection.errors.rest = collection.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            collection.errors.rest.all = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            collection.errors.rest.all = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function get(collection, object, linkSchema, linkedObject, params) {\n        var deferred = $q.defer();\n        var config;\n        var ids;\n\n        if (angular.isArray(object)) {\n          ids = [];\n          angular.forEach(object, function(object) {\n            ids.push(object.data.id);\n          });\n        } else {\n          ids = object.data.id;\n        }\n\n        config = {\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + ids.toString(),\n          params: params || {}\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.get = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.get = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function remove(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + object.data.id\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.remove = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.remove = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function removeLink(collection, object, linkKey, linkedObject) {\n        var deferred = $q.defer();\n        var config;\n\n        object.errors.rest = object.errors.rest || {};\n\n        if (object.removed === true || linkedObject === undefined) {\n          deferred.resolve();\n        } else {\n          config = {\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + object.data.id + '/relationships/' + linkKey,\n            data: {data: linkedObject.toLink()}\n          };\n\n          $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.removeLink = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.removeLink = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n        }\n\n        return deferred.promise;\n      }\n\n      function addLink(collection, object, linkKey, linkedObject) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'POST',\n          headers: headers,\n          url: url + '/' + object.data.id + '/relationships/' + linkKey,\n          data: {data: linkedObject.toLink()}\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.addLink = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.addLink = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n\n      }\n\n      function update(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'PATCH',\n          headers: headers,\n          url: url + '/' + object.data.id,\n          data: object.toPatchData()\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.update = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.update = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function add(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'POST',\n          headers: headers,\n          url: url + '/',\n          data: object.toJson()\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.add = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.add = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationLocal', AngularJsonAPISynchronizationLocalWrapper);\n\n  function AngularJsonAPISynchronizationLocalWrapper(AngularJsonAPISynchronization, $window) {\n\n    AngularJsonAPISynchronizationLocal.prototype = Object.create(AngularJsonAPISynchronization.prototype);\n    AngularJsonAPISynchronizationLocal.prototype.constructor = AngularJsonAPISynchronizationLocal;\n\n    return AngularJsonAPISynchronizationLocal;\n\n    function AngularJsonAPISynchronizationLocal(prefix) {\n      var _this = this;\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISynchronization.call(_this);\n\n      _this.begin('init', init);\n      _this.begin('clear', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('removeLink', updateStorage);\n      _this.begin('removeLinkReflection', updateStorage);\n      _this.begin('addLink', updateStorage);\n      _this.begin('addLinkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clear', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('removeLink', updateStorage);\n      _this.finish('removeLinkReflection', updateStorage);\n      _this.finish('addLink', updateStorage);\n      _this.finish('addLinkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      function init(collection) {\n        var datas = $window.localStorage.getItem(prefix + '.' + collection.Model.prototype.schema.type);\n        collection.fromJson(datas);\n      }\n\n      function clear(collection) {\n        $window.localStorage.removeItem(prefix + '.' + collection.Model.prototype.schema.type);\n      }\n\n      function updateStorage(collection) {\n        $window.localStorage.setItem(prefix + '.' + collection.Model.prototype.schema.type, collection.toJson());\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    $log,\n    uuid4,\n    JsonAPIModelFactory,\n    AngularJsonAPISchema\n  ) {\n    AngularJsonAPICollection.prototype.allCollections = {};\n\n    AngularJsonAPICollection.prototype.__synchronize = __synchronize;\n    AngularJsonAPICollection.prototype.__get = __get;\n    AngularJsonAPICollection.prototype.__remove = __remove;\n\n    AngularJsonAPICollection.prototype.get = get;\n    AngularJsonAPICollection.prototype.all = all;\n    AngularJsonAPICollection.prototype.refresh = all;\n    AngularJsonAPICollection.prototype.remove = remove;\n    AngularJsonAPICollection.prototype.clear = clear;\n    AngularJsonAPICollection.prototype.fromJson = fromJson;\n    AngularJsonAPICollection.prototype.toJson = toJson;\n    AngularJsonAPICollection.prototype.addOrUpdate = addOrUpdate;\n    AngularJsonAPICollection.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPICollection;\n\n    function AngularJsonAPICollection(schema, synchronization) {\n      var _this = this;\n\n      var schemaObj = new AngularJsonAPISchema(schema);\n\n      _this.Model = JsonAPIModelFactory.model(\n        schemaObj,\n        _this.allCollections,\n        _this\n      );\n\n      _this.synchronization = synchronization;\n\n      _this.loadingCount = 0;\n      _this.data = {};\n      _this.removed = {};\n      _this.promises = {};\n      _this.schema = schemaObj;\n\n      _this.new = new _this.Model({\n        type: schema.type,\n        attributes: {},\n        relationships: {}\n      }, undefined, true);\n\n      _this.new.form.save = __saveNew.bind(_this.new);\n      _this.new.form.addLink = __addLinkNew.bind(_this.new);\n      _this.allCollections[schema.type] = _this;\n\n      _this.__synchronize('init');\n\n      _this.errors = {};\n    }\n\n    function hasErrors() {\n      var _this = this;\n      var result = false;\n\n      angular.forEach(_this.errors, function(error) {\n        if (error !== undefined) {\n          result = true;\n        }\n      });\n\n      return result;\n    }\n\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      if (collection !== null && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, objectData.updatedAt);\n        });\n      }\n    }\n\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: {},\n        updatedAt: _this.updatedAt\n      };\n\n      angular.forEach(_this.data, function(object, key) {\n        json.data[key] = object.toJson();\n      });\n\n      return angular.toJson(json);\n    }\n\n    function addOrUpdate(validatedData, updatedAt) {\n      var _this = this;\n      if (validatedData.id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[validatedData.id] === undefined) {\n        _this.data[validatedData.id] = new this.Model(validatedData, updatedAt);\n      } else {\n        _this.data[validatedData.id].__setData(validatedData, updatedAt);\n        _this.data[validatedData.id].__setLinks(validatedData.relationships);\n      }\n\n      _this.data[validatedData.id].__setUpdated(updatedAt);\n\n      return _this.data[validatedData.id];\n    }\n\n    function __get(id) {\n      var _this = this;\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.Model({id: id, type: _this.Model.prototype.schema.type}, undefined, true);\n      }\n\n      return _this.data[id];\n    }\n\n    function get(id, filters) {\n      var _this = this;\n      var result;\n      var params = [];\n\n      if (_this.schema.params.get.length > 0) {\n        params.push(_this.schema.params.get);\n      }\n\n      angular.forEach(filters, function(value, key) {\n        params.push('filter[' + key + ']=' + value);\n      });\n\n      if (angular.isArray(id)) {\n        result = [];\n        angular.forEach(id, function(id) {\n          result.push(_this.__get(id));\n        });\n      } else {\n        result = _this.__get(id);\n      }\n\n      _this.__synchronize('get', result, undefined, undefined, params.join('&'));\n\n      return result;\n    }\n\n    function all() {\n      var _this = this;\n      _this.__synchronize('all', undefined, undefined, undefined, _this.schema.params.all);\n\n      return _this;\n    }\n\n    function clear() {\n      var _this = this;\n      _this.updatedAt = Date.now();\n      _this.data = {};\n\n      _this.__synchronize('clear');\n    }\n\n    function __remove(id) {\n      var _this = this;\n      var object = _this.data[id];\n\n      _this.removed[id] = object;\n      _this.updatedAt = Date.now();\n\n      delete _this.data[id];\n    }\n\n    function remove(id) {\n      var _this = this;\n      var object = _this.data[id];\n\n      if (object !== undefined) {\n        _this.__remove(id);\n        object.__remove(id);\n      } else {\n        $log.error('Object with this id does not exist');\n      }\n\n      _this.__synchronize('remove', object);\n    }\n\n    function __saveNew() {\n      var _this = this;\n      var errors = _this.form.validate();\n      var newModel;\n\n      if (angular.equals(errors, {})) {\n        var data = angular.copy(_this.form.data);\n        if (data.id === undefined) {\n          data.id = uuid4.generate();\n        } else if (!uuid4.validate(data.id)) {\n          $log.error('Wrong id of new data!');\n          return;\n        }\n\n        data.type = _this.schema.type;\n        newModel = _this.parentCollection.addOrUpdate(data);\n        _this.form.reset();\n        _this.relationships = {};\n        _this.parentCollection.__synchronize('add', newModel);\n      }\n\n      return newModel;\n    }\n\n    function __addLinkNew(linkKey, linkedObject) {\n      var _this = this;\n      if (_this.schema.relationships[linkKey] === undefined) {\n        $log.error('Link\\'', linkKey, '\\'not present in schema of', _this.data.type, _this);\n        return;\n      }\n\n      if (_this.schema.relationships[linkKey].type === 'hasOne') {\n        _this.form.data.relationships[linkKey] = {\n          data: {\n            type: linkedObject.data.type,\n            id: linkedObject.data.id\n          }\n        };\n      } else {\n        _this.form.data.relationships[linkKey].data = _this.form.data.relationships[linkKey].data || [];\n        _this.form.data.relationships[linkKey].data.push({\n          type: linkedObject.data.type,\n          id: linkedObject.data.id\n        });\n      }\n    }\n\n    function __synchronize(action, object, linkKey, linkedObject, params) {\n      var _this = this;\n      var promise;\n\n      $log.debug('Synchro Collection', this.Model.prototype.schema.type, {action: action, object: object, linkKey: linkKey, linkedObject: linkedObject, params: params});\n\n      promise = _this.synchronization.synchronize(action, _this, object, linkKey, linkedObject, params);\n      if (object !== undefined) {\n        object.promises[action] = promise;\n      } else {\n        _this.promises[action] = promise;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper($log, pluralize) {\n\n    return AngularJsonAPISchema;\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = new AngularJsonAPILinkSchema(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get.join(',');\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all.join(',');\n      }\n    }\n\n    function AngularJsonAPILinkSchema(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n        _this.reflection = linkSchema.reflection || type;\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('JsonAPIModelFactory', JsonAPIModelFactory);\n\n  function JsonAPIModelFactory(AngularJsonAPIAbstractData, AngularJsonAPISchema, $log) {\n\n    return {\n      model: modelFactory\n    };\n\n    function modelFactory(schemaObj, linkedCollections, parentCollection) {\n      var Model = function(data, updatedAt, isNew) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractData.call(_this, data, updatedAt, isNew);\n\n        _this.form.parent = _this;\n      };\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractData.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.linkedCollections = linkedCollections;\n      Model.prototype.parentCollection = parentCollection;\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.call(this);\n        };\n      });\n\n      return Model;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractData', AngularJsonAPIAbstractDataWrapper);\n\n  function AngularJsonAPIAbstractDataWrapper(\n    $log,\n    uuid4,\n    lazyProperty,\n    AngularJsonAPIAbstractDataForm\n  ) {\n\n    AngularJsonAPIAbstractData.prototype.__setData = __setData;\n    AngularJsonAPIAbstractData.prototype.__setLinks   = __setLinks;\n    AngularJsonAPIAbstractData.prototype.__setLink = __setLink;\n    AngularJsonAPIAbstractData.prototype.__setAttributes = __setAttributes;\n    AngularJsonAPIAbstractData.prototype.__validateData = __validateData;\n    AngularJsonAPIAbstractData.prototype.__validateField = __validateField;\n    AngularJsonAPIAbstractData.prototype.__updateAttributes = __updateAttributes;\n    AngularJsonAPIAbstractData.prototype.__remove = __remove;\n    AngularJsonAPIAbstractData.prototype.__setUpdated = __setUpdated;\n    AngularJsonAPIAbstractData.prototype.__setLinkInternal = __setLinkInternal;\n\n    AngularJsonAPIAbstractData.prototype.refresh = refresh;\n    AngularJsonAPIAbstractData.prototype.remove = remove;\n    AngularJsonAPIAbstractData.prototype.addLinkById = addLinkById;\n    AngularJsonAPIAbstractData.prototype.addLink = addLink;\n    AngularJsonAPIAbstractData.prototype.removeLink = removeLink;\n    AngularJsonAPIAbstractData.prototype.toLink = toLink;\n    AngularJsonAPIAbstractData.prototype.toPatchData = toPatchData;\n    AngularJsonAPIAbstractData.prototype.removeAllLinks = removeAllLinks;\n    AngularJsonAPIAbstractData.prototype.hasErrors = hasErrors;\n\n    AngularJsonAPIAbstractData.prototype.toJson = toJson;\n\n    return AngularJsonAPIAbstractData;\n\n    function AngularJsonAPIAbstractData(data, updatedAt, isNew) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      _this.removed = false;\n      _this.loadingCount = 0;\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      _this.errors = {\n        validation: {}\n      };\n\n      _this.promises = {};\n\n      _this.isNew = isNew || false;\n\n      _this.__setUpdated(updatedAt);\n      _this.__setData(data, updatedAt);\n\n      _this.form = new AngularJsonAPIAbstractDataForm(_this);\n    }\n\n    function refresh() {\n      var _this = this;\n\n      _this.parentCollection.__synchronize('refresh', _this);\n    }\n\n    function hasErrors() {\n      var _this = this;\n      var result = false;\n\n      angular.forEach(_this.errors, function(error) {\n        if (error !== undefined) {\n          result = true;\n        }\n      });\n\n      return result;\n    }\n\n    function toJson() {\n      var _this = this;\n\n      return {\n        data: _this.data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    function __setUpdated(updatedAt) {\n      var _this = this;\n\n      _this.updatedAt = updatedAt || Date.now();\n      _this.parentCollection.updatedAt = _this.updatedAt;\n    }\n\n    function __remove() {\n      var _this = this;\n\n      _this.__setUpdated();\n      _this.removed = true;\n      _this.removeAllLinks();\n    }\n\n    function remove() {\n      var _this = this;\n\n      _this.__remove();\n      _this.parentCollection.remove(_this.data.id);\n    }\n\n    function toLink() {\n      return {type: this.data.type, id: this.data.id};\n    }\n\n    function toPatchData() {\n      var _this = this;\n      var res = {data: {}};\n      angular.forEach(_this.data, function(val, key) {\n        if (key !== 'relationships') {\n          res.data[key] = val;\n        }\n      });\n\n      return res;\n    }\n\n    function addLinkById(linkKey, linkModelName, id) {\n      var _this = this;\n      var linkedObject = _this.linkedCollections[linkModelName].__get(id);\n\n      if (_this.schema.relationships[linkKey] === undefined) {\n        $log.error('Cannot add link not specified in schema: ' + linkKey);\n        return;\n      }\n\n      if (_this.linkedCollections[linkModelName] === undefined) {\n        $log.error('Cannot add link of not existing type: ' + linkModelName);\n        return;\n      }\n\n      if (!uuid4.validate(id)) {\n        $log.error('Wrong link id, not uuid4: ' + id);\n        return;\n      }\n\n      if (linkedObject === undefined) {\n        $log.error('Cant find', linkModelName, 'with', id);\n        return;\n      }\n\n      _this.addLink(\n        linkKey,\n        linkedObject\n      );\n\n    }\n\n    function addLink(linkKey, linkedObject, reflection) {\n      var _this = this;\n      var linkSchema = _this.schema.relationships[linkKey];\n      var linkType;\n      var reflectionKey;\n      var linkAttributes;\n\n      if (linkedObject === undefined) {\n        $log.error('Can\\'t add non existing object');\n        return;\n      }\n\n      if (linkSchema === undefined) {\n        if (reflection === false) {\n          $log.error('Can\\'t add link not present in schema: ', linkKey, _this, reflection);\n        }\n\n        return;\n      }\n\n      if (linkSchema.polymorphic === false && linkSchema.model !== linkedObject.schema.type) {\n        $log.error('This relation is not polymorphic, expected: ' + linkSchema.model + ' instead of ' + linkedObject.schema.type);\n        return;\n      }\n\n      linkType = linkSchema.type;\n      reflectionKey = linkSchema.reflection;\n\n      if (linkType === 'hasOne') {\n        linkAttributes = _this.data.relationships[linkKey].data;\n\n        if (\n          linkAttributes !== undefined &&\n          linkAttributes !== null &&\n          linkAttributes.id === linkedObject.data.id\n        ) {\n          return;\n        }\n\n        if (linkAttributes !== undefined && linkAttributes !== null) {\n          $log.warn('Swaping hasOne', linkKey, 'of', _this.toString());\n          _this.removeLink(linkKey);\n        }\n\n        linkAttributes = linkedObject.toLink();\n      } else {\n        linkAttributes = _this.data.relationships[linkKey].data || [];\n        var duplicate = false;\n        angular.forEach(linkAttributes, function(link) {\n          if (link.id === linkedObject.data.id) {\n            duplicate = true;\n          }\n        });\n\n        if (duplicate === true) {\n          return;\n        }\n\n        linkAttributes.push(linkedObject.toLink());\n      }\n\n      if (reflection === true) {\n        _this.parentCollection.__synchronize('addLinkReflection', _this, linkKey, linkedObject);\n      } else {\n        linkedObject.addLink(reflectionKey, _this, true);\n        _this.parentCollection.__synchronize('addLink', _this, linkKey, linkedObject);\n      }\n\n      _this.__setUpdated();\n      _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n    }\n\n    function removeAllLinks() {\n      var _this = this;\n\n      angular.forEach(_this.relationships, function(link, key) {\n        _this.removeLink(key);\n      });\n    }\n\n    function removeLink(linkKey, linkedObject, reflection) {\n      var _this = this;\n      var linkSchema = _this.schema.relationships[linkKey];\n      var linkType;\n      var linkAttributes;\n      var reflectionKey;\n      var removed = false;\n\n      if (_this.schema.relationships[linkKey] === undefined) {\n        $log.error('Can\\'t remove link not present in schema');\n        return;\n      }\n\n      linkType = linkSchema.type;\n      reflectionKey = linkSchema.reflection;\n      linkAttributes = _this.data.relationships[linkKey].data;\n\n      if (linkType === 'hasOne') {\n        if (linkedObject !== undefined && linkedObject.data.id === linkAttributes.id) {\n          _this.data.relationships[linkKey].data = null;\n          linkAttributes = null;\n          removed = true;\n          if (reflection !== true && _this.relationships[linkKey] !== undefined) {\n            _this.relationships[linkKey].removeLink(reflectionKey, _this, true);\n          }\n        }\n      } else {\n        if (linkedObject === undefined) {\n          _this.data.relationships[linkKey].data = [];\n          linkAttributes = [];\n          removed = true;\n          if (reflection !== true) {\n            angular.forEach(_this.relationships[linkKey], function(link) {\n              link.removeLink(reflectionKey, _this, true);\n            });\n          }\n        } else {\n          angular.forEach(linkAttributes, function(link, index) {\n            if (link.id === linkedObject.data.id) {\n              if (reflection !== true) {\n                linkedObject.removeLink(reflectionKey, _this, true);\n              }\n\n              linkAttributes.splice(index, 1);\n              removed = true;\n            }\n          });\n        }\n      }\n\n      if (removed === true) {\n        _this.__setUpdated();\n\n        if (reflection !== true) {\n          _this.parentCollection.__synchronize('removeLink', _this, linkKey, linkedObject);\n        } else {\n          _this.parentCollection.__synchronize('removeLinkReflection',  _this, linkKey, linkedObject);\n        }\n\n        _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n      }\n    }\n\n    function __updateAttributes(validatedAttributes) {\n      var _this = this;\n\n      _this.__setUpdated();\n      _this.__setAttributes(validatedAttributes);\n      _this.parentCollection.__synchronize('update', _this);\n    }\n\n    function __setLinkInternal(linkAttributes, linkKey, linkSchema) {\n      var _this = this;\n      var linkType = linkSchema.type;\n      var reflectionKey = linkSchema.reflection;\n\n      if (linkAttributes === null) {\n        delete _this.relationships[linkKey];\n        _this.relationships[linkKey] = undefined;\n      } else if (linkType === 'hasMany' && angular.isArray(linkAttributes)) {\n        var getAll = function() {\n          var result = [];\n          angular.forEach(linkAttributes, function(link) {\n            var linkedCollection = _this.linkedCollections[link.type];\n            if (linkedCollection === undefined) {\n              $log.error('No angular-jsonapi schema for', linkAttributes.type);\n              return;\n            }\n\n            var linkedObject = linkedCollection.__get(link.id);\n            linkedObject.addLink(reflectionKey, _this, true);\n\n            result.push(linkedObject);\n          });\n\n          return result;\n        };\n\n        lazyProperty(_this.relationships, linkKey, getAll);\n      } else if (linkType === 'hasOne' && linkAttributes !== null) {\n\n        var getSingle = function() {\n          var linkedCollection = _this.linkedCollections[linkAttributes.type];\n          if (linkedCollection === undefined) {\n            $log.error('No angular-jsonapi schema for', linkAttributes.type);\n            return;\n          }\n\n          var linkedObject = linkedCollection.__get(linkAttributes.id);\n          linkedObject.addLink(reflectionKey, _this, true);\n\n          return linkedObject;\n        };\n\n        lazyProperty(_this.relationships, linkKey, getSingle);\n      }\n    }\n\n    function __setLink(linkAttributes, linkKey, linkSchema) {\n      var _this = this;\n      var linkType = linkSchema.type;\n      var reflectionKey = linkSchema.reflection;\n\n      if (linkType === 'hasMany' && angular.isArray(linkAttributes)) {\n        var indexedLinks = {};\n        angular.forEach(linkAttributes, function(link) {\n          indexedLinks[link.id] = link;\n        });\n\n        angular.forEach(_this.relationships[linkKey], function(link) {\n          if (indexedLinks[link.data.id] === undefined) {\n            link.removeLink(reflectionKey, _this, true);\n          }\n        });\n      } else if (linkType === 'hasOne' && linkAttributes !== null) {\n        if (_this.relationships[linkKey] !== undefined && _this.relationships[linkKey].data.id !== linkAttributes.id) {\n          _this.relationships[linkKey].removeLink(reflectionKey, _this, true);\n        }\n      }\n\n      _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n    }\n\n    function __setLinks(relationships) {\n      var _this = this;\n      if (relationships === undefined) {\n        return;\n      }\n\n      angular.forEach(_this.schema.relationships, function(linkSchema, linkName) {\n        _this.data.relationships[linkName] = _this.data.relationships[linkName] || {};\n        if (relationships[linkName] !== undefined) {\n          angular.extend(_this.data.relationships[linkName], relationships[linkName]);\n        }\n      });\n\n      angular.forEach(_this.schema.relationships, function(linkSchema, linkKey) {\n        if (relationships[linkKey] !== undefined && relationships[linkKey].data !== undefined) {\n          _this.__setLink(relationships[linkKey].data, linkKey, linkSchema);\n        }\n      });\n    }\n\n    function __validateField(data, key) {\n      var _this = this;\n      var error = [];\n\n      if (data !== undefined) {\n        error = __validate(_this.schema.attributes[key], data, key);\n      }\n\n      return error;\n    }\n\n    function __validateData(data) {\n      var _this = this;\n      var errors = {};\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        var error = _this.__validateField(data[key], key);\n        if (error.length > 0) {\n          errors[key] = error;\n          $log.warn('Erorrs when validating ', data[key], errors);\n        }\n      });\n\n      return errors;\n    }\n\n    function __setAttributes(attributes) {\n      var _this = this;\n\n      angular.forEach(_this.schema.attributes, function(validator, attributeName) {\n        if (attributes[attributeName] !== undefined) {\n          _this.data.attributes[attributeName] = attributes[attributeName];\n        }\n      });\n    }\n\n    function __setData(data) {\n      var _this = this;\n      var safeData = angular.copy(data);\n\n      _this.errors.validation = _this.__validateData(safeData);\n\n      safeData.relationships = safeData.relationships || {};\n      safeData.attributes = safeData.attributes || {};\n\n      _this.data.id = safeData.id;\n      _this.data.type = safeData.type;\n\n      _this.__setAttributes(safeData.attributes);\n      _this.__setLinks(safeData.relationships);\n    }\n\n    function __validate(validator, attributeValue, attributeName) {\n      var errors = [];\n      if (angular.isArray(validator)) {\n        angular.forEach(validator, function(element) {\n          errors = errors.concat(__validate(element, attributeValue, attributeName));\n        });\n      } else if (angular.isFunction(validator)) {\n        var err = validator(attributeValue);\n        if (angular.isArray(err)) {\n          errors.concat(err);\n        } else {\n          $log.error(\n            'Wrong validator type it should return array of errors instead of: ' +\n              err.toString()\n          );\n        }\n      } else if (angular.isString(validator)) {\n        if (validator === 'text' || validator === 'string') {\n          if (!angular.isString(attributeValue)) {\n            errors.push(attributeName + ' is not a string ');\n          }\n        } else if (validator === 'number' || validator === 'integer') {\n          if (parseInt(attributeValue).toString() !== attributeValue.toString()) {\n            errors.push(attributeName + ' is not a number');\n          }\n        } else if (validator === 'uuid4') {\n          if (!uuid4.validate(attributeValue)) {\n            errors.push(attributeName + ' is not a uuid4');\n          }\n        } else if (validator === 'required') {\n          if (attributeValue.toString().length === 0) {\n            errors.push(attributeName + ' is empty');\n          }\n        } else {\n          $log.error('Wrong validator type: ' + validator.toString());\n        }\n      } else if (angular.isObject(validator)) {\n        if (validator.maxlength !== undefined && attributeValue.length > validator.maxlength) {\n          errors.push(attributeName + ' is too long max ' + validator.maxlength);\n        }\n\n        if (validator.minlength !== undefined && attributeValue.length < validator.minlength) {\n          errors.push(attributeName + ' is too short min ' + validator.minlength);\n        }\n\n        if (validator.maxvalue !== undefined && parseInt(attributeValue) > validator.maxvalue) {\n          errors.push(attributeName + ' is too big max ' + validator.maxvalue);\n        }\n\n        if (validator.minvalue !== undefined && parseInt(attributeValue) < validator.minvalue) {\n          errors.push(attributeName + ' is too small min ' + validator.minvalue);\n        }\n      } else {\n        $log.error('Wrong validator type: ' + validator.toString());\n      }\n\n      return errors;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractDataForm', AngularJsonAPIAbstractDataFormWrapper);\n\n  function AngularJsonAPIAbstractDataFormWrapper($log) {\n\n    AngularJsonAPIAbstractDataForm.prototype.save = save;\n    AngularJsonAPIAbstractDataForm.prototype.reset = reset;\n    AngularJsonAPIAbstractDataForm.prototype.validate = validate;\n    AngularJsonAPIAbstractDataForm.prototype.validateField = validateField;\n\n    AngularJsonAPIAbstractDataForm.prototype.__synchronize = __synchronize;\n\n    return AngularJsonAPIAbstractDataForm;\n\n    function AngularJsonAPIAbstractDataForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        attributes: {},\n        relationships: {}\n      };\n      _this.parent = parent;\n      _this.reset();\n    }\n\n    function save() {\n      var _this = this;\n      var errors = _this.validate();\n\n      if (angular.equals(errors, {}) === false) {\n        $log.error('Errors in form: ', errors);\n        return;\n      }\n\n      _this.parent.__updateAttributes(_this.data);\n    }\n\n    function reset() {\n      var _this = this;\n\n      angular.forEach(_this.parent.schema.attributes, function(data, key) {\n        _this.data.attributes[key] = _this.parent.data.attributes[key] || '';\n      });\n\n      angular.forEach(_this.parent.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = _this.parent.data.relationships[key] || {};\n      });\n\n      _this.errors = {\n        validation: {}\n      };\n    }\n\n    function validate() {\n      var _this = this;\n      var errors;\n\n      errors = _this.parent.__validateData(_this.data);\n\n      _this.errors.validation = errors;\n\n      return errors;\n    }\n\n    function validateField(key) {\n      var _this = this;\n      var errors;\n      errors = _this.parent.__validateField(\n        _this.data[key],\n        key\n      );\n\n      _this.errors.validation[key] = errors;\n\n      return errors;\n    }\n\n    function __synchronize(key) {\n      $log.log('Synchro Collection ' + this.Model.prototype.schema.type, key);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider() {\n    var memory = {};\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPICollection) {\n      return {\n        form: form,\n        get: get,\n        remove: remove,\n        all: all,\n        addModel: addModel,\n        getModel: getModel,\n        clearAll: clearAll\n      };\n\n      function addModel(schema, synchronization) {\n        var collection = new AngularJsonAPICollection(schema, synchronization);\n\n        memory[schema.type] = collection;\n      }\n\n      function getModel(type) {\n        return memory[type];\n      }\n\n      function form(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t add not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].isNew.form;\n      }\n\n      function get(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].get(id);\n      }\n\n      function remove(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t remove not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].remove(id);\n      }\n\n      function all(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get all of not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].all();\n      }\n\n      function clearAll() {\n        angular.forEach(memory, function(collection) {\n          collection.clear();\n        });\n      }\n    }\n  }\n\n})();\n\n"],"sourceRoot":"/source/"}