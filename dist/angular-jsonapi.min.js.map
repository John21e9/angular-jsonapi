{"version":3,"sources":["/source/jsonapi.module.js","/source/model/model-validator/model-validator.js","angular-jsonapi.min.js","/source/model/model-linker/model-linker.js","/source/model/model-form/model-form.js","/source/model/abstract-model/abstract-model.js","/source/factory/factory-cache/factory-cache.factory.js","/source/utils/lazy-property.js","/source/utils/kebab-case.js","/source/utils/all-settled.js","/source/synchronizers/synchronizer-simple.js","/source/synchronizers/synchronizer-prototype.js","/source/synchronizations/synchronization-rest.js","/source/synchronizations/synchronization-prototype.js","/source/synchronizations/synchronization-local.js","/source/schema/schema.js","/source/schema/schema-link.js","/source/model/model.js","/source/factory/factory.js","/source/collection/collection.js","/source/jsonapi.provider.js","/source/jsonapi.config.js"],"names":["angular","module","constant","pluralize","AngularJsonAPIModelValidatorService","$q","validateForm","schema","data","resolve","validateField","key","_this","this","service","$inject","AngularJsonAPIModelLinkerService","$log","toLinkData","object","type","id","link","target","oneWay","console","log","undefined","error","relationships","polymorphic","model","__addHasMany","__processAddHasMany","__addHasOne","__processAddHasOne","unlink","__removeHasMany","__processRemove","reflectionSchema","reflectionKey","reflection","oldReflectionSchema","oldReflection","__removeHasOne","reset","debug","linkData","isArray","indexOf","push","index","splice","AngularJsonAPIModelFormWrapper","AngularJsonAPIModelForm","parent","attributes","toJson","copy","forEach","value","save","auto","slice","validator","errors","validation","validate","reject","erorrs","deferred","defer","then","promise","prototype","factory","AngularJsonAPIAbstractModelWrapper","uuid4","$rootScope","$injector","AngularJsonAPIAbstractModel","saved","synchronized","stable","removed","loadingCount","updatedAt","Date","now","name","promises","__setData","form","response","$emit","update","finish","notify","config","action","synchronize","refresh","$jsonapi","proccesResults","get","params","status","statusText","remove","unlinkAll","parentFactory","cache","clearRemoved","revertRemove","removeLink","linksObj","removeReflectionLink","bind","isObject","resolveReflection","rejectReflection","notifyReflection","validatedData","initialization","setAttributes","validators","setRelationships","relationshipData","links","linkOne","length","unlinkOne","getFactory","AngularJsonAPICacheWrapper","AngularJsonAPICache","size","indexIds","addOrUpdate","Model","fromJson","json","collection","objectData","clear","warn","map","setIndexIds","array","element","isString","propertyName","callback","result","done","Object","defineProperty","call","enumerable","configurable","str","replace","toLowerCase","$provide","decorator","$delegate","allSettled","resolvedCallback","rejectedCallback","wrap","isFunction","success","reason","wrapped","hasOwnProperty","all","AngularJsonAPISynchronizerSimpleWrapper","AngularJsonAPISynchronizerPrototype","AngularJsonAPISynchronizerSimple","synchronizations","state","synchronization","synchronizer","step","resolved","results","afterHooks","hook","finishHooks","rejected","noop","beginHooks","beforeHooks","synchronizationHooks","create","constructor","AngularJsonAPISynchronizerPrototypeWrapper","AngularJsonAPISynchronizationRestWrapper","AngularJsonAPISynchronizationPrototype","toKebabCase","$http","AngularJsonAPISynchronizationRest","url","method","headers","resolveHttp","rejectHttp","add","rejectServerOffline","rejectNoConnection","Accept","Content-Type","AngularJsonAPISynchronizationPrototypeWrapper","allHooks","options","hookName","loading","begin","beforeSynchro","afterSynchro","before","after","AngularJsonAPISynchronizationLocalWrapper","$window","AngularJsonAPISynchronizationLocal","prefix","init","localStorage","getItem","removeItem","updateStorage","setItem","__updateStorage","AngularJsonAPISchemaWrapper","AngularJsonAPISchemaLink","AngularJsonAPISchema","include","linkSchema","linkName","linkSchemaObj","included","extend","join","AngularJsonAPILinkSchrapperLink","plural","singular","AngularJsonAPIModel","modelFactory","schemaObj","functions","metaFunction","metaFunctionName","apply","arguments","AngularJsonAPIFactoryWrapper","AngularJsonAPICollection","AngularJsonAPIFactory","initialized","fetch","initialize","generate","AngularJsonAPICollectionWrapper","event","description","$on","jsonapiProvider","jsonapiFactory","allFactories","memory","factoriesNames","names","addFactory","clearAll","objects","$get","provider","$logProvider","debugEnabled"],"mappings":"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","file":"angular-jsonapi.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false */\n  .constant('pluralize', pluralize);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelValidatorService', AngularJsonAPIModelValidatorService);\n\n  function AngularJsonAPIModelValidatorService(\n    $q\n  ) {\n    var _this = this;\n    _this.validateForm = validateForm;\n    _this.validateField = validateField;\n\n    return this;\n\n    /**\n     * Validates form\n     * @param  {object} data Form data\n     * @return {object} Errors object indexed by keys\n     */\n    function validateForm(schema, data) {\n      var _this = this;\n\n      return $q.resolve({});\n    }\n\n    /**\n     * Validates single field\n     * @param  {string} key Field key\n     * @return {array}     Errors array\n     */\n    function validateField(schema, key) {\n      var _this = this;\n\n      return $q.resolve([]);\n    }\n\n    // function __validate(validator, attributeValue, attributeName) {\n    //   var errors = [];\n    //   if (angular.isArray(validator)) {\n    //     angular.forEach(validator, function(element) {\n    //       errors = errors.concat(__validate(element, attributeValue, attributeName));\n    //     });\n    //   } else if (angular.isFunction(validator)) {\n    //     var err = validator(attributeValue, attributeName);\n    //     if (angular.isArray(err)) {\n    //       errors.concat(err);\n    //     } else {\n    //       $log.error(\n    //         'Wrong validator type it should return array of errors instead of: ' +\n    //           err.toString()\n    //       );\n    //     }\n    //   } else if (angular.isString(validator)) {\n    //     if (validator === 'text' || validator === 'string') {\n    //       if (!angular.isString(attributeValue)) {\n    //         errors.push(attributeName + ' is not a string ');\n    //       }\n    //     } else if (validator === 'number' || validator === 'integer') {\n    //       if (parseInt(attributeValue).toString() !== attributeValue.toString()) {\n    //         errors.push(attributeName + ' is not a number');\n    //       }\n    //     } else if (validator === 'uuid4') {\n    //       if (!uuid4.validate(attributeValue)) {\n    //         errors.push(attributeName + ' is not a uuid4');\n    //       }\n    //     } else if (validator === 'required') {\n    //       if (attributeValue.toString().length === 0) {\n    //         errors.push(attributeName + ' is empty');\n    //       }\n    //     } else {\n    //       $log.error('Wrong validator type: ' + validator.toString());\n    //     }\n    //   } else if (angular.isObject(validator)) {\n    //     if (validator.maxlength !== undefined && attributeValue.length > validator.maxlength) {\n    //       errors.push(attributeName + ' is too long max ' + validator.maxlength);\n    //     }\n\n    //     if (validator.minlength !== undefined && attributeValue.length < validator.minlength) {\n    //       errors.push(attributeName + ' is too short min ' + validator.minlength);\n    //     }\n\n    //     if (validator.maxvalue !== undefined && parseInt(attributeValue) > validator.maxvalue) {\n    //       errors.push(attributeName + ' is too big max ' + validator.maxvalue);\n    //     }\n\n    //     if (validator.minvalue !== undefined && parseInt(attributeValue) < validator.minvalue) {\n    //       errors.push(attributeName + ' is too small min ' + validator.minvalue);\n    //     }\n    //   } else {\n    //     $log.error('Wrong validator type: ' + validator.toString());\n    //   }\n\n    //   return errors;\n    // }\n  }\n})();\n","!function(){\"use strict\";angular.module(\"angular-jsonapi\",[\"uuid4\"]).constant(\"pluralize\",pluralize)}(),function(){\"use strict\";function t(t){function e(e,n){return t.resolve({})}function n(e,n){return t.resolve([])}var a=this;return a.validateForm=e,a.validateField=n,this}angular.module(\"angular-jsonapi\").service(\"AngularJsonAPIModelValidatorService\",t),t.$inject=[\"$q\"]}(),function(){\"use strict\";function t(t){function e(t){return null===t?null:{type:t.data.type,id:t.data.id}}function n(e,n,a,i){var u;return console.log(e,n,a,i),void 0===e?(t.error(\"Can't add link to non existing object\",e,n,a),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),!1):(u=e.schema.relationships[n],void 0===a?(t.error(\"Can't link non existing object\",e,n,a,u),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),t.error(\"Schema:\",u),!1):void 0===u?(t.error(\"Can't add link not present in schema:\",e,n,a,u),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),t.error(\"Schema:\",u),!1):null!==a&&u.polymorphic===!1&&u.model!==a.data.type?(t.error(\"This relation is not polymorphic, expected: \"+u.model+\" instead of \"+a.data.type),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),t.error(\"Schema:\",u),!1):\"hasMany\"===u.type?i===!0?c(e,n,a,!1):r(e,n,a):\"hasOne\"===u.type?i===!0?s(e,n,a,!1):o(e,n,a):void 0)}function a(e,n,a,r){var o;return void 0===e?(t.error(\"Can't remove link from non existing object\",e,n,a),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),!1):(o=e.schema.relationships[n],void 0===o?(t.error(\"Can't remove link not present in schema:\",e,n,a,o),t.error(\"Object:\",e.data.type,e),t.error(\"Target:\",a.data.type,a),t.error(\"Key:\",n),t.error(\"Schema:\",o),!1):r===!0?l(e,n,a,!1):i(e,n,a))}function r(t,e,n){var a,r=t.schema.relationships[e].reflection;return r===!1?c(t,e,n):(a=n.schema.relationships[r],void(\"hasOne\"===a.type?o(n,r,t):\"hasMany\"===a.type&&(c(t,e,n),c(n,r,t))))}function o(t,e,n){var a,r,o=t.schema.relationships[e].reflection,i=t.relationships[e];s(t,e,n),void 0!==i&&null!==i&&(r=i.schema.relationships[o],\"hasOne\"===r.type?u(i,o,t):\"hasMany\"===r.type&&l(i,o,t)),void 0!==n&&null!==n&&o!==!1&&(a=n.schema.relationships[o],\"hasOne\"===a.type?s(n,o,t):\"hasMany\"===a.type&&c(n,o,t))}function i(t,e,n){var a,r=t.schema.relationships[e],o=r.reflection;\"hasMany\"===r.type?l(t,e,n):\"hasOne\"===r.type&&u(t,e,n),o!==!1&&(a=n.schema.relationships[o],\"hasOne\"===a.type?u(n,o,t):\"hasMany\"===a.type&&l(n,o,t))}function s(n,a,r,o){return t.debug(\"addHasOne\",n,a,r),n.relationships[a]=r,n.data.relationships[a].data=e(r),o!==!1&&n.reset(!0),!0}function c(n,a,r,o){var i=e(r);return t.debug(\"addHasMany\",n,a,r),angular.isArray(n.relationships[a])&&n.relationships[a].indexOf(r)>-1?!1:(n.relationships[a]=n.relationships[a]||[],n.data.relationships[a].data=n.data.relationships[a].data||[],n.relationships[a].push(r),n.data.relationships[a].data.push(i),o!==!1&&n.reset(!0),!0)}function u(e,n,a,r){return t.debug(\"removeHasOne\",e,n,a),void 0!==a&&e.relationships[n]!==a?!1:(e.relationships[n]=null,e.data.relationships[n].data=void 0,r!==!1&&e.reset(!0),!0)}function l(e,n,a,r){if(t.debug(\"removeHasMany\",e,n,a),void 0!==e.relationships[n]){if(void 0===a)return e.relationships[n]=[],e.data.relationships[n].data=[],r!==!1&&e.reset(!0),!0;var o=e.relationships[n].indexOf(a);return-1===o?!1:(e.relationships[n].splice(o,1),e.data.relationships[n].data.splice(o,1),r!==!1&&e.reset(!0),!0)}}var d=this;return d.toLinkData=e,d.link=n,d.unlink=a,this}angular.module(\"angular-jsonapi\").service(\"AngularJsonAPIModelLinkerService\",t),t.$inject=[\"$log\"]}(),function(){\"use strict\";function t(t,e,n){function a(t){var e=this;e.data={id:t.data.id,type:t.data.type,attributes:{},relationships:{}},e.relationships={},e.parent=t,e.schema=t.schema,e.reset()}function r(){var t=this,e=angular.copy(t.data),n={};return angular.forEach(e.relationships,function(t,e){void 0!==t.data&&(n[e]=t)}),e.relationships=n,{data:e}}function o(){var t=this;return t.parent.save()}function i(t){var e=this;angular.forEach(e.schema.relationships,function(t,n){e.data.relationships[n]=angular.copy(e.parent.data.relationships[n])||{},e.relationships[n]=angular.isArray(e.relationships[n])?e.parent.relationships[n].slice():e.parent.relationships[n]}),(t!==!0||e.parent[\"synchronized\"]!==!0)&&(angular.forEach(e.schema.attributes,function(t,n){e.data.attributes[n]=angular.copy(e.parent.data.attributes[n])||\"\"}),e.errors={validation:{}})}function s(){function e(t){a.errors.validation=t,r.reject(t)}var a=this,r=n.defer();return t.validateForm(a.data).then(r.resolve,e),r.promise}function c(e){function a(t){r.errors.validation[e]=t,o.reject(t)}var r=this,o=n.defer();return t.validateForm(r.data[e],e).then(o.resolve,a),o.promise}function u(t,a){var r=this;return n.resolve(e.link(r,t,a,!0))}function l(t,a){var r=this;return n.resolve(e.unlink(r,t,a,!0))}return a.prototype.save=o,a.prototype.reset=i,a.prototype.validate=s,a.prototype.validateField=c,a.prototype.link=u,a.prototype.unlink=l,a.prototype.toJson=r,a}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModelForm\",t),t.$inject=[\"AngularJsonAPIModelValidatorService\",\"AngularJsonAPIModelLinkerService\",\"$q\"]}(),function(){\"use strict\";function t(t,e,n,a,r,o,i){function s(e,n,a){var r=this;e.relationships=e.relationships||{},r.saved=void 0===n?!0:n,r.stable=void 0===a?!0:a,r[\"synchronized\"]=void 0===a?!0:a,r.removed=!1,r.loadingCount=0,r.updatedAt=Date.now(),r.data={relationships:{},attributes:{}},r.relationships={},angular.forEach(r.schema.relationships,function(t,e){r.relationships[e]=void 0}),r.errors={validation:{}},r.promises={},v(r,e),r.form=new t(r)}function c(){function t(t){a.$emit(\"angularJsonAPI:\"+r.data.type+\":object:save\",\"resolved\",r,t),r.update(r.form.data),r[\"synchronized\"]=!0,r.saved=!0,r.stable=!0,t.finish(),o.resolve(r)}function e(t){a.$emit(\"angularJsonAPI:\"+r.data.type+\":object:save\",\"rejected\",r,t),t.finish(),o.reject(t.errors)}function n(t){a.$emit(\"angularJsonAPI:\"+r.data.type+\":object:save\",\"notify\",r,t),o.notify(t.errors)}var r=this,o=i.defer(),s={action:r.saved===!1?\"add\":\"update\",object:r};return r.form.validate().then(r.synchronize(s).then(t,e,n),o.reject),o.promise}function u(){var t=this;void 0!==t.form&&t.form.reset()}function l(){function t(t){a.$emit(\"angularJsonAPI:\"+c.data.type+\":object:refresh\",\"resolved\",c,t),o.proccesResults(t.data),t.finish(),c[\"synchronized\"]=!0,c.stable=!0,s.resolve(t)}function e(t){a.$emit(\"angularJsonAPI:\"+c.data.type+\":object:refresh\",\"rejected\",c,t),t.finish(),s.reject(t)}function n(t){a.$emit(\"angularJsonAPI:\"+c.data.type+\":object:refresh\",\"notify\",c,t),s.notify(t)}var o=r.get(\"$jsonapi\"),s=i.defer(),c=this,u={action:\"refresh\",object:c,params:c.schema.params.get};return c.saved===!1?s.reject({errors:[{status:0,statusText:\"Can't refresh new object\"}]}):c.synchronize(u).then(t,e,n),s.promise}function d(){var t=this,e=angular.copy(t.data),n={};return angular.forEach(e.relationships,function(t,e){void 0!==t.data&&(n[e]=t)}),e.relationships=n,{data:e}}function h(){function t(t){a.$emit(\"angularJsonAPI:\"+r.data.type+\":object:remove\",\"resolved\",r,t),r.removed=!0,r.unlinkAll(),r.parentFactory.cache.clearRemoved(r.data.id),t.finish(),o.resolve(t)}function e(t){a.$emit(\"angularJsonAPI:\"+r.data.type+\":object:remove\",\"rejected\",r,t),r.parentFactory.cache.revertRemove(r.data.id),t.finish(),o.reject(t)}function n(t){a.$emit(\"angularJsonAPI:\"+r.data.type+\":object:remove\",\"notify\",r,t),o.notify(t)}var r=this,o=i.defer(),s={action:\"remove\",object:r};return r.parentFactory.cache.remove(r.data.id),r.saved===!1?o.resolve():r.synchronize(s).then(t,e,n),o.promise}function p(t){function n(t,e){var n=o.schema.relationships[e],a=n.reflection;angular.isArray(t)?angular.forEach(t,r.bind(void 0,a)):angular.isObject(t)&&r(a,t),\"hasOne\"===n.type?o.relationships[e]=null:\"hasMany\"===n.type&&(o.relationships[e]=[])}function r(t,n){function r(t){a.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"resolve\",o,t),t.finish(),s.resolve(o)}function i(t){a.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"rejected\",o,t),t.finish(),s.reject(t)}function c(t){a.$emit(\"angularJsonAPI:\"+o.data.type+\":object:unlinkReflection\",\"notify\",o,t),t.finish(),s.notify(t)}var u=n.schema.relationships[t];e.unlink(n,t,o,u),n.synchronize({action:\"unlinkReflection\",object:n,target:o,key:t}).then(r,i,c)}var o=this,s=i.defer();return void 0===t?angular.forEach(o.relationships,n):n(o.relationships[t],t),s.promise}function f(t,n){function r(r){function o(t){a.$emit(\"angularJsonAPI:\"+u.data.type+\":object:linkReflection\",\"resolve\",u,t),t.finish(),c.resolve(u)}function i(t){a.$emit(\"angularJsonAPI:\"+u.data.type+\":object:linkReflection\",\"rejected\",u,t),t.finish(),c.reject(t)}function s(t){a.$emit(\"angularJsonAPI:\"+u.data.type+\":object:linkReflection\",\"notify\",u,t),t.finish(),c.notify(t)}var l=n.schema.relationships[d];a.$emit(\"angularJsonAPI:\"+u.data.type+\":object:link\",\"resolved\",u,r),e.link(u,t,n),u.stable=!0,r.finish(),n.synchronize({action:\"linkReflection\",schema:l,object:n,target:u,key:d}).then(o,i,s)}function o(t){a.$emit(\"angularJsonAPI:\"+u.data.type+\":object:link\",\"rejected\",u,t),c.reject(t.errors),t.finish(),c.reject(t)}function s(t){a.$emit(\"angularJsonAPI:\"+u.data.type+\":object:link\",\"notify\",u,t),c.notify(t)}var c=i.defer(),u=this,l=u.schema.relationships[t],d=l.reflection,h={action:\"link\",object:u,schema:l,target:n,key:t};return void 0===n?c.reject({errors:[{status:0,statusText:\"Can't link undefined\"}]}):u.saved===!1?c.reject({errors:[{status:0,statusText:\"Can't link new object\"}]}):u.synchronize(h).then(r,o,s),c.promise}function y(t,n){function r(r){function o(t){a.$emit(\"angularJsonAPI:\"+u.data.type+\":object:unlinkReflection\",\"resolve\",u,t),t.finish(),c.resolve(u)}function i(t){a.$emit(\"angularJsonAPI:\"+u.data.type+\":object:unlinkReflection\",\"rejected\",u,t),t.finish(),c.reject(t)}function s(t){a.$emit(\"angularJsonAPI:\"+u.data.type+\":object:unlinkReflection\",\"notify\",u,t),t.finish(),c.notify(t)}var h=n.schema.relationships[d];a.$emit(\"angularJsonAPI:\"+u.data.type+\":object:unlink\",\"resolved\",u,r),e.unlink(u,t,n,l),u.stable=!0,r.finish(),n.synchronize({action:\"unlinkReflection\",object:n,target:u,schema:h,key:d}).then(o,i,s)}function o(t){a.$emit(\"angularJsonAPI:\"+u.data.type+\":object:unlink\",\"rejected\",u,t),c.reject(t.errors),t.finish(),c.reject(t)}function s(t){a.$emit(\"angularJsonAPI:\"+u.data.type+\":object:unlink\",\"notify\",u,t),c.notify(t)}var c=i.defer(),u=this,l=u.schema.relationships[t],d=l.reflection,h={action:\"unlink\",object:u,target:n,schema:l,key:t};return void 0===n?c.reject({errors:[{status:0,statusText:\"Can't unlink undefined\"}]}):u.saved===!1?c.reject({errors:[{status:0,statusText:\"Can't unlink new object\"}]}):u.synchronize(h).then(r,o,s),c.promise}function g(t,e,n){var a=this;return v(a,t)===!0?(a.reset(e),a[\"synchronized\"]=n===!0?!1:!0,a.stable=n===!0?!1:!0,a.updatedAt=Date.now(),!0):!1}function v(t,a){function i(e,n){t.data.attributes[n]=a.attributes[n]}function s(e,n){var r=a.relationships[n];return void 0===r?void(t.data.relationships[n]={data:void 0}):(t.data.relationships[n]=t.data.relationships[n]||{},t.data.relationships[n].links=r.links,void(\"hasOne\"===e.type?c(t,n,r.data):\"hasMany\"===e.type&&angular.isArray(r.data)&&(0===r.data.length?(t.data.relationships[n].data=[],t.unlinkAll(n)):(angular.forEach(t.relationships[n],u.bind(void 0,t,n,r.data)),angular.forEach(r.data,c.bind(void 0,t,n))))))}function c(t,n,a){var r;if(null===a)return void e.link(t,n,null);if(void 0!==a){if(r=l.getFactory(a.type),void 0===r)return void o.error(\"Factory not found\",a.type,a);var i=r.cache.get(a.id);e.link(t,n,i)}}function u(t,n,a,r){a.indexOf(r.data.id)>-1||e.unlink(t,n,r)}var l=r.get(\"$jsonapi\"),d=t.schema;return t.data.id=a.id,t.data.type=a.type,t.parentFactory.schema.type!==a.type?(o.error(\"Different type then factory\",t.parentFactory.schema.type,a),!1):n.validate(t.data.id)?(a.attributes=a.attributes||{},a.relationships=a.relationships||{},angular.forEach(d.attributes,i),angular.forEach(d.relationships,s),!0):(o.error(\"Invalid id\"),!1)}return s.prototype.refresh=l,s.prototype.remove=h,s.prototype.reset=u,s.prototype.save=c,s.prototype.update=g,s.prototype.link=f,s.prototype.unlink=y,s.prototype.unlinkAll=p,s.prototype.toJson=d,s}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIAbstractModel\",t),t.$inject=[\"AngularJsonAPIModelForm\",\"AngularJsonAPIModelLinkerService\",\"uuid4\",\"$rootScope\",\"$injector\",\"$log\",\"$q\"]}(),function(){\"use strict\";function t(t,e){function n(t){var e=this;e.factory=t,e.data={},e.removed={},e.size=0,e.indexIds=[]}function a(t,n,a){var r=this,o=t.id;return void 0===o?void e.error(\"Can't add data without id!\",t):(void 0===r.data[o]?(r.data[o]=new r.factory.Model(t,!0,n),r.size+=1):r.data[o].update(t,!0,a),r.data[o])}function r(t){var e=this,n=angular.fromJson(t);angular.isObject(n)&&void 0!==n.data&&(e.updatedAt=n.updatedAt,e.indexIds=n.indexIds,angular.forEach(n.data,function(t){var n=t.data;console.log(\"fromJson\",n.id),e.addOrUpdate(n,!1,!0)}))}function o(){var t=this,e={data:{},updatedAt:t.updatedAt,indexIds:t.indexIds};return angular.forEach(t.data,function(t,n){e.data[n]=t.toJson()}),angular.toJson(e)}function i(){var t=this;t.data={},t.removed={}}function s(t){var e=this;return void 0===e.data[t]&&(e.data[t]=new e.factory.Model({id:t,type:e.factory.Model.prototype.schema.type},!0,!1)),e.data[t]}function c(t){var n=this;return e.warn(\"Unused params\",t),n.indexIds.map(n.get.bind(n))}function u(e){var n=this;n.indexIds=[],angular.forEach(e,function(e){angular.isString(e)&&t.validate(e)?n.indexIds.push(e):angular.isObject(e)&&t.validate(e.data.id)&&n.indexIds.push(e.data.id)})}function l(t){var e=this;return void 0!==e.data[t]&&(e.removed[t]=e.data[t],delete e.data[t],e.size-=1),e.removed[t]}function d(t){var e=this;return void 0!==e.removed[t]&&(e.data[t]=e.removed[t],delete e.removed[t],e.size+=1),e.data[t]}function h(t){var e=this;delete e.removed[t]}return n.prototype.get=s,n.prototype.index=c,n.prototype.setIndexIds=u,n.prototype.addOrUpdate=a,n.prototype.fromJson=r,n.prototype.toJson=o,n.prototype.clear=i,n.prototype.remove=l,n.prototype.revertRemove=d,n.prototype.clearRemoved=h,n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICache\",t),t.$inject=[\"uuid4\",\"$log\"]}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"lazyProperty\",function(t,e,n){var a,r;Object.defineProperty(t,e,{get:function(){return r||(r=!0,a=n.call(t)),a},enumerable:!0,configurable:!0})})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").constant(\"toKebabCase\",function(t){return t.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase()})}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$provide\",function(t){t.decorator(\"$q\",[\"$delegate\",function(t){var e=t;return e.allSettled=e.allSettled||function(t,n,a){function r(t){return e.resolve(t).then(function(t){return angular.isFunction(n)&&n(t),{success:!0,value:t}},function(t){return angular.isFunction(a)&&a(t),{success:!1,reason:t}})}var o=angular.isArray(t)?[]:{};return angular.forEach(t,function(t,e){o.hasOwnProperty(e)||(o[e]=r(t))}),e.all(o)},e}])}])}(),function(){\"use strict\";function t(t,e,n){function a(e){var n=this;n.state={},t.call(n,e),angular.forEach(e,function(t){t.synchronizer=n})}function r(a){function r(t){d.notify({step:\"synchronization\",data:t})}function o(t){d.notify({step:\"synchronization\",errors:t})}function i(t){u.state[h]=u.state[h]||{},u.state[h].success=!0,angular.forEach(t,function(t){t.success===!1&&(u.state[h].success=!1)}),angular.forEach(u.synchronizations,function(e){angular.forEach(e.afterHooks[h],function(e){d.notify({step:\"after\",errors:e.call(u,a,t)})})});var e,n=[];angular.forEach(t,function(t){t.success===!0?e=t.value:n.push(t.reason)}),n.length>0?d.reject({data:e,finish:s,errors:n}):d.resolve({data:e,finish:s,errors:n})}function s(){angular.forEach(u.synchronizations,function(t){angular.forEach(t.finishHooks[h],function(t){d.notify({step:\"finish\",errors:t.call(u,a)})})})}function c(t){n.error(\"All settled rejected! Something went wrong\"),d.reject({finish:angular.noop,errors:t})}var u=this,l=[],d=e.defer(),h=a.action;return t.prototype.synchronize.call(u,a),angular.forEach(u.synchronizations,function(t){angular.forEach(t.beginHooks[h],function(t){d.notify({step:\"begin\",data:t.call(u,a)})})}),angular.forEach(u.synchronizations,function(t){angular.forEach(t.beforeHooks[h],function(t){d.notify({step:\"before\",data:t.call(u,a)})})}),angular.forEach(u.synchronizations,function(t){angular.forEach(t.synchronizationHooks[h],function(t){l.push(t.call(u,a))})}),e.allSettled(l,r,o).then(i,c),d.promise}return a.prototype=Object.create(t.prototype),a.prototype.constructor=a,a.prototype.synchronize=r,a}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerSimple\",t),t.$inject=[\"AngularJsonAPISynchronizerPrototype\",\"$q\",\"$log\"]}(),function(){\"use strict\";function t(t){function e(t){var e=this;e.synchronizations=t}function n(e){var n=this;t.debug(\"Synchro Collection\",n.factory.Model.prototype.schema.type,e),void 0===e.action&&t.error(\"Can't synchronize undefined action\",e)}return e.prototype.synchronize=n,e}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizerPrototype\",t),t.$inject=[\"$log\"]}(),function(){\"use strict\";function t(t,e,n,a,r){function o(n){function o(t){return r({method:\"GET\",headers:y,url:n,params:t.params||{}}).then(h,p)}function i(t){return r({method:\"GET\",headers:y,url:n+\"/\"+t.object.data.id,params:t.params||{}}).then(h,p)}function s(t){return r({method:\"DELETE\",headers:y,url:n+\"/\"+t.object.data.id}).then(h,p)}function c(t){var e=a.defer();return t.object.removed===!0?e.reject({errors:[{status:0,statusText:\"Object has been removed\"}]}):void 0!==t.target&&void 0===t.target.data.id?e.reject({errors:[{status:0,statusText:\"Can't unlink object without id through rest call\"}]}):\"hasOne\"===t.schema.type?r({method:\"DELETE\",headers:y,url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(h,p).then(e.resolve,e.reject):\"hasMany\"===t.schema.type&&(void 0===t.target?r({method:\"PUT\",headers:y,data:{data:[]},url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(h,p).then(e.resolve,e.reject):r({method:\"DELETE\",headers:y,url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key+\"/\"+t.target.data.id}).then(h,p).then(e.resolve,e.reject)),e.promise}function u(t){var o=a.defer();return t.object.removed===!0?o.reject({errors:[{status:0,statusText:\"Object has been removed\"}]}):void 0===t.target||void 0===t.target.data.id?o.reject({errors:[{status:0,statusText:\"Can't link object without id through rest call\"}]}):\"hasOne\"===t.schema.type?r({method:\"PUT\",headers:y,data:{data:e.toLinkData(t.target)},url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(h,p).then(o.resolve,o.reject):\"hasMany\"===t.schema.type&&r({method:\"POST\",headers:y,data:{data:[e.toLinkData(t.target)]},url:n+\"/\"+t.object.data.id+\"/relationships/\"+t.key}).then(h,p).then(o.resolve,o.reject),o.promise}function l(t){return r({method:\"PUT\",headers:y,url:n+\"/\"+t.object.data.id,data:t.object.form.toJson()}).then(h,p)}function d(t){return r({method:\"POST\",headers:y,url:n+\"/\",data:t.object.form.toJson()}).then(h,p)}function h(t){return a.resolve(t.data)}function p(t){function e(){o.reject({status:t.status,statusText:\"Server is offline\"})}function n(){o.reject({status:t.status,statusText:\"No internet connection\"})}var o=a.defer();return 0===t.status?r({method:\"GET\",url:\"https://status.cloud.google.com/incidents.schema.json\"}).then(e,n):o.reject({status:t.status,statusText:t.statusText}),o.promise}var f=this,y={Accept:\"application/vnd.api+json\",\"Content-Type\":\"application/vnd.api+json\"};t.call(f),f.synchronization(\"remove\",s),f.synchronization(\"unlink\",c),f.synchronization(\"link\",u),f.synchronization(\"update\",l),f.synchronization(\"add\",d),f.synchronization(\"all\",o),f.synchronization(\"get\",i),f.synchronization(\"refresh\",i)}return o.prototype=Object.create(t.prototype),o.prototype.constructor=o,o}angular.module(\"angular-jsonapi-rest\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationRest\",t),t.$inject=[\"AngularJsonAPISynchronizationPrototype\",\"AngularJsonAPIModelLinkerService\",\"toKebabCase\",\"$q\",\"$http\"]}(),function(){\"use strict\";function t(){function t(){var t=this,e=[\"add\",\"init\",\"get\",\"all\",\"clear\",\"remove\",\"unlink\",\"unlinkReflection\",\"link\",\"linkReflection\",\"update\",\"refresh\"];t.state={},t.beginHooks={},t.beforeHooks={},t.synchronizationHooks={},t.afterHooks={},t.finishHooks={},t.options={},angular.forEach(e,function(e){t.beginHooks[e]=[],t.beforeHooks[e]=[],t.synchronizationHooks[e]=[],t.afterHooks[e]=[],t.finishHooks[e]=[],t.state[e]={loading:!1,success:!0}})}function e(t,e){var n=this;n.beginHooks[t].push(e)}function n(t,e){var n=this;n.finishHooks[t].push(e)}function a(t,e){var n=this;n.beforeHooks[t].push(e)}function r(t,e){var n=this;n.afterHooks[t].push(e)}function o(t,e){var n=this;n.synchronizationHooks[t].push(e)}return t.prototype.before=a,t.prototype.after=r,t.prototype.begin=e,t.prototype.finish=n,t.prototype.synchronization=o,t}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISynchronizationPrototype\",t)}(),function(){\"use strict\";function t(t,e,n){function a(a){function r(){var t=s.synchronizer.factory.schema.type;return n.resolve(e.localStorage.getItem(a+\".\"+t))}function o(){var t=s.synchronizer.factory.schema.type;e.localStorage.removeItem(a+\".\"+t)}function i(){var t=s.synchronizer.factory.schema.type,n=s.synchronizer.factory.cache;e.localStorage.setItem(a+\".\"+t,n.toJson())}var s=this;a=a||\"AngularJsonAPI\",s.__updateStorage=i,t.call(s),s.synchronization(\"init\",r),s.begin(\"clear\",o),s.begin(\"remove\",i),s.begin(\"refresh\",i),s.begin(\"unlink\",i),s.begin(\"unlinkReflection\",i),s.begin(\"link\",i),s.begin(\"linkReflection\",i),s.begin(\"update\",i),s.begin(\"add\",i),s.finish(\"get\",i),s.finish(\"all\",i),s.finish(\"init\",i),s.finish(\"clear\",i),s.finish(\"remove\",i),s.finish(\"refresh\",i),s.finish(\"unlink\",i),s.finish(\"unlinkReflection\",i),s.finish(\"link\",i),s.finish(\"linkReflection\",i),s.finish(\"update\",i),s.finish(\"add\",i),s.finish(\"get\",i),s.finish(\"all\",i)}return a.prototype=Object.create(t.prototype),a.prototype.constructor=a,a}angular.module(\"angular-jsonapi-local\",[\"angular-jsonapi\"]).factory(\"AngularJsonAPISynchronizationLocal\",t),t.$inject=[\"AngularJsonAPISynchronizationPrototype\",\"$window\",\"$q\"]}(),function(){\"use strict\";function t(t,e,n){function a(t){var e=this,a=t.include||{};t.include=a,a.get=t.include.get||[],a.all=t.include.all||[],e.params={get:{},all:{}},angular.forEach(t.relationships,function(e,r){var o=new n(e,r,t.type);t.relationships[r]=o,o.included===!0&&(a.get.push(r),\"hasOne\"===o.type&&a.all.push(r))}),angular.extend(e,t),a.get.length>0&&(e.params.get.include=a.get.join(\",\")),a.all.length>0&&(e.params.all.include=a.all.join(\",\"))}return a}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchema\",t),t.$inject=[\"$log\",\"pluralize\",\"AngularJsonAPISchemaLink\"]}(),function(){\"use strict\";function t(t,e){function n(n,a,r){var o=this;angular.isString(n)?(o.model=e.plural(a),o.type=n,o.polymorphic=!1,o.reflection=r):(void 0===n.type&&t.error(\"Schema of link without a type: \",n,a),\"hasMany\"!==n.type&&\"hasOne\"!==n.type&&t.error(\"Schema of link with wrong type: \",n.type,\"available: hasOne, hasMany\"),o.model=n.model||e.plural(a),o.type=n.type,o.polymorphic=n.polymorphic||!1,o.reflection=void 0===n.reflection?\"hasMany\"===o.type?e.singular(r):r:n.reflection,o.included=n.included||!1)}return n}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPISchemaLink\",t),t.$inject=[\"$log\",\"pluralize\"]}(),function(){\"use strict\";function t(t,e,n){function a(e,a){var r=function(e,a,r){var o=this;e.type!==o.schema.type&&n.error(\"Data type other then declared in schema: \",e.type,\" instead of \",o.schema.type),t.call(o,e,a,r),o.form.parent=o};return r.prototype=Object.create(t.prototype),r.prototype.constructor=r,r.prototype.schema=e,r.prototype.parentFactory=a,r.prototype.synchronize=a.synchronizer.synchronize.bind(a.synchronizer),angular.forEach(e.functions,function(t,e){r.prototype[e]=function(){return t.apply(this,arguments)}}),r}return{model:a}}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIModel\",t),t.$inject=[\"AngularJsonAPIAbstractModel\",\"AngularJsonAPISchema\",\"$log\"]}(),function(){\"use strict\";function t(t,e,n,a,r,o,i,s){function c(a,r){function i(t){o.$emit(\"angularJsonAPI:\"+u.type+\":factory:init\",\"resolved\",t),u.cache.fromJson(t.data),u.initialized=!0,t.finish()}function s(t){o.$emit(\"angularJsonAPI:\"+u.type+\":factory:init\",\"rejected\",t),t.finish(),u.initialized=!0}function c(t){o.$emit(\"angularJsonAPI:\"+u.type+\":factory:init\",\"notify\",t)}var u=this,l={action:\"init\"};u.schema=new e(a),u.cache=new n(u),u.synchronizer=r,u.synchronizer.factory=u,u.Model=t.model(u.schema,u),u.initialized=!1,u.type=u.schema.type,r.factory=u,u.synchronizer.synchronize(l).then(i,s,c)}function u(t){var e=this;return r.validate(t)?e.cache.get(t).refresh():s.reject({errors:[{status:0,statusText:\"Invalid id not uuid4\"}]})}function l(t){var e=this;t=t||{};var n=new a(e,angular.extend(t,e.schema.params.all));return n.fetch(),n}function d(t){var e=this,n=e.cache.remove(t);return n.remove()}function h(t,e){var n=this,a={};if(void 0!==t&&void 0!==e){var o=n.schema[t];\"hasOne\"===o.type?a[t]={data:e.data.id}:\"hasMany\"===o.type&&i.warn(\"Initialize with relationship disallowed for hasMany relationships\")}var s={type:n.type,id:r.generate(),attributes:{},relationships:a},c=new n.Model(s,!1,!1);return c}function p(){function t(t){o.$emit(\"angularJsonAPI:\"+a.type+\":factory:clear\",\"resolved\",t),t.finish(),r.resolve(t)}function e(t){o.$emit(\"angularJsonAPI:\"+a.type+\":factory:clear\",\"resolved\",t),t.finish(),r.reject(t)}function n(t){o.$emit(\"angularJsonAPI:\"+a.type+\":factory:clear\",\"notify\",t),r.notify(t)}var a=this,r=s.defer(),i={action:\"clear\"};return a.cache.clear(),a.synchronizer.synchronize(i).then(t,e,n),r}return c.prototype.get=u,c.prototype.all=l,c.prototype.remove=d,c.prototype.initialize=h,c.prototype.clear=p,c}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPIFactory\",t),t.$inject=[\"AngularJsonAPIModel\",\"AngularJsonAPISchema\",\"AngularJsonAPICache\",\"AngularJsonAPICollection\",\"uuid4\",\"$rootScope\",\"$log\",\"$q\"]}(),function(){\"use strict\";function t(t,e,n){function a(e,n){function a(t,e,n){var a;\"resolved\"===e&&(a=r.data.indexOf(n),a>-1&&(r.data.splice(a,1),r.factory.cache.setIndexIds(r.data)))}var r=this;r.factory=e,r.type=e.schema.type,r.params=n,r.errors={synchronization:{name:\"Synchronization\",description:\"Errors during synchronization\",errors:[]}},r.error=!1,r.data=r.factory.cache.index(r.params),r[\"synchronized\"]=!1,t.$on(\"angularJsonAPI:\"+r.type+\":object:remove\",a)}function r(t){var e=this;return e.factory.get(t)}function o(){function a(e){t.$emit(\"angularJsonAPI:\"+i.type+\":collection:fetch\",\"resolved\",i,e),i.errors.synchronization.errors=[],i.data=c.proccesResults(e.data),i.error=!1,i.updatedAt=Date.now(),i[\"synchronized\"]=!0,i.factory.cache.setIndexIds(i.data),e.finish(),s.resolve(i)}function r(e){t.$emit(\"angularJsonAPI:\"+i.type+\":collection:fetch\",\"rejected\",i,e),i.errors.synchronization.errors=e.errors,i.error=!0,e.finish(),s.reject(e)}function o(e){t.$emit(\"angularJsonAPI:\"+i.type+\":collection:fetch\",\"notify\",i,e),s.notify(e)}var i=this,s=n.defer(),c=e.get(\"$jsonapi\"),u={action:\"all\",params:i.params};return i.factory.synchronizer.synchronize(u).then(a,r,o),s.promise}return a.prototype.fetch=o,a.prototype.refresh=o,a.prototype.get=r,a}angular.module(\"angular-jsonapi\").factory(\"AngularJsonAPICollection\",t),t.$inject=[\"$rootScope\",\"$injector\",\"$q\"]}(),function(){\"use strict\";function t(){function t(t,a){function r(){return e}function o(){return n}function i(t,r){var o=new a(t,r);e[t.type]=o,n.push(t.type)}function s(t){return e[t]}function c(n){return void 0===e[n]&&t.error(\"Can\t add not existing object type: \"+n+\". Use initialize(Model, datas).\"),e[n].saved.form}function u(n,a){return void 0===e[n]&&t.error(\"Can\t get not existing object type: \"+n+\". Use initialize(Model, datas).\"),e[n].get(a)}function l(n,a){return void 0===e[n]&&t.error(\"Can\t remove not existing object type: \"+n+\". Use initialize(Model, datas).\"),e[n].remove(a)}function d(n){return void 0===e[n]&&t.error(\"Can\t get all of not existing object type: \"+n+\". Use initialize(Model, datas).\"),e[n].all()}function h(){angular.forEach(e,function(t){t.clear()})}function p(e){if(void 0===e&&t.error(\"Can't proccess results:\",e),angular.forEach(e.included,function(t){s(t.type).cache.addOrUpdate(t,!0)}),angular.isArray(e.data)){var n=[];return angular.forEach(e.data,function(t){n.push(s(t.type).cache.addOrUpdate(t,!0))}),n}return s(e.data.type).cache.addOrUpdate(e.data,!0)}return{form:c,get:u,remove:l,all:d,addFactory:i,getFactory:s,clearAll:h,proccesResults:p,allFactories:r,factoriesNames:o}}var e={},n=[];this.$get=t,t.$inject=[\"$log\",\"AngularJsonAPIFactory\"]}angular.module(\"angular-jsonapi\").provider(\"$jsonapi\",t)}(),function(){\"use strict\";angular.module(\"angular-jsonapi\").config([\"$logProvider\",function(t){t.debugEnabled(!1)}])}();\n//# sourceMappingURL=angular-jsonapi.min.js.map","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, oneWay) {\n      var schema;\n\n      console.log(object, key, target, oneWay);\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return false;\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return false;\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return false;\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return false;\n      }\n\n      if (schema.type === 'hasMany') {\n        if (oneWay === true) {\n          return __addHasMany(object, key, target, false);\n        } else {\n          return __processAddHasMany(object, key, target);\n        }\n      } else if (schema.type === 'hasOne') {\n        if (oneWay === true) {\n          return __addHasOne(object, key, target, false);\n        } else {\n          return __processAddHasOne(object, key, target);\n        }\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, oneWay) {\n      var schema;\n\n      if (object === undefined) {\n        $log.error('Can\\'t remove link from non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return false;\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return false;\n      }\n\n      if (oneWay === true) {\n        return __removeHasMany(object, key, target, false);\n      } else {\n        return __processRemove(object, key, target);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __processAddHasMany(object, key, target) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var reflectionSchema;\n\n      if (reflectionKey === false) {\n        return __addHasMany(object, key, target);\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        __processAddHasOne(target, reflectionKey, object);\n      } else if (reflectionSchema.type === 'hasMany') {\n        __addHasMany(object, key, target);\n        __addHasMany(target, reflectionKey, object);\n      }\n    }\n\n    function __processAddHasOne(object, key, target) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var oldReflection = object.relationships[key];\n      var reflectionSchema;\n      var oldReflectionSchema;\n\n      __addHasOne(object, key, target);\n\n      if (oldReflection !== undefined && oldReflection !== null) {\n        oldReflectionSchema = oldReflection.schema.relationships[reflectionKey];\n\n        if (oldReflectionSchema.type === 'hasOne') {\n          __removeHasOne(oldReflection, reflectionKey, object);\n        } else if (oldReflectionSchema.type === 'hasMany') {\n          __removeHasMany(oldReflection, reflectionKey, object);\n        }\n      }\n\n      if (target !== undefined && target !== null && reflectionKey !== false) {\n        reflectionSchema = target.schema.relationships[reflectionKey];\n\n        if (reflectionSchema.type === 'hasOne') {\n          __addHasOne(target, reflectionKey, object);\n        } else if (reflectionSchema.type === 'hasMany') {\n          __addHasMany(target, reflectionKey, object);\n        }\n      }\n    }\n\n    function __processRemove(object, key, target) {\n      var schema = object.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema;\n\n      if (schema.type === 'hasMany') {\n        __removeHasMany(object, key, target);\n      } else if (schema.type === 'hasOne') {\n        __removeHasOne(object, key, target);\n      }\n\n      if (reflectionKey === false) {\n        return;\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        __removeHasOne(target, reflectionKey, object);\n      } else if (reflectionSchema.type === 'hasMany') {\n        __removeHasMany(target, reflectionKey, object);\n      }\n    }\n\n    function __addHasOne(object, key, target, reset) {\n      $log.debug('addHasOne', object, key, target);\n\n      object.relationships[key] = target;\n      object.data.relationships[key].data = toLinkData(target);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, reset) {\n      var linkData = toLinkData(target);\n      $log.debug('addHasMany', object, key, target);\n\n      if (angular.isArray(object.relationships[key]) && object.relationships[key].indexOf(target) > -1) {\n        return false;\n      }\n\n      object.relationships[key] = object.relationships[key] || [];\n      object.data.relationships[key].data = object.data.relationships[key].data || [];\n\n      object.relationships[key].push(target);\n      object.data.relationships[key].data.push(linkData);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, reset) {\n      $log.debug('removeHasOne', object, key, target);\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        return false;\n      }\n\n      object.relationships[key] = null;\n      object.data.relationships[key].data = undefined;\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, reset) {\n      $log.debug('removeHasMany', object, key, target);\n\n      if (object.relationships[key] === undefined) {\n        return;\n      }\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n        if (reset !== false) {\n          object.reset(true);\n        }\n\n        return true;\n      }\n\n      var index = object.relationships[key].indexOf(target);\n\n      if (index === -1) {\n        return false;\n      }\n\n      object.relationships[key].splice(index, 1);\n      object.data.relationships[key].data.splice(index, 1);\n      if (reset !== false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidatorService,\n    AngularJsonAPIModelLinkerService,\n    $q\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n    AngularJsonAPIModelForm.prototype.validateField = validateField;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return AngularJsonAPIModelForm;\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        id: parent.data.id,\n        type: parent.data.type,\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset(auto) {\n      var _this = this;\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = angular.copy(_this.parent.data.relationships[key]) || {};\n        if (angular.isArray(_this.relationships[key])) {\n          _this.relationships[key] = _this.parent.relationships[key].slice();\n        } else {\n          _this.relationships[key] = _this.parent.relationships[key];\n        }\n      });\n\n      if (auto === true && _this.parent.synchronized === true) {\n        return;\n      }\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        _this.data.attributes[key] = angular.copy(_this.parent.data.attributes[key]) || '';\n      });\n\n      _this.errors = {\n        validation: {}\n      };\n    }\n\n    /**\n     * Validates form\n     * @return {promise} Promise rejected to errors object indexed by keys\n     */\n    function validate() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      AngularJsonAPIModelValidatorService.validateForm(_this.data).then(deferred.resolve, reject);\n\n      function reject(erorrs) {\n        _this.errors.validation = erorrs;\n\n        deferred.reject(erorrs);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Validates single field\n     * @param  {string} key Field key\n     * @return {promise} Promise rejected to errors array\n     */\n    function validateField(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      AngularJsonAPIModelValidatorService.validateForm(_this.data[key], key).then(deferred.resolve, reject);\n\n      function reject(erorrs) {\n        _this.errors.validation[key] = erorrs;\n\n        deferred.reject(erorrs);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target) {\n      var _this = this;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.link(_this, key, target, true));\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target) {\n      var _this = this;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.unlink(_this, key, target, true));\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelForm,\n    AngularJsonAPIModelLinkerService,\n    uuid4,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {Boolean} saved   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, saved, synchronized) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      /**\n       * Is not a new record\n       * @type {Boolean}\n       */\n      _this.saved = saved === undefined ? true : saved;\n\n      /**\n       * Is present on the server\n       * @type {Boolean}\n       */\n      _this.stable = synchronized === undefined ? true : synchronized;\n\n      /**\n       * Has been synchronized with the server\n       * @type {Boolean}\n       */\n      _this.synchronized = synchronized === undefined ? true : synchronized;\n\n      _this.removed = false;\n      _this.loadingCount = 0;\n      _this.updatedAt = Date.now();\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(schema, name) {\n        _this.relationships[name] = undefined;\n      });\n\n      _this.errors = {\n        validation: {}\n      };\n\n      _this.promises = {};\n\n      __setData(_this, data);\n\n      _this.form = new AngularJsonAPIModelForm(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: _this.saved === false ? 'add' : 'update',\n        object: _this\n      };\n\n      _this.form.validate().then(\n        _this.synchronize(config).then(resolve, reject, notify),\n        deferred.reject\n      );\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'resolved', _this, response);\n        _this.update(_this.form.data);\n\n        _this.synchronized = true;\n        _this.saved = true;\n        _this.stable = true;\n\n        response.finish();\n\n        deferred.resolve(_this);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'rejected', _this, response);\n        response.finish();\n\n        deferred.reject(response.errors);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'notify', _this, response);\n\n        deferred.notify(response.errors);\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      if (_this.form !== undefined) {\n        _this.form.reset();\n      }\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh() {\n      var $jsonapi = $injector.get('$jsonapi');\n      var deferred = $q.defer();\n      var _this = this;\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: _this.schema.params.get\n      };\n\n      if (_this.saved === false) {\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t refresh new object'}]});\n      } else {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'resolved', _this, response);\n        $jsonapi.proccesResults(response.data);\n        response.finish();\n\n        _this.synchronized = true;\n        _this.stable = true;\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'rejected', _this, response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      var config = {\n        action: 'remove',\n        object: _this\n      };\n\n      _this.parentFactory.cache.remove(_this.data.id);\n\n      if (_this.saved === false) {\n        deferred.resolve();\n      } else {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'resolved', _this, response);\n        _this.removed = true;\n        _this.unlinkAll();\n        _this.parentFactory.cache.clearRemoved(_this.data.id);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'rejected', _this, response);\n        _this.parentFactory.cache.revertRemove(_this.data.id);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlink all reflection relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      if (key === undefined) {\n        angular.forEach(_this.relationships, removeLink);\n      } else {\n        removeLink(_this.relationships[key], key);\n      }\n\n      return deferred.promise;\n\n      function removeLink(linksObj, key) {\n        var schema = _this.schema.relationships[key];\n        var reflectionKey = schema.reflection;\n\n        if (angular.isArray(linksObj)) {\n          angular.forEach(linksObj, removeReflectionLink.bind(undefined, reflectionKey));\n        } else if (angular.isObject(linksObj)) {\n          removeReflectionLink(reflectionKey, linksObj);\n        }\n\n        if (schema.type === 'hasOne') {\n          _this.relationships[key] = null;\n        } else if (schema.type === 'hasMany') {\n          _this.relationships[key] = [];\n        }\n      }\n\n      function removeReflectionLink(reflectionKey, target) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        target.synchronize({\n          action: 'unlinkReflection',\n          object: target,\n          target: _this,\n          key: reflectionKey\n        }).then(resolve, reject, notify);\n\n        function resolve(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'resolve', _this, response);\n\n          response.finish();\n          deferred.resolve(_this);\n        }\n\n        function reject(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'rejected', _this, response);\n\n          response.finish();\n          deferred.reject(response);\n        }\n\n        function notify(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var schema = _this.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var config = {\n        action: 'link',\n        object: _this,\n        schema: schema,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link undefined'}]});\n      } else if (_this.saved === false) {\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link new object'}]});\n      } else {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'resolved', _this, response);\n\n        AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        response.finish();\n\n        target.synchronize({\n          action: 'linkReflection',\n          schema: reflectionSchema,\n          object: target,\n          target: _this,\n          key: reflectionKey\n        }).then(resolveReflection, rejectReflection, notifyReflection);\n\n        function resolveReflection(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:linkReflection', 'resolve', _this, response);\n\n          response.finish();\n          deferred.resolve(_this);\n        }\n\n        function rejectReflection(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:linkReflection', 'rejected', _this, response);\n\n          response.finish();\n          deferred.reject(response);\n        }\n\n        function notifyReflection(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:linkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked if undefined unlinks all\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var schema = _this.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var config = {\n        action: 'unlink',\n        object: _this,\n        target: target,\n        schema: schema,\n        key: key\n      };\n\n      if (target === undefined) {\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t unlink undefined'}]});\n      } else if (_this.saved === false) {\n        deferred.reject({errors: [{status: 0, statusText: 'Can\\'t unlink new object'}]});\n      } else {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'resolved', _this, response);\n\n        AngularJsonAPIModelLinkerService.unlink(_this, key, target, schema);\n\n        _this.stable = true;\n        response.finish();\n\n        target.synchronize({\n          action: 'unlinkReflection',\n          object: target,\n          target: _this,\n          schema: reflectionSchema,\n          key: reflectionKey\n        }).then(resolveReflection, rejectReflection, notifyReflection);\n\n        function resolveReflection(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'resolve', _this, response);\n\n          response.finish();\n          deferred.resolve(_this);\n        }\n\n        function rejectReflection(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'rejected', _this, response);\n\n          response.finish();\n          deferred.reject(response);\n        }\n\n        function notifyReflection(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData, auto, initialization) {\n      var _this = this;\n\n      if (__setData(_this, validatedData) === true) {\n        _this.reset(auto);\n        _this.synchronized = initialization === true ? false : true;\n        _this.stable = initialization === true ? false : true;\n        _this.updatedAt = Date.now();\n\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData) {\n\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.parentFactory.schema.type !== validatedData.type) {\n        $log.error('Different type then factory', object.parentFactory.schema.type, validatedData);\n        return false;\n      }\n\n      if (!uuid4.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        var relationshipData = validatedData.relationships[key];\n\n        if (relationshipData === undefined) {\n          object.data.relationships[key] = {data: undefined};\n          return;\n        }\n\n        object.data.relationships[key] = object.data.relationships[key] || {};\n        object.data.relationships[key].links = relationshipData.links;\n\n        if (schema.type === 'hasOne') {\n          linkOne(object, key, relationshipData.data);\n        } else if (schema.type === 'hasMany') {\n          if (angular.isArray(relationshipData.data)) {\n            if (relationshipData.data.length === 0) {\n              object.data.relationships[key].data = [];\n              object.unlinkAll(key);\n            } else {\n              angular.forEach(\n                object.relationships[key],\n                unlinkOne.bind(undefined, object, key, relationshipData.data)\n              );\n              angular.forEach(\n                relationshipData.data,\n                linkOne.bind(undefined, object, key)\n              );\n            }\n          }\n        }\n      }\n\n      function linkOne(object, key, data) {\n        var factory;\n\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        factory = $jsonapi.getFactory(data.type);\n\n        if (factory === undefined) {\n          $log.error('Factory not found', data.type, data);\n          return;\n        }\n\n        var target = factory.cache.get(data.id);\n\n        AngularJsonAPIModelLinkerService.link(object, key, target);\n      }\n\n      function unlinkOne(object, key, relationshipData, target) {\n        if (relationshipData.indexOf(target.data.id) > -1) {\n          return;\n        }\n\n        AngularJsonAPIModelLinkerService.unlink(object, key, target);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICache', AngularJsonAPICacheWrapper);\n\n  function AngularJsonAPICacheWrapper(\n    uuid4,\n    $log\n  ) {\n\n    AngularJsonAPICache.prototype.get = get;\n    AngularJsonAPICache.prototype.index = index;\n    AngularJsonAPICache.prototype.setIndexIds = setIndexIds;\n    AngularJsonAPICache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPICache.prototype.fromJson = fromJson;\n    AngularJsonAPICache.prototype.toJson = toJson;\n    AngularJsonAPICache.prototype.clear = clear;\n\n    AngularJsonAPICache.prototype.remove = remove;\n    AngularJsonAPICache.prototype.revertRemove = revertRemove;\n    AngularJsonAPICache.prototype.clearRemoved = clearRemoved;\n\n    return AngularJsonAPICache;\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPICache(factory) {\n      var _this = this;\n\n      _this.factory = factory;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n\n      _this.indexIds = [];\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData, synchronized, initialization) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.factory.Model(validatedData, true, synchronized);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData, true, initialization);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      if (angular.isObject(collection) && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n        _this.indexIds = collection.indexIds;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          console.log('fromJson', data.id);\n          _this.addOrUpdate(data, false, true);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: {},\n        updatedAt: _this.updatedAt,\n        indexIds: _this.indexIds\n      };\n\n      angular.forEach(_this.data, function(object, key) {\n        json.data[key] = object.toJson();\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.factory.Model({id: id, type: _this.factory.Model.prototype.schema.type}, true, false);\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {objec} params\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function index(params) {\n      var _this = this;\n\n      $log.warn('Unused params', params);\n\n      return _this.indexIds.map(_this.get.bind(_this));\n    }\n\n    /**\n     * Cache ids of objects returned by index request\n     * @param {ids array or AngularJsonAPIModel array} array Objects or ids to be cached\n     */\n    function setIndexIds(array) {\n      var _this = this;\n\n      _this.indexIds = [];\n\n      angular.forEach(array, function(element) {\n        if (angular.isString(element) && uuid4.validate(element)) {\n          _this.indexIds.push(element);\n        } else if (angular.isObject(element) && uuid4.validate(element.data.id)) {\n          _this.indexIds.push(element.data.id);\n        }\n      });\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises, resolvedCallback, rejectedCallback) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.resolve(promise)\n            .then(function(value) {\n              if (angular.isFunction(resolvedCallback)) {\n                resolvedCallback(value);\n              }\n\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              if (angular.isFunction(rejectedCallback)) {\n                rejectedCallback(reason);\n              }\n\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerSimple;\n\n    function AngularJsonAPISynchronizerSimple(synchronizations) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, synchronizations);\n\n      angular.forEach(synchronizations, function(synchronization) {\n        synchronization.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push(result.reason);\n          }\n        });\n\n        if (errors.length > 0) {\n          deferred.reject({data: data, finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(synchronizations) {\n      var _this = this;\n\n      _this.synchronizations = synchronizations;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.factory.Model.prototype.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationRest', AngularJsonAPISynchronizationRestWrapper);\n\n  function AngularJsonAPISynchronizationRestWrapper(\n    AngularJsonAPISynchronizationPrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISynchronizationRest.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationRest.prototype.constructor = AngularJsonAPISynchronizationRest;\n\n    return AngularJsonAPISynchronizationRest;\n\n    function AngularJsonAPISynchronizationRest(url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISynchronizationPrototype.call(_this);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target !== undefined && config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t unlink object without id through rest call'}]});\n        } else if (config.schema.type === 'hasOne') {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n        } else if (config.schema.type === 'hasMany') {\n          if (config.target === undefined) {\n            $http({\n              method: 'PUT',\n              headers: headers,\n              data: {data: []},\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key\n            }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n          } else {\n            $http({\n              method: 'DELETE',\n              headers: headers,\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key + '/' + config.target.data.id\n            }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n          }\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target === undefined || config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link object without id through rest call'}]});\n        } else if (config.schema.type === 'hasOne') {\n          $http({\n            method: 'PUT',\n            headers: headers,\n            data: {data: AngularJsonAPIModelLinkerService.toLinkData(config.target)},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n        } else if (config.schema.type === 'hasMany') {\n          $http({\n            method: 'POST',\n            headers: headers,\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        return $http({\n          method: 'PUT',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url + '/',\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function resolveHttp(response) {\n        return $q.resolve(response.data);\n      }\n\n      function rejectHttp(response) {\n        var deferred = $q.defer();\n\n        if (response.status === 0) {\n          $http({\n            method: 'GET',\n            url: 'https://status.cloud.google.com/incidents.schema.json'\n          }).then(rejectServerOffline, rejectNoConnection);\n        } else {\n          deferred.reject({status: response.status, statusText: response.statusText});\n        }\n\n        return deferred.promise;\n\n        function rejectServerOffline() {\n          deferred.reject({status: response.status, statusText: 'Server is offline'});\n        }\n\n        function rejectNoConnection() {\n          deferred.reject({status: response.status, statusText: 'No internet connection'});\n        }\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizationPrototype', AngularJsonAPISynchronizationPrototypeWrapper);\n\n  function AngularJsonAPISynchronizationPrototypeWrapper() {\n    AngularJsonAPISynchronizationPrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.after = afterSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.begin = begin;\n    AngularJsonAPISynchronizationPrototype.prototype.finish = finish;\n    AngularJsonAPISynchronizationPrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISynchronizationPrototype;\n\n    function AngularJsonAPISynchronizationPrototype() {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clear',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh'\n      ];\n\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationLocal', AngularJsonAPISynchronizationLocalWrapper);\n\n  function AngularJsonAPISynchronizationLocalWrapper(\n    AngularJsonAPISynchronizationPrototype,\n    $window,\n    $q\n  ) {\n\n    AngularJsonAPISynchronizationLocal.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationLocal.prototype.constructor = AngularJsonAPISynchronizationLocal;\n\n    return AngularJsonAPISynchronizationLocal;\n\n    function AngularJsonAPISynchronizationLocal(prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISynchronizationPrototype.call(_this);\n\n      _this.synchronization('init', init);\n\n      _this.begin('clear', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('refresh', updateStorage);\n      _this.begin('unlink', updateStorage);\n      _this.begin('unlinkReflection', updateStorage);\n      _this.begin('link', updateStorage);\n      _this.begin('linkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clear', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('refresh', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.factory.schema.type;\n        return $q.resolve($window.localStorage.getItem(prefix + '.' + type));\n      }\n\n      function clear() {\n        var type = _this.synchronizer.factory.schema.type;\n        $window.localStorage.removeItem(prefix + '.' + type);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.factory.schema.type;\n        var cache = _this.synchronizer.factory.cache;\n        $window.localStorage.setItem(prefix + '.' + type, cache.toJson());\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper($log, pluralize, AngularJsonAPISchemaLink) {\n\n    return AngularJsonAPISchema;\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = new AngularJsonAPISchemaLink(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get.join(',');\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all.join(',');\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchemaLink', AngularJsonAPILinkSchrapperLink);\n\n  function AngularJsonAPILinkSchrapperLink($log, pluralize) {\n\n    return AngularJsonAPISchemaLink;\n\n    function AngularJsonAPISchemaLink(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        if (linkSchema.type !== 'hasMany' && linkSchema.type !== 'hasOne') {\n          $log.error('Schema of link with wrong type: ', linkSchema.type, 'available: hasOne, hasMany');\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n\n        if (linkSchema.reflection === undefined) {\n          _this.reflection = _this.type === 'hasMany' ? pluralize.singular(type) : type;\n        } else {\n          _this.reflection = linkSchema.reflection;\n        }\n\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(AngularJsonAPIAbstractModel, AngularJsonAPISchema, $log) {\n\n    return {\n      model: modelFactory\n    };\n\n    function modelFactory(schemaObj, parentFactory) {\n      var Model = function(data, updatedAt, saved) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, updatedAt, saved);\n\n        _this.form.parent = _this;\n      };\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.parentFactory = parentFactory;\n      Model.prototype.synchronize = parentFactory.synchronizer.synchronize.bind(parentFactory.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return Model;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIFactory', AngularJsonAPIFactoryWrapper);\n\n  function AngularJsonAPIFactoryWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPICache,\n    AngularJsonAPICollection,\n    uuid4,\n    $rootScope,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIFactory.prototype.get = get;\n    AngularJsonAPIFactory.prototype.all = all;\n    AngularJsonAPIFactory.prototype.remove = remove;\n    AngularJsonAPIFactory.prototype.initialize = initialize;\n\n    AngularJsonAPIFactory.prototype.clear = clear;\n\n    return AngularJsonAPIFactory;\n\n    /**\n     * AngularJsonAPIFactory constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the factory\n     */\n    function AngularJsonAPIFactory(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = new AngularJsonAPISchema(schema);\n      _this.cache = new AngularJsonAPICache(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.factory = _this;\n\n      _this.Model = AngularJsonAPIModel.model(\n        _this.schema,\n        _this\n      );\n\n      _this.initialized = false;\n      _this.type = _this.schema.type;\n\n      synchronizer.factory = _this;\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'resolved', response);\n        _this.cache.fromJson(response.data);\n        _this.initialized = true;\n\n        response.finish();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'rejected', response);\n        response.finish();\n        _this.initialized = true;\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:init', 'notify', response);\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id) {\n      var _this = this;\n\n      if (!uuid4.validate(id)) {\n        return $q.reject({errors: [{status: 0, statusText: 'Invalid id not uuid4'}]});\n      }\n\n      return _this.cache.get(id).refresh();\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = params || {};\n\n      var collection = new AngularJsonAPICollection(\n        _this,\n        angular.extend(params, _this.schema.params.all)\n      );\n\n      collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n\n      return object.remove();\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize(key, target) {\n      var _this = this;\n      var relationships = {};\n\n      if (key !== undefined && target !== undefined) {\n        var schema = _this.schema[key];\n\n        if (schema.type === 'hasOne') {\n          relationships[key] = {\n            data: target.data.id\n          };\n        } else if (schema.type === 'hasMany') {\n          $log.warn('Initialize with relationship disallowed for hasMany relationships');\n        }\n      }\n\n      var data = {\n        type: _this.type,\n        id: uuid4.generate(),\n        attributes: {},\n        relationships: relationships\n      };\n\n      var model = new _this.Model(data, false, false);\n\n      return model;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clear() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: 'clear'\n      };\n\n      _this.cache.clear();\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clear', 'resolved', response);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clear', 'resolved', response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':factory:clear', 'notify', response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    $rootScope,\n    $injector,\n    $q\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n\n    return AngularJsonAPICollection;\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIFactory} factory Factory associated with the collection\n     * @param {object} params  Params associated with this factory (such as filters)\n     */\n    function AngularJsonAPICollection(factory, params) {\n      var _this = this;\n\n      _this.factory = factory;\n      _this.type = factory.schema.type;\n      _this.params = params;\n\n      _this.errors = {\n        synchronization: {\n          name: 'Synchronization',\n          description: 'Errors during synchronization',\n          errors: []\n        }\n      };\n\n      _this.error = false;\n\n      _this.data = _this.factory.cache.index(_this.params);\n      _this.synchronized = false;\n\n      $rootScope.$on('angularJsonAPI:' + _this.type + ':object:remove', remove);\n\n      function remove(event, status, object) {\n        var index;\n\n        if (status === 'resolved') {\n\n          index = _this.data.indexOf(object);\n          if (index > -1) {\n            _this.data.splice(index, 1);\n            _this.factory.cache.setIndexIds(_this.data);\n          }\n        }\n      }\n    }\n\n    /**\n     * Shortcut to this.factory.get\n     * @param  {uuid4} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id) {\n      var _this = this;\n\n      return _this.factory.get(id);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var deferred = $q.defer();\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params\n      };\n\n      _this.factory.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred.promise;\n\n      function resolve(results) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'resolved', _this, results);\n\n        _this.errors.synchronization.errors = [];\n        _this.data = $jsonapi.proccesResults(results.data);\n        _this.error = false;\n\n        _this.updatedAt = Date.now();\n        _this.synchronized = true;\n\n        _this.factory.cache.setIndexIds(_this.data);\n\n        results.finish();\n\n        deferred.resolve(_this);\n      }\n\n      function reject(results) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'rejected', _this, results);\n\n        _this.errors.synchronization.errors = results.errors;\n        _this.error = true;\n\n        results.finish();\n\n        deferred.reject(results);\n      }\n\n      function notify(results) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'notify', _this, results);\n\n        deferred.notify(results);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider() {\n    var memory = {};\n    var names = [];\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPIFactory) {\n      return {\n        form: form,\n        get: get,\n        remove: remove,\n        all: all,\n        addFactory: addFactory,\n        getFactory: getFactory,\n        clearAll: clearAll,\n        proccesResults: proccesResults,\n\n        allFactories: allFactories,\n        factoriesNames: factoriesNames\n      };\n\n      function allFactories() {\n        return memory;\n      }\n\n      function factoriesNames() {\n        return names;\n      }\n\n      function addFactory(schema, synchronization) {\n        var factory = new AngularJsonAPIFactory(schema, synchronization);\n\n        memory[schema.type] = factory;\n        names.push(schema.type);\n      }\n\n      function getFactory(type) {\n        return memory[type];\n      }\n\n      function form(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t add not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].saved.form;\n      }\n\n      function get(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].get(id);\n      }\n\n      function remove(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t remove not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].remove(id);\n      }\n\n      function all(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get all of not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].all();\n      }\n\n      function clearAll() {\n        angular.forEach(memory, function(factory) {\n          factory.clear();\n        });\n      }\n\n      function proccesResults(results) {\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n        }\n\n        angular.forEach(results.included, function(data) {\n          getFactory(data.type).cache.addOrUpdate(data, true);\n        });\n\n        if (angular.isArray(results.data)) {\n          var objects = [];\n          angular.forEach(results.data, function(data) {\n            objects.push(getFactory(data.type).cache.addOrUpdate(data, true));\n          });\n\n          return objects;\n        } else {\n          return getFactory(results.data.type).cache.addOrUpdate(results.data, true);\n        }\n      }\n    }\n  }\n\n})();\n\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(function($logProvider) {\n    $logProvider.debugEnabled(false);\n  });\n})();\n"],"sourceRoot":"/source/"}