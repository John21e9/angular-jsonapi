{"version":3,"sources":["jsonapi.module.js","utils/lazy-property.js","utils/all-settled.js","synchronization/synchronization.js","synchronization/synchronization-rest.js","synchronization/synchronization-local.js","collection/collection.factory.js","abstract-data/schema.js","abstract-data/model.factory.js","abstract-data/abstract-data.js","abstract-data/abstract-data-form.js","jsonapi.provider.js"],"names":[],"mappings":"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","file":"angular-jsonapi.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false */\n  .constant('pluralize', pluralize);\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.when(promise)\n            .then(function(value) {\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronization', AngularJsonAPISynchronizationWrapper);\n\n  function AngularJsonAPISynchronizationWrapper($q) {\n    AngularJsonAPISynchronization.prototype.before = beforeSynchro;\n    AngularJsonAPISynchronization.prototype.after = afterSynchro;\n    AngularJsonAPISynchronization.prototype.begin = begin;\n    AngularJsonAPISynchronization.prototype.finish = finish;\n    AngularJsonAPISynchronization.prototype.synchronization = synchronization;\n    AngularJsonAPISynchronization.prototype.synchronize = synchronize;\n    AngularJsonAPISynchronization.prototype.extend = extend;\n\n    return AngularJsonAPISynchronization;\n\n    function AngularJsonAPISynchronization() {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clear',\n        'remove',\n        'removeLink',\n        'removeLinkReflection',\n        'addLink',\n        'addLinkReflection',\n        'update',\n        'refresh'\n      ];\n\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function extend(synchronization) {\n      var _this = this;\n\n      extendHooks('beginHooks');\n      extendHooks('beforeHooks');\n      extendHooks('synchronizationHooks');\n      extendHooks('afterHooks');\n      extendHooks('finishHooks');\n\n      function extendHooks(hooksKey) {\n        angular.forEach(synchronization[hooksKey], function(hooks, key) {\n          _this[hooksKey][key] = _this[hooksKey][key].concat(hooks);\n        });\n      }\n\n      angular.extend(_this.options, synchronization.options);\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n    function synchronize(action, collection, object, linkSchema, linkedObject, params) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n\n      _this.state[action].loading = true;\n\n      if (object !== undefined) {\n        object.loadingCount += 1;\n      }\n\n      if (collection !== undefined) {\n        collection.loadingCount += 1;\n      }\n\n      angular.forEach(_this.beginHooks[action], function(hook) {\n        hook.call(_this, collection, object, linkSchema, linkedObject, params);\n      });\n\n      angular.forEach(_this.beforeHooks[action], function(hook) {\n        hook.call(_this, collection, object, linkSchema, linkedObject, params);\n      });\n\n      angular.forEach(_this.synchronizationHooks[action], function(hook) {\n        promises.push(hook.call(_this, collection, object, linkSchema, linkedObject, params));\n      });\n\n      $q.allSettled(promises).then(function(results) {\n        _this.state[action].success = true;\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.afterHooks[action], function(hook) {\n          hook.call(_this, collection, object, linkSchema, linkedObject, params, results);\n        });\n\n        angular.forEach(_this.finishHooks[action], function(hook) {\n          hook.call(_this, collection, object, linkSchema, linkedObject, params);\n        });\n\n        _this.state[action].loading = false;\n\n        if (object !== undefined) {\n          object.loadingCount -= 1;\n        }\n\n        if (collection !== undefined) {\n          collection.loadingCount -= 1;\n        }\n\n        if (_this.state[action].success === true) {\n          deferred.resolve(results);\n        } else {\n          deferred.reject(results);\n        }\n\n      },\n\n      function(results) {\n        deferred.reject(results);\n      });\n\n      return deferred.promise;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationRest', AngularJsonAPISynchronizationRestWrapper);\n\n  function AngularJsonAPISynchronizationRestWrapper(AngularJsonAPISynchronization, $q, $http) {\n\n    AngularJsonAPISynchronizationRest.prototype = Object.create(AngularJsonAPISynchronization.prototype);\n    AngularJsonAPISynchronizationRest.prototype.constructor = AngularJsonAPISynchronizationRest;\n\n    return AngularJsonAPISynchronizationRest;\n\n    function AngularJsonAPISynchronizationRest(url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISynchronization.call(_this);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('removeLink', removeLink);\n      _this.synchronization('addLink', addLink);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n      _this.after('all', afterAll);\n      _this.after('get', afterGet);\n      _this.after('refresh', afterGet);\n\n      function wrapResp(data, status, headers, config) {\n        return {\n          data: data,\n          status: status,\n          headers: headers,\n          config: config\n        };\n      }\n\n      function afterAll(collection, object, linkSchema, linkedObject, params, results) {\n        var rawData;\n        var included;\n        var indexedData;\n\n        if (results[0].success === true) {\n          rawData = results[0].value.data.data;\n          included = results[0].value.data.included;\n          indexedData = {};\n          angular.forEach(rawData, function(data) {\n            indexedData[data.id] = data;\n            collection.addOrUpdate(data);\n          });\n\n          angular.forEach(collection.data, function(data) {\n            if (indexedData[data.id] === undefined) {\n              collection.__remove(data.id);\n            }\n          });\n\n          angular.forEach(included, function(object) {\n            collection.allCollections[object.type].addOrUpdate(object);\n          });\n        }\n      }\n\n      function afterGet(collection, object, linkSchema, linkedObject, params, results) {\n        var data;\n        var included;\n\n        if (results[0].success === true) {\n          data = results[0].value.data.data;\n          included = results[0].value.data.included;\n          collection.addOrUpdate(data);\n\n          angular.forEach(included, function(object) {\n            collection.allCollections[object.type].addOrUpdate(object);\n          });\n        }\n      }\n\n      function all(collection, object, linkSchema, linkedObject, params) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: params || {}\n        };\n\n        collection.errors.rest = collection.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            collection.errors.rest.all = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            collection.errors.rest.all = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function get(collection, object, linkSchema, linkedObject, params) {\n        var deferred = $q.defer();\n        var config;\n        var ids;\n\n        if (angular.isArray(object)) {\n          ids = [];\n          angular.forEach(object, function(object) {\n            ids.push(object.data.id);\n          });\n        } else {\n          ids = object.data.id;\n        }\n\n        config = {\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + ids.toString(),\n          params: params || {}\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.get = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.get = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function remove(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + object.data.id\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.remove = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.remove = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function removeLink(collection, object, linkKey, linkedObject) {\n        var deferred = $q.defer();\n        var config;\n\n        object.errors.rest = object.errors.rest || {};\n\n        if (object.removed === true || linkedObject === undefined) {\n          deferred.resolve();\n        } else {\n          config = {\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + object.data.id + '/relationships/' + linkKey,\n            data: {data: linkedObject.toLink()}\n          };\n\n          $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.removeLink = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.removeLink = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n        }\n\n        return deferred.promise;\n      }\n\n      function addLink(collection, object, linkKey, linkedObject) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'POST',\n          headers: headers,\n          url: url + '/' + object.data.id + '/relationships/' + linkKey,\n          data: {data: linkedObject.toLink()}\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.addLink = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.addLink = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n\n      }\n\n      function update(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'PATCH',\n          headers: headers,\n          url: url + '/' + object.data.id,\n          data: object.toPatchData()\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.update = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.update = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n\n      function add(collection, object) {\n        var deferred = $q.defer();\n        var config = {\n          method: 'POST',\n          headers: headers,\n          url: url + '/',\n          data: object.toJson()\n        };\n\n        object.errors.rest = object.errors.rest || {};\n\n        $http(config).\n          success(function(data, status, headers, config) {\n            object.errors.rest.add = undefined;\n            deferred.resolve(wrapResp(data, status, headers, config));\n          }).\n          error(function(data, status, headers, config) {\n            object.errors.rest.add = data;\n            deferred.reject(wrapResp(data, status, headers, config));\n          });\n\n        return deferred.promise;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationLocal', AngularJsonAPISynchronizationLocalWrapper);\n\n  function AngularJsonAPISynchronizationLocalWrapper(AngularJsonAPISynchronization, $window) {\n\n    AngularJsonAPISynchronizationLocal.prototype = Object.create(AngularJsonAPISynchronization.prototype);\n    AngularJsonAPISynchronizationLocal.prototype.constructor = AngularJsonAPISynchronizationLocal;\n\n    return AngularJsonAPISynchronizationLocal;\n\n    function AngularJsonAPISynchronizationLocal(prefix) {\n      var _this = this;\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISynchronization.call(_this);\n\n      _this.begin('init', init);\n      _this.begin('clear', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('removeLink', updateStorage);\n      _this.begin('removeLinkReflection', updateStorage);\n      _this.begin('addLink', updateStorage);\n      _this.begin('addLinkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clear', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('removeLink', updateStorage);\n      _this.finish('removeLinkReflection', updateStorage);\n      _this.finish('addLink', updateStorage);\n      _this.finish('addLinkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      function init(collection) {\n        var datas = $window.localStorage.getItem(prefix + '.' + collection.Model.prototype.schema.type);\n        collection.fromJson(datas);\n      }\n\n      function clear(collection) {\n        $window.localStorage.removeItem(prefix + '.' + collection.Model.prototype.schema.type);\n      }\n\n      function updateStorage(collection) {\n        $window.localStorage.setItem(prefix + '.' + collection.Model.prototype.schema.type, collection.toJson());\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    $log,\n    uuid4,\n    JsonAPIModelFactory,\n    AngularJsonAPISchema\n  ) {\n    AngularJsonAPICollection.prototype.allCollections = {};\n\n    AngularJsonAPICollection.prototype.__synchronize = __synchronize;\n    AngularJsonAPICollection.prototype.__get = __get;\n    AngularJsonAPICollection.prototype.__remove = __remove;\n\n    AngularJsonAPICollection.prototype.get = get;\n    AngularJsonAPICollection.prototype.all = all;\n    AngularJsonAPICollection.prototype.refresh = all;\n    AngularJsonAPICollection.prototype.remove = remove;\n    AngularJsonAPICollection.prototype.clear = clear;\n    AngularJsonAPICollection.prototype.fromJson = fromJson;\n    AngularJsonAPICollection.prototype.toJson = toJson;\n    AngularJsonAPICollection.prototype.addOrUpdate = addOrUpdate;\n    AngularJsonAPICollection.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPICollection;\n\n    function AngularJsonAPICollection(schema, synchronization) {\n      var _this = this;\n\n      var schemaObj = new AngularJsonAPISchema(schema);\n\n      _this.Model = JsonAPIModelFactory.model(\n        schemaObj,\n        _this.allCollections,\n        _this\n      );\n\n      _this.synchronization = synchronization;\n\n      _this.loadingCount = 0;\n      _this.data = {};\n      _this.removed = {};\n      _this.promises = {};\n      _this.schema = schemaObj;\n\n      _this.dummy = new _this.Model({\n        type: schema.type,\n        attributes: {},\n        relationships: {}\n      }, undefined, true);\n\n      _this.dummy.form.save = __saveDummy.bind(_this.dummy);\n      _this.dummy.form.addLink = __addLinkDummy.bind(_this.dummy);\n      _this.allCollections[schema.type] = _this;\n\n      _this.__synchronize('init');\n\n      _this.errors = {};\n    }\n\n    function hasErrors() {\n      var _this = this;\n      var result = false;\n\n      angular.forEach(_this.errors, function(error) {\n        if (error !== undefined) {\n          result = true;\n        }\n      });\n\n      return result;\n    }\n\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      if (collection !== null && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, objectData.updatedAt);\n        });\n      }\n    }\n\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: {},\n        updatedAt: _this.updatedAt\n      };\n\n      angular.forEach(_this.data, function(object, key) {\n        json.data[key] = object.toJson();\n      });\n\n      return angular.toJson(json);\n    }\n\n    function addOrUpdate(validatedData, updatedAt) {\n      var _this = this;\n      if (validatedData.id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[validatedData.id] === undefined) {\n        _this.data[validatedData.id] = new this.Model(validatedData, updatedAt);\n      } else {\n        _this.data[validatedData.id].__setData(validatedData, updatedAt);\n        _this.data[validatedData.id].__setLinks(validatedData.relationships);\n      }\n\n      _this.data[validatedData.id].__setUpdated(updatedAt);\n\n      return _this.data[validatedData.id];\n    }\n\n    function __get(id) {\n      var _this = this;\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.Model({id: id, type: _this.Model.prototype.schema.type}, undefined, true);\n      }\n\n      return _this.data[id];\n    }\n\n    function get(id) {\n      var _this = this;\n      var result;\n\n      if (angular.isArray(id)) {\n        result = [];\n        angular.forEach(id, function(id) {\n          result.push(_this.__get(id));\n        });\n      } else {\n        result = _this.__get(id);\n      }\n\n      _this.__synchronize('get', result, undefined, undefined, _this.schema.params.get);\n\n      return result;\n    }\n\n    function all() {\n      var _this = this;\n      _this.__synchronize('all', undefined, undefined, undefined, _this.schema.params.all);\n\n      return _this;\n    }\n\n    function clear() {\n      var _this = this;\n      _this.updatedAt = Date.now();\n      _this.data = {};\n\n      _this.__synchronize('clear');\n    }\n\n    function __remove(id) {\n      var _this = this;\n      var object = _this.data[id];\n\n      _this.removed[id] = object;\n      _this.updatedAt = Date.now();\n\n      delete _this.data[id];\n    }\n\n    function remove(id) {\n      var _this = this;\n      var object = _this.data[id];\n\n      if (object !== undefined) {\n        _this.__remove(id);\n        object.__remove(id);\n      } else {\n        $log.error('Object with this id does not exist');\n      }\n\n      _this.__synchronize('remove', object);\n    }\n\n    function __saveDummy() {\n      var _this = this;\n      var errors = _this.form.validate();\n      var newModel;\n\n      if (angular.equals(errors, {})) {\n        var data = angular.copy(_this.form.data);\n        if (data.id === undefined) {\n          data.id = uuid4.generate();\n        } else if (!uuid4.validate(data.id)) {\n          $log.error('Wrong id of dummy data!');\n          return;\n        }\n\n        data.type = _this.schema.type;\n        newModel = _this.parentCollection.addOrUpdate(data);\n        _this.form.reset();\n        _this.relationships = {};\n        _this.parentCollection.__synchronize('add', newModel);\n      }\n    }\n\n    function __addLinkDummy(linkKey, linkedObject) {\n      var _this = this;\n      if (_this.schema.relationships[linkKey] === undefined) {\n        $log.error('Link\\'', linkKey, '\\'not present in schema of', _this.data.type, _this);\n        return;\n      }\n\n      if (_this.schema.relationships[linkKey].type === 'hasOne') {\n        _this.form.data.relationships[linkKey] = {\n          data: {\n            type: linkedObject.data.type,\n            id: linkedObject.data.id\n          }\n        };\n      } else {\n        _this.form.data.relationships[linkKey].data = _this.form.data.relationships[linkKey].data || [];\n        _this.form.data.relationships[linkKey].data.push({\n          type: linkedObject.data.type,\n          id: linkedObject.data.id\n        });\n      }\n    }\n\n    function __synchronize(action, object, linkKey, linkedObject, params) {\n      var _this = this;\n      var promise;\n\n      $log.debug('Synchro Collection', this.Model.prototype.schema.type, {action: action, object: object, linkKey: linkKey, linkedObject: linkedObject, params: params});\n\n      promise = _this.synchronization.synchronize(action, _this, object, linkKey, linkedObject, params);\n      if (object !== undefined) {\n        object.promises[action] = promise;\n      } else {\n        _this.promises[action] = promise;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper($log, pluralize) {\n\n    return AngularJsonAPISchema;\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = new AngularJsonAPILinkSchema(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get.join(',');\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all.join(',');\n      }\n    }\n\n    function AngularJsonAPILinkSchema(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n        _this.reflection = linkSchema.reflection || type;\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('JsonAPIModelFactory', JsonAPIModelFactory);\n\n  function JsonAPIModelFactory(AngularJsonAPIAbstractData, AngularJsonAPISchema, $log) {\n\n    return {\n      model: modelFactory\n    };\n\n    function modelFactory(schemaObj, linkedCollections, parentCollection) {\n      var Model = function(data, updatedAt, dummy) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractData.call(_this, data, updatedAt, dummy);\n\n        _this.form.parent = _this;\n      };\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractData.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.linkedCollections = linkedCollections;\n      Model.prototype.parentCollection = parentCollection;\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.call(this);\n        };\n      });\n\n      return Model;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractData', AngularJsonAPIAbstractDataWrapper);\n\n  function AngularJsonAPIAbstractDataWrapper(\n    $log,\n    uuid4,\n    lazyProperty,\n    AngularJsonAPIAbstractDataForm\n  ) {\n\n    AngularJsonAPIAbstractData.prototype.__setData = __setData;\n    AngularJsonAPIAbstractData.prototype.__setLinks   = __setLinks;\n    AngularJsonAPIAbstractData.prototype.__setLink = __setLink;\n    AngularJsonAPIAbstractData.prototype.__setAttributes = __setAttributes;\n    AngularJsonAPIAbstractData.prototype.__validateData = __validateData;\n    AngularJsonAPIAbstractData.prototype.__validateField = __validateField;\n    AngularJsonAPIAbstractData.prototype.__updateAttributes = __updateAttributes;\n    AngularJsonAPIAbstractData.prototype.__remove = __remove;\n    AngularJsonAPIAbstractData.prototype.__setUpdated = __setUpdated;\n    AngularJsonAPIAbstractData.prototype.__setLinkInternal = __setLinkInternal;\n\n    AngularJsonAPIAbstractData.prototype.refresh = refresh;\n    AngularJsonAPIAbstractData.prototype.remove = remove;\n    AngularJsonAPIAbstractData.prototype.addLinkById = addLinkById;\n    AngularJsonAPIAbstractData.prototype.addLink = addLink;\n    AngularJsonAPIAbstractData.prototype.removeLink = removeLink;\n    AngularJsonAPIAbstractData.prototype.toLink = toLink;\n    AngularJsonAPIAbstractData.prototype.toPatchData = toPatchData;\n    AngularJsonAPIAbstractData.prototype.removeAllLinks = removeAllLinks;\n    AngularJsonAPIAbstractData.prototype.hasErrors = hasErrors;\n\n    AngularJsonAPIAbstractData.prototype.toJson = toJson;\n\n    return AngularJsonAPIAbstractData;\n\n    function AngularJsonAPIAbstractData(data, updatedAt, dummy) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      _this.removed = false;\n      _this.loadingCount = 0;\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      _this.errors = {\n        validation: {}\n      };\n\n      _this.promises = {};\n\n      _this.dummy = dummy || false;\n\n      _this.__setUpdated(updatedAt);\n      _this.__setData(data, updatedAt);\n\n      _this.form = new AngularJsonAPIAbstractDataForm(_this);\n    }\n\n    function refresh() {\n      var _this = this;\n\n      _this.parentCollection.__synchronize('refresh', _this);\n    }\n\n    function hasErrors() {\n      var _this = this;\n      var result = false;\n\n      angular.forEach(_this.errors, function(error) {\n        if (error !== undefined) {\n          result = true;\n        }\n      });\n\n      return result;\n    }\n\n    function toJson() {\n      var _this = this;\n\n      return {\n        data: _this.data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    function __setUpdated(updatedAt) {\n      var _this = this;\n\n      _this.updatedAt = updatedAt || Date.now();\n      _this.parentCollection.updatedAt = _this.updatedAt;\n    }\n\n    function __remove() {\n      var _this = this;\n\n      _this.__setUpdated();\n      _this.removed = true;\n      _this.removeAllLinks();\n    }\n\n    function remove() {\n      var _this = this;\n\n      _this.__remove();\n      _this.parentCollection.remove(_this.data.id);\n    }\n\n    function toLink() {\n      return {type: this.data.type, id: this.data.id};\n    }\n\n    function toPatchData() {\n      var _this = this;\n      var res = {data: {}};\n      angular.forEach(_this.data, function(val, key) {\n        if (key !== 'relationships') {\n          res.data[key] = val;\n        }\n      });\n\n      return res;\n    }\n\n    function addLinkById(linkKey, linkModelName, id) {\n      var _this = this;\n      var linkedObject = _this.linkedCollections[linkModelName].__get(id);\n\n      if (_this.schema.relationships[linkKey] === undefined) {\n        $log.error('Cannot add link not specified in schema: ' + linkKey);\n        return;\n      }\n\n      if (_this.linkedCollections[linkModelName] === undefined) {\n        $log.error('Cannot add link of not existing type: ' + linkModelName);\n        return;\n      }\n\n      if (!uuid4.validate(id)) {\n        $log.error('Wrong link id, not uuid4: ' + id);\n        return;\n      }\n\n      if (linkedObject === undefined) {\n        $log.error('Cant find', linkModelName, 'with', id);\n        return;\n      }\n\n      _this.addLink(\n        linkKey,\n        linkedObject\n      );\n\n    }\n\n    function addLink(linkKey, linkedObject, reflection) {\n      var _this = this;\n      var linkSchema = _this.schema.relationships[linkKey];\n      var linkType;\n      var reflectionKey;\n      var linkAttributes;\n\n      if (linkedObject === undefined) {\n        $log.error('Can\\'t add non existing object');\n        return;\n      }\n\n      if (linkSchema === undefined) {\n        if (reflection === false) {\n          $log.error('Can\\'t add link not present in schema: ', linkKey, _this, reflection);\n        }\n\n        return;\n      }\n\n      if (linkSchema.polymorphic === false && linkSchema.model !== linkedObject.schema.type) {\n        $log.error('This relation is not polymorphic, expected: ' + linkSchema.model + ' instead of ' + linkedObject.schema.type);\n        return;\n      }\n\n      linkType = linkSchema.type;\n      reflectionKey = linkSchema.reflection;\n\n      if (linkType === 'hasOne') {\n        linkAttributes = _this.data.relationships[linkKey].data;\n\n        if (\n          linkAttributes !== undefined &&\n          linkAttributes !== null &&\n          linkAttributes.id === linkedObject.data.id\n        ) {\n          return;\n        }\n\n        if (linkAttributes !== undefined && linkAttributes !== null) {\n          $log.warn('Swaping hasOne', linkKey, 'of', _this.toString());\n          _this.removeLink(linkKey);\n        }\n\n        linkAttributes = linkedObject.toLink();\n      } else {\n        linkAttributes = _this.data.relationships[linkKey].data || [];\n        var duplicate = false;\n        angular.forEach(linkAttributes, function(link) {\n          if (link.id === linkedObject.data.id) {\n            duplicate = true;\n          }\n        });\n\n        if (duplicate === true) {\n          return;\n        }\n\n        linkAttributes.push(linkedObject.toLink());\n      }\n\n      if (reflection === true) {\n        _this.parentCollection.__synchronize('addLinkReflection', _this, linkKey, linkedObject);\n      } else {\n        linkedObject.addLink(reflectionKey, _this, true);\n        _this.parentCollection.__synchronize('addLink', _this, linkKey, linkedObject);\n      }\n\n      _this.__setUpdated();\n      _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n    }\n\n    function removeAllLinks() {\n      var _this = this;\n\n      angular.forEach(_this.relationships, function(link, key) {\n        _this.removeLink(key);\n      });\n    }\n\n    function removeLink(linkKey, linkedObject, reflection) {\n      var _this = this;\n      var linkSchema = _this.schema.relationships[linkKey];\n      var linkType;\n      var linkAttributes;\n      var reflectionKey;\n      var removed = false;\n\n      if (_this.schema.relationships[linkKey] === undefined) {\n        $log.error('Can\\'t remove link not present in schema');\n        return;\n      }\n\n      linkType = linkSchema.type;\n      reflectionKey = linkSchema.reflection;\n      linkAttributes = _this.data.relationships[linkKey].data;\n\n      if (linkType === 'hasOne') {\n        if (linkedObject !== undefined && linkedObject.data.id === linkAttributes.id) {\n          _this.data.relationships[linkKey].data = null;\n          linkAttributes = null;\n          removed = true;\n          if (reflection !== true && _this.relationships[linkKey] !== undefined) {\n            _this.relationships[linkKey].removeLink(reflectionKey, _this, true);\n          }\n        }\n      } else {\n        if (linkedObject === undefined) {\n          _this.data.relationships[linkKey].data = [];\n          linkAttributes = [];\n          removed = true;\n          if (reflection !== true) {\n            angular.forEach(_this.relationships[linkKey], function(link) {\n              link.removeLink(reflectionKey, _this, true);\n            });\n          }\n        } else {\n          angular.forEach(linkAttributes, function(link, index) {\n            if (link.id === linkedObject.data.id) {\n              if (reflection !== true) {\n                linkedObject.removeLink(reflectionKey, _this, true);\n              }\n\n              linkAttributes.splice(index, 1);\n              removed = true;\n            }\n          });\n        }\n      }\n\n      if (removed === true) {\n        _this.__setUpdated();\n\n        if (reflection !== true) {\n          _this.parentCollection.__synchronize('removeLink', _this, linkKey, linkedObject);\n        } else {\n          _this.parentCollection.__synchronize('removeLinkReflection',  _this, linkKey, linkedObject);\n        }\n\n        _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n      }\n    }\n\n    function __updateAttributes(validatedAttributes) {\n      var _this = this;\n\n      _this.__setUpdated();\n      _this.__setAttributes(validatedAttributes);\n      _this.parentCollection.__synchronize('update', _this);\n    }\n\n    function __setLinkInternal(linkAttributes, linkKey, linkSchema) {\n      var _this = this;\n      var linkType = linkSchema.type;\n      var reflectionKey = linkSchema.reflection;\n\n      if (linkAttributes === null) {\n        delete _this.relationships[linkKey];\n        _this.relationships[linkKey] = undefined;\n      } else if (linkType === 'hasMany' && angular.isArray(linkAttributes)) {\n        var getAll = function() {\n          var result = [];\n          angular.forEach(linkAttributes, function(link) {\n            var linkedCollection = _this.linkedCollections[link.type];\n            if (linkedCollection === undefined) {\n              $log.error('No angular-jsonapi schema for', linkAttributes.type);\n              return;\n            }\n\n            var linkedObject = linkedCollection.__get(link.id);\n            linkedObject.addLink(reflectionKey, _this, true);\n\n            result.push(linkedObject);\n          });\n\n          return result;\n        };\n\n        lazyProperty(_this.relationships, linkKey, getAll);\n      } else if (linkType === 'hasOne' && linkAttributes !== null) {\n\n        var getSingle = function() {\n          var linkedCollection = _this.linkedCollections[linkAttributes.type];\n          if (linkedCollection === undefined) {\n            $log.error('No angular-jsonapi schema for', linkAttributes.type);\n            return;\n          }\n\n          var linkedObject = linkedCollection.__get(linkAttributes.id);\n          linkedObject.addLink(reflectionKey, _this, true);\n\n          return linkedObject;\n        };\n\n        lazyProperty(_this.relationships, linkKey, getSingle);\n      }\n    }\n\n    function __setLink(linkAttributes, linkKey, linkSchema) {\n      var _this = this;\n      var linkType = linkSchema.type;\n      var reflectionKey = linkSchema.reflection;\n\n      if (linkType === 'hasMany' && angular.isArray(linkAttributes)) {\n        var indexedLinks = {};\n        angular.forEach(linkAttributes, function(link) {\n          indexedLinks[link.id] = link;\n        });\n\n        angular.forEach(_this.relationships[linkKey], function(link) {\n          if (indexedLinks[link.data.id] === undefined) {\n            link.removeLink(reflectionKey, _this, true);\n          }\n        });\n      } else if (linkType === 'hasOne' && linkAttributes !== null) {\n        if (_this.relationships[linkKey] !== undefined && _this.relationships[linkKey].data.id !== linkAttributes.id) {\n          _this.relationships[linkKey].removeLink(reflectionKey, _this, true);\n        }\n      }\n\n      _this.__setLinkInternal(linkAttributes, linkKey, linkSchema);\n    }\n\n    function __setLinks(relationships) {\n      var _this = this;\n      if (relationships === undefined) {\n        return;\n      }\n\n      angular.forEach(_this.schema.relationships, function(linkSchema, linkName) {\n        _this.data.relationships[linkName] = _this.data.relationships[linkName] || {};\n        if (relationships[linkName] !== undefined) {\n          angular.extend(_this.data.relationships[linkName], relationships[linkName]);\n        }\n      });\n\n      angular.forEach(_this.schema.relationships, function(linkSchema, linkKey) {\n        if (relationships[linkKey] !== undefined && relationships[linkKey].data !== undefined) {\n          _this.__setLink(relationships[linkKey].data, linkKey, linkSchema);\n        }\n      });\n    }\n\n    function __validateField(data, key) {\n      var _this = this;\n      var error = [];\n\n      if (data !== undefined) {\n        error = __validate(_this.schema.attributes[key], data, key);\n      }\n\n      return error;\n    }\n\n    function __validateData(data) {\n      var _this = this;\n      var errors = {};\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        var error = _this.__validateField(data[key], key);\n        if (error.length > 0) {\n          errors[key] = error;\n          $log.warn('Erorrs when validating ', data[key], errors);\n        }\n      });\n\n      return errors;\n    }\n\n    function __setAttributes(attributes) {\n      var _this = this;\n\n      angular.forEach(_this.schema.attributes, function(validator, attributeName) {\n        if (attributes[attributeName] !== undefined) {\n          _this.data.attributes[attributeName] = attributes[attributeName];\n        }\n      });\n    }\n\n    function __setData(data) {\n      var _this = this;\n      var safeData = angular.copy(data);\n\n      _this.errors.validation = _this.__validateData(safeData);\n\n      safeData.relationships = safeData.relationships || {};\n      safeData.attributes = safeData.attributes || {};\n\n      _this.data.id = safeData.id;\n      _this.data.type = safeData.type;\n\n      _this.__setAttributes(safeData.attributes);\n      _this.__setLinks(safeData.relationships);\n    }\n\n    function __validate(validator, attributeValue, attributeName) {\n      var errors = [];\n      if (angular.isArray(validator)) {\n        angular.forEach(validator, function(element) {\n          errors = errors.concat(__validate(element, attributeValue, attributeName));\n        });\n      } else if (angular.isFunction(validator)) {\n        var err = validator(attributeValue);\n        if (angular.isArray(err)) {\n          errors.concat(err);\n        } else {\n          $log.error(\n            'Wrong validator type it should return array of errors instead of: ' +\n              err.toString()\n          );\n        }\n      } else if (angular.isString(validator)) {\n        if (validator === 'text' || validator === 'string') {\n          if (!angular.isString(attributeValue)) {\n            errors.push(attributeName + ' is not a string ');\n          }\n        } else if (validator === 'number' || validator === 'integer') {\n          if (parseInt(attributeValue).toString() !== attributeValue.toString()) {\n            errors.push(attributeName + ' is not a number');\n          }\n        } else if (validator === 'uuid4') {\n          if (!uuid4.validate(attributeValue)) {\n            errors.push(attributeName + ' is not a uuid4');\n          }\n        } else if (validator === 'required') {\n          if (attributeValue.toString().length === 0) {\n            errors.push(attributeName + ' is empty');\n          }\n        } else {\n          $log.error('Wrong validator type: ' + validator.toString());\n        }\n      } else if (angular.isObject(validator)) {\n        if (validator.maxlength !== undefined && attributeValue.length > validator.maxlength) {\n          errors.push(attributeName + ' is too long max ' + validator.maxlength);\n        }\n\n        if (validator.minlength !== undefined && attributeValue.length < validator.minlength) {\n          errors.push(attributeName + ' is too short min ' + validator.minlength);\n        }\n\n        if (validator.maxvalue !== undefined && parseInt(attributeValue) > validator.maxvalue) {\n          errors.push(attributeName + ' is too big max ' + validator.maxvalue);\n        }\n\n        if (validator.minvalue !== undefined && parseInt(attributeValue) < validator.minvalue) {\n          errors.push(attributeName + ' is too small min ' + validator.minvalue);\n        }\n      } else {\n        $log.error('Wrong validator type: ' + validator.toString());\n      }\n\n      return errors;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractDataForm', AngularJsonAPIAbstractDataFormWrapper);\n\n  function AngularJsonAPIAbstractDataFormWrapper($log) {\n\n    AngularJsonAPIAbstractDataForm.prototype.save = save;\n    AngularJsonAPIAbstractDataForm.prototype.reset = reset;\n    AngularJsonAPIAbstractDataForm.prototype.validate = validate;\n    AngularJsonAPIAbstractDataForm.prototype.validateField = validateField;\n\n    AngularJsonAPIAbstractDataForm.prototype.__synchronize = __synchronize;\n\n    return AngularJsonAPIAbstractDataForm;\n\n    function AngularJsonAPIAbstractDataForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        attributes: {},\n        relationships: {}\n      };\n      _this.parent = parent;\n      _this.reset();\n    }\n\n    function save() {\n      var _this = this;\n      var errors = _this.validate();\n\n      if (angular.equals(errors, {}) === false) {\n        $log.error('Errors in form: ', errors);\n        return;\n      }\n\n      _this.parent.__updateAttributes(_this.data);\n    }\n\n    function reset() {\n      var _this = this;\n\n      angular.forEach(_this.parent.schema.attributes, function(data, key) {\n        _this.data.attributes[key] = _this.parent.data.attributes[key] || '';\n      });\n\n      angular.forEach(_this.parent.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = _this.parent.data.relationships[key] || {};\n      });\n\n      _this.errors = {\n        validation: {}\n      };\n    }\n\n    function validate() {\n      var _this = this;\n      var errors;\n\n      errors = _this.parent.__validateData(_this.data);\n\n      _this.errors.validation = errors;\n\n      return errors;\n    }\n\n    function validateField(key) {\n      var _this = this;\n      var errors;\n      errors = _this.parent.__validateField(\n        _this.data[key],\n        key\n      );\n\n      _this.errors.validation[key] = errors;\n\n      return errors;\n    }\n\n    function __synchronize(key) {\n      $log.log('Synchro Collection ' + this.Model.prototype.schema.type, key);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider() {\n    var memory = {};\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPICollection) {\n      return {\n        form: form,\n        get: get,\n        remove: remove,\n        all: all,\n        addModel: addModel,\n        getModel: getModel,\n        clearAll: clearAll\n      };\n\n      function addModel(schema, synchronization) {\n        var collection = new AngularJsonAPICollection(schema, synchronization);\n\n        memory[schema.type] = collection;\n      }\n\n      function getModel(type) {\n        return memory[type];\n      }\n\n      function form(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t add not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].dummy.form;\n      }\n\n      function get(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].get(id);\n      }\n\n      function remove(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t remove not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].remove(id);\n      }\n\n      function all(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get all of not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].all();\n      }\n\n      function clearAll() {\n        angular.forEach(memory, function(collection) {\n          collection.clear();\n        });\n      }\n    }\n  }\n\n})();\n\n"],"sourceRoot":"/source/"}