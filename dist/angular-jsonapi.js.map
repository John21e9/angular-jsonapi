{"version":3,"sources":["jsonapi.module.js","model/model-validator/model-validator.js","model/model-linker/model-linker.js","model/model-form/model-form.js","model/abstract-model/abstract-model.js","factory/factory-cache/factory-cache.factory.js","utils/lazy-property.js","utils/kebab-case.js","utils/all-settled.js","synchronizers/synchronizer-simple.js","synchronizers/synchronizer-prototype.js","synchronizations/synchronization-rest.js","synchronizations/synchronization-prototype.js","synchronizations/synchronization-local.js","schema/schema.js","model/model.js","factory/factory.js","collection/collection.js","jsonapi.provider.js"],"names":[],"mappings":"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","file":"angular-jsonapi.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false */\n  .constant('pluralize', pluralize);\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelValidatorService', AngularJsonAPIModelValidatorService);\n\n  function AngularJsonAPIModelValidatorService() {\n    var _this = this;\n    _this.validateForm = validateForm;\n    _this.validateField = validateField;\n\n    return this;\n\n    /**\n     * Validates form\n     * @param  {object} data Form data\n     * @return {object} Errors object indexed by keys\n     */\n    function validateForm(schema, data) {\n      var _this = this;\n\n      return {};\n    }\n\n    /**\n     * Validates single field\n     * @param  {string} key Field key\n     * @return {array}     Errors array\n     */\n    function validateField(schema, key) {\n      var _this = this;\n\n      return [];\n    }\n\n    // function __validate(validator, attributeValue, attributeName) {\n    //   var errors = [];\n    //   if (angular.isArray(validator)) {\n    //     angular.forEach(validator, function(element) {\n    //       errors = errors.concat(__validate(element, attributeValue, attributeName));\n    //     });\n    //   } else if (angular.isFunction(validator)) {\n    //     var err = validator(attributeValue, attributeName);\n    //     if (angular.isArray(err)) {\n    //       errors.concat(err);\n    //     } else {\n    //       $log.error(\n    //         'Wrong validator type it should return array of errors instead of: ' +\n    //           err.toString()\n    //       );\n    //     }\n    //   } else if (angular.isString(validator)) {\n    //     if (validator === 'text' || validator === 'string') {\n    //       if (!angular.isString(attributeValue)) {\n    //         errors.push(attributeName + ' is not a string ');\n    //       }\n    //     } else if (validator === 'number' || validator === 'integer') {\n    //       if (parseInt(attributeValue).toString() !== attributeValue.toString()) {\n    //         errors.push(attributeName + ' is not a number');\n    //       }\n    //     } else if (validator === 'uuid4') {\n    //       if (!uuid4.validate(attributeValue)) {\n    //         errors.push(attributeName + ' is not a uuid4');\n    //       }\n    //     } else if (validator === 'required') {\n    //       if (attributeValue.toString().length === 0) {\n    //         errors.push(attributeName + ' is empty');\n    //       }\n    //     } else {\n    //       $log.error('Wrong validator type: ' + validator.toString());\n    //     }\n    //   } else if (angular.isObject(validator)) {\n    //     if (validator.maxlength !== undefined && attributeValue.length > validator.maxlength) {\n    //       errors.push(attributeName + ' is too long max ' + validator.maxlength);\n    //     }\n\n    //     if (validator.minlength !== undefined && attributeValue.length < validator.minlength) {\n    //       errors.push(attributeName + ' is too short min ' + validator.minlength);\n    //     }\n\n    //     if (validator.maxvalue !== undefined && parseInt(attributeValue) > validator.maxvalue) {\n    //       errors.push(attributeName + ' is too big max ' + validator.maxvalue);\n    //     }\n\n    //     if (validator.minvalue !== undefined && parseInt(attributeValue) < validator.minvalue) {\n    //       errors.push(attributeName + ' is too small min ' + validator.minvalue);\n    //     }\n    //   } else {\n    //     $log.error('Wrong validator type: ' + validator.toString());\n    //   }\n\n    //   return errors;\n    // }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, schema) {\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        return false;\n      }\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target, schema);\n        return false;\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema: ', object, key, target, schema);\n        return false;\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        return false;\n      }\n\n      if (schema.type === 'hasMany') {\n        return __addHasMany(object, key, target, schema);\n      } else if (schema.type === 'hasOne') {\n        return __addHasOne(object, key, target, schema);\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, schema) {\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema: ' + key);\n        return;\n      }\n\n      if (schema.type === 'hasMany') {\n        return __removeHasMany(_this, key, object, schema);\n      } else if (schema.type === 'hasOne') {\n        return __removeHasOne(_this, key, object, schema);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __addHasOne(object, key, target, schema) {\n      $log.log('addHasOne', object);\n\n      if (object.relationships[key] === target) {\n        $log.warn(object, 'is already linked to', target);\n        return false;\n      } else {\n        object.relationships[key] = target;\n        object.data.relationships[key].data = toLinkData(target);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, schema) {\n      $log.log('addHasMany', object, key, target, schema);\n\n      if (object.relationships[key].indexOf(target) > -1) {\n        $log.warn(object, 'is already linked to', target);\n        return false;\n      } else {\n        object.relationships[key].push(target);\n        object.data.relationships[key].data.push(toLinkData(target));\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, schema) {\n      $log.log('removeHasOne', object, key, target, schema);\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        $log.warn(object, 'is not linked to', target);\n        return false;\n      } else {\n        object.relationships[key] = null;\n        object.data.relationships[key].data = undefined;\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, schema) {\n      $log.log('removeHasMany', object, key, target, schema);\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n      } else {\n        var index = object.relationships[key].indexOf(target);\n\n        if (index === -1) {\n          $log.warn(object, 'is not linked to', target);\n          return false;\n        } else {\n          object.relationships[key].splice(index, 1);\n          object.data.relationships[key].data.splice(index, 1);\n        }\n      }\n\n      return true;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidatorService,\n    AngularJsonAPIModelLinkerService\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n    AngularJsonAPIModelForm.prototype.validateField = validateField;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return AngularJsonAPIModelForm;\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      angular.forEach(_this.schema.attributes, function(data, key) {\n        _this.data.attributes[key] = _this.parent.data.attributes[key] || '';\n      });\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = _this.parent.data.relationships[key] || {};\n        _this.relationships[key] = _this.parent.relationships[key];\n      });\n\n      _this.errors = {\n        validation: {}\n      };\n    }\n\n    /**\n     * Validates form\n     * @return {objec} Errors object indexed by keys\n     */\n    function validate() {\n      var _this = this;\n      var errors;\n\n      errors = AngularJsonAPIModelValidatorService.validateForm(_this.data);\n\n      _this.errors.validation = errors;\n\n      return errors;\n    }\n\n    /**\n     * Validates single field\n     * @param  {string} key Field key\n     * @return {array}     Errors array\n     */\n    function validateField(key) {\n      var _this = this;\n      var errors;\n      errors = AngularJsonAPIModelValidatorService.validateField(\n        _this.data[key],\n        key\n      );\n\n      _this.errors.validation[key] = errors;\n\n      return errors;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target) {\n      var _this = this;\n      var schema = _this.schema.relationships[key];\n\n      return AngularJsonAPIModelLinkerService.link(_this, key, target, schema);\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target) {\n      var _this = this;\n      var schema = _this.schema.relationships[key];\n\n      return AngularJsonAPIModelLinkerService.unlink(_this, key, target, schema);\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelForm,\n    AngularJsonAPIModelLinkerService,\n    uuid4,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {Boolean} isNew   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, isNew) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      _this.isNew = isNew || false;\n\n      _this.removed = false;\n      _this.loadingCount = 0;\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      _this.errors = {\n        validation: {}\n      };\n\n      _this.promises = {};\n\n      __setData(_this, data, true);\n      _this.form = new AngularJsonAPIModelForm(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save() {\n      var _this = this;\n      var deferred = $q.defer();\n      var hasErrors = false;\n      var config = {\n        action: 'update',\n        object: _this\n      };\n\n      if (_this.isNew === true) {\n        config.action = 'add';\n      }\n\n      var errors = _this.form.validate();\n\n      for (var error in errors) {\n        if (errors.hasOwnProperty(error)) {\n          hasErrors = true;\n        }\n      }\n\n      if (hasErrors === true) {\n        deferred.reject(errors);\n        return deferred.promise;\n      } else {\n        _this.synchronize(config).then(resolved, rejected);\n      }\n\n      return deferred.promise;\n\n      function resolved(response) {\n        __setData(_this, _this.form.data);\n        response.finish();\n\n        return _this;\n      }\n\n      function rejected() {\n        response.finish();\n\n        return response.errors;\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      return _this.form.reset();\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh() {\n      var deferred = $q.defer();\n      var _this = this;\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: _this.schema.params.get\n      };\n\n      if (_this.isNew === true) {\n        $log.error('Can\\'t refresh new object');\n        deferred.reject('Can\\'t refresh new object');\n      } else {\n        _this.synchronize(config).then(resolved, rejected);\n      }\n\n      function resolved(response) {\n        _this.update(response.data);\n        response.finish();\n\n        return _this;\n      }\n\n      function rejected(response) {\n        response.finish();\n\n        return response.errors;\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n\n      return _this.parentFactory.remove(_this.data.id);\n    }\n\n    /**\n     * Unlink all relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll() {\n      var _this = this;\n\n      angular.forEach(_this.relationships, function(link, key) {\n        AngularJsonAPIModelLinkerService.unlink(_this, key, undefined, _this.schema.relationships[key]);\n      });\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var schema = _this.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema = target.schema.relationships[reflectionKey];\n      var promise;\n\n      if (!AngularJsonAPIModelLinkerService.link(_this, key, target, schema) ||\n          !AngularJsonAPIModelLinkerService.link(target, reflectionKey, _this, reflectionSchema)) {\n\n        deferred.reject();\n        return deferred.promise;\n      }\n\n      promise = $q.all(_this.synchronize({\n        action: 'link',\n        object: _this,\n        target: target,\n        key: key\n      }),\n\n      _this.synchronize({\n        action: 'linkReflection',\n        object: _this,\n        target: target,\n        key: key\n      }));\n\n      promise.then(resolved, rejected);\n\n      function resolved(response) {\n        deferred.resolve(_this);\n\n        response.finish();\n        return response.data;\n      }\n\n      function rejected(response) {\n        AngularJsonAPIModelLinkerService.unlink(_this, key, target, schema);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        deferred.reject(response.errors);\n        response.finish();\n        return response.errors;\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var schema = _this.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema = target.schema.relationships[reflectionKey];\n      var promise;\n\n      if (!AngularJsonAPIModelLinkerService.unlink(_this, key, target, schema) ||\n          !AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema)) {\n\n        deferred.reject();\n        return deferred.promise;\n      }\n\n      promise = $q.all(_this.synchronize({\n        action: 'unlink',\n        object: _this,\n        target: target,\n        key: key\n      }),\n\n      _this.synchronize({\n        action: 'unlinkReflection',\n        object: _this,\n        target: target,\n        key: key\n      }));\n\n      promise.then(resolved, rejected);\n\n      function resolved(response) {\n        deferred.resolve(_this);\n\n        response.finish();\n        return response.data;\n      }\n\n      function rejected(response) {\n        AngularJsonAPIModelLinkerService.unlink(_this, key, target, schema);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        deferred.reject(response.errors);\n        response.finish();\n        return response.errors;\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData) {\n      var _this = this;\n\n      return __setData(_this, validatedData);\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData, initialize) {\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.parentFactory.schema.type !== validatedData.type) {\n        $log.error('Different type then factory');\n        return false;\n      }\n\n      if (!uuid4.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        if (validatedData.relationships[key] === undefined) {\n          if (schema.type === 'hasOne') {\n            object.data.relationships[key] = {data: undefined};\n          } else if (schema.type === 'hasMany') {\n            object.data.relationships[key] = {data: []};\n          }\n        } else {\n          object.data.relationships[key] = validatedData.relationships[key];\n          if (schema.type === 'hasOne') {\n            linkOne(object, key, schema, object.data.relationships[key].data);\n          } else if (schema.type === 'hasMany') {\n            angular.forEach(\n              object.data.relationships[key].data,\n              linkOne.bind(undefined, object, key, schema)\n            );\n          }\n        }\n      }\n\n      function linkOne(object, key, schema, data) {\n\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null, schema);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        var factory = $jsonapi.getFactory(data.type);\n        var target = factory.cache.get(data.id);\n        var reflectionKey = schema.reflection;\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n\n        AngularJsonAPIModelLinkerService.link(object, key, target, schema);\n\n        if (initialize !== true && reflectionKey !== false) {\n          AngularJsonAPIModelLinkerService.link(object, reflectionKey, target, reflectionSchema);\n        }\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICache', AngularJsonAPICacheWrapper);\n\n  function AngularJsonAPICacheWrapper(\n    $log\n  ) {\n\n    AngularJsonAPICache.prototype.get = get;\n    AngularJsonAPICache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPICache.prototype.fromJson = fromJson;\n    AngularJsonAPICache.prototype.toJson = toJson;\n    AngularJsonAPICache.prototype.clear = clear;\n\n    AngularJsonAPICache.prototype.remove = remove;\n    AngularJsonAPICache.prototype.revertRemove = revertRemove;\n    AngularJsonAPICache.prototype.clearRemoved = clearRemoved;\n\n    return AngularJsonAPICache;\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPICache(factory) {\n      var _this = this;\n\n      _this.factory = factory;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.factory.Model(validatedData);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      if (collection !== null && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, objectData.updatedAt);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: {},\n        updatedAt: _this.updatedAt\n      };\n\n      angular.forEach(_this.data, function(object, key) {\n        json.data[key] = object.toJson();\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = new _this.factory.Model({id: id, type: _this.factory.Model.prototype.schema.type});\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n","// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi').config(['$provide', function($provide) {\n    $provide.decorator('$q', ['$delegate', function($delegate) {\n      var $q = $delegate;\n\n      $q.allSettled = $q.allSettled || function allSettled(promises, resolvedCallback, rejectedCallback) {\n        // Implementation of allSettled function from Kris Kowal's Q:\n        // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n        // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n        var wrapped = angular.isArray(promises) ? [] : {};\n\n        angular.forEach(promises, function(promise, key) {\n          if (!wrapped.hasOwnProperty(key)) {\n            wrapped[key] = wrap(promise);\n          }\n        });\n\n        return $q.all(wrapped);\n\n        function wrap(promise) {\n          return $q.when(promise)\n            .then(function(value) {\n              if (angular.isFunction(resolvedCallback)) {\n                resolvedCallback(value);\n              }\n\n              return { success: true, value: value };\n            },\n\n            function(reason) {\n              if (angular.isFunction(rejectedCallback)) {\n                rejectedCallback(reason);\n              }\n\n              return { success: false, reason: reason };\n            });\n        }\n      };\n\n      return $q;\n    }]);\n  }]);\n\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerSimple;\n\n    function AngularJsonAPISynchronizerSimple(synchronizations) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, synchronizations);\n\n      angular.forEach(synchronizations, function(synchronization) {\n        synchronization.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.synchronizations, function(synchronization) {\n        angular.forEach(synchronization.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push(result.reason);\n          }\n        });\n\n        if (data === undefined) {\n          deferred.reject({finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.synchronizations, function(synchronization) {\n          angular.forEach(synchronization.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(synchronizations) {\n      var _this = this;\n\n      _this.synchronizations = synchronizations;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.factory.Model.prototype.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationRest', AngularJsonAPISynchronizationRestWrapper);\n\n  function AngularJsonAPISynchronizationRestWrapper(\n    AngularJsonAPISynchronizationPrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISynchronizationRest.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationRest.prototype.constructor = AngularJsonAPISynchronizationRest;\n\n    return AngularJsonAPISynchronizationRest;\n\n    function AngularJsonAPISynchronizationRest(url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISynchronizationPrototype.call(_this);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: config.params || {}\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n\n        if (config.object.removed === true || config.target === undefined) {\n          deferred.reject();\n        } else {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + toKebabCase(config.key) + '/' + config.target.data.id\n          }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n\n        if (config.object.removed === true || config.target === undefined) {\n          deferred.reject();\n        } else {\n          $http({\n            method: 'POST',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + toKebabCase(config.key),\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]}\n          }).then(resolveHttp, rejectHttp).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        return $http({\n          method: 'PUT',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url + '/',\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp);\n      }\n\n      function resolveHttp(response) {\n        return response.data;\n      }\n\n      function rejectHttp(response) {\n        return response.data;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizationPrototype', AngularJsonAPISynchronizationPrototypeWrapper);\n\n  function AngularJsonAPISynchronizationPrototypeWrapper() {\n    AngularJsonAPISynchronizationPrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.after = afterSynchro;\n    AngularJsonAPISynchronizationPrototype.prototype.begin = begin;\n    AngularJsonAPISynchronizationPrototype.prototype.finish = finish;\n    AngularJsonAPISynchronizationPrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISynchronizationPrototype;\n\n    function AngularJsonAPISynchronizationPrototype() {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clear',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh'\n      ];\n\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi'])\n  .factory('AngularJsonAPISynchronizationLocal', AngularJsonAPISynchronizationLocalWrapper);\n\n  function AngularJsonAPISynchronizationLocalWrapper(AngularJsonAPISynchronizationPrototype, $window) {\n\n    AngularJsonAPISynchronizationLocal.prototype = Object.create(AngularJsonAPISynchronizationPrototype.prototype);\n    AngularJsonAPISynchronizationLocal.prototype.constructor = AngularJsonAPISynchronizationLocal;\n\n    return AngularJsonAPISynchronizationLocal;\n\n    function AngularJsonAPISynchronizationLocal(prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISynchronizationPrototype.call(_this);\n\n      _this.begin('init', init);\n      _this.begin('clear', clear);\n      _this.begin('remove', updateStorage);\n      _this.begin('unlink', updateStorage);\n      _this.begin('unlinkReflection', updateStorage);\n      _this.begin('link', updateStorage);\n      _this.begin('linkReflection', updateStorage);\n      _this.begin('update', updateStorage);\n      _this.begin('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clear', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.factory.schema.type;\n        return $window.localStorage.getItem(prefix + '.' + type);\n      }\n\n      function clear() {\n        var type = _this.synchronizer.factory.schema.type;\n        $window.localStorage.removeItem(prefix + '.' + type);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.factory.schema.type;\n        var cache = _this.synchronizer.factory.cache;\n        $window.localStorage.setItem(prefix + '.' + type, cache.toJson());\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper($log, pluralize, toKebabCase) {\n\n    return AngularJsonAPISchema;\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = new AngularJsonAPILinkSchema(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(toKebabCase(linkName));\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(toKebabCase(linkName));\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get.join(',');\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all.join(',');\n      }\n    }\n\n    function AngularJsonAPILinkSchema(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n        _this.reflection = linkSchema.reflection || type;\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(AngularJsonAPIAbstractModel, AngularJsonAPISchema, $log) {\n\n    return {\n      model: modelFactory\n    };\n\n    function modelFactory(schemaObj, parentFactory) {\n      var Model = function(data, updatedAt, isNew) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, updatedAt, isNew);\n\n        _this.form.parent = _this;\n      };\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.parentFactory = parentFactory;\n      Model.prototype.synchronize = parentFactory.synchronizer.synchronize.bind(parentFactory.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return Model;\n    }\n\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIFactory', AngularJsonAPIFactoryWrapper);\n\n  function AngularJsonAPIFactoryWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPICache,\n    AngularJsonAPICollection,\n    uuid4,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIFactory.prototype.get = get;\n    AngularJsonAPIFactory.prototype.all = all;\n    AngularJsonAPIFactory.prototype.remove = remove;\n    AngularJsonAPIFactory.prototype.initialize = initialize;\n\n    AngularJsonAPIFactory.prototype.clear = clear;\n\n    return AngularJsonAPIFactory;\n\n    /**\n     * AngularJsonAPIFactory constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the factory\n     */\n    function AngularJsonAPIFactory(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = new AngularJsonAPISchema(schema);\n      _this.cache = new AngularJsonAPICache(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.factory = _this;\n\n      _this.Model = AngularJsonAPIModel.model(\n        _this.schema,\n        _this\n      );\n\n      synchronizer.factory = _this;\n\n      _this.synchronizer.synchronize(config).then(resolved, rejected);\n\n      function resolved(response) {\n        _this.cache.fromJson(response.data);\n\n        response.finish();\n        return response.data;\n      }\n\n      function rejected(response) {\n        response.finish();\n\n        return response.errors;\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id) {\n      var _this = this;\n      var object = _this.cache.get(id);\n\n      object.refresh();\n\n      return object;\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = params || {};\n\n      var collection = new AngularJsonAPICollection(\n        _this,\n        angular.extend(params, _this.schema.params.all)\n      );\n\n      collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n      var config = {\n        action: 'remove',\n        object: object\n      };\n\n      if (object !== undefined) {\n        object.removed = true;\n\n        if (object.isNew) {\n          return $q.when(undefined);\n        }\n      } else {\n        $log.error('Object with this id does not exist');\n      }\n\n      return _this.synchronizer.synchronize(config).then(resolved, rejected);\n\n      function resolved(response) {\n        object.unlinkAll();\n        _this.cache.clearRemoved(id);\n        response.finish();\n\n        return response.data;\n      }\n\n      function rejected(response) {\n        if (object !== undefined) {\n          object.removed = false;\n          _this.cache.revertRemove(id);\n        }\n\n        response.finish();\n        return response.errors;\n      }\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize() {\n      var _this = this;\n\n      var model = new _this.Model({\n        type: _this.schema.type,\n        id: uuid4.generate(),\n        attributes: {},\n        relationships: {}\n      }, true);\n\n      return model;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clear() {\n      var _this = this;\n      _this.cache.clear();\n      var config = {\n        action: 'clear'\n      };\n\n      return _this.synchronizer.synchronize(config).then(resolved, rejected);\n\n      function resolved(response) {\n        response.finish();\n\n        return response.data;\n      }\n\n      function rejected(response) {\n        response.finish();\n\n        return response.errors;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    $rootScope,\n    $injector\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n\n    return AngularJsonAPICollection;\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIFactory} factory Factory associated with the collection\n     * @param {object} params  Params associated with this factory (such as filters)\n     */\n    function AngularJsonAPICollection(factory, params) {\n      var _this = this;\n\n      _this.factory = factory;\n      _this.params = params;\n\n      _this.errors = {\n        synchronization: []\n      };\n      _this.data = [];\n      _this.step = 'initialized';\n    }\n\n    /**\n     * Shortcut to this.factory.get\n     * @param  {uuid4} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id) {\n      var _this = this;\n\n      return _this.factory.get(id);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params\n      };\n\n      return _this.factory.synchronizer.synchronize(config).then(resolved, rejected, notify);\n\n      function resolved(results) {\n        $rootScope.$emit('angularJsonAPI:collection:fetch', 'resolved', results);\n\n        _this.errors.synchronization = [];\n        _this.data = $jsonapi.proccesResults(results.data);\n\n        results.finish();\n\n        return _this;\n      }\n\n      function rejected(results) {\n        $rootScope.$emit('angularJsonAPI:collection:fetch', 'rejected', results);\n\n        _this.errors.synchronization = results.errors;\n\n        results.finish();\n\n        return _this;\n      }\n\n      function notify(results) {\n        $rootScope.$emit('angularJsonAPI:collection:fetch', 'notify', results);\n\n        return _this;\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider() {\n    var memory = {};\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory($log, AngularJsonAPIFactory) {\n      return {\n        form: form,\n        get: get,\n        remove: remove,\n        all: all,\n        addFactory: addFactory,\n        getFactory: getFactory,\n        clearAll: clearAll,\n        proccesResults: proccesResults\n      };\n\n      function addFactory(schema, synchronization) {\n        var factory = new AngularJsonAPIFactory(schema, synchronization);\n\n        memory[schema.type] = factory;\n      }\n\n      function getFactory(type) {\n        return memory[type];\n      }\n\n      function form(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t add not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].isNew.form;\n      }\n\n      function get(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].get(id);\n      }\n\n      function remove(type, id) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t remove not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].remove(id);\n      }\n\n      function all(type) {\n        if (memory[type] === undefined) {\n          $log.error('Can\\t get all of not existing object type: ' + type + '. Use initialize(Model, datas).');\n        }\n\n        return memory[type].all();\n      }\n\n      function clearAll() {\n        angular.forEach(memory, function(factory) {\n          factory.clear();\n        });\n      }\n\n      function proccesResults(results) {\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n        }\n\n        console.log(results);\n\n        var objects = [];\n\n        angular.forEach(results.data, function(data) {\n          objects.push(getFactory(data.type).cache.addOrUpdate(data));\n        });\n\n        angular.forEach(results.included, function(data) {\n          getFactory(data.type).cache.addOrUpdate(data);\n        });\n\n        return objects;\n      }\n    }\n  }\n\n})();\n\n"],"sourceRoot":"/source/"}