!function(){"use strict";angular.module("angular-jsonapi",["uuid4"]).constant("pluralize",pluralize).constant("validate",validate)}(),function(){"use strict";function t(t){function e(e,n){return t.resolve({})}function n(e,n){return t.resolve([])}var a=this;return a.validateForm=e,a.validateField=n,this}angular.module("angular-jsonapi").service("AngularJsonAPIModelValidatorService",t),t.$inject=["$q"]}(),function(){"use strict";function t(t){function e(t){return null===t?null:{type:t.data.type,id:t.data.id}}function n(e,n,a,i){var u;return void 0===e?(t.error("Can't add link to non existing object",e,n,a),t.error("Object:",e.data.type,e),t.error("Target:",a.data.type,a),t.error("Key:",n),[]):(u=e.schema.relationships[n],void 0===a?(t.error("Can't link non existing object",e,n,a,u),t.error("Object:",e.data.type,e),t.error("Target:",a.data.type,a),t.error("Key:",n),t.error("Schema:",u),[]):void 0===u?(t.error("Can't add link not present in schema:",e,n,a,u),t.error("Object:",e.data.type,e),t.error("Target:",a.data.type,a),t.error("Key:",n),t.error("Schema:",u),[]):null!==a&&u.polymorphic===!1&&u.model!==a.data.type?(t.error("This relation is not polymorphic, expected: "+u.model+" instead of "+a.data.type),t.error("Object:",e.data.type,e),t.error("Target:",a.data.type,a),t.error("Key:",n),t.error("Schema:",u),[]):"hasMany"===u.type?i===!0?(c(e,n,a,!1),[]):r(e,n,a):"hasOne"===u.type?i===!0?(s(e,n,a,!1),[]):o(e,n,a):void 0)}function a(e,n,a,r){var o;return void 0===e?(t.error("Can't remove link from non existing object",e,n,a),t.error("Object:",e.data.type,e),t.error("Target:",a.data.type,a),t.error("Key:",n),[]):(o=e.schema.relationships[n],void 0===o?(t.error("Can't remove link not present in schema:",e,n,a,o),t.error("Object:",e.data.type,e),t.error("Target:",a.data.type,a),t.error("Key:",n),t.error("Schema:",o),[]):r===!0?(l(e,n,a,!1),[]):i(e,n,a))}function r(t,e,n){var a,r=t.schema.relationships[e].reflection;return r===!1?(c(t,e,n),[]):(a=n.schema.relationships[r],"hasOne"===a.type?h(d(t,e,n),d(n,r,t),o(n,r,t)):"hasMany"===a.type?(c(t,e,n),c(n,r,t),[d(n,r,t)]):void 0)}function o(t,e,n){var a,r,o=t.schema.relationships[e].reflection,i=t.relationships[e],d=[];return s(t,e,n),void 0!==i&&null!==i&&(r=i.schema.relationships[o],"hasOne"===r.type?u(i,o,t):"hasMany"===r.type&&l(i,o,t),d.push(i,o,t)),void 0!==n&&null!==n&&o!==!1&&(a=n.schema.relationships[o],"hasOne"===a.type?s(n,o,t):"hasMany"===a.type&&c(n,o,t),d.push(n,o,t)),d}function i(t,e,n){var a,r=t.schema.relationships[e],o=r.reflection;return"hasMany"===r.type?l(t,e,n):"hasOne"===r.type&&u(t,e,n),o===!1?[]:(a=n.schema.relationships[o],"hasOne"===a.type?u(n,o,t):"hasMany"===a.type&&l(n,o,t),[d(n,o,t)])}function s(n,a,r,o){return t.debug("addHasOne",n,a,r),n.relationships[a]=r,n.data.relationships[a].data=e(r),o!==!1&&n.reset(!0),!0}function c(n,a,r,o){var i=e(r);return t.debug("addHasMany",n,a,r),angular.isArray(n.relationships[a])&&n.relationships[a].indexOf(r)>-1?!1:(n.relationships[a]=n.relationships[a]||[],n.data.relationships[a].data=n.data.relationships[a].data||[],n.relationships[a].push(r),n.data.relationships[a].data.push(i),o!==!1&&n.reset(!0),!0)}function u(e,n,a,r){return t.debug("removeHasOne",e,n,a),void 0!==a&&e.relationships[n]!==a?!1:(e.relationships[n]=null,e.data.relationships[n].data=void 0,r!==!1&&e.reset(!0),!0)}function l(e,n,a,r){if(t.debug("removeHasMany",e,n,a),void 0!==e.relationships[n]){if(void 0===a)return e.relationships[n]=[],e.data.relationships[n].data=[],r!==!1&&e.reset(!0),!0;var o=e.relationships[n].indexOf(a);return-1===o?!1:(e.relationships[n].splice(o,1),e.data.relationships[n].data.splice(o,1),r!==!1&&e.reset(!0),!0)}}function d(t,e,n){return{object:t,key:e,target:n}}function h(t,e,n){var a=-1;return angular.forEach(n,function(e,n){e.object===t.object&&e.key===t.key&&e.target===t.target&&(a=n)}),a>-1?n[a]=e:n.push(e),n}var f=this;return f.toLinkData=e,f.link=n,f.unlink=a,this}angular.module("angular-jsonapi").service("AngularJsonAPIModelLinkerService",t),t.$inject=["$log"]}(),function(){"use strict";function t(t,e,n){function a(t){var e=this;e.data={id:t.data.id,type:t.data.type,attributes:{},relationships:{}},e.relationships={},e.parent=t,e.schema=t.schema,e.reset()}function r(){var t=this,e=angular.copy(t.data),n={};return angular.forEach(e.relationships,function(t,e){void 0!==t.data&&(n[e]=t)}),e.relationships=n,{data:e}}function o(){var t=this;return t.parent.save()}function i(t){var e=this;angular.forEach(e.schema.relationships,function(t,n){e.data.relationships[n]=angular.copy(e.parent.data.relationships[n])||{},e.relationships[n]=angular.isArray(e.relationships[n])?e.parent.relationships[n].slice():e.parent.relationships[n]}),(t!==!0||e.parent["synchronized"]!==!0)&&(angular.forEach(e.schema.attributes,function(t,n){e.data.attributes[n]=angular.copy(e.parent.data.attributes[n])||""}),e.errors={validation:{}})}function s(){function e(t){a.errors.validation=t,r.reject(t)}var a=this,r=n.defer();return t.validateForm(a.data).then(r.resolve,e),r.promise}function c(e){function a(t){r.errors.validation[e]=t,o.reject(t)}var r=this,o=n.defer();return t.validateForm(r.data[e],e).then(o.resolve,a),o.promise}function u(t,a){var r=this;return n.resolve(e.link(r,t,a,!0))}function l(t,a){var r=this;return n.resolve(e.unlink(r,t,a,!0))}return a.prototype.save=o,a.prototype.reset=i,a.prototype.validate=s,a.prototype.validateField=c,a.prototype.link=u,a.prototype.unlink=l,a.prototype.toJson=r,a}angular.module("angular-jsonapi").factory("AngularJsonAPIModelForm",t),t.$inject=["AngularJsonAPIModelValidatorService","AngularJsonAPIModelLinkerService","$q"]}(),function(){"use strict";function t(t,o,i,s,c,u,l){function d(e,n,a){var r=this;e.relationships=e.relationships||{},r.saved=void 0===n.saved?!0:n.saved,r.stable=void 0===n.stable?!0:n.stable,r["synchronized"]=void 0===n["synchronized"]?!0:n["synchronized"],r.pristine=void 0===n.pristine?!0:n.pristine,r.removed=!1,r.error=!1,r.loading=!1,r.saving=!1,r.updatedAt=r["synchronized"]===!0?Date.now():a,r.loadingCount=0,r.savingCount=0,r.data={relationships:{},attributes:{}},r.relationships={},angular.forEach(r.schema.relationships,function(t,e){r.relationships[e]=void 0}),r.errors={validation:{},synchronization:{}},r.promises={},A(r,e),r.form=new t(r)}function h(t){function e(e){s.$emit("angularJsonAPI:"+i.data.type+":object:"+u.action,"resolved",i,e,t),i.update(i.form.data),i.saved===!1&&t===!0&&(i.factory.cache.indexIds=i.factory.cache.indexIds||[],i.factory.cache.indexIds.push(i.data.id)),i["synchronized"]=!0,i.saved=!0,i.stable=!0,e.finish(),c.resolve(i)}function n(t){s.$emit("angularJsonAPI:"+i.data.type+":object:save","rejected",i,t),t.finish(),c.reject(t)}function o(t){s.$emit("angularJsonAPI:"+i.data.type+":object:save","notify",i,t),c.notify(t)}var i=this,c=l.defer(),u={action:i.saved===!1?"add":"update",object:i};return t=void 0===t?!0:t,i.form.validate().then(i.synchronize(u).then(e,n,o)["finally"](r.bind(i)),c.reject),a(i),c.promise}function f(){var t=this;void 0!==t.form&&t.form.reset()}function p(){function t(t){function a(t){return e.bind(t),t.synchronize({action:"include",object:t})["finally"](n.bind(t))}function r(e){angular.forEach(e,function(t,e){t.success===!0&&(s.$emit("angularJsonAPI:"+c.included[e].data.type+":object:include","resolved",c.included[e],t),t.value.finish())}),i.resolve(t)}var c=o.proccesResults(t.data);s.$emit("angularJsonAPI:"+u.data.type+":object:refresh","resolved",u,t),l.allSettled(c.included.map(a)).then(r,i.reject),t.finish(),u["synchronized"]=!0,u.stable=!0}function a(t){s.$emit("angularJsonAPI:"+u.data.type+":object:refresh","rejected",u,t),t.finish(),i.reject(t)}function r(t){s.$emit("angularJsonAPI:"+u.data.type+":object:refresh","notify",u,t),i.notify(t)}var o=c.get("$jsonapi"),i=l.defer(),u=this,d={action:"refresh",object:u,params:u.schema.params.get};return u.saved===!1?i.reject({errors:[{status:0,statusText:"Can't refresh new object"}]}):(e(u),u.synchronize(d).then(t,a,r)["finally"](n.bind(u))),i.promise}function y(){var t=this,e=angular.copy(t.data),n={};return angular.forEach(e.relationships,function(t,e){void 0!==t.data&&(n[e]=t)}),e.relationships=n,{data:e,updatedAt:t.updatedAt}}function g(){function t(t){s.$emit("angularJsonAPI:"+o.data.type+":object:remove","resolved",o,t),o.removed=!0,o.unlinkAll(),o.factory.cache.clearRemoved(o.data.id),t.finish(),i.resolve(t)}function e(t){s.$emit("angularJsonAPI:"+o.data.type+":object:remove","rejected",o,t),o.factory.cache.revertRemove(o.data.id),t.finish(),i.reject(t)}function n(t){s.$emit("angularJsonAPI:"+o.data.type+":object:remove","notify",o,t),i.notify(t)}var o=this,i=l.defer(),c={action:"remove",object:o};return o.factory.cache.remove(o.data.id),o.saved===!1?i.resolve():(a.bind(o),o.synchronize(c).then(t,e,n)["finally"](r.bind(o))),i.promise}function v(t){function a(t,e){var n=i.schema.relationships[e],a=n.reflection;angular.isArray(t)?angular.forEach(t,r.bind(void 0,a)):angular.isObject(t)&&r(a,t),"hasOne"===n.type?i.relationships[e]=null:"hasMany"===n.type&&(i.relationships[e]=[])}function r(t,n){function a(t){s.$emit("angularJsonAPI:"+i.data.type+":object:unlinkReflection","resolve",i,t),t.finish(),c.resolve(i)}function r(t){s.$emit("angularJsonAPI:"+i.data.type+":object:unlinkReflection","rejected",i,t),t.finish(),c.reject(t)}function u(t){s.$emit("angularJsonAPI:"+i.data.type+":object:unlinkReflection","notify",i,t),t.finish(),c.notify(t)}var l=n.schema.relationships[t],d={action:"unlinkReflection",object:n,target:i,key:t};e(n),o.unlink(n,t,i,l),n.synchronize(d).then(a,r,u).__decrementLoadingCounter.bind(n)}var i=this,c=l.defer();return e(i),void 0===t?angular.forEach(i.relationships,a):a(i.relationships[t],t),n(i),c.promise}function m(t,i){function c(a){function r(t){return e(i),i.synchronize({action:"linkReflection",object:t.object,target:t.target,key:t.key})["finally"](n.bind(i))}function c(e){angular.forEach(e,function(n){n.success===!0&&(s.$emit("angularJsonAPI:"+u[t].data.type+":object:linkReflection","resolved",u[t],n),e.value.finish())}),f.resolve(p)}s.$emit("angularJsonAPI:"+p.data.type+":object:link","resolved",p,a);var u=o.link(p,t,i);p.stable=!0,a.finish(),l.allSettled(u.map(r)).then(c,f.reject)}function d(t){s.$emit("angularJsonAPI:"+p.data.type+":object:link","rejected",p,t),f.reject(t.errors),t.finish(),f.reject(t)}function h(t){s.$emit("angularJsonAPI:"+p.data.type+":object:link","notify",p,t),f.notify(t)}var f=l.defer(),p=this,y={action:"link",object:p,target:i,key:t};return void 0===i?(u.error("Can't link undefined"),f.reject({errors:[{status:0,statusText:"Can't link undefined"}]})):p.saved===!1?(u.error("Can't link new object"),f.reject({errors:[{status:0,statusText:"Can't link new object"}]})):(a(p),p.synchronize(y).then(c,d,h)["finally"](r.bind(p))),f.promise}function j(t,i){function c(a){function r(t){return e(i),i.synchronize({action:"unlinkReflection",object:t.object,target:t.target,key:t.key})["finally"](n.bind(i))}function c(e){angular.forEach(e,function(n){n.success===!0&&(s.$emit("angularJsonAPI:"+u[t].data.type+":object:unlinkReflection","resolved",u[t],n),e.value.finish())}),h.resolve(f)}s.$emit("angularJsonAPI:"+f.data.type+":object:unlink","resolved",f,a);var u=o.link(f,t,i);f.stable=!0,a.finish(),l.allSettled(u.map(r)).then(c,h.reject)}function u(t){s.$emit("angularJsonAPI:"+f.data.type+":object:unlink","rejected",f,t),h.reject(t.errors),t.finish(),h.reject(t)}function d(t){s.$emit("angularJsonAPI:"+f.data.type+":object:unlink","notify",f,t),h.notify(t)}var h=l.defer(),f=this,p={action:"unlink",object:f,target:i,key:t};return void 0===i?h.reject({errors:[{status:0,statusText:"Can't unlink undefined"}]}):f.saved===!1?h.reject({errors:[{status:0,statusText:"Can't unlink new object"}]}):(a(f),f.synchronize(p).then(c,u,d)["finally"](r.bind(f))),h.promise}function b(t,a,r){var o=this;e(o),A(o,t),o.reset(a),o["synchronized"]=r===!0?!1:!0,o.stable=r===!0?!1:!0,o.updatedAt=Date.now(),n(o)}function A(t,e){function n(n,a){t.data.attributes[a]=e.attributes[a]}function a(n,a){var o=e.relationships[a];return void 0===o?void(t.data.relationships[a]={data:void 0}):(t.data.relationships[a]=t.data.relationships[a]||{},t.data.relationships[a].links=o.links,void("hasOne"===n.type?r(t,a,o.data):"hasMany"===n.type&&angular.isArray(o.data)&&(0===o.data.length?(t.data.relationships[a].data=[],t.unlinkAll(a)):(angular.forEach(t.relationships[a],s.bind(void 0,t,a,o.data)),angular.forEach(o.data,r.bind(void 0,t,a))))))}function r(t,e,n){var a;if(null===n)return void o.link(t,e,null);if(void 0!==n){if(a=l.getFactory(n.type),void 0===a)return void u.error("Factory not found",n.type,n);var r=a.cache.get(n.id);o.link(t,e,r)}}function s(t,e,n,a){n.indexOf(a.data.id)>-1||o.unlink(t,e,a)}var l=c.get("$jsonapi"),d=t.schema;return t.data.id=e.id,t.data.type=e.type,t.factory.schema.type!==e.type?(u.error("Different type then factory",t.factory.schema.type,e),!1):i.validate(t.data.id)?(e.attributes=e.attributes||{},e.relationships=e.relationships||{},angular.forEach(d.attributes,n),angular.forEach(d.relationships,a),!0):(u.error("Invalid id"),!1)}return d.prototype.refresh=p,d.prototype.remove=g,d.prototype.reset=f,d.prototype.save=h,d.prototype.update=b,d.prototype.link=m,d.prototype.unlink=j,d.prototype.unlinkAll=v,d.prototype.toJson=y,d}function e(t){t=void 0===t?this:t,t.loadingCount+=1,t.loading=!0}function n(t){t=void 0===t?this:t,t.loadingCount-=1,t.loading=t.loadingCount>0}function a(t){t=void 0===t?this:t,t.savingCount+=1,t.saving=!0}function r(t){t=void 0===t?this:t,t.savingCount-=1,t.saving=t.savingCount>0}angular.module("angular-jsonapi").factory("AngularJsonAPIAbstractModel",t),t.$inject=["AngularJsonAPIModelForm","AngularJsonAPIModelLinkerService","uuid4","$rootScope","$injector","$log","$q"]}(),function(){"use strict";function t(t,e){function n(t){var e=this;e.factory=t,e.data={},e.removed={},e.size=0,e.indexIds=void 0}function a(t,n){var a=this,r=t.id;return void 0===r?void e.error("Can't add data without id!",t):(void 0===a.data[r]?(a.data[r]=new a.factory.Model(t,n),a.size+=1):a.data[r].update(t,n.saved,n.initialization),a.data[r])}function r(t){var e=this,n=angular.fromJson(t),a={saved:!0,"synchronized":!1,stable:!1,pristine:!1,initialization:!0};angular.isObject(n)&&void 0!==n.data&&(e.updatedAt=n.updatedAt,e.indexIds=n.indexIds,angular.forEach(n.data,function(t){var n=t.data;e.addOrUpdate(n,a,t.updatedAt)}))}function o(){var t=this,e={data:[],updatedAt:t.updatedAt,indexIds:t.indexIds};return angular.forEach(t.data,function(t){t.error===!1&&e.data.push(t.toJson())}),angular.toJson(e)}function i(){var t=this;t.indexIds=void 0,t.data={},t.removed={}}function s(t){var e=this,n={id:t,type:e.factory.Model.prototype.schema.type},a={saved:!0,"synchronized":!1,stable:!1,pristine:!0};return void 0===e.data[t]&&(e.data[t]=new e.factory.Model(n,a)),e.data[t]}function c(t){var n=this;return e.debug("Unused params",t),void 0===n.indexIds?n.indexIds:n.indexIds.map(n.get.bind(n))}function u(e){var n=this;n.indexIds=[],angular.forEach(e,function(e){angular.isString(e)&&t.validate(e)?n.indexIds.push(e):angular.isObject(e)&&t.validate(e.data.id)&&n.indexIds.push(e.data.id)})}function l(t){var e=this;return void 0!==e.data[t]&&(e.removed[t]=e.data[t],delete e.data[t],e.size-=1),e.removed[t]}function d(t){var e=this;return void 0!==e.removed[t]&&(e.data[t]=e.removed[t],delete e.removed[t],e.size+=1),e.data[t]}function h(t){var e=this;delete e.removed[t]}return n.prototype.get=s,n.prototype.index=c,n.prototype.setIndexIds=u,n.prototype.addOrUpdate=a,n.prototype.fromJson=r,n.prototype.toJson=o,n.prototype.clear=i,n.prototype.remove=l,n.prototype.revertRemove=d,n.prototype.clearRemoved=h,n}angular.module("angular-jsonapi").factory("AngularJsonAPICache",t),t.$inject=["uuid4","$log"]}(),function(){"use strict";angular.module("angular-jsonapi").constant("lazyProperty",function(t,e,n){var a,r;Object.defineProperty(t,e,{get:function(){return r||(r=!0,a=n.call(t)),a},enumerable:!0,configurable:!0})})}(),function(){"use strict";angular.module("angular-jsonapi").constant("toKebabCase",function(t){return t.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()})}(),function(){"use strict";angular.module("angular-jsonapi").config(["$provide",function(t){t.decorator("$q",["$delegate",function(t){var e=t;return e.allSettled=e.allSettled||function(t,n,a){function r(t){return e.resolve(t).then(function(t){return angular.isFunction(n)&&n(t),{success:!0,value:t}},function(t){return angular.isFunction(a)&&a(t),{success:!1,reason:t}})}var o=angular.isArray(t)?[]:{};return angular.forEach(t,function(t,e){o.hasOwnProperty(e)||(o[e]=r(t))}),e.all(o)},e}])}])}(),function(){"use strict";function t(t,e,n){function a(e){var n=this;n.state={},t.call(n,e),angular.forEach(e,function(t){t.synchronizer=n})}function r(a){function r(t){d.notify({step:"synchronization",data:t})}function o(t){d.notify({step:"synchronization",errors:t})}function i(t){u.state[h]=u.state[h]||{},u.state[h].success=!0,angular.forEach(t,function(t){t.success===!1&&(u.state[h].success=!1)}),angular.forEach(u.synchronizations,function(e){angular.forEach(e.afterHooks[h],function(e){d.notify({step:"after",errors:e.call(u,a,t)})})});var e,n=[];angular.forEach(t,function(t){t.success===!0?e=t.value:n.push(t.reason)}),n.length>0?d.reject({data:e,finish:s,errors:n}):d.resolve({data:e,finish:s,errors:n})}function s(){angular.forEach(u.synchronizations,function(t){angular.forEach(t.finishHooks[h],function(t){d.notify({step:"finish",errors:t.call(u,a)})})})}function c(t){n.error("All settled rejected! Something went wrong"),d.reject({finish:angular.noop,errors:t})}var u=this,l=[],d=e.defer(),h=a.action;return t.prototype.synchronize.call(u,a),angular.forEach(u.synchronizations,function(t){angular.forEach(t.beginHooks[h],function(t){d.notify({step:"begin",data:t.call(u,a)})})}),angular.forEach(u.synchronizations,function(t){angular.forEach(t.beforeHooks[h],function(t){d.notify({step:"before",data:t.call(u,a)})})}),angular.forEach(u.synchronizations,function(t){angular.forEach(t.synchronizationHooks[h],function(t){l.push(t.call(u,a))})}),e.allSettled(l,r,o).then(i,c),d.promise}return a.prototype=Object.create(t.prototype),a.prototype.constructor=a,a.prototype.synchronize=r,a}angular.module("angular-jsonapi").factory("AngularJsonAPISynchronizerSimple",t),t.$inject=["AngularJsonAPISynchronizerPrototype","$q","$log"]}(),function(){"use strict";function t(t){function e(t){var e=this;e.synchronizations=t}function n(e){var n=this;t.debug("Synchro Collection",n.factory.Model.prototype.schema.type,e),void 0===e.action&&t.error("Can't synchronize undefined action",e)}return e.prototype.synchronize=n,e}angular.module("angular-jsonapi").factory("AngularJsonAPISynchronizerPrototype",t),t.$inject=["$log"]}(),function(){"use strict";function t(t,e,n,a,r){function o(n){function o(t){return r({method:"GET",headers:y,url:n,params:t.params||{}}).then(h,f)}function i(t){return r({method:"GET",headers:y,url:n+"/"+t.object.data.id,params:t.params||{}}).then(h,f)}function s(t){return r({method:"DELETE",headers:y,url:n+"/"+t.object.data.id}).then(h,f)}function c(t){var e=a.defer(),o=t.object.schema.relationships[t.key];return t.object.removed===!0?e.reject({errors:[{status:0,statusText:"Object has been removed"}]}):void 0!==t.target&&void 0===t.target.data.id?e.reject({errors:[{status:0,statusText:"Can't unlink object without id through rest call"}]}):"hasOne"===o.type?r({method:"DELETE",headers:y,url:n+"/"+t.object.data.id+"/relationships/"+t.key}).then(h,f).then(e.resolve,e.reject):"hasMany"===o.type&&(void 0===t.target?r({method:"PUT",headers:y,data:{data:[]},url:n+"/"+t.object.data.id+"/relationships/"+t.key}).then(h,f).then(e.resolve,e.reject):r({method:"DELETE",headers:y,url:n+"/"+t.object.data.id+"/relationships/"+t.key+"/"+t.target.data.id}).then(h,f).then(e.resolve,e.reject)),e.promise}function u(t){var o=a.defer(),i=t.object.schema.relationships[t.key];return t.object.removed===!0?o.reject({errors:[{status:0,statusText:"Object has been removed"}]}):void 0===t.target||void 0===t.target.data.id?o.reject({errors:[{status:0,statusText:"Can't link object without id through rest call"}]}):"hasOne"===i.type?r({method:"PUT",headers:y,data:{data:e.toLinkData(t.target)},url:n+"/"+t.object.data.id+"/relationships/"+t.key}).then(h,f).then(o.resolve,o.reject):"hasMany"===i.type&&r({method:"POST",headers:y,data:{data:[e.toLinkData(t.target)]},url:n+"/"+t.object.data.id+"/relationships/"+t.key}).then(h,f).then(o.resolve,o.reject),o.promise}function l(t){return r({method:"PUT",headers:y,url:n+"/"+t.object.data.id,data:t.object.form.toJson()}).then(h,f)}function d(t){return r({method:"POST",headers:y,url:n+"/",data:t.object.form.toJson()}).then(h,f)}function h(t){return a.resolve(t.data)}function f(t){function e(){o.reject({status:t.status,statusText:"Server is offline"})}function n(){o.reject({status:t.status,statusText:"No internet connection"})}var o=a.defer();return 0===t.status?r({method:"GET",url:"https://status.cloud.google.com/incidents.schema.json"}).then(e,n):o.reject({status:t.status,statusText:t.statusText}),o.promise}var p=this,y={Accept:"application/vnd.api+json","Content-Type":"application/vnd.api+json"};t.call(p),p.synchronization("remove",s),p.synchronization("unlink",c),p.synchronization("link",u),p.synchronization("update",l),p.synchronization("add",d),p.synchronization("all",o),p.synchronization("get",i),p.synchronization("refresh",i)}return o.prototype=Object.create(t.prototype),o.prototype.constructor=o,o}angular.module("angular-jsonapi-rest",["angular-jsonapi"]).factory("AngularJsonAPISynchronizationRest",t),t.$inject=["AngularJsonAPISynchronizationPrototype","AngularJsonAPIModelLinkerService","toKebabCase","$q","$http"]}(),function(){"use strict";function t(){function t(){var t=this,e=["add","init","get","all","clearCache","remove","unlink","unlinkReflection","link","linkReflection","update","refresh","include"];t.state={},t.beginHooks={},t.beforeHooks={},t.synchronizationHooks={},t.afterHooks={},t.finishHooks={},t.options={},angular.forEach(e,function(e){t.beginHooks[e]=[],t.beforeHooks[e]=[],t.synchronizationHooks[e]=[],t.afterHooks[e]=[],t.finishHooks[e]=[],t.state[e]={loading:!1,success:!0}})}function e(t,e){var n=this;n.beginHooks[t].push(e)}function n(t,e){var n=this;n.finishHooks[t].push(e)}function a(t,e){var n=this;n.beforeHooks[t].push(e)}function r(t,e){var n=this;n.afterHooks[t].push(e)}function o(t,e){var n=this;n.synchronizationHooks[t].push(e)}return t.prototype.before=a,t.prototype.after=r,t.prototype.begin=e,t.prototype.finish=n,t.prototype.synchronization=o,t}angular.module("angular-jsonapi").factory("AngularJsonAPISynchronizationPrototype",t)}(),function(){"use strict";function t(t,e,n){function a(a){function r(){var t=s.synchronizer.factory.schema.type;return n.resolve(e.localStorage.getItem(a+"."+t))}function o(){var t=s.synchronizer.factory.schema.type;e.localStorage.removeItem(a+"."+t)}function i(){var t=s.synchronizer.factory.schema.type,n=s.synchronizer.factory.cache;e.localStorage.setItem(a+"."+t,n.toJson())}var s=this;a=a||"AngularJsonAPI",s.__updateStorage=i,t.call(s),s.synchronization("init",r),s.begin("clearCache",o),s.begin("remove",i),s.begin("refresh",i),s.begin("unlink",i),s.begin("unlinkReflection",i),s.begin("link",i),s.begin("linkReflection",i),s.begin("update",i),s.begin("add",i),s.begin("get",i),s.begin("all",i),s.begin("include",i),s.finish("init",i),s.finish("clearCache",i),s.finish("remove",i),s.finish("refresh",i),s.finish("unlink",i),s.finish("unlinkReflection",i),s.finish("link",i),s.finish("linkReflection",i),s.finish("update",i),s.finish("add",i),s.finish("get",i),s.finish("all",i),s.finish("include",i)}return a.prototype=Object.create(t.prototype),a.prototype.constructor=a,a}angular.module("angular-jsonapi-local",["angular-jsonapi"]).factory("AngularJsonAPISynchronizationLocal",t),t.$inject=["AngularJsonAPISynchronizationPrototype","$window","$q"]}(),function(){"use strict";function t(t,e,n){function a(t){var e=this,a=t.include||{};t.include=a,a.get=t.include.get||[],a.all=t.include.all||[],e.params={get:{},all:{}},angular.forEach(t.relationships,function(e,r){var o=new n(e,r,t.type);t.relationships[r]=o,o.included===!0&&(a.get.push(r),"hasOne"===o.type&&a.all.push(r))}),angular.extend(e,t),a.get.length>0&&(e.params.get.include=a.get.join(",")),a.all.length>0&&(e.params.all.include=a.all.join(","))}return a}angular.module("angular-jsonapi").factory("AngularJsonAPISchema",t),t.$inject=["$log","pluralize","AngularJsonAPISchemaLink"]}(),function(){"use strict";function t(t,e){function n(n,a,r){var o=this;angular.isString(n)?(o.model=e.plural(a),o.type=n,o.polymorphic=!1,o.reflection=r):(void 0===n.type&&t.error("Schema of link without a type: ",n,a),"hasMany"!==n.type&&"hasOne"!==n.type&&t.error("Schema of link with wrong type: ",n.type,"available: hasOne, hasMany"),o.model=n.model||e.plural(a),o.type=n.type,o.polymorphic=n.polymorphic||!1,o.reflection=void 0===n.reflection?"hasMany"===o.type?e.singular(r):r:n.reflection,o.included=n.included||!1)}return n}angular.module("angular-jsonapi").factory("AngularJsonAPISchemaLink",t),t.$inject=["$log","pluralize"]}(),function(){"use strict";function t(t,e,n){function a(e,a){var r=function(e,a,r){var o=this;e.type!==o.schema.type&&n.error("Data type other then declared in schema: ",e.type," instead of ",o.schema.type),t.call(o,e,a,r),o.form.parent=o};return r.prototype=Object.create(t.prototype),r.prototype.constructor=r,r.prototype.schema=e,r.prototype.factory=a,r.prototype.synchronize=a.synchronizer.synchronize.bind(a.synchronizer),angular.forEach(e.functions,function(t,e){r.prototype[e]=function(){return t.apply(this,arguments)}}),r}return{model:a}}angular.module("angular-jsonapi").factory("AngularJsonAPIModel",t),t.$inject=["AngularJsonAPIAbstractModel","AngularJsonAPISchema","$log"]}(),function(){"use strict";function t(t,e,n,a,r,o,i,s){function c(a,r){function i(t){o.$emit("angularJsonAPI:"+u.type+":factory:init","resolved",t),u.cache.fromJson(t.data),u.initialized=!0,t.finish()}function s(t){o.$emit("angularJsonAPI:"+u.type+":factory:init","rejected",t),t.finish(),u.initialized=!0}function c(t){o.$emit("angularJsonAPI:"+u.type+":factory:init","notify",t)}var u=this,l={action:"init"};u.schema=new e(a),u.cache=new n(u),u.synchronizer=r,u.synchronizer.factory=u,u.Model=t.model(u.schema,u),u.initialized=!1,u.type=u.schema.type,r.factory=u,u.synchronizer.synchronize(l).then(i,s,c)}function u(t){var e=this;if(!r.validate(t))return s.reject({errors:[{status:0,statusText:"Invalid id not uuid4"}]});var n=e.cache.get(t);return n.refresh(),n}function l(t){var e=this;t=t||{};var n=new a(e,angular.extend(t,e.schema.params.all));return n.fetch(),n}function d(t){var e=this,n=e.cache.remove(t);return n.remove()}function h(t,e){var n=this,a={};if(angular.forEach(n.schema.relationships,function(t,e){"hasOne"===t.type?a[e]={data:null}:"hasMany"===t.type&&(a[e]={data:[]})}),void 0!==t&&void 0!==e){var s=n.schema[t];"hasOne"===s.type?a[t]={data:e.data.id}:"hasMany"===s.type&&i.warn("Initialize with relationship disallowed for hasMany relationships")}var c={type:n.type,id:r.generate(),attributes:{},relationships:a},u={saved:!1,"synchronized":!1,stable:!1,pristine:!1,initialization:!1},l=n.cache.addOrUpdate(c,u);return o.$emit("angularJsonAPI:"+n.type+":factory:initialize","resolved",l),l}function f(){function t(t){o.$emit("angularJsonAPI:"+a.type+":factory:clearCache","resolved",t),t.finish(),r.resolve(t)}function e(t){o.$emit("angularJsonAPI:"+a.type+":factory:clearCache","resolved",t),t.finish(),r.reject(t)}function n(t){o.$emit("angularJsonAPI:"+a.type+":factory:clearCache","notify",t),r.notify(t)}var a=this,r=s.defer(),i={action:"clearCache"};return a.cache.clear(),a.synchronizer.synchronize(i).then(t,e,n),r}return c.prototype.get=u,c.prototype.all=l,c.prototype.remove=d,c.prototype.initialize=h,c.prototype.clearCache=f,c}angular.module("angular-jsonapi").factory("AngularJsonAPIFactory",t),t.$inject=["AngularJsonAPIModel","AngularJsonAPISchema","AngularJsonAPICache","AngularJsonAPICollection","uuid4","$rootScope","$log","$q"]}(),function(){"use strict";function t(t,a,r){function o(e,n){function a(t,e,n){var a;"resolved"===e&&void 0!==i.data&&(a=i.data.indexOf(n),a>-1&&(i.data.splice(a,1),i.factory.cache.setIndexIds(i.data)))}function r(){i.data=void 0,i.pristine=!0}function o(t,e,n,a,r){r===!0&&"resolved"===e&&(i.data=i.data||[],i.data.push(n))}var i=this;i.factory=e,i.type=e.schema.type,i.params=n,i.errors={synchronization:{name:"Synchronization",description:"Errors during synchronization",errors:[]}},i.data=i.factory.cache.index(i.params),i.error=!1,i.loading=!1,i.loadingCount=0,i["synchronized"]=!1,i.pristine=void 0===i.data,t.$on("angularJsonAPI:"+i.type+":object:remove",a),t.$on("angularJsonAPI:"+i.type+":factory:clearCache",r),t.$on("angularJsonAPI:"+i.type+":factory:add",o)}function i(t){var e=this;return e.factory.get(t)}function s(){function o(a){function o(t){return e.bind(t),t.synchronize({action:"include",object:t})["finally"](n.bind(t))}function i(e){angular.forEach(e,function(e,n){e.success===!0&&(t.$emit("angularJsonAPI:"+s.included[n].data.type+":object:include","resolved",s.included[n],e),e.value.finish())}),u.resolve(a)}var s=l.proccesResults(a.data);t.$emit("angularJsonAPI:"+c.type+":collection:fetch","resolved",c,a),r.allSettled(s.included.map(o)).then(i,u.reject),angular.forEach(c.data,n),c.data=s.data,c.errors.synchronization.errors=[],c.error=!1,c.updatedAt=Date.now(),c["synchronized"]=!0,c.factory.cache.setIndexIds(c.data),a.finish(),u.resolve(c)}function i(e){t.$emit("angularJsonAPI:"+c.type+":collection:fetch","rejected",c,e),angular.forEach(c.data,n),c.errors.synchronization.errors=e.errors,c.error=!0,e.finish(),u.reject(e)}function s(e){t.$emit("angularJsonAPI:"+c.type+":collection:fetch","notify",c,e),u.notify(e)}var c=this,u=r.defer(),l=a.get("$jsonapi"),d={action:"all",params:c.params};return e(this),angular.forEach(c.data,e),c.factory.synchronizer.synchronize(d).then(o,i,s)["finally"](n.bind(c)),u.promise}return o.prototype.fetch=s,o.prototype.refresh=s,o.prototype.get=i,o}function e(t){t=void 0===t?this:t,t.loadingCount+=1,t.loading=!0}function n(t){t=void 0===t?this:t,t.loadingCount-=1,t.loading=t.loadingCount>0}angular.module("angular-jsonapi").factory("AngularJsonAPICollection",t),t.$inject=["$rootScope","$injector","$q"]}(),function(){"use strict";function t(){function t(t,a){function r(){return e}function o(){return n}function i(t,r){var o=new a(t,r);e[t.type]=o,n.push(t.type)}function s(t){return e[t]}function c(n){return void 0===e[n]&&t.error("Can	 add not existing object type: "+n+". Use initialize(Model, datas)."),e[n].saved.form}function u(n,a){return void 0===e[n]&&t.error("Can	 get not existing object type: "+n+". Use initialize(Model, datas)."),e[n].get(a)}function l(n,a){return void 0===e[n]&&t.error("Can	 remove not existing object type: "+n+". Use initialize(Model, datas)."),e[n].remove(a)}function d(n){return void 0===e[n]&&t.error("Can	 get all of not existing object type: "+n+". Use initialize(Model, datas)."),e[n].all()}function h(){angular.forEach(e,function(t){t.clearCache()})}function f(e){var n={data:[],included:[]};void 0===e&&t.error("Can't proccess results:",e);var a={saved:!0,"synchronized":!0,stable:!0,pristine:!1,initialization:!1};return angular.forEach(e.included,function(t){n.included.push(s(t.type).cache.addOrUpdate(t,a))}),angular.isArray(e.data)?angular.forEach(e.data,function(t){n.data.push(s(t.type).cache.addOrUpdate(t,a))}):n.data.push(s(e.data.type).cache.addOrUpdate(e.data,a)),n}return{form:c,get:u,remove:l,all:d,addFactory:i,getFactory:s,clearCache:h,proccesResults:f,allFactories:r,factoriesNames:o}}var e={},n=[];this.$get=t,t.$inject=["$log","AngularJsonAPIFactory"]}angular.module("angular-jsonapi").provider("$jsonapi",t)}(),function(){"use strict";angular.module("angular-jsonapi").config(["$logProvider",function(t){
t.debugEnabled(!1)}])}();
//# sourceMappingURL=angular-jsonapi.min.js.map