!function(){"use strict";angular.module("angular-jsonapi",["uuid4"]).constant("pluralize",pluralize)}(),function(){"use strict";function t(){function t(t,n){return{}}function n(t,n){return[]}var e=this;return e.validateForm=t,e.validateField=n,this}angular.module("angular-jsonapi").service("AngularJsonAPIModelValidatorService",t)}(),function(){"use strict";function t(t){function n(t){return null===t?null:{type:t.data.type,id:t.data.id}}function e(n,e,r,i){return void 0===r?(t.error("Can't link non existing object",n,e,r,i),t.error("Object:",n.data.type,n),t.error("Target:",r.data.type,r),t.error("Key:",e),t.error("Schema:",i),!1):void 0===n?(t.error("Can't add link to non existing object",n,e,r,i),t.error("Object:",n.data.type,n),t.error("Target:",r.data.type,r),t.error("Key:",e),t.error("Schema:",i),!1):void 0===i?(t.error("Can't add link not present in schema:",n,e,r,i),t.error("Object:",n.data.type,n),t.error("Target:",r.data.type,r),t.error("Key:",e),t.error("Schema:",i),!1):null!==r&&i.polymorphic===!1&&i.model!==r.data.type?(t.error("This relation is not polymorphic, expected: "+i.model+" instead of "+r.data.type),t.error("Object:",n.data.type,n),t.error("Target:",r.data.type,r),t.error("Key:",e),t.error("Schema:",i),!1):"hasMany"===i.type?o(n,e,r,i):"hasOne"===i.type?a(n,e,r,i):void 0}function r(n,e,r,a){return void 0===a?void t.error("Can't remove link not present in schema: "+e):"hasMany"===a.type?s(n,e,r,a):"hasOne"===a.type?i(n,e,r,a):void 0}function a(e,r,a,o){return t.debug("addHasOne",e,r,a,o),null!==a&&e.relationships[r]===a?!1:(e.relationships[r]=a,e.data.relationships[r].data=n(a),!0)}function o(e,r,a,o){return t.debug("addHasMany",e,r,a,o),angular.isArray(e.relationships[r])&&e.relationships[r].indexOf(a)>-1?!1:(e.relationships[r]=e.relationships[r]||[],e.relationships[r].push(a),e.data.relationships[r].data=e.data.relationships[r].data||[],e.data.relationships[r].data.push(n(a)),!0)}function i(n,e,r,a){return t.log("removeHasOne",n,e,r,a),void 0!==r&&n.relationships[e]!==r?!1:(n.relationships[e]=null,n.data.relationships[e].data=void 0,!0)}function s(n,e,r,a){if(t.debug("removeHasMany",n,e,r,a),void 0===r)n.relationships[e]=[],n.data.relationships[e].data=[];else{if(void 0===n.relationships[e])return;var o=n.relationships[e].indexOf(r);if(-1===o)return!1;n.relationships[e].splice(o,1),n.data.relationships[e].data.splice(o,1)}return!0}var c=this;return c.toLinkData=n,c.link=e,c.unlink=r,this}angular.module("angular-jsonapi").service("AngularJsonAPIModelLinkerService",t),t.$inject=["$log"]}(),function(){"use strict";function t(t,n){function e(t){var n=this;n.data={id:t.data.id,type:t.data.type,attributes:{},relationships:{}},n.relationships={},n.parent=t,n.schema=t.schema,n.reset()}function r(){var t=this,n=angular.copy(t.data),e={};return angular.forEach(n.relationships,function(t,n){void 0!==t.data&&(e[n]=t)}),n.relationships=e,{data:n}}function a(){var t=this;return t.parent.save()}function o(){var t=this;angular.forEach(t.schema.attributes,function(n,e){t.data.attributes[e]=t.parent.data.attributes[e]||""}),angular.forEach(t.schema.relationships,function(n,e){t.data.relationships[e]=t.parent.data.relationships[e]||{},t.relationships[e]=t.parent.relationships[e]}),t.errors={validation:{}}}function i(){var n,e=this;return n=t.validateForm(e.data),e.errors.validation=n,n}function s(n){var e,r=this;return e=t.validateField(r.data[n],n),r.errors.validation[n]=e,e}function c(t,e){var r=this,a=r.schema.relationships[t];return n.link(r,t,e,a)}function u(t,e){var r=this,a=r.schema.relationships[t];return n.unlink(r,t,e,a)}return e.prototype.save=a,e.prototype.reset=o,e.prototype.validate=i,e.prototype.validateField=s,e.prototype.link=c,e.prototype.unlink=u,e.prototype.toJson=r,e}angular.module("angular-jsonapi").factory("AngularJsonAPIModelForm",t),t.$inject=["AngularJsonAPIModelValidatorService","AngularJsonAPIModelLinkerService"]}(),function(){"use strict";function t(t,n,e,r,a,o,i){function s(n,e,r){var a=this;n.relationships=n.relationships||{},a.saved=e||!0,a["synchronized"]=!1,a.unstable=r||!1,a.removed=!1,a.loadingCount=0,a.data={relationships:{},attributes:{}},a.relationships={},angular.forEach(a.schema.relationships,function(t,n){a.relationships[n]=void 0}),a.errors={validation:{}},a.promises={},v(a,n,!0),a.form=new t(a)}function c(){function t(t){r.$emit("angularJsonAPI:object:save","resolved",t),a.update(a.form.data),t.finish(),o.resolve(a)}function n(t){r.$emit("angularJsonAPI:object:save","rejected",t),t.finish(),o.reject(t.errors)}function e(t){r.$emit("angularJsonAPI:object:save","notify",t),o.notify(t.errors)}var a=this,o=i.defer(),s=!1,c={action:"update",object:a};a.saved===!1&&(c.action="add");var u=a.form.validate();for(var l in u)u.hasOwnProperty(l)&&(s=!0);return s===!0?o.reject(u):a.synchronize(c).then(t,n,e),o.promise}function u(){var t=this;return t.form.reset()}function l(){function t(t){r.$emit("angularJsonAPI:object:refresh","resolved",t),s.proccesResults(t.data),t.finish(),u["synchronized"]=!0,u.unstable=!1,c.resolve(t)}function n(t){r.$emit("angularJsonAPI:object:refresh","rejected",t),t.finish(),c.reject(t)}function e(t){r.$emit("angularJsonAPI:object:refresh","notify",t),c.notify(t)}var s=a.get("$jsonapi"),c=i.defer(),u=this,l={action:"refresh",object:u,params:u.schema.params.get};return u.saved===!1?(o.error("Can't refresh new object"),c.reject("Can't refresh new object")):u.synchronize(l).then(t,n,e),c.promise}function d(){var t=this,n=angular.copy(t.data),e={};return angular.forEach(n.relationships,function(t,n){void 0!==t.data&&(e[n]=t)}),n.relationships=e,{data:n}}function h(){function t(t){r.$emit("angularJsonAPI:object:remove","resolved",t),a.removed=!0,a.unlinkAll(),a.parentFactory.cache.clearRemoved(a.data.id),t.finish(),o.resolve(t)}function n(t){r.$emit("angularJsonAPI:object:remove","rejected",t),a.parentFactory.cache.revertRemove(a.data.id),t.finish(),o.reject(t)}function e(t){r.$emit("angularJsonAPI:object:remove","notify",t),o.notify(t)}var a=this,o=i.defer(),s={action:"remove",object:a};return a.parentFactory.cache.remove(a.data.id),a.saved===!1?o.resolve():a.synchronize(s).then(t,n,e),o.promise}function f(){function t(t,r){var a=r.schema.relationships[t];n.unlink(r,t,e,a)}var e=this;return angular.forEach(e.relationships,function(n,r){var a=e.schema.relationships[r],o=a.reflection;angular.isArray(n)?angular.forEach(n,t.bind(void 0,o)):angular.isObject(n)&&t(o,n)}),!0}function p(t,e){function a(t){r.$emit("angularJsonAPI:object:link","resolved",t),c.resolve(u),u.unstable=!1,t.finish(),c.resolve(t)}function o(a){r.$emit("angularJsonAPI:object:link","rejected",a),n.unlink(u,t,e,l),n.unlink(e,d,u,h),c.reject(a.errors),a.finish(),c.reject(a)}function s(t){r.$emit("angularJsonAPI:object:link","notify",t),c.notify(t)}var c=i.defer(),u=this,l=u.schema.relationships[t],d=l.reflection,h=e.schema.relationships[d];return n.link(u,t,e,l)&&n.link(e,d,u,h)?(i.all(u.synchronize({action:"link",object:u,target:e,key:t}),u.synchronize({action:"linkReflection",object:u,target:e,key:t})).then(a,o,s),c.promise):(c.reject({errors:[{status:0,statusText:"Error when linking."}]}),c.promise)}function y(t,e){function a(t){r.$emit("angularJsonAPI:object:unlink","resolved",t),u.resolve(l),l.unstable=!1,t.finish(),u.resolve(t)}function o(a){r.$emit("angularJsonAPI:object:unlink","rejected",a),n.unlink(l,t,e,d),n.unlink(e,h,l,f),u.reject(a.errors),a.finish(),u.reject(a)}function s(t){r.$emit("angularJsonAPI:object:unlink","notify",t),u.notify(t)}var c,u=i.defer(),l=this,d=l.schema.relationships[t],h=d.reflection,f=e.schema.relationships[h];return n.unlink(l,t,e,d)&&n.unlink(e,h,l,f)?(c=i.all(l.synchronize({action:"unlink",object:l,target:e,key:t}),l.synchronize({action:"unlinkReflection",object:l,target:e,key:t})),c.then(a,o,s),u.promise):(u.reject({errors:[{status:0,statusText:"Error when unlinking"}]}),u.promise)}function g(t){var n=this;return v(n,t)===!0?(n.reset(),n["synchronized"]=!0,n.updatedAt=Date.now(),!0):!1}function v(t,r,i){function s(n,e){t.data.attributes[e]=r.attributes[e]}function c(n,e){void 0===r.relationships[e]?"hasOne"===n.type?t.data.relationships[e]={data:void 0}:"hasMany"===n.type&&(t.data.relationships[e]={data:[]}):(t.data.relationships[e]=r.relationships[e],"hasOne"===n.type?u(t,e,n,t.data.relationships[e].data):"hasMany"===n.type&&angular.forEach(t.data.relationships[e].data,u.bind(void 0,t,e,n)))}function u(t,e,r,a){if(null===a)return void n.link(t,e,null,r);if(void 0!==a){var o=l.getFactory(a.type),s=o.cache.get(a.id),c=r.reflection,u=s.schema.relationships[c];n.link(t,e,s,r),i!==!0&&c!==!1&&n.link(s,c,t,u)}}var l=a.get("$jsonapi"),d=t.schema;return t.data.id=r.id,t.data.type=r.type,t.parentFactory.schema.type!==r.type?(o.error("Different type then factory",t.parentFactory.schema.type,r),!1):e.validate(t.data.id)?(r.attributes=r.attributes||{},r.relationships=r.relationships||{},angular.forEach(d.attributes,s),angular.forEach(d.relationships,c),!0):(o.error("Invalid id"),!1)}return s.prototype.refresh=l,s.prototype.remove=h,s.prototype.reset=u,s.prototype.save=c,s.prototype.update=g,s.prototype.link=p,s.prototype.unlink=y,s.prototype.unlinkAll=f,s.prototype.toJson=d,s}angular.module("angular-jsonapi").factory("AngularJsonAPIAbstractModel",t),t.$inject=["AngularJsonAPIModelForm","AngularJsonAPIModelLinkerService","uuid4","$rootScope","$injector","$log","$q"]}(),function(){"use strict";function t(t,n){function e(t){var n=this;n.factory=t,n.data={},n.removed={},n.size=0,n.indexIds=[]}function r(t){var e=this,r=t.id;return void 0===r?void n.error("Can't add data without id!",t):(void 0===e.data[r]?(e.data[r]=new e.factory.Model(t),e.size+=1):e.data[r].update(t),e.data[r])}function a(t){var n=this,e=angular.fromJson(t);angular.isObject(e)&&void 0!==e.data&&(n.updatedAt=e.updatedAt,n.indexIds=e.indexIds,angular.forEach(e.data,function(t){var e=t.data;n.addOrUpdate(e,t.updatedAt)}))}function o(){var t=this,n={data:{},updatedAt:t.updatedAt,indexIds:t.indexIds};return angular.forEach(t.data,function(t,e){n.data[e]=t.toJson()}),angular.toJson(n)}function i(){var t=this;t.data={},t.removed={}}function s(t){var n=this;return void 0===n.data[t]&&(n.data[t]=new n.factory.Model({id:t,type:n.factory.Model.prototype.schema.type},!0,!0)),n.data[t]}function c(t){var n=this;return n.indexIds.map(n.get.bind(n))}function u(n){var e=this;e.indexIds=[],angular.forEach(n,function(n){angular.isString(n)&&t.validate(n)?e.indexIds.push(n):angular.isObject(n)&&t.validate(n.data.id)&&e.indexIds.push(n.data.id)})}function l(t){var n=this;return void 0!==n.data[t]&&(n.removed[t]=n.data[t],delete n.data[t],n.size-=1),n.removed[t]}function d(t){var n=this;return void 0!==n.removed[t]&&(n.data[t]=n.removed[t],delete n.removed[t],n.size+=1),n.data[t]}function h(t){var n=this;delete n.removed[t]}return e.prototype.get=s,e.prototype.index=c,e.prototype.setIndexIds=u,e.prototype.addOrUpdate=r,e.prototype.fromJson=a,e.prototype.toJson=o,e.prototype.clear=i,e.prototype.remove=l,e.prototype.revertRemove=d,e.prototype.clearRemoved=h,e}angular.module("angular-jsonapi").factory("AngularJsonAPICache",t),t.$inject=["uuid4","$log"]}(),function(){"use strict";angular.module("angular-jsonapi").constant("lazyProperty",function(t,n,e){var r,a;Object.defineProperty(t,n,{get:function(){return a||(a=!0,r=e.call(t)),r},enumerable:!0,configurable:!0})})}(),function(){"use strict";angular.module("angular-jsonapi").constant("toKebabCase",function(t){return t.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()})}(),function(){"use strict";angular.module("angular-jsonapi").config(["$provide",function(t){t.decorator("$q",["$delegate",function(t){var n=t;return n.allSettled=n.allSettled||function(t,e,r){function a(t){return n.when(t).then(function(t){return angular.isFunction(e)&&e(t),{success:!0,value:t}},function(t){return angular.isFunction(r)&&r(t),{success:!1,reason:t}})}var o=angular.isArray(t)?[]:{};return angular.forEach(t,function(t,n){o.hasOwnProperty(n)||(o[n]=a(t))}),n.all(o)},n}])}])}(),function(){"use strict";function t(t,n,e){function r(n){var e=this;e.state={},t.call(e,n),angular.forEach(n,function(t){t.synchronizer=e})}function a(r){function a(t){d.notify({step:"synchronization",data:t})}function o(t){d.notify({step:"synchronization",errors:t})}function i(t){u.state[h]=u.state[h]||{},u.state[h].success=!0,angular.forEach(t,function(t){t.success===!1&&(u.state[h].success=!1)}),angular.forEach(u.synchronizations,function(n){angular.forEach(n.afterHooks[h],function(n){d.notify({step:"after",errors:n.call(u,r,t)})})});var n,e=[];angular.forEach(t,function(t){t.success===!0?n=t.value:e.push(t.reason)}),e.length>0?d.reject({data:n,finish:s,errors:e}):d.resolve({data:n,finish:s,errors:e})}function s(){angular.forEach(u.synchronizations,function(t){angular.forEach(t.finishHooks[h],function(t){d.notify({step:"finish",errors:t.call(u,r)})})})}function c(t){e.error("All settled rejected! Something went wrong"),d.reject({finish:angular.noop,errors:t})}var u=this,l=[],d=n.defer(),h=r.action;return t.prototype.synchronize.call(u,r),angular.forEach(u.synchronizations,function(t){angular.forEach(t.beginHooks[h],function(t){d.notify({step:"begin",data:t.call(u,r)})})}),angular.forEach(u.synchronizations,function(t){angular.forEach(t.beforeHooks[h],function(t){d.notify({step:"before",data:t.call(u,r)})})}),angular.forEach(u.synchronizations,function(t){angular.forEach(t.synchronizationHooks[h],function(t){l.push(t.call(u,r))})}),n.allSettled(l,a,o).then(i,c),d.promise}return r.prototype=Object.create(t.prototype),r.prototype.constructor=r,r.prototype.synchronize=a,r}angular.module("angular-jsonapi").factory("AngularJsonAPISynchronizerSimple",t),t.$inject=["AngularJsonAPISynchronizerPrototype","$q","$log"]}(),function(){"use strict";function t(t){function n(t){var n=this;n.synchronizations=t}function e(n){var e=this;t.debug("Synchro Collection",e.factory.Model.prototype.schema.type,n),void 0===n.action&&t.error("Can't synchronize undefined action",n)}return n.prototype.synchronize=e,n}angular.module("angular-jsonapi").factory("AngularJsonAPISynchronizerPrototype",t),t.$inject=["$log"]}(),function(){"use strict";function t(t,n,e,r,a){function o(o){function i(t){return a({method:"GET",headers:g,url:o,params:t.params||{}}).then(f,p)}function s(t){return a({method:"GET",headers:g,url:o+"/"+t.object.data.id,params:t.params||{}}).then(f,p)}function c(t){return a({method:"DELETE",headers:g,url:o+"/"+t.object.data.id}).then(f,p)}function u(t){var n=r.defer();return t.object.removed===!0?n.reject({errors:[{status:0,statusText:"Object has been removed"}]}):void 0===t.target||void 0===t.target.data.id?n.reject({errors:[{status:0,statusText:"Can't unlink object without id through rest call"}]}):a({method:"DELETE",headers:g,url:o+"/"+t.object.data.id+"/relationships/"+e(t.key)+"/"+t.target.data.id}).then(f,p).then(n.resolve,n.reject),n.promise}function l(t){var i=r.defer();return t.object.removed===!0?i.reject({errors:[{status:0,statusText:"Object has been removed"}]}):void 0===t.target||void 0===t.target.data.id?i.reject({errors:[{status:0,statusText:"Can't link object without id through rest call"}]}):a({method:"POST",headers:g,url:o+"/"+t.object.data.id+"/relationships/"+e(t.key),data:{data:[n.toLinkData(t.target)]}}).then(f,p).then(i.resolve,i.reject),i.promise}function d(t){return console.log(t.object.form.toJson()),a({method:"PUT",headers:g,url:o+"/"+t.object.data.id,data:t.object.form.toJson()}).then(f,p)}function h(t){return a({method:"POST",headers:g,url:o+"/",data:t.object.form.toJson()}).then(f,p)}function f(t){return r.resolve(t.data)}function p(t){function n(){o.reject({status:t.status,statusText:"Server is offline"})}function e(){o.reject({status:t.status,statusText:"No internet connection"})}var o=r.defer();return console.log(t),0===t.status?a({method:"GET",url:"https://status.cloud.google.com/incidents.schema.json"}).then(n,e):o.reject({status:t.status,statusText:t.statusText}),o.promise}var y=this,g={Accept:"application/vnd.api+json","Content-Type":"application/vnd.api+json"};t.call(y),y.synchronization("remove",c),y.synchronization("unlink",u),y.synchronization("link",l),y.synchronization("update",d),y.synchronization("add",h),y.synchronization("all",i),y.synchronization("get",s),y.synchronization("refresh",s)}return o.prototype=Object.create(t.prototype),o.prototype.constructor=o,o}angular.module("angular-jsonapi-rest",["angular-jsonapi"]).factory("AngularJsonAPISynchronizationRest",t),t.$inject=["AngularJsonAPISynchronizationPrototype","AngularJsonAPIModelLinkerService","toKebabCase","$q","$http"]}(),function(){"use strict";function t(){function t(){var t=this,n=["add","init","get","all","clear","remove","unlink","unlinkReflection","link","linkReflection","update","refresh"];t.state={},t.beginHooks={},t.beforeHooks={},t.synchronizationHooks={},t.afterHooks={},t.finishHooks={},t.options={},angular.forEach(n,function(n){t.beginHooks[n]=[],t.beforeHooks[n]=[],t.synchronizationHooks[n]=[],t.afterHooks[n]=[],t.finishHooks[n]=[],t.state[n]={loading:!1,success:!0}})}function n(t,n){var e=this;e.beginHooks[t].push(n)}function e(t,n){var e=this;e.finishHooks[t].push(n)}function r(t,n){var e=this;e.beforeHooks[t].push(n)}function a(t,n){var e=this;e.afterHooks[t].push(n)}function o(t,n){var e=this;e.synchronizationHooks[t].push(n)}return t.prototype.before=r,t.prototype.after=a,t.prototype.begin=n,t.prototype.finish=e,t.prototype.synchronization=o,t}angular.module("angular-jsonapi").factory("AngularJsonAPISynchronizationPrototype",t)}(),function(){"use strict";function t(t,n,e){function r(r){function a(){var t=s.synchronizer.factory.schema.type;return e.when(n.localStorage.getItem(r+"."+t))}function o(){var t=s.synchronizer.factory.schema.type;n.localStorage.removeItem(r+"."+t)}function i(){var t=s.synchronizer.factory.schema.type,e=s.synchronizer.factory.cache;n.localStorage.setItem(r+"."+t,e.toJson())}var s=this;r=r||"AngularJsonAPI",s.__updateStorage=i,t.call(s),s.synchronization("init",a),s.begin("clear",o),s.begin("remove",i),s.begin("refresh",i),s.begin("unlink",i),s.begin("unlinkReflection",i),s.begin("link",i),s.begin("linkReflection",i),s.begin("update",i),s.begin("add",i),s.finish("get",i),s.finish("all",i),s.finish("init",i),s.finish("clear",i),s.finish("remove",i),s.finish("refresh",i),s.finish("unlink",i),s.finish("unlinkReflection",i),s.finish("link",i),s.finish("linkReflection",i),s.finish("update",i),s.finish("add",i),s.finish("get",i),s.finish("all",i)}return r.prototype=Object.create(t.prototype),r.prototype.constructor=r,r}angular.module("angular-jsonapi-local",["angular-jsonapi"]).factory("AngularJsonAPISynchronizationLocal",t),t.$inject=["AngularJsonAPISynchronizationPrototype","$window","$q"]}(),function(){"use strict";function t(t,n,e){function r(t){var n=this,r=t.include||{};t.include=r,r.get=t.include.get||[],r.all=t.include.all||[],n.params={get:{},all:{}},angular.forEach(t.relationships,function(n,a){var o=new e(n,a,t.type);t.relationships[a]=o,o.included===!0&&(r.get.push(a),"hasOne"===o.type&&r.all.push(a))}),angular.extend(n,t),r.get.length>0&&(n.params.get.include=r.get.join(",")),r.all.length>0&&(n.params.all.include=r.all.join(","))}return r}angular.module("angular-jsonapi").factory("AngularJsonAPISchema",t),t.$inject=["$log","pluralize","AngularJsonAPISchemaLink"]}(),function(){"use strict";function t(t,n){function e(e,r,a){var o=this;angular.isString(e)?(o.model=n.plural(r),o.type=e,o.polymorphic=!1,o.reflection=a):(void 0===e.type&&t.error("Schema of link without a type: ",e,r),"hasMany"!==e.type&&"hasOne"!==e.type&&t.error("Schema of link with wrong type: ",e.type,"available: hasOne, hasMany"),o.model=e.model||n.plural(r),o.type=e.type,o.polymorphic=e.polymorphic||!1,o.reflection=void 0===e.reflection?"hasMany"===o.type?n.singular(a):a:e.reflection,o.included=e.included||!1)}return e}angular.module("angular-jsonapi").factory("AngularJsonAPISchemaLink",t),t.$inject=["$log","pluralize"]}(),function(){"use strict";function t(t,n,e){function r(n,r){var a=function(n,r,a){var o=this;n.type!==o.schema.type&&e.error("Data type other then declared in schema: ",n.type," instead of ",o.schema.type),t.call(o,n,r,a),o.form.parent=o};return a.prototype=Object.create(t.prototype),a.prototype.constructor=a,a.prototype.schema=n,a.prototype.parentFactory=r,a.prototype.synchronize=r.synchronizer.synchronize.bind(r.synchronizer),angular.forEach(n.functions,function(t,n){a.prototype[n]=function(){return t.apply(this,arguments)}}),a}return{model:r}}angular.module("angular-jsonapi").factory("AngularJsonAPIModel",t),t.$inject=["AngularJsonAPIAbstractModel","AngularJsonAPISchema","$log"]}(),function(){"use strict";function t(t,n,e,r,a,o,i){function s(r,a){function i(t){o.$emit("angularJsonAPI:factory:init","resolved",t),u.cache.fromJson(t.data),u.initialized=!0,t.finish()}function s(t){o.$emit("angularJsonAPI:factory:init","rejected",t),t.finish(),u.initialized=!0}function c(t){o.$emit("angularJsonAPI:factory:init","notify",t)}var u=this,l={action:"init"};u.schema=new n(r),u.cache=new e(u),u.synchronizer=a,u.synchronizer.factory=u,u.Model=t.model(u.schema,u),u.initialized=!1,a.factory=u,u.synchronizer.synchronize(l).then(i,s,c)}function c(t){var n=this;return a.validate(t)?n.cache.get(t).refresh():i.reject({errors:[{status:0,statusText:"Invalid id not uuid4"}]})}function u(t){var n=this;t=t||{};var e=new r(n,angular.extend(t,n.schema.params.all));return e.fetch(),e}function l(t){var n=this,e=n.cache.remove(t);return e.remove()}function d(){var t=this,n=new t.Model({type:t.schema.type,id:a.generate(),attributes:{},relationships:{}},!1);return n}function h(){function t(t){o.$emit("angularJsonAPI:factory:clear","resolved",t),t.finish(),a.resolve(t)}function n(t){o.$emit("angularJsonAPI:factory:clear","resolved",t),t.finish(),a.reject(t)}function e(t){o.$emit("angularJsonAPI:factory:clear","notify",t),a.notify(t)}var r=this,a=i.defer(),s={action:"clear"};return r.cache.clear(),r.synchronizer.synchronize(s).then(t,n,e),a}return s.prototype.get=c,s.prototype.all=u,s.prototype.remove=l,s.prototype.initialize=d,s.prototype.clear=h,s}angular.module("angular-jsonapi").factory("AngularJsonAPIFactory",t),t.$inject=["AngularJsonAPIModel","AngularJsonAPISchema","AngularJsonAPICache","AngularJsonAPICollection","uuid4","$rootScope","$q"]}(),function(){"use strict";function t(t,n,e){function r(t,n){var e=this;e.factory=t,e.type=t.schema.type,e.params=n,e.errors={synchronization:{name:"Synchronization",description:"Errors during synchronization",errors:[]}},e.error=!1,e.data=e.factory.cache.index(e.params),e["synchronized"]=!1}function a(t){var n=this;return n.factory.get(t)}function o(){function r(n){t.$emit("angularJsonAPI:collection:fetch","resolved",n),i.errors.synchronization.errors=[],i.data=c.proccesResults(n.data),i.error=!1,i.updatedAt=Date.now(),i["synchronized"]=!0,i.factory.cache.setIndexIds(i.data),n.finish(),s.resolve(i)}function a(n){t.$emit("angularJsonAPI:collection:fetch","rejected",n),i.errors.synchronization.errors=n.errors,i.error=!0,n.finish(),s.reject(n)}function o(n){t.$emit("angularJsonAPI:collection:fetch","notify",n),s.notify(n)}var i=this,s=e.defer(),c=n.get("$jsonapi"),u={action:"all",params:i.params};return i.factory.synchronizer.synchronize(u).then(r,a,o),s.promise}return r.prototype.fetch=o,r.prototype.refresh=o,r.prototype.get=a,r}angular.module("angular-jsonapi").factory("AngularJsonAPICollection",t),t.$inject=["$rootScope","$injector","$q"]}(),function(){"use strict";function t(){function t(t,r){function a(t,a){var o=new r(t,a);n[t.type]=o,e.push(t.type)}function o(t){return n[t]}function i(e){return void 0===n[e]&&t.error("Can	 add not existing object type: "+e+". Use initialize(Model, datas)."),n[e].saved.form}function s(e,r){return void 0===n[e]&&t.error("Can	 get not existing object type: "+e+". Use initialize(Model, datas)."),n[e].get(r)}function c(e,r){return void 0===n[e]&&t.error("Can	 remove not existing object type: "+e+". Use initialize(Model, datas)."),n[e].remove(r)}function u(e){return void 0===n[e]&&t.error("Can	 get all of not existing object type: "+e+". Use initialize(Model, datas)."),n[e].all()}function l(){angular.forEach(n,function(t){t.clear()})}function d(n){if(void 0===n&&t.error("Can't proccess results:",n),angular.forEach(n.included,function(t){o(t.type).cache.addOrUpdate(t)}),angular.isArray(n.data)){var e=[];return angular.forEach(n.data,function(t){e.push(o(t.type).cache.addOrUpdate(t))}),e}return o(n.data.type).cache.addOrUpdate(n.data)}return{form:i,get:s,remove:c,all:u,addFactory:a,getFactory:o,clearAll:l,proccesResults:d,allFactories:n,factoriesNames:e}}var n={},e=[];this.$get=t,t.$inject=["$log","AngularJsonAPIFactory"]}angular.module("angular-jsonapi").provider("$jsonapi",t)}(),function(){"use strict";angular.module("angular-jsonapi").config(["$logProvider",function(t){t.debugEnabled(!1)}])}();
//# sourceMappingURL=angular-jsonapi.min.js.map